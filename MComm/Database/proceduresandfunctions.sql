if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[NYSIIS]') and xtype in (N'FN', N'IF', N'TF'))
drop function [dbo].[NYSIIS]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_AddOneAccountAttribute]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_AddOneAccountAttribute]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_AddOneAccountSubType]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_AddOneAccountSubType]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_AddOneBankAccount]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_AddOneBankAccount]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_AddOneBillPayAccount]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_AddOneBillPayAccount]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_AddOneCreditAccount]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_AddOneCreditAccount]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_AddOneCreditCardType]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_AddOneCreditCardType]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_AddOneCurrency]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_AddOneCurrency]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_AddOneDebitAccount]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_AddOneDebitAccount]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_AddOneFrequency]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_AddOneFrequency]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_AddOneFundAccount]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_AddOneFundAccount]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_AddOneFundAccountType]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_AddOneFundAccountType]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_AddOneLoanAccount]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_AddOneLoanAccount]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_AddOneLoanToMetaPartner]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_AddOneLoanToMetaPartner]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_AddOneMetaTransferAccount]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_AddOneMetaTransferAccount]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_AddOneParticipatingPartner]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_AddOneParticipatingPartner]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_AddOnePaymentInstitution]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_AddOnePaymentInstitution]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_AddOneStoredValueAccount]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_AddOneStoredValueAccount]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteAllAccountAttributeDataByAttributeTypeCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteAllAccountAttributeDataByAttributeTypeCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteAllAccountAttributeDataByBaseAttributeID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteAllAccountAttributeDataByBaseAttributeID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteAllAccountAttributeDataByDataTypeCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteAllAccountAttributeDataByDataTypeCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteAllAccountAttributeValueDataByAccountID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteAllAccountAttributeValueDataByAccountID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteAllAccountAttributeValueDataByBaseAttributeID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteAllAccountAttributeValueDataByBaseAttributeID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteAllAccountDataByAccountSubTypeCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteAllAccountDataByAccountSubTypeCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteAllAccountDataByCurrencyCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteAllAccountDataByCurrencyCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteAllAccountDataByMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteAllAccountDataByMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteAllBankAccountDataByAccountID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteAllBankAccountDataByAccountID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteAllBankAccountDataByAccountSubTypeCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteAllBankAccountDataByAccountSubTypeCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteAllBankAccountDataByBankMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteAllBankAccountDataByBankMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteAllBankAccountDataByCurrencyCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteAllBankAccountDataByCurrencyCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteAllBankAccountDataByMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteAllBankAccountDataByMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteAllBillPayAccountDataByAccountID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteAllBillPayAccountDataByAccountID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteAllBillPayAccountDataByAccountSubTypeCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteAllBillPayAccountDataByAccountSubTypeCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteAllBillPayAccountDataByBusinessMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteAllBillPayAccountDataByBusinessMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteAllBillPayAccountDataByCurrencyCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteAllBillPayAccountDataByCurrencyCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteAllBillPayAccountDataByFrequencyCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteAllBillPayAccountDataByFrequencyCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteAllBillPayAccountDataByMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteAllBillPayAccountDataByMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteAllCreditAccountDataByAccountID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteAllCreditAccountDataByAccountID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteAllCreditAccountDataByAccountSubTypeCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteAllCreditAccountDataByAccountSubTypeCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteAllCreditAccountDataByCreditCardTypeCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteAllCreditAccountDataByCreditCardTypeCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteAllCreditAccountDataByCurrencyCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteAllCreditAccountDataByCurrencyCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteAllCreditAccountDataByMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteAllCreditAccountDataByMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteAllCurrencyConversionDataByConvertFromCurrencyCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteAllCurrencyConversionDataByConvertFromCurrencyCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteAllCurrencyConversionDataByConvertToCurrencyCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteAllCurrencyConversionDataByConvertToCurrencyCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteAllCurrencyConversionDataByMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteAllCurrencyConversionDataByMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteAllDebitAccountDataByAccountID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteAllDebitAccountDataByAccountID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteAllDebitAccountDataByAccountSubTypeCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteAllDebitAccountDataByAccountSubTypeCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteAllDebitAccountDataByCurrencyCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteAllDebitAccountDataByCurrencyCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteAllDebitAccountDataByMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteAllDebitAccountDataByMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteAllFundAccountDataByAccountID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteAllFundAccountDataByAccountID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteAllFundAccountDataByAccountSubTypeCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteAllFundAccountDataByAccountSubTypeCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteAllFundAccountDataByCurrencyCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteAllFundAccountDataByCurrencyCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteAllFundAccountDataByFrequencyCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteAllFundAccountDataByFrequencyCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteAllFundAccountDataByFundAccountTypeCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteAllFundAccountDataByFundAccountTypeCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteAllFundAccountDataByMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteAllFundAccountDataByMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteAllLoanAccountDataByAccountID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteAllLoanAccountDataByAccountID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteAllLoanAccountDataByAccountSubTypeCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteAllLoanAccountDataByAccountSubTypeCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteAllLoanAccountDataByCurrencyCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteAllLoanAccountDataByCurrencyCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteAllLoanAccountDataByMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteAllLoanAccountDataByMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteAllLoanToMetaPartnerDataByAccountID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteAllLoanToMetaPartnerDataByAccountID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteAllLoanToMetaPartnerDataByMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteAllLoanToMetaPartnerDataByMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteAllMetaTransferAccountDataByAccountID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteAllMetaTransferAccountDataByAccountID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteAllMetaTransferAccountDataByAccountSubTypeCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteAllMetaTransferAccountDataByAccountSubTypeCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteAllMetaTransferAccountDataByCurrencyCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteAllMetaTransferAccountDataByCurrencyCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteAllMetaTransferAccountDataByMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteAllMetaTransferAccountDataByMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteAllMetaTransferAccountDataByPaymentInstitutionCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteAllMetaTransferAccountDataByPaymentInstitutionCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteAllParticipatingPartnerDataByAccountID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteAllParticipatingPartnerDataByAccountID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteAllParticipatingPartnerDataByMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteAllParticipatingPartnerDataByMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteAllStoredValueAccountDataByAccountID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteAllStoredValueAccountDataByAccountID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteAllStoredValueAccountDataByAccountIDAndPhoneMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteAllStoredValueAccountDataByAccountIDAndPhoneMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteAllStoredValueAccountDataByAccountSubTypeCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteAllStoredValueAccountDataByAccountSubTypeCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteAllStoredValueAccountDataByCurrencyCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteAllStoredValueAccountDataByCurrencyCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteAllStoredValueAccountDataByMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteAllStoredValueAccountDataByMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteAllStoredValueAccountDataByMetaPartnerPhoneIDAndPhoneMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteAllStoredValueAccountDataByMetaPartnerPhoneIDAndPhoneMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteOneAccount]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteOneAccount]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteOneAccountAttribute]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteOneAccountAttribute]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteOneAccountAttributeValue]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteOneAccountAttributeValue]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteOneAccountSubType]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteOneAccountSubType]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteOneBankAccount]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteOneBankAccount]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteOneBillPayAccount]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteOneBillPayAccount]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteOneCreditAccount]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteOneCreditAccount]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteOneCreditCardType]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteOneCreditCardType]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteOneCurrency]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteOneCurrency]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteOneCurrencyConversion]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteOneCurrencyConversion]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteOneDebitAccount]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteOneDebitAccount]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteOneFrequency]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteOneFrequency]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteOneFundAccount]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteOneFundAccount]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteOneFundAccountType]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteOneFundAccountType]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteOneLoanAccount]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteOneLoanAccount]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteOneLoanToMetaPartner]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteOneLoanToMetaPartner]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteOneMetaTransferAccount]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteOneMetaTransferAccount]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteOneParticipatingPartner]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteOneParticipatingPartner]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteOnePaymentInstitution]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteOnePaymentInstitution]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_DeleteOneStoredValueAccount]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_DeleteOneStoredValueAccount]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllAccountAttributeData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllAccountAttributeData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllAccountAttributeDataByAttributeTypeCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllAccountAttributeDataByAttributeTypeCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllAccountAttributeDataByBaseAttributeID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllAccountAttributeDataByBaseAttributeID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllAccountAttributeDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllAccountAttributeDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllAccountAttributeDataByDataTypeCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllAccountAttributeDataByDataTypeCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllAccountAttributeValueData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllAccountAttributeValueData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllAccountAttributeValueDataByAccountID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllAccountAttributeValueDataByAccountID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllAccountAttributeValueDataByBaseAttributeID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllAccountAttributeValueDataByBaseAttributeID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllAccountAttributeValueDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllAccountAttributeValueDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllAccountData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllAccountData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllAccountDataByAccountSubTypeCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllAccountDataByAccountSubTypeCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllAccountDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllAccountDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllAccountDataByCurrencyCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllAccountDataByCurrencyCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllAccountDataByMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllAccountDataByMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllAccountSubTypeData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllAccountSubTypeData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllBankAccountData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllBankAccountData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllBankAccountDataByAccountID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllBankAccountDataByAccountID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllBankAccountDataByAccountSubTypeCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllBankAccountDataByAccountSubTypeCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllBankAccountDataByBankMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllBankAccountDataByBankMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllBankAccountDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllBankAccountDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllBankAccountDataByCurrencyCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllBankAccountDataByCurrencyCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllBankAccountDataByMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllBankAccountDataByMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllBillPayAccountData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllBillPayAccountData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllBillPayAccountDataByAccountID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllBillPayAccountDataByAccountID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllBillPayAccountDataByAccountSubTypeCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllBillPayAccountDataByAccountSubTypeCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllBillPayAccountDataByBusinessMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllBillPayAccountDataByBusinessMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllBillPayAccountDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllBillPayAccountDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllBillPayAccountDataByCurrencyCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllBillPayAccountDataByCurrencyCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllBillPayAccountDataByFrequencyCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllBillPayAccountDataByFrequencyCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllBillPayAccountDataByMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllBillPayAccountDataByMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllCreditAccountData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllCreditAccountData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllCreditAccountDataByAccountID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllCreditAccountDataByAccountID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllCreditAccountDataByAccountSubTypeCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllCreditAccountDataByAccountSubTypeCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllCreditAccountDataByCreditCardTypeCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllCreditAccountDataByCreditCardTypeCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllCreditAccountDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllCreditAccountDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllCreditAccountDataByCurrencyCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllCreditAccountDataByCurrencyCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllCreditAccountDataByMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllCreditAccountDataByMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllCreditCardTypeData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllCreditCardTypeData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllCurrencyConversionData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllCurrencyConversionData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllCurrencyConversionDataByConvertFromCurrencyCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllCurrencyConversionDataByConvertFromCurrencyCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllCurrencyConversionDataByConvertToCurrencyCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllCurrencyConversionDataByConvertToCurrencyCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllCurrencyConversionDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllCurrencyConversionDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllCurrencyConversionDataByMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllCurrencyConversionDataByMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllCurrencyData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllCurrencyData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllDebitAccountData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllDebitAccountData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllDebitAccountDataByAccountID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllDebitAccountDataByAccountID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllDebitAccountDataByAccountSubTypeCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllDebitAccountDataByAccountSubTypeCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllDebitAccountDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllDebitAccountDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllDebitAccountDataByCurrencyCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllDebitAccountDataByCurrencyCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllDebitAccountDataByMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllDebitAccountDataByMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllFrequencyData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllFrequencyData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllFundAccountData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllFundAccountData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllFundAccountDataByAccountID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllFundAccountDataByAccountID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllFundAccountDataByAccountSubTypeCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllFundAccountDataByAccountSubTypeCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllFundAccountDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllFundAccountDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllFundAccountDataByCurrencyCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllFundAccountDataByCurrencyCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllFundAccountDataByFrequencyCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllFundAccountDataByFrequencyCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllFundAccountDataByFundAccountTypeCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllFundAccountDataByFundAccountTypeCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllFundAccountDataByMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllFundAccountDataByMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllFundAccountTypeData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllFundAccountTypeData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllLoanAccountData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllLoanAccountData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllLoanAccountDataByAccountID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllLoanAccountDataByAccountID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllLoanAccountDataByAccountSubTypeCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllLoanAccountDataByAccountSubTypeCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllLoanAccountDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllLoanAccountDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllLoanAccountDataByCurrencyCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllLoanAccountDataByCurrencyCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllLoanAccountDataByMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllLoanAccountDataByMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllLoanToMetaPartnerData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllLoanToMetaPartnerData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllLoanToMetaPartnerDataByAccountID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllLoanToMetaPartnerDataByAccountID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllLoanToMetaPartnerDataByMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllLoanToMetaPartnerDataByMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllMetaTransferAccountData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllMetaTransferAccountData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllMetaTransferAccountDataByAccountID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllMetaTransferAccountDataByAccountID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllMetaTransferAccountDataByAccountSubTypeCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllMetaTransferAccountDataByAccountSubTypeCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllMetaTransferAccountDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllMetaTransferAccountDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllMetaTransferAccountDataByCurrencyCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllMetaTransferAccountDataByCurrencyCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllMetaTransferAccountDataByMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllMetaTransferAccountDataByMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllMetaTransferAccountDataByPaymentInstitutionCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllMetaTransferAccountDataByPaymentInstitutionCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllParticipatingPartnerData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllParticipatingPartnerData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllParticipatingPartnerDataByAccountID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllParticipatingPartnerDataByAccountID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllParticipatingPartnerDataByMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllParticipatingPartnerDataByMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllPaymentInstitutionData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllPaymentInstitutionData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllStoredValueAccountData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllStoredValueAccountData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllStoredValueAccountDataByAccountID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllStoredValueAccountDataByAccountID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllStoredValueAccountDataByAccountIDAndPhoneMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllStoredValueAccountDataByAccountIDAndPhoneMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllStoredValueAccountDataByAccountSubTypeCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllStoredValueAccountDataByAccountSubTypeCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllStoredValueAccountDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllStoredValueAccountDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllStoredValueAccountDataByCurrencyCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllStoredValueAccountDataByCurrencyCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllStoredValueAccountDataByMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllStoredValueAccountDataByMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetAllStoredValueAccountDataByMetaPartnerPhoneIDAndPhoneMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetAllStoredValueAccountDataByMetaPartnerPhoneIDAndPhoneMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetManyAccountAttributeDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetManyAccountAttributeDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetManyAccountAttributeValueDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetManyAccountAttributeValueDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetManyAccountDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetManyAccountDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetManyBankAccountDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetManyBankAccountDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetManyBillPayAccountDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetManyBillPayAccountDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetManyCreditAccountDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetManyCreditAccountDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetManyCurrencyConversionDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetManyCurrencyConversionDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetManyDebitAccountDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetManyDebitAccountDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetManyFundAccountDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetManyFundAccountDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetManyLoanAccountDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetManyLoanAccountDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetManyMetaTransferAccountDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetManyMetaTransferAccountDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetManyStoredValueAccountDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetManyStoredValueAccountDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetOneAccount]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetOneAccount]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetOneAccountAttribute]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetOneAccountAttribute]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetOneAccountAttributeByAttributeCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetOneAccountAttributeByAttributeCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetOneAccountAttributeValue]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetOneAccountAttributeValue]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetOneAccountByAccountIDAndMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetOneAccountByAccountIDAndMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetOneAccountSubType]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetOneAccountSubType]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetOneBankAccount]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetOneBankAccount]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetOneBillPayAccount]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetOneBillPayAccount]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetOneCreditAccount]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetOneCreditAccount]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetOneCreditCardType]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetOneCreditCardType]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetOneCurrency]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetOneCurrency]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetOneCurrencyConversion]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetOneCurrencyConversion]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetOneDebitAccount]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetOneDebitAccount]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetOneFrequency]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetOneFrequency]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetOneFundAccount]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetOneFundAccount]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetOneFundAccountType]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetOneFundAccountType]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetOneLoanAccount]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetOneLoanAccount]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetOneLoanToMetaPartner]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetOneLoanToMetaPartner]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetOneMetaTransferAccount]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetOneMetaTransferAccount]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetOneParticipatingPartner]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetOneParticipatingPartner]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetOnePaymentInstitution]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetOnePaymentInstitution]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetOneStoredValueAccount]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetOneStoredValueAccount]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_GetOneStoredValueAccountByAccountIDAndPhoneMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_GetOneStoredValueAccountByAccountIDAndPhoneMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_UpdateOneAccountAttribute]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_UpdateOneAccountAttribute]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_UpdateOneAccountSubType]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_UpdateOneAccountSubType]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_UpdateOneBankAccount]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_UpdateOneBankAccount]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_UpdateOneBillPayAccount]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_UpdateOneBillPayAccount]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_UpdateOneCreditAccount]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_UpdateOneCreditAccount]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_UpdateOneCreditCardType]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_UpdateOneCreditCardType]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_UpdateOneCurrency]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_UpdateOneCurrency]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_UpdateOneDebitAccount]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_UpdateOneDebitAccount]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_UpdateOneFrequency]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_UpdateOneFrequency]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_UpdateOneFundAccount]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_UpdateOneFundAccount]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_UpdateOneFundAccountType]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_UpdateOneFundAccountType]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_UpdateOneLoanAccount]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_UpdateOneLoanAccount]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_UpdateOneLoanToMetaPartner]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_UpdateOneLoanToMetaPartner]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_UpdateOneMetaTransferAccount]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_UpdateOneMetaTransferAccount]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_UpdateOneParticipatingPartner]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_UpdateOneParticipatingPartner]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_UpdateOnePaymentInstitution]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_UpdateOnePaymentInstitution]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_UpdateOneStoredValueAccount]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_UpdateOneStoredValueAccount]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_UpsertOneAccount]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_UpsertOneAccount]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_UpsertOneAccountAttributeValue]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_UpsertOneAccountAttributeValue]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spAccounts_UpsertOneCurrencyConversion]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spAccounts_UpsertOneCurrencyConversion]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCore_AddOneAttributeType]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCore_AddOneAttributeType]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCore_AddOneDataType]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCore_AddOneDataType]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCore_AddOneDebugAttribute]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCore_AddOneDebugAttribute]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCore_AddOneError]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCore_AddOneError]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCore_AddOneEventType]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCore_AddOneEventType]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCore_AddOneSeverityLevel]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCore_AddOneSeverityLevel]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCore_DeleteAllBaseAttributeDataByAttributeTypeCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCore_DeleteAllBaseAttributeDataByAttributeTypeCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCore_DeleteAllBaseAttributeDataByDataTypeCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCore_DeleteAllBaseAttributeDataByDataTypeCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCore_DeleteAllDebugAttributeDataByAttributeTypeCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCore_DeleteAllDebugAttributeDataByAttributeTypeCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCore_DeleteAllDebugAttributeDataByBaseAttributeID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCore_DeleteAllDebugAttributeDataByBaseAttributeID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCore_DeleteAllDebugAttributeDataByDataTypeCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCore_DeleteAllDebugAttributeDataByDataTypeCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCore_DeleteOneAttributeType]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCore_DeleteOneAttributeType]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCore_DeleteOneBaseAttribute]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCore_DeleteOneBaseAttribute]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCore_DeleteOneDataType]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCore_DeleteOneDataType]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCore_DeleteOneDebugAttribute]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCore_DeleteOneDebugAttribute]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCore_DeleteOneError]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCore_DeleteOneError]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCore_DeleteOneEventType]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCore_DeleteOneEventType]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCore_DeleteOneSeverityLevel]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCore_DeleteOneSeverityLevel]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCore_GetAllAttributeTypeData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCore_GetAllAttributeTypeData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCore_GetAllBaseAttributeData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCore_GetAllBaseAttributeData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCore_GetAllBaseAttributeDataByAttributeTypeCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCore_GetAllBaseAttributeDataByAttributeTypeCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCore_GetAllBaseAttributeDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCore_GetAllBaseAttributeDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCore_GetAllBaseAttributeDataByDataTypeCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCore_GetAllBaseAttributeDataByDataTypeCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCore_GetAllDataTypeData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCore_GetAllDataTypeData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCore_GetAllDebugAttributeData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCore_GetAllDebugAttributeData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCore_GetAllDebugAttributeDataByAttributeTypeCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCore_GetAllDebugAttributeDataByAttributeTypeCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCore_GetAllDebugAttributeDataByBaseAttributeID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCore_GetAllDebugAttributeDataByBaseAttributeID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCore_GetAllDebugAttributeDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCore_GetAllDebugAttributeDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCore_GetAllDebugAttributeDataByDataTypeCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCore_GetAllDebugAttributeDataByDataTypeCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCore_GetAllDebugAttributeValueLogData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCore_GetAllDebugAttributeValueLogData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCore_GetAllDebugAttributeValueLogDataByBaseAttributeID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCore_GetAllDebugAttributeValueLogDataByBaseAttributeID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCore_GetAllDebugAttributeValueLogDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCore_GetAllDebugAttributeValueLogDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCore_GetAllDebugAttributeValueLogDataByDebugLogID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCore_GetAllDebugAttributeValueLogDataByDebugLogID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCore_GetAllDebugLogData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCore_GetAllDebugLogData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCore_GetAllDebugLogDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCore_GetAllDebugLogDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCore_GetAllDebugLogDataByEventTypeCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCore_GetAllDebugLogDataByEventTypeCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCore_GetAllDebugLogDataBySeverityLevelCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCore_GetAllDebugLogDataBySeverityLevelCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCore_GetAllErrorData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCore_GetAllErrorData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCore_GetAllEventTypeData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCore_GetAllEventTypeData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCore_GetAllSeverityLevelData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCore_GetAllSeverityLevelData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCore_GetManyBaseAttributeDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCore_GetManyBaseAttributeDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCore_GetManyDebugAttributeDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCore_GetManyDebugAttributeDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCore_GetManyDebugAttributeValueLogDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCore_GetManyDebugAttributeValueLogDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCore_GetManyDebugLogDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCore_GetManyDebugLogDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCore_GetOneAttributeType]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCore_GetOneAttributeType]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCore_GetOneBaseAttribute]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCore_GetOneBaseAttribute]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCore_GetOneDataType]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCore_GetOneDataType]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCore_GetOneDebugAttribute]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCore_GetOneDebugAttribute]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCore_GetOneDebugAttributeByAttributeCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCore_GetOneDebugAttributeByAttributeCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCore_GetOneDebugAttributeValueLog]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCore_GetOneDebugAttributeValueLog]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCore_GetOneDebugAttributeValueLogByDebugAttributeValueLogID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCore_GetOneDebugAttributeValueLogByDebugAttributeValueLogID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCore_GetOneDebugLog]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCore_GetOneDebugLog]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCore_GetOneError]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCore_GetOneError]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCore_GetOneEventType]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCore_GetOneEventType]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCore_GetOneSeverityLevel]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCore_GetOneSeverityLevel]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCore_LogOneDebugAttributeValueLog]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCore_LogOneDebugAttributeValueLog]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCore_LogOneDebugLog]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCore_LogOneDebugLog]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCore_UpdateOneAttributeType]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCore_UpdateOneAttributeType]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCore_UpdateOneDataType]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCore_UpdateOneDataType]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCore_UpdateOneDebugAttribute]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCore_UpdateOneDebugAttribute]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCore_UpdateOneError]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCore_UpdateOneError]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCore_UpdateOneEventType]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCore_UpdateOneEventType]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCore_UpdateOneSeverityLevel]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCore_UpdateOneSeverityLevel]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCore_UpsertOneBaseAttribute]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCore_UpsertOneBaseAttribute]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_AddOneBank]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_AddOneBank]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_AddOneBusiness]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_AddOneBusiness]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_AddOneBusinessCustomer]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_AddOneBusinessCustomer]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_AddOneCarrier]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_AddOneCarrier]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_AddOneCustomer]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_AddOneCustomer]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_AddOneLocationType]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_AddOneLocationType]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_AddOneMerchant]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_AddOneMerchant]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_AddOneMetaPartnerContact]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_AddOneMetaPartnerContact]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_AddOneMetaPartnerSubType]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_AddOneMetaPartnerSubType]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_DeleteAllBankDataByCurrencyCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_DeleteAllBankDataByCurrencyCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_DeleteAllBankDataByDateFormatCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_DeleteAllBankDataByDateFormatCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_DeleteAllBankDataByLocaleCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_DeleteAllBankDataByLocaleCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_DeleteAllBankDataByMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_DeleteAllBankDataByMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_DeleteAllBankDataByMetaPartnerSubTypeCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_DeleteAllBankDataByMetaPartnerSubTypeCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_DeleteAllBusinessCustomerDataByBusinessMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_DeleteAllBusinessCustomerDataByBusinessMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_DeleteAllBusinessCustomerDataByCustomerMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_DeleteAllBusinessCustomerDataByCustomerMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_DeleteAllBusinessDataByCurrencyCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_DeleteAllBusinessDataByCurrencyCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_DeleteAllBusinessDataByDateFormatCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_DeleteAllBusinessDataByDateFormatCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_DeleteAllBusinessDataByLocaleCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_DeleteAllBusinessDataByLocaleCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_DeleteAllBusinessDataByMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_DeleteAllBusinessDataByMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_DeleteAllBusinessDataByMetaPartnerSubTypeCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_DeleteAllBusinessDataByMetaPartnerSubTypeCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_DeleteAllCarrierDataByCurrencyCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_DeleteAllCarrierDataByCurrencyCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_DeleteAllCarrierDataByDateFormatCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_DeleteAllCarrierDataByDateFormatCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_DeleteAllCarrierDataByLocaleCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_DeleteAllCarrierDataByLocaleCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_DeleteAllCarrierDataByMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_DeleteAllCarrierDataByMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_DeleteAllCarrierDataByMetaPartnerSubTypeCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_DeleteAllCarrierDataByMetaPartnerSubTypeCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_DeleteAllCustomerDataByCurrencyCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_DeleteAllCustomerDataByCurrencyCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_DeleteAllCustomerDataByDateFormatCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_DeleteAllCustomerDataByDateFormatCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_DeleteAllCustomerDataByLocaleCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_DeleteAllCustomerDataByLocaleCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_DeleteAllCustomerDataByMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_DeleteAllCustomerDataByMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_DeleteAllCustomerDataByMetaPartnerSubTypeCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_DeleteAllCustomerDataByMetaPartnerSubTypeCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_DeleteAllLocationDataByCountryCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_DeleteAllLocationDataByCountryCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_DeleteAllLocationDataByLocationTypeCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_DeleteAllLocationDataByLocationTypeCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_DeleteAllLocationDataByMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_DeleteAllLocationDataByMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_DeleteAllMerchantDataByCurrencyCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_DeleteAllMerchantDataByCurrencyCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_DeleteAllMerchantDataByDateFormatCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_DeleteAllMerchantDataByDateFormatCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_DeleteAllMerchantDataByLocaleCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_DeleteAllMerchantDataByLocaleCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_DeleteAllMerchantDataByMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_DeleteAllMerchantDataByMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_DeleteAllMerchantDataByMetaPartnerSubTypeCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_DeleteAllMerchantDataByMetaPartnerSubTypeCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_DeleteAllMetaPartnerContactDataByContactMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_DeleteAllMetaPartnerContactDataByContactMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_DeleteAllMetaPartnerContactDataByMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_DeleteAllMetaPartnerContactDataByMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_DeleteAllMetaPartnerDataByCurrencyCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_DeleteAllMetaPartnerDataByCurrencyCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_DeleteAllMetaPartnerDataByDateFormatCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_DeleteAllMetaPartnerDataByDateFormatCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_DeleteAllMetaPartnerDataByLocaleCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_DeleteAllMetaPartnerDataByLocaleCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_DeleteAllMetaPartnerDataByMetaPartnerSubTypeCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_DeleteAllMetaPartnerDataByMetaPartnerSubTypeCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_DeleteAllMetaPartnerEmailDataByMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_DeleteAllMetaPartnerEmailDataByMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_DeleteAllMetaPartnerPhoneDataByCarrierMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_DeleteAllMetaPartnerPhoneDataByCarrierMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_DeleteAllMetaPartnerPhoneDataByMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_DeleteAllMetaPartnerPhoneDataByMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_DeleteOneBank]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_DeleteOneBank]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_DeleteOneBusiness]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_DeleteOneBusiness]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_DeleteOneBusinessCustomer]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_DeleteOneBusinessCustomer]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_DeleteOneCarrier]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_DeleteOneCarrier]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_DeleteOneCustomer]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_DeleteOneCustomer]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_DeleteOneLocation]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_DeleteOneLocation]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_DeleteOneLocationType]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_DeleteOneLocationType]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_DeleteOneMerchant]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_DeleteOneMerchant]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_DeleteOneMetaPartner]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_DeleteOneMetaPartner]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_DeleteOneMetaPartnerContact]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_DeleteOneMetaPartnerContact]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_DeleteOneMetaPartnerEmail]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_DeleteOneMetaPartnerEmail]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_DeleteOneMetaPartnerPhone]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_DeleteOneMetaPartnerPhone]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_DeleteOneMetaPartnerSubType]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_DeleteOneMetaPartnerSubType]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetAllBankData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetAllBankData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetAllBankDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetAllBankDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetAllBankDataByCurrencyCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetAllBankDataByCurrencyCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetAllBankDataByDateFormatCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetAllBankDataByDateFormatCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetAllBankDataByLocaleCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetAllBankDataByLocaleCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetAllBankDataByMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetAllBankDataByMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetAllBankDataByMetaPartnerSubTypeCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetAllBankDataByMetaPartnerSubTypeCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetAllBusinessCustomerData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetAllBusinessCustomerData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetAllBusinessCustomerDataByBusinessMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetAllBusinessCustomerDataByBusinessMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetAllBusinessCustomerDataByCustomerMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetAllBusinessCustomerDataByCustomerMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetAllBusinessData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetAllBusinessData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetAllBusinessDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetAllBusinessDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetAllBusinessDataByCurrencyCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetAllBusinessDataByCurrencyCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetAllBusinessDataByDateFormatCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetAllBusinessDataByDateFormatCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetAllBusinessDataByLocaleCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetAllBusinessDataByLocaleCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetAllBusinessDataByMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetAllBusinessDataByMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetAllBusinessDataByMetaPartnerSubTypeCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetAllBusinessDataByMetaPartnerSubTypeCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetAllCarrierData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetAllCarrierData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetAllCarrierDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetAllCarrierDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetAllCarrierDataByCurrencyCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetAllCarrierDataByCurrencyCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetAllCarrierDataByDateFormatCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetAllCarrierDataByDateFormatCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetAllCarrierDataByLocaleCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetAllCarrierDataByLocaleCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetAllCarrierDataByMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetAllCarrierDataByMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetAllCarrierDataByMetaPartnerSubTypeCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetAllCarrierDataByMetaPartnerSubTypeCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetAllCustomerData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetAllCustomerData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetAllCustomerDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetAllCustomerDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetAllCustomerDataByCurrencyCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetAllCustomerDataByCurrencyCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetAllCustomerDataByDateFormatCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetAllCustomerDataByDateFormatCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetAllCustomerDataByLocaleCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetAllCustomerDataByLocaleCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetAllCustomerDataByMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetAllCustomerDataByMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetAllCustomerDataByMetaPartnerSubTypeCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetAllCustomerDataByMetaPartnerSubTypeCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetAllLocationData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetAllLocationData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetAllLocationDataByCountryCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetAllLocationDataByCountryCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetAllLocationDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetAllLocationDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetAllLocationDataByLocationTypeCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetAllLocationDataByLocationTypeCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetAllLocationDataByMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetAllLocationDataByMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetAllLocationTypeData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetAllLocationTypeData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetAllMerchantData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetAllMerchantData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetAllMerchantDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetAllMerchantDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetAllMerchantDataByCurrencyCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetAllMerchantDataByCurrencyCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetAllMerchantDataByDateFormatCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetAllMerchantDataByDateFormatCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetAllMerchantDataByLocaleCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetAllMerchantDataByLocaleCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetAllMerchantDataByMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetAllMerchantDataByMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetAllMerchantDataByMetaPartnerSubTypeCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetAllMerchantDataByMetaPartnerSubTypeCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetAllMetaPartnerContactData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetAllMetaPartnerContactData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetAllMetaPartnerContactDataByContactMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetAllMetaPartnerContactDataByContactMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetAllMetaPartnerContactDataByMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetAllMetaPartnerContactDataByMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetAllMetaPartnerData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetAllMetaPartnerData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetAllMetaPartnerDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetAllMetaPartnerDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetAllMetaPartnerDataByCurrencyCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetAllMetaPartnerDataByCurrencyCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetAllMetaPartnerDataByDateFormatCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetAllMetaPartnerDataByDateFormatCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetAllMetaPartnerDataByLocaleCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetAllMetaPartnerDataByLocaleCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetAllMetaPartnerDataByMetaPartnerSubTypeCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetAllMetaPartnerDataByMetaPartnerSubTypeCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetAllMetaPartnerEmailData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetAllMetaPartnerEmailData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetAllMetaPartnerEmailDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetAllMetaPartnerEmailDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetAllMetaPartnerEmailDataByMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetAllMetaPartnerEmailDataByMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetAllMetaPartnerPhoneData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetAllMetaPartnerPhoneData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetAllMetaPartnerPhoneDataByCarrierMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetAllMetaPartnerPhoneDataByCarrierMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetAllMetaPartnerPhoneDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetAllMetaPartnerPhoneDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetAllMetaPartnerPhoneDataByMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetAllMetaPartnerPhoneDataByMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetAllMetaPartnerSubTypeData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetAllMetaPartnerSubTypeData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetManyBankDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetManyBankDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetManyBusinessDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetManyBusinessDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetManyCarrierDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetManyCarrierDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetManyCustomerDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetManyCustomerDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetManyLocationDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetManyLocationDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetManyMerchantDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetManyMerchantDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetManyMetaPartnerDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetManyMetaPartnerDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetManyMetaPartnerEmailDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetManyMetaPartnerEmailDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetManyMetaPartnerPhoneDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetManyMetaPartnerPhoneDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetOneBank]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetOneBank]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetOneBankByBankCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetOneBankByBankCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetOneBusiness]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetOneBusiness]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetOneBusinessCustomer]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetOneBusinessCustomer]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetOneCarrier]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetOneCarrier]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetOneCarrierByCarrierCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetOneCarrierByCarrierCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetOneCustomer]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetOneCustomer]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetOneLocation]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetOneLocation]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetOneLocationType]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetOneLocationType]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetOneMerchant]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetOneMerchant]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetOneMetaPartner]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetOneMetaPartner]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetOneMetaPartnerContact]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetOneMetaPartnerContact]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetOneMetaPartnerEmail]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetOneMetaPartnerEmail]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetOneMetaPartnerEmailByEmailAddress]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetOneMetaPartnerEmailByEmailAddress]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetOneMetaPartnerPhone]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetOneMetaPartnerPhone]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetOneMetaPartnerPhoneByMetaPartnerPhoneIDAndMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetOneMetaPartnerPhoneByMetaPartnerPhoneIDAndMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetOneMetaPartnerPhoneByPhoneNumber]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetOneMetaPartnerPhoneByPhoneNumber]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_GetOneMetaPartnerSubType]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_GetOneMetaPartnerSubType]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_UpdateOneBank]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_UpdateOneBank]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_UpdateOneBusiness]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_UpdateOneBusiness]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_UpdateOneBusinessCustomer]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_UpdateOneBusinessCustomer]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_UpdateOneCarrier]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_UpdateOneCarrier]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_UpdateOneCustomer]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_UpdateOneCustomer]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_UpdateOneLocationType]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_UpdateOneLocationType]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_UpdateOneMerchant]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_UpdateOneMerchant]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_UpdateOneMetaPartnerContact]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_UpdateOneMetaPartnerContact]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_UpdateOneMetaPartnerSubType]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_UpdateOneMetaPartnerSubType]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_UpsertOneLocation]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_UpsertOneLocation]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_UpsertOneMetaPartner]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_UpsertOneMetaPartner]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_UpsertOneMetaPartnerEmail]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_UpsertOneMetaPartnerEmail]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spCustomers_UpsertOneMetaPartnerPhone]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spCustomers_UpsertOneMetaPartnerPhone]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spEnvironments_AddOneCountry]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spEnvironments_AddOneCountry]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spEnvironments_AddOneDateFormat]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spEnvironments_AddOneDateFormat]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spEnvironments_AddOneLocale]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spEnvironments_AddOneLocale]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spEnvironments_DeleteOneCountry]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spEnvironments_DeleteOneCountry]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spEnvironments_DeleteOneDateFormat]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spEnvironments_DeleteOneDateFormat]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spEnvironments_DeleteOneLocale]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spEnvironments_DeleteOneLocale]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spEnvironments_GetAllCountryData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spEnvironments_GetAllCountryData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spEnvironments_GetAllDateFormatData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spEnvironments_GetAllDateFormatData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spEnvironments_GetAllLocaleData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spEnvironments_GetAllLocaleData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spEnvironments_GetOneCountry]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spEnvironments_GetOneCountry]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spEnvironments_GetOneDateFormat]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spEnvironments_GetOneDateFormat]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spEnvironments_GetOneLocale]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spEnvironments_GetOneLocale]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spEnvironments_UpdateOneCountry]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spEnvironments_UpdateOneCountry]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spEnvironments_UpdateOneDateFormat]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spEnvironments_UpdateOneDateFormat]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spEnvironments_UpdateOneLocale]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spEnvironments_UpdateOneLocale]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spEvents_AddOneEvent]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spEvents_AddOneEvent]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spEvents_AddOneEventAttribute]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spEvents_AddOneEventAttribute]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spEvents_AddOneEventType]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spEvents_AddOneEventType]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spEvents_AddOneSpecificEventAttribute]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spEvents_AddOneSpecificEventAttribute]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spEvents_DeleteAllEventAttributeDataByAttributeTypeCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spEvents_DeleteAllEventAttributeDataByAttributeTypeCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spEvents_DeleteAllEventAttributeDataByBaseAttributeID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spEvents_DeleteAllEventAttributeDataByBaseAttributeID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spEvents_DeleteAllEventAttributeDataByDataTypeCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spEvents_DeleteAllEventAttributeDataByDataTypeCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spEvents_DeleteAllEventDataByEventTypeCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spEvents_DeleteAllEventDataByEventTypeCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spEvents_DeleteAllSpecificEventAttributeDataByBaseAttributeID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spEvents_DeleteAllSpecificEventAttributeDataByBaseAttributeID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spEvents_DeleteAllSpecificEventAttributeDataByEventCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spEvents_DeleteAllSpecificEventAttributeDataByEventCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spEvents_DeleteOneEvent]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spEvents_DeleteOneEvent]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spEvents_DeleteOneEventAttribute]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spEvents_DeleteOneEventAttribute]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spEvents_DeleteOneEventType]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spEvents_DeleteOneEventType]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spEvents_DeleteOneSpecificEventAttribute]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spEvents_DeleteOneSpecificEventAttribute]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spEvents_GetAllEventAttributeData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spEvents_GetAllEventAttributeData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spEvents_GetAllEventAttributeDataByAttributeTypeCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spEvents_GetAllEventAttributeDataByAttributeTypeCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spEvents_GetAllEventAttributeDataByBaseAttributeID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spEvents_GetAllEventAttributeDataByBaseAttributeID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spEvents_GetAllEventAttributeDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spEvents_GetAllEventAttributeDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spEvents_GetAllEventAttributeDataByDataTypeCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spEvents_GetAllEventAttributeDataByDataTypeCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spEvents_GetAllEventData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spEvents_GetAllEventData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spEvents_GetAllEventDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spEvents_GetAllEventDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spEvents_GetAllEventDataByEventTypeCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spEvents_GetAllEventDataByEventTypeCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spEvents_GetAllEventTypeData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spEvents_GetAllEventTypeData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spEvents_GetAllSpecificEventAttributeData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spEvents_GetAllSpecificEventAttributeData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spEvents_GetAllSpecificEventAttributeDataByBaseAttributeID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spEvents_GetAllSpecificEventAttributeDataByBaseAttributeID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spEvents_GetAllSpecificEventAttributeDataByEventCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spEvents_GetAllSpecificEventAttributeDataByEventCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spEvents_GetManyEventAttributeDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spEvents_GetManyEventAttributeDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spEvents_GetManyEventDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spEvents_GetManyEventDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spEvents_GetOneEvent]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spEvents_GetOneEvent]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spEvents_GetOneEventAttribute]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spEvents_GetOneEventAttribute]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spEvents_GetOneEventAttributeByAttributeCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spEvents_GetOneEventAttributeByAttributeCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spEvents_GetOneEventType]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spEvents_GetOneEventType]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spEvents_GetOneSpecificEventAttribute]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spEvents_GetOneSpecificEventAttribute]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spEvents_UpdateOneEvent]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spEvents_UpdateOneEvent]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spEvents_UpdateOneEventAttribute]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spEvents_UpdateOneEventAttribute]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spEvents_UpdateOneEventType]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spEvents_UpdateOneEventType]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spEvents_UpdateOneSpecificEventAttribute]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spEvents_UpdateOneSpecificEventAttribute]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spNotifications_AddOneNotification]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spNotifications_AddOneNotification]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spNotifications_AddOneNotificationDeliveryLog]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spNotifications_AddOneNotificationDeliveryLog]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spNotifications_AddOneNotificationDeliveryType]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spNotifications_AddOneNotificationDeliveryType]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spNotifications_DeleteAllNotificationDataByEventCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spNotifications_DeleteAllNotificationDataByEventCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spNotifications_DeleteAllNotificationDeliveryLogDataByMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spNotifications_DeleteAllNotificationDeliveryLogDataByMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spNotifications_DeleteAllNotificationDeliveryLogDataByNotificationDeliveryTypeCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spNotifications_DeleteAllNotificationDeliveryLogDataByNotificationDeliveryTypeCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spNotifications_DeleteAllNotificationDeliveryLogDataByNotificationLogID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spNotifications_DeleteAllNotificationDeliveryLogDataByNotificationLogID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spNotifications_DeleteAllNotificationTemplateDataByLocaleCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spNotifications_DeleteAllNotificationTemplateDataByLocaleCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spNotifications_DeleteAllNotificationTemplateDataByNotificationCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spNotifications_DeleteAllNotificationTemplateDataByNotificationCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spNotifications_DeleteOneNotification]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spNotifications_DeleteOneNotification]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spNotifications_DeleteOneNotificationDeliveryLog]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spNotifications_DeleteOneNotificationDeliveryLog]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spNotifications_DeleteOneNotificationDeliveryType]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spNotifications_DeleteOneNotificationDeliveryType]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spNotifications_DeleteOneNotificationTemplate]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spNotifications_DeleteOneNotificationTemplate]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spNotifications_GetAllNotificationAttributeValueLogData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spNotifications_GetAllNotificationAttributeValueLogData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spNotifications_GetAllNotificationAttributeValueLogDataByBaseAttributeValueID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spNotifications_GetAllNotificationAttributeValueLogDataByBaseAttributeValueID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spNotifications_GetAllNotificationAttributeValueLogDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spNotifications_GetAllNotificationAttributeValueLogDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spNotifications_GetAllNotificationAttributeValueLogDataByNotificationLogID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spNotifications_GetAllNotificationAttributeValueLogDataByNotificationLogID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spNotifications_GetAllNotificationData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spNotifications_GetAllNotificationData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spNotifications_GetAllNotificationDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spNotifications_GetAllNotificationDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spNotifications_GetAllNotificationDataByEventCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spNotifications_GetAllNotificationDataByEventCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spNotifications_GetAllNotificationDeliveryLogData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spNotifications_GetAllNotificationDeliveryLogData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spNotifications_GetAllNotificationDeliveryLogDataByMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spNotifications_GetAllNotificationDeliveryLogDataByMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spNotifications_GetAllNotificationDeliveryLogDataByNotificationDeliveryTypeCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spNotifications_GetAllNotificationDeliveryLogDataByNotificationDeliveryTypeCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spNotifications_GetAllNotificationDeliveryLogDataByNotificationLogID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spNotifications_GetAllNotificationDeliveryLogDataByNotificationLogID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spNotifications_GetAllNotificationDeliveryTypeData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spNotifications_GetAllNotificationDeliveryTypeData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spNotifications_GetAllNotificationLogData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spNotifications_GetAllNotificationLogData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spNotifications_GetAllNotificationLogDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spNotifications_GetAllNotificationLogDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spNotifications_GetAllNotificationLogDataByLocaleCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spNotifications_GetAllNotificationLogDataByLocaleCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spNotifications_GetAllNotificationLogDataByNotificationCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spNotifications_GetAllNotificationLogDataByNotificationCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spNotifications_GetAllNotificationTemplateData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spNotifications_GetAllNotificationTemplateData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spNotifications_GetAllNotificationTemplateDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spNotifications_GetAllNotificationTemplateDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spNotifications_GetAllNotificationTemplateDataByLocaleCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spNotifications_GetAllNotificationTemplateDataByLocaleCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spNotifications_GetAllNotificationTemplateDataByNotificationCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spNotifications_GetAllNotificationTemplateDataByNotificationCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spNotifications_GetManyNotificationAttributeValueLogDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spNotifications_GetManyNotificationAttributeValueLogDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spNotifications_GetManyNotificationDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spNotifications_GetManyNotificationDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spNotifications_GetManyNotificationLogDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spNotifications_GetManyNotificationLogDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spNotifications_GetManyNotificationTemplateDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spNotifications_GetManyNotificationTemplateDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spNotifications_GetOneNotification]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spNotifications_GetOneNotification]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spNotifications_GetOneNotificationAttributeValueLog]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spNotifications_GetOneNotificationAttributeValueLog]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spNotifications_GetOneNotificationDeliveryLog]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spNotifications_GetOneNotificationDeliveryLog]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spNotifications_GetOneNotificationDeliveryType]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spNotifications_GetOneNotificationDeliveryType]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spNotifications_GetOneNotificationLog]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spNotifications_GetOneNotificationLog]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spNotifications_GetOneNotificationTemplate]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spNotifications_GetOneNotificationTemplate]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spNotifications_LogOneNotificationAttributeValueLog]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spNotifications_LogOneNotificationAttributeValueLog]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spNotifications_LogOneNotificationLog]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spNotifications_LogOneNotificationLog]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spNotifications_UpdateOneNotification]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spNotifications_UpdateOneNotification]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spNotifications_UpdateOneNotificationDeliveryLog]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spNotifications_UpdateOneNotificationDeliveryLog]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spNotifications_UpdateOneNotificationDeliveryType]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spNotifications_UpdateOneNotificationDeliveryType]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spNotifications_UpsertOneNotificationTemplate]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spNotifications_UpsertOneNotificationTemplate]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spOrders_AddOneOrderStatus]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spOrders_AddOneOrderStatus]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spOrders_DeleteAllOrderDataByCreditMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spOrders_DeleteAllOrderDataByCreditMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spOrders_DeleteAllOrderDataByCurrencyCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spOrders_DeleteAllOrderDataByCurrencyCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spOrders_DeleteAllOrderDataByDebitMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spOrders_DeleteAllOrderDataByDebitMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spOrders_DeleteAllOrderDataByLogToAccountIDAndCreditMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spOrders_DeleteAllOrderDataByLogToAccountIDAndCreditMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spOrders_DeleteAllOrderDataByOrderStatusCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spOrders_DeleteAllOrderDataByOrderStatusCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spOrders_DeleteOneOrder]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spOrders_DeleteOneOrder]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spOrders_DeleteOneOrderStatus]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spOrders_DeleteOneOrderStatus]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spOrders_GetAllOrderData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spOrders_GetAllOrderData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spOrders_GetAllOrderDataByCreditMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spOrders_GetAllOrderDataByCreditMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spOrders_GetAllOrderDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spOrders_GetAllOrderDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spOrders_GetAllOrderDataByCurrencyCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spOrders_GetAllOrderDataByCurrencyCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spOrders_GetAllOrderDataByDebitMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spOrders_GetAllOrderDataByDebitMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spOrders_GetAllOrderDataByLogToAccountIDAndCreditMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spOrders_GetAllOrderDataByLogToAccountIDAndCreditMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spOrders_GetAllOrderDataByOrderStatusCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spOrders_GetAllOrderDataByOrderStatusCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spOrders_GetAllOrderStatusData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spOrders_GetAllOrderStatusData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spOrders_GetManyOrderDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spOrders_GetManyOrderDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spOrders_GetOneOrder]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spOrders_GetOneOrder]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spOrders_GetOneOrderByOrderIDAndDebitMetaPartnerIDAndCreditMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spOrders_GetOneOrderByOrderIDAndDebitMetaPartnerIDAndCreditMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spOrders_GetOneOrderStatus]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spOrders_GetOneOrderStatus]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spOrders_UpdateOneOrderStatus]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spOrders_UpdateOneOrderStatus]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spOrders_UpsertOneOrder]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spOrders_UpsertOneOrder]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spPayments_AddOnePaymentStatus]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spPayments_AddOnePaymentStatus]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spPayments_AddOneTransactionStatus]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spPayments_AddOneTransactionStatus]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spPayments_AddOneTransactionType]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spPayments_AddOneTransactionType]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spPayments_DeleteAllPaymentDataByDestinationAccountIDAndCreditMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spPayments_DeleteAllPaymentDataByDestinationAccountIDAndCreditMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spPayments_DeleteAllPaymentDataByOrderID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spPayments_DeleteAllPaymentDataByOrderID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spPayments_DeleteAllPaymentDataByPaymentStatusCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spPayments_DeleteAllPaymentDataByPaymentStatusCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spPayments_DeleteAllPaymentDataBySourceAccountIDAndDebitMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spPayments_DeleteAllPaymentDataBySourceAccountIDAndDebitMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spPayments_DeleteOnePayment]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spPayments_DeleteOnePayment]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spPayments_DeleteOnePaymentStatus]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spPayments_DeleteOnePaymentStatus]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spPayments_DeleteOneTransactionStatus]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spPayments_DeleteOneTransactionStatus]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spPayments_DeleteOneTransactionType]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spPayments_DeleteOneTransactionType]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spPayments_GetAllPaymentData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spPayments_GetAllPaymentData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spPayments_GetAllPaymentDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spPayments_GetAllPaymentDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spPayments_GetAllPaymentDataByDestinationAccountIDAndCreditMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spPayments_GetAllPaymentDataByDestinationAccountIDAndCreditMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spPayments_GetAllPaymentDataByOrderID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spPayments_GetAllPaymentDataByOrderID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spPayments_GetAllPaymentDataByPaymentStatusCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spPayments_GetAllPaymentDataByPaymentStatusCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spPayments_GetAllPaymentDataBySourceAccountIDAndDebitMetaPartnerID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spPayments_GetAllPaymentDataBySourceAccountIDAndDebitMetaPartnerID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spPayments_GetAllPaymentStatusData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spPayments_GetAllPaymentStatusData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spPayments_GetAllPaymentTransactionAttributeValueLogData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spPayments_GetAllPaymentTransactionAttributeValueLogData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spPayments_GetAllPaymentTransactionAttributeValueLogDataByBaseAttributeID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spPayments_GetAllPaymentTransactionAttributeValueLogDataByBaseAttributeID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spPayments_GetAllPaymentTransactionAttributeValueLogDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spPayments_GetAllPaymentTransactionAttributeValueLogDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spPayments_GetAllPaymentTransactionAttributeValueLogDataByPaymentTransactionLogID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spPayments_GetAllPaymentTransactionAttributeValueLogDataByPaymentTransactionLogID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spPayments_GetAllPaymentTransactionLogData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spPayments_GetAllPaymentTransactionLogData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spPayments_GetAllPaymentTransactionLogDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spPayments_GetAllPaymentTransactionLogDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spPayments_GetAllPaymentTransactionLogDataByPaymentID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spPayments_GetAllPaymentTransactionLogDataByPaymentID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spPayments_GetAllPaymentTransactionLogDataByTransactionStatusCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spPayments_GetAllPaymentTransactionLogDataByTransactionStatusCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spPayments_GetAllPaymentTransactionLogDataByTransactionTypeCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spPayments_GetAllPaymentTransactionLogDataByTransactionTypeCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spPayments_GetAllTransactionStatusData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spPayments_GetAllTransactionStatusData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spPayments_GetAllTransactionTypeData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spPayments_GetAllTransactionTypeData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spPayments_GetManyPaymentDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spPayments_GetManyPaymentDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spPayments_GetManyPaymentTransactionAttributeValueLogDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spPayments_GetManyPaymentTransactionAttributeValueLogDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spPayments_GetManyPaymentTransactionLogDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spPayments_GetManyPaymentTransactionLogDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spPayments_GetOnePayment]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spPayments_GetOnePayment]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spPayments_GetOnePaymentStatus]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spPayments_GetOnePaymentStatus]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spPayments_GetOnePaymentTransactionAttributeValueLog]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spPayments_GetOnePaymentTransactionAttributeValueLog]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spPayments_GetOnePaymentTransactionLog]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spPayments_GetOnePaymentTransactionLog]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spPayments_GetOneTransactionStatus]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spPayments_GetOneTransactionStatus]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spPayments_GetOneTransactionType]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spPayments_GetOneTransactionType]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spPayments_LogOnePaymentTransactionAttributeValueLog]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spPayments_LogOnePaymentTransactionAttributeValueLog]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spPayments_LogOnePaymentTransactionLog]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spPayments_LogOnePaymentTransactionLog]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spPayments_UpdateOnePaymentStatus]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spPayments_UpdateOnePaymentStatus]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spPayments_UpdateOneTransactionStatus]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spPayments_UpdateOneTransactionStatus]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spPayments_UpdateOneTransactionType]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spPayments_UpdateOneTransactionType]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spPayments_UpsertOnePayment]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spPayments_UpsertOnePayment]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUserExperience_AddOneAdminHelp]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUserExperience_AddOneAdminHelp]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUserExperience_AddOneSiteHelp]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUserExperience_AddOneSiteHelp]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUserExperience_AddOneSiteHelpGroup]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUserExperience_AddOneSiteHelpGroup]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUserExperience_AddOneSiteLabel]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUserExperience_AddOneSiteLabel]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUserExperience_DeleteAllAdminHelpDataByActivityCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUserExperience_DeleteAllAdminHelpDataByActivityCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUserExperience_DeleteAllAdminHelpDataByLocaleCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUserExperience_DeleteAllAdminHelpDataByLocaleCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUserExperience_DeleteAllSiteHelpDataByLocaleCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUserExperience_DeleteAllSiteHelpDataByLocaleCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUserExperience_DeleteAllSiteHelpDataBySiteHelpGroupCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUserExperience_DeleteAllSiteHelpDataBySiteHelpGroupCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUserExperience_DeleteAllSiteLabelDataByLocaleCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUserExperience_DeleteAllSiteLabelDataByLocaleCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUserExperience_DeleteOneAdminHelp]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUserExperience_DeleteOneAdminHelp]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUserExperience_DeleteOneSiteHelp]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUserExperience_DeleteOneSiteHelp]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUserExperience_DeleteOneSiteHelpGroup]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUserExperience_DeleteOneSiteHelpGroup]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUserExperience_DeleteOneSiteLabel]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUserExperience_DeleteOneSiteLabel]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUserExperience_GetAllAdminHelpData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUserExperience_GetAllAdminHelpData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUserExperience_GetAllAdminHelpDataByActivityCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUserExperience_GetAllAdminHelpDataByActivityCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUserExperience_GetAllAdminHelpDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUserExperience_GetAllAdminHelpDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUserExperience_GetAllAdminHelpDataByLocaleCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUserExperience_GetAllAdminHelpDataByLocaleCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUserExperience_GetAllSiteHelpData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUserExperience_GetAllSiteHelpData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUserExperience_GetAllSiteHelpDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUserExperience_GetAllSiteHelpDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUserExperience_GetAllSiteHelpDataByLocaleCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUserExperience_GetAllSiteHelpDataByLocaleCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUserExperience_GetAllSiteHelpDataBySiteHelpGroupCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUserExperience_GetAllSiteHelpDataBySiteHelpGroupCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUserExperience_GetAllSiteHelpGroupData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUserExperience_GetAllSiteHelpGroupData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUserExperience_GetAllSiteLabelData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUserExperience_GetAllSiteLabelData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUserExperience_GetAllSiteLabelDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUserExperience_GetAllSiteLabelDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUserExperience_GetAllSiteLabelDataByLocaleCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUserExperience_GetAllSiteLabelDataByLocaleCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUserExperience_GetManyAdminHelpDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUserExperience_GetManyAdminHelpDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUserExperience_GetManySiteHelpDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUserExperience_GetManySiteHelpDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUserExperience_GetManySiteLabelDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUserExperience_GetManySiteLabelDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUserExperience_GetOneAdminHelp]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUserExperience_GetOneAdminHelp]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUserExperience_GetOneSiteHelp]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUserExperience_GetOneSiteHelp]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUserExperience_GetOneSiteHelpGroup]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUserExperience_GetOneSiteHelpGroup]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUserExperience_GetOneSiteLabel]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUserExperience_GetOneSiteLabel]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUserExperience_UpdateOneAdminHelp]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUserExperience_UpdateOneAdminHelp]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUserExperience_UpdateOneSiteHelp]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUserExperience_UpdateOneSiteHelp]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUserExperience_UpdateOneSiteHelpGroup]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUserExperience_UpdateOneSiteHelpGroup]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUserExperience_UpdateOneSiteLabel]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUserExperience_UpdateOneSiteLabel]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUsers_AddOneAccessMode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUsers_AddOneAccessMode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUsers_AddOneActivity]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUsers_AddOneActivity]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUsers_AddOneUserRole]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUsers_AddOneUserRole]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUsers_AddOneUserRoleActivity]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUsers_AddOneUserRoleActivity]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUsers_AddOneUserRoleUser]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUsers_AddOneUserRoleUser]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUsers_DeleteAllUserDataByLocaleCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUsers_DeleteAllUserDataByLocaleCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUsers_DeleteAllUserRoleActivityDataByAccessModeCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUsers_DeleteAllUserRoleActivityDataByAccessModeCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUsers_DeleteAllUserRoleActivityDataByActivityCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUsers_DeleteAllUserRoleActivityDataByActivityCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUsers_DeleteAllUserRoleActivityDataByUserRoleCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUsers_DeleteAllUserRoleActivityDataByUserRoleCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUsers_DeleteAllUserRoleUserDataByUserID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUsers_DeleteAllUserRoleUserDataByUserID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUsers_DeleteAllUserRoleUserDataByUserRoleCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUsers_DeleteAllUserRoleUserDataByUserRoleCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUsers_DeleteOneAccessMode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUsers_DeleteOneAccessMode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUsers_DeleteOneActivity]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUsers_DeleteOneActivity]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUsers_DeleteOneUser]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUsers_DeleteOneUser]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUsers_DeleteOneUserRole]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUsers_DeleteOneUserRole]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUsers_DeleteOneUserRoleActivity]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUsers_DeleteOneUserRoleActivity]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUsers_DeleteOneUserRoleUser]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUsers_DeleteOneUserRoleUser]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUsers_GetAllAccessModeData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUsers_GetAllAccessModeData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUsers_GetAllActivityData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUsers_GetAllActivityData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUsers_GetAllUserData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUsers_GetAllUserData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUsers_GetAllUserDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUsers_GetAllUserDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUsers_GetAllUserDataByLocaleCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUsers_GetAllUserDataByLocaleCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUsers_GetAllUserRoleActivityData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUsers_GetAllUserRoleActivityData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUsers_GetAllUserRoleActivityDataByAccessModeCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUsers_GetAllUserRoleActivityDataByAccessModeCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUsers_GetAllUserRoleActivityDataByActivityCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUsers_GetAllUserRoleActivityDataByActivityCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUsers_GetAllUserRoleActivityDataByUserRoleCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUsers_GetAllUserRoleActivityDataByUserRoleCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUsers_GetAllUserRoleData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUsers_GetAllUserRoleData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUsers_GetAllUserRoleUserData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUsers_GetAllUserRoleUserData]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUsers_GetAllUserRoleUserDataByUserID]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUsers_GetAllUserRoleUserDataByUserID]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUsers_GetAllUserRoleUserDataByUserRoleCode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUsers_GetAllUserRoleUserDataByUserRoleCode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUsers_GetManyUserDataByCriteria]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUsers_GetManyUserDataByCriteria]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUsers_GetOneAccessMode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUsers_GetOneAccessMode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUsers_GetOneActivity]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUsers_GetOneActivity]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUsers_GetOneActivityByActivityName]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUsers_GetOneActivityByActivityName]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUsers_GetOneUser]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUsers_GetOneUser]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUsers_GetOneUserByFirstNameAndLastNameAndPassword]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUsers_GetOneUserByFirstNameAndLastNameAndPassword]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUsers_GetOneUserRole]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUsers_GetOneUserRole]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUsers_GetOneUserRoleActivity]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUsers_GetOneUserRoleActivity]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUsers_GetOneUserRoleUser]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUsers_GetOneUserRoleUser]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUsers_UpdateOneAccessMode]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUsers_UpdateOneAccessMode]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUsers_UpdateOneActivity]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUsers_UpdateOneActivity]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUsers_UpdateOneUserRole]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUsers_UpdateOneUserRole]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUsers_UpdateOneUserRoleActivity]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUsers_UpdateOneUserRoleActivity]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUsers_UpdateOneUserRoleUser]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUsers_UpdateOneUserRoleUser]
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[spUsers_UpsertOneUser]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[spUsers_UpsertOneUser]
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO





CREATE FUNCTION dbo.NYSIIS
( @instring VARCHAR(50) )
RETURNS VARCHAR(50)
AS

/*
    New York State Identification and Intelligence System (NYSIIS) Phonetic Encoder
    http://www.dropby.com/indexLF.html?content=/NYSIIS.html
*/

BEGIN

    DECLARE @cKey VARCHAR(50),
            @cChar VARCHAR(3),
            @cChars VARCHAR(3),
            @cVowels VARCHAR(10),
            @cFirst_char CHAR(1),
            @cResult VARCHAR(10)

    DECLARE @i integer

    /* vowels */
    SELECT @cVowels = 'AEIOU'

    /* trim all spaces */
    SELECT @instring = REPLACE( @instring, ' ', '' )
    SELECT @instring = UPPER( @instring )

    /* save first char */
    SELECT @cFirst_char = LEFT( @instring, 1 )

    /* ( 1) remove all 'S' and 'Z' chars from the end of the surname */
    SELECT @i = LEN( @instring )
    WHILE SUBSTRING( @instring, @i, 1 ) IN ( 'S', 'Z' )
        SELECT @i = @i - 1
    SELECT @instring = LEFT( @instring, @i )

     /* ( 2) transcode initial strings */
    /*      MAC => MC                 */
    /*      PF => F                     */
    SELECT @instring = CASE
                            WHEN LEFT( @instring, 3 ) = 'MAC' THEN 'MC' + SUBSTRING( @instring, 3, LEN( @instring ) )
                            WHEN LEFT( @instring, 2 ) = 'PF' THEN 'F' + SUBSTRING( @instring, 3, LEN( @instring ) )
                            ELSE @instring    -- do nothing
                       END

    /* ( 3) Transcode trailing strings as follows */
    /*      IX       => IC                        */
    /*      EX       => EC                        */
    /*      YE,EE,IE => Y                         */
    /*      NT,ND    => D                         */
    SELECT @instring = CASE
                            WHEN RIGHT( @instring, 2 ) = 'IX' THEN LEFT( @instring, LEN( @instring ) - 2 ) + 'IC'
                            WHEN RIGHT( @instring, 2 ) = 'EX' THEN LEFT( @instring, LEN( @instring ) - 2 ) + 'EC'
                            WHEN RIGHT( @instring, 2 ) IN ( 'YE', 'EE', 'IE' ) THEN LEFT( @instring, LEN( @instring ) - 2 ) + 'Y'
                            WHEN RIGHT( @instring, 2 ) IN ( 'NT', 'ND' ) THEN LEFT( @instring, LEN( @instring ) - 2 ) + 'D'
                            ELSE @instring    -- do nothing
                       END

    /* the step ( 4) I moved to begining of WHILE ... END below */

    /* ( 5) use first character of name as first character of key */
    /* SELECT @cKey = LEFT( @instring, 1 ) */
    /* don't now, what they thing with this, but with @cKey = '' it seems to be working */
    SELECT @cKey = ''


    SELECT @i = 1
    /* while not end of @instring */
    WHILE SUBSTRING( @instring, @i, 1 ) > ''
    BEGIN
        SELECT @cChars = SUBSTRING( @instring, @i, 3 )

        SELECT @cResult = CASE /* ( 4) transcode 'EV' to 'EF' if not at start of name */
                               WHEN @i > 1 AND LEFT( @cChars, 2 ) = 'EV' THEN 'AF'
                               /* ( 6) remove any 'W' that follows a vowel */
                               WHEN LEFT( @cChars, 1 ) = 'W' AND CHARINDEX( SUBSTRING( @instring, @i - 1, 1 ), @cVowels ) > 0 THEN SUBSTRING( @instring, @i - 1, 1 )
                               /* ( 7) replace all vowels with 'A' */
                               WHEN CHARINDEX( LEFT( @cChars, 1 ), @cVowels ) > 0 THEN 'A'
                                /* ( 8) transcode 'GHT' to 'GT' */
                               WHEN LEFT( @cChars, 2 ) = 'GHT' THEN 'GGG'
                                /* ( 9) transcode 'DG' to 'G' */
                               WHEN LEFT( @cChars, 2 ) = 'DG' THEN 'G'
                               /* (10) transcode 'PH' to 'F' */
                               WHEN LEFT( @cChars, 2 ) = 'PH' THEN 'F'
                                /* (11) if not first character, eliminate all 'H' preceded or followed by a vowel */
                               WHEN LEFT( @cChars, 1 ) = 'H' AND @i > 1 AND ( CHARINDEX( SUBSTRING( @instring, @i - 1, 1 ), @cVowels ) > 0 OR CHARINDEX( SUBSTRING( @instring, @i + 1, 1 ), @cVowels ) > 0 ) THEN SUBSTRING( @instring, @i - 1, 1 )
                               /* (12) change 'KN' to 'N', else 'K' to 'C' */
                               WHEN LEFT( @cChars, 2 ) = 'KN' THEN 'N'
                               WHEN LEFT( @cChars, 1 ) = 'K' THEN 'C'
                               /* (13) if not first character, change 'M' to 'N' */
                               WHEN @i > 1 AND LEFT( @cChars, 1 ) = 'M' THEN 'N'
                               /* (14) if not first character, change 'Q' to 'G' */
                               WHEN @i > 1 AND LEFT( @cChars, 1 ) = 'Q' THEN 'G'
                               /* (15) transcode 'SH' to 'S' */
                               WHEN LEFT( @cChars, 2 ) = 'SH' THEN 'S'
                               /* (16) transcode 'SCH' to 'S' */
                               WHEN @cChars = 'SCH' THEN 'SSS'
                               /* (17) transcode 'YW' to 'Y' */
                               WHEN LEFT( @cChars, 2 ) = 'YW' THEN 'Y'
                               /* (18) if not first or last character, change 'Y' to 'A' */
                               WHEN @i > 1 AND @i < LEN( @instring ) AND LEFT( @cChars, 1 ) = 'Y' THEN 'A'     
                               /* (19) transcode 'WR' to 'R' */
                               WHEN LEFT( @cChars, 2 ) = 'WR' THEN 'R'
                               /* (20) if not first character, change 'Z' to 'S' */
                               WHEN @i > 1 AND LEFT( @cChars, 1 ) = 'Z' THEN 'S'
                               ELSE LEFT( @cChars, 1 )
                         END

        SELECT @instring = STUFF( @instring, @i, LEN( @cResult ), @cResult )

        /* Add current to key if current <> last key character */
        IF RIGHT( @cKey, 1 ) != LEFT( @cResult, 1 )
            SELECT @cKey = @cKey + @cResult


        SELECT @i = @i + 1

    END


    /* (21) transcode terminal 'AY' to 'Y' */
    IF RIGHT( @cKey, 2 ) = 'AY'
        SELECT @cKey = LEFT( @cKey, LEN( @cKey ) - 2 ) + 'Y'
  
    /* (22) remove traling vowels */
    /*      start vowels */
    SELECT @i = 1
    WHILE CHARINDEX( SUBSTRING( @cKey, @i, 1 ), @cVowels ) > 0
        /* replace vowels with spaces */
        SELECT @cKey = STUFF( @cKey, @i, 1, ' ' ),
               @i = @i + 1

    /*     end vowels */
    SELECT @i = LEN( @cKey )
    WHILE CHARINDEX( SUBSTRING( @cKey, @i, 1 ), @cVowels ) > 0
        /* replace vowels with spaces */
        SELECT @cKey = STUFF( @cKey, @i, 1, ' ' ),
               @i = @i - 1
    /*     remove spaces */
    SELECT @cKey = REPLACE( @cKey, ' ', '' )

    /* (23) collapse all strings of repeated characters */
    /* not neede, see 'Add current to key if current <> last key character' before step (21) */

/* (24) if first char of original surname was a vowel, append it to the start of code */
    IF CHARINDEX( @cFirst_char, @cVowels ) > 0
        SELECT @cKey = @cFirst_char + @cKey

    RETURN @cKey

END





GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_AddOneAccountAttribute
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @BaseAttributeID uniqueidentifier
	, @AttributeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure inserts AccountAttribute data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@BaseAttributeID IS NULL OR @AttributeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF EXISTS (SELECT [BaseAttributeID] FROM [dbo].[tblAccounts_AccountAttribute] WHERE [BaseAttributeID] =  @BaseAttributeID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	INSERT
	      [dbo].[tblAccounts_AccountAttribute]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [BaseAttributeID]
	   , [AttributeCode]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @BaseAttributeID
	   , @AttributeCode
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_AddOneAccountSubType
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @AccountSubTypeCode int
	, @AccountSubTypeName nvarchar(255)
	, @Description nvarchar(2000) = NULL
	, @IsActive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure inserts AccountSubType data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountSubTypeCode IS NULL OR @AccountSubTypeName IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF EXISTS (SELECT [AccountSubTypeCode] FROM [dbo].[tlkpAccounts_AccountSubType] WHERE [AccountSubTypeCode] =  @AccountSubTypeCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	INSERT
	      [dbo].[tlkpAccounts_AccountSubType]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [AccountSubTypeCode]
	   , [AccountSubTypeName]
	   , [Description]
	   , [IsActive]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @AccountSubTypeCode
	   , @AccountSubTypeName
	   , @Description
	   , @IsActive
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_AddOneBankAccount
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @AccountID uniqueidentifier
	, @BankMetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure inserts BankAccount data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountID IS NULL OR @BankMetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF EXISTS (SELECT [AccountID] FROM [dbo].[tblAccounts_BankAccount] WHERE [AccountID] =  @AccountID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	INSERT
	      [dbo].[tblAccounts_BankAccount]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [AccountID]
	   , [BankMetaPartnerID]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @AccountID
	   , @BankMetaPartnerID
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_AddOneBillPayAccount
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @AccountID uniqueidentifier
	, @BusinessAccountNumber nvarchar(100)
	, @StartDate datetime
	, @EndDate datetime
	, @DefaultMinimumPayment money
	, @DefaultMaximumPayment money
	, @BusinessMetaPartnerID uniqueidentifier
	, @HourOfDay int
	, @DayOfWeek int
	, @WeekOfMonth int
	, @MonthOfYear int
	, @NumberOfReminders int
	, @FrequencyCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure inserts BillPayAccount data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountID IS NULL OR @BusinessAccountNumber IS NULL OR @StartDate IS NULL OR @EndDate IS NULL OR @DefaultMinimumPayment IS NULL OR @DefaultMaximumPayment IS NULL OR @BusinessMetaPartnerID IS NULL OR @HourOfDay IS NULL OR @DayOfWeek IS NULL OR @WeekOfMonth IS NULL OR @MonthOfYear IS NULL OR @NumberOfReminders IS NULL OR @FrequencyCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF EXISTS (SELECT [AccountID] FROM [dbo].[tblAccounts_BillPayAccount] WHERE [AccountID] =  @AccountID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	INSERT
	      [dbo].[tblAccounts_BillPayAccount]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [AccountID]
	   , [BusinessAccountNumber]
	   , [StartDate]
	   , [EndDate]
	   , [DefaultMinimumPayment]
	   , [DefaultMaximumPayment]
	   , [BusinessMetaPartnerID]
	   , [HourOfDay]
	   , [DayOfWeek]
	   , [WeekOfMonth]
	   , [MonthOfYear]
	   , [NumberOfReminders]
	   , [FrequencyCode]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @AccountID
	   , @BusinessAccountNumber
	   , @StartDate
	   , @EndDate
	   , @DefaultMinimumPayment
	   , @DefaultMaximumPayment
	   , @BusinessMetaPartnerID
	   , @HourOfDay
	   , @DayOfWeek
	   , @WeekOfMonth
	   , @MonthOfYear
	   , @NumberOfReminders
	   , @FrequencyCode
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_AddOneCreditAccount
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @AccountID uniqueidentifier
	, @CreditCardNumber nvarchar(50) = NULL
	, @CreditCardLastFour nvarchar(4)
	, @CreditCardName nvarchar(255) = NULL
	, @ExpirationDate datetime = NULL
	, @CreditCardTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure inserts CreditAccount data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountID IS NULL OR @CreditCardLastFour IS NULL OR @CreditCardTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF EXISTS (SELECT [AccountID] FROM [dbo].[tblAccounts_CreditAccount] WHERE [AccountID] =  @AccountID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	INSERT
	      [dbo].[tblAccounts_CreditAccount]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [AccountID]
	   , [CreditCardNumber]
	   , [CreditCardLastFour]
	   , [CreditCardName]
	   , [ExpirationDate]
	   , [CreditCardTypeCode]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @AccountID
	   , @CreditCardNumber
	   , @CreditCardLastFour
	   , @CreditCardName
	   , @ExpirationDate
	   , @CreditCardTypeCode
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_AddOneCreditCardType
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @CreditCardTypeCode int
	, @CreditCardTypeName nvarchar(255)
	, @Description nvarchar(2000) = NULL
	, @IsActive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure inserts CreditCardType data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@CreditCardTypeCode IS NULL OR @CreditCardTypeName IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF EXISTS (SELECT [CreditCardTypeCode] FROM [dbo].[tlkpAccounts_CreditCardType] WHERE [CreditCardTypeCode] =  @CreditCardTypeCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	INSERT
	      [dbo].[tlkpAccounts_CreditCardType]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [CreditCardTypeCode]
	   , [CreditCardTypeName]
	   , [Description]
	   , [IsActive]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @CreditCardTypeCode
	   , @CreditCardTypeName
	   , @Description
	   , @IsActive
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_AddOneCurrency
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @CurrencyCode int
	, @CurrencyName nvarchar(255)
	, @IsPaymentCurrency bit = 1
	, @Description nvarchar(2000) = NULL
	, @IsActive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure inserts Currency data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@CurrencyCode IS NULL OR @CurrencyName IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF EXISTS (SELECT [CurrencyCode] FROM [dbo].[tlkpAccounts_Currency] WHERE [CurrencyCode] =  @CurrencyCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	INSERT
	      [dbo].[tlkpAccounts_Currency]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [CurrencyCode]
	   , [CurrencyName]
	   , [IsPaymentCurrency]
	   , [Description]
	   , [IsActive]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @CurrencyCode
	   , @CurrencyName
	   , @IsPaymentCurrency
	   , @Description
	   , @IsActive
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_AddOneDebitAccount
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @AccountID uniqueidentifier
	, @DebitAccountNumber nvarchar(100)
	, @IsDefaultDebitAccount bit
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure inserts DebitAccount data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountID IS NULL OR @DebitAccountNumber IS NULL OR @IsDefaultDebitAccount IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF EXISTS (SELECT [AccountID] FROM [dbo].[tblAccounts_DebitAccount] WHERE [AccountID] =  @AccountID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	INSERT
	      [dbo].[tblAccounts_DebitAccount]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [AccountID]
	   , [DebitAccountNumber]
	   , [IsDefaultDebitAccount]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @AccountID
	   , @DebitAccountNumber
	   , @IsDefaultDebitAccount
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_AddOneFrequency
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @FrequencyCode int
	, @FrequencyName nvarchar(255)
	, @Description nvarchar(2000) = NULL
	, @IsActive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure inserts Frequency data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@FrequencyCode IS NULL OR @FrequencyName IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF EXISTS (SELECT [FrequencyCode] FROM [dbo].[tlkpAccounts_Frequency] WHERE [FrequencyCode] =  @FrequencyCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	INSERT
	      [dbo].[tlkpAccounts_Frequency]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [FrequencyCode]
	   , [FrequencyName]
	   , [Description]
	   , [IsActive]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @FrequencyCode
	   , @FrequencyName
	   , @Description
	   , @IsActive
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_AddOneFundAccount
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @AccountID uniqueidentifier
	, @StartDate datetime
	, @EndDate datetime
	, @FundCode nvarchar(100) = NULL
	, @TargetAmount money
	, @MinimumDonationAmount money
	, @MaximumDonationAmount money
	, @DonatedAmount money
	, @IsPublic bit = 0
	, @FundAccountTypeCode int
	, @FrequencyCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure inserts FundAccount data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountID IS NULL OR @StartDate IS NULL OR @EndDate IS NULL OR @TargetAmount IS NULL OR @MinimumDonationAmount IS NULL OR @MaximumDonationAmount IS NULL OR @DonatedAmount IS NULL OR @FundAccountTypeCode IS NULL OR @FrequencyCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF EXISTS (SELECT [AccountID] FROM [dbo].[tblAccounts_FundAccount] WHERE [AccountID] =  @AccountID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	INSERT
	      [dbo].[tblAccounts_FundAccount]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [AccountID]
	   , [StartDate]
	   , [EndDate]
	   , [FundCode]
	   , [TargetAmount]
	   , [MinimumDonationAmount]
	   , [MaximumDonationAmount]
	   , [DonatedAmount]
	   , [IsPublic]
	   , [FundAccountTypeCode]
	   , [FrequencyCode]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @AccountID
	   , @StartDate
	   , @EndDate
	   , @FundCode
	   , @TargetAmount
	   , @MinimumDonationAmount
	   , @MaximumDonationAmount
	   , @DonatedAmount
	   , @IsPublic
	   , @FundAccountTypeCode
	   , @FrequencyCode
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_AddOneFundAccountType
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @FundAccountTypeCode int
	, @FundAccountTypeName nvarchar(255)
	, @Description nvarchar(2000) = NULL
	, @IsActive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure inserts FundAccountType data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@FundAccountTypeCode IS NULL OR @FundAccountTypeName IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF EXISTS (SELECT [FundAccountTypeCode] FROM [dbo].[tlkpAccounts_FundAccountType] WHERE [FundAccountTypeCode] =  @FundAccountTypeCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	INSERT
	      [dbo].[tlkpAccounts_FundAccountType]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [FundAccountTypeCode]
	   , [FundAccountTypeName]
	   , [Description]
	   , [IsActive]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @FundAccountTypeCode
	   , @FundAccountTypeName
	   , @Description
	   , @IsActive
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_AddOneLoanAccount
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @AccountID uniqueidentifier
	, @LoanAmount money
	, @OutstandingAmount money
	, @DueDate datetime
	, @LoanRate float
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure inserts LoanAccount data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountID IS NULL OR @LoanAmount IS NULL OR @OutstandingAmount IS NULL OR @DueDate IS NULL OR @LoanRate IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF EXISTS (SELECT [AccountID] FROM [dbo].[tblAccounts_LoanAccount] WHERE [AccountID] =  @AccountID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	INSERT
	      [dbo].[tblAccounts_LoanAccount]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [AccountID]
	   , [LoanAmount]
	   , [OutstandingAmount]
	   , [DueDate]
	   , [LoanRate]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @AccountID
	   , @LoanAmount
	   , @OutstandingAmount
	   , @DueDate
	   , @LoanRate
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_AddOneLoanToMetaPartner
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @AccountID uniqueidentifier
	, @MetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure inserts LoanToMetaPartner data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountID IS NULL OR @MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF EXISTS (SELECT [AccountID], [MetaPartnerID] FROM [dbo].[trelAccounts_LoanToMetaPartner] WHERE [AccountID] =  @AccountID AND [MetaPartnerID] =  @MetaPartnerID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	INSERT
	      [dbo].[trelAccounts_LoanToMetaPartner]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [AccountID]
	   , [MetaPartnerID]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @AccountID
	   , @MetaPartnerID
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_AddOneMetaTransferAccount
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @AccountID uniqueidentifier
	, @MetaTransferAccountNumber nvarchar(100)
	, @PaymentInstitutionCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure inserts MetaTransferAccount data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountID IS NULL OR @MetaTransferAccountNumber IS NULL OR @PaymentInstitutionCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF EXISTS (SELECT [AccountID] FROM [dbo].[tblAccounts_MetaTransferAccount] WHERE [AccountID] =  @AccountID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	INSERT
	      [dbo].[tblAccounts_MetaTransferAccount]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [AccountID]
	   , [MetaTransferAccountNumber]
	   , [PaymentInstitutionCode]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @AccountID
	   , @MetaTransferAccountNumber
	   , @PaymentInstitutionCode
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_AddOneParticipatingPartner
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @AccountID uniqueidentifier
	, @MetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure inserts ParticipatingPartner data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountID IS NULL OR @MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF EXISTS (SELECT [AccountID], [MetaPartnerID] FROM [dbo].[trelAccounts_ParticipatingPartner] WHERE [AccountID] =  @AccountID AND [MetaPartnerID] =  @MetaPartnerID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	INSERT
	      [dbo].[trelAccounts_ParticipatingPartner]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [AccountID]
	   , [MetaPartnerID]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @AccountID
	   , @MetaPartnerID
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_AddOnePaymentInstitution
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @PaymentInstitutionCode int
	, @PaymentInstitutionName nvarchar(255)
	, @Description nvarchar(2000) = NULL
	, @IsActive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure inserts PaymentInstitution data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@PaymentInstitutionCode IS NULL OR @PaymentInstitutionName IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF EXISTS (SELECT [PaymentInstitutionCode] FROM [dbo].[tlkpAccounts_PaymentInstitution] WHERE [PaymentInstitutionCode] =  @PaymentInstitutionCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	INSERT
	      [dbo].[tlkpAccounts_PaymentInstitution]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [PaymentInstitutionCode]
	   , [PaymentInstitutionName]
	   , [Description]
	   , [IsActive]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @PaymentInstitutionCode
	   , @PaymentInstitutionName
	   , @Description
	   , @IsActive
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_AddOneStoredValueAccount
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @AccountID uniqueidentifier
	, @PhoneMetaPartnerID uniqueidentifier
	, @MetaPartnerPhoneID uniqueidentifier
	, @Balance money = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure inserts StoredValueAccount data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountID IS NULL OR @PhoneMetaPartnerID IS NULL OR @MetaPartnerPhoneID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF EXISTS (SELECT [AccountID] FROM [dbo].[tblAccounts_StoredValueAccount] WHERE [AccountID] =  @AccountID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	INSERT
	      [dbo].[tblAccounts_StoredValueAccount]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [AccountID]
	   , [PhoneMetaPartnerID]
	   , [MetaPartnerPhoneID]
	   , [Balance]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @AccountID
	   , @PhoneMetaPartnerID
	   , @MetaPartnerPhoneID
	   , @Balance
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteAllAccountAttributeDataByAttributeTypeCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @AttributeTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all AccountAttribute data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AttributeTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblAccounts_AccountAttribute]
	WHERE [BaseAttributeID] IN (SELECT [BaseAttributeID] FROM [dbo].[tblCore_BaseAttribute] WHERE [AttributeTypeCode] =  @AttributeTypeCode)

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteAllAccountAttributeDataByBaseAttributeID
	  @SqlErrorNumber int = 0 OUTPUT
	, @BaseAttributeID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all AccountAttribute data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@BaseAttributeID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblAccounts_AccountAttribute]
	WHERE [BaseAttributeID] =  @BaseAttributeID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteAllAccountAttributeDataByDataTypeCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @DataTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all AccountAttribute data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@DataTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblAccounts_AccountAttribute]
	WHERE [BaseAttributeID] IN (SELECT [BaseAttributeID] FROM [dbo].[tblCore_BaseAttribute] WHERE [DataTypeCode] =  @DataTypeCode)

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteAllAccountAttributeValueDataByAccountID
	  @SqlErrorNumber int = 0 OUTPUT
	, @AccountID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all AccountAttributeValue data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblAccounts_AccountAttributeValue]
	WHERE [AccountID] =  @AccountID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteAllAccountAttributeValueDataByBaseAttributeID
	  @SqlErrorNumber int = 0 OUTPUT
	, @BaseAttributeID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all AccountAttributeValue data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@BaseAttributeID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblAccounts_AccountAttributeValue]
	WHERE [BaseAttributeID] =  @BaseAttributeID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteAllAccountDataByAccountSubTypeCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @AccountSubTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all Account data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountSubTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblAccounts_Account]
	WHERE [AccountSubTypeCode] =  @AccountSubTypeCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteAllAccountDataByCurrencyCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @CurrencyCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all Account data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@CurrencyCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblAccounts_Account]
	WHERE [CurrencyCode] =  @CurrencyCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteAllAccountDataByMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @MetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all Account data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblAccounts_Account]
	WHERE [MetaPartnerID] =  @MetaPartnerID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteAllBankAccountDataByAccountID
	  @SqlErrorNumber int = 0 OUTPUT
	, @AccountID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all BankAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblAccounts_BankAccount]
	WHERE [AccountID] =  @AccountID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteAllBankAccountDataByAccountSubTypeCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @AccountSubTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all BankAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountSubTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblAccounts_BankAccount]
	WHERE [AccountID] IN (SELECT [AccountID] FROM [dbo].[tblAccounts_Account] WHERE [AccountSubTypeCode] =  @AccountSubTypeCode)

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteAllBankAccountDataByBankMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @BankMetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all BankAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@BankMetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblAccounts_BankAccount]
	WHERE [BankMetaPartnerID] =  @BankMetaPartnerID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteAllBankAccountDataByCurrencyCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @CurrencyCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all BankAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@CurrencyCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblAccounts_BankAccount]
	WHERE [AccountID] IN (SELECT [AccountID] FROM [dbo].[tblAccounts_Account] WHERE [CurrencyCode] =  @CurrencyCode)

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteAllBankAccountDataByMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @MetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all BankAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblAccounts_BankAccount]
	WHERE [AccountID] IN (SELECT [AccountID] FROM [dbo].[tblAccounts_Account] WHERE [MetaPartnerID] =  @MetaPartnerID)

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteAllBillPayAccountDataByAccountID
	  @SqlErrorNumber int = 0 OUTPUT
	, @AccountID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all BillPayAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblAccounts_BillPayAccount]
	WHERE [AccountID] =  @AccountID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteAllBillPayAccountDataByAccountSubTypeCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @AccountSubTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all BillPayAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountSubTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblAccounts_BillPayAccount]
	WHERE [AccountID] IN (SELECT [AccountID] FROM [dbo].[tblAccounts_Account] WHERE [AccountSubTypeCode] =  @AccountSubTypeCode)

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteAllBillPayAccountDataByBusinessMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @BusinessMetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all BillPayAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@BusinessMetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblAccounts_BillPayAccount]
	WHERE [BusinessMetaPartnerID] =  @BusinessMetaPartnerID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteAllBillPayAccountDataByCurrencyCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @CurrencyCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all BillPayAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@CurrencyCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblAccounts_BillPayAccount]
	WHERE [AccountID] IN (SELECT [AccountID] FROM [dbo].[tblAccounts_Account] WHERE [CurrencyCode] =  @CurrencyCode)

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteAllBillPayAccountDataByFrequencyCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @FrequencyCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all BillPayAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@FrequencyCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblAccounts_BillPayAccount]
	WHERE [FrequencyCode] =  @FrequencyCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteAllBillPayAccountDataByMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @MetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all BillPayAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblAccounts_BillPayAccount]
	WHERE [AccountID] IN (SELECT [AccountID] FROM [dbo].[tblAccounts_Account] WHERE [MetaPartnerID] =  @MetaPartnerID)

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteAllCreditAccountDataByAccountID
	  @SqlErrorNumber int = 0 OUTPUT
	, @AccountID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all CreditAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblAccounts_CreditAccount]
	WHERE [AccountID] =  @AccountID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteAllCreditAccountDataByAccountSubTypeCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @AccountSubTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all CreditAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountSubTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblAccounts_CreditAccount]
	WHERE [AccountID] IN (SELECT [AccountID] FROM [dbo].[tblAccounts_Account] WHERE [AccountSubTypeCode] =  @AccountSubTypeCode)

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteAllCreditAccountDataByCreditCardTypeCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreditCardTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all CreditAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@CreditCardTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblAccounts_CreditAccount]
	WHERE [CreditCardTypeCode] =  @CreditCardTypeCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteAllCreditAccountDataByCurrencyCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @CurrencyCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all CreditAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@CurrencyCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblAccounts_CreditAccount]
	WHERE [AccountID] IN (SELECT [AccountID] FROM [dbo].[tblAccounts_Account] WHERE [CurrencyCode] =  @CurrencyCode)

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteAllCreditAccountDataByMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @MetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all CreditAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblAccounts_CreditAccount]
	WHERE [AccountID] IN (SELECT [AccountID] FROM [dbo].[tblAccounts_Account] WHERE [MetaPartnerID] =  @MetaPartnerID)

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteAllCurrencyConversionDataByConvertFromCurrencyCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @ConvertFromCurrencyCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all CurrencyConversion data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@ConvertFromCurrencyCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblAccounts_CurrencyConversion]
	WHERE [ConvertFromCurrencyCode] =  @ConvertFromCurrencyCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteAllCurrencyConversionDataByConvertToCurrencyCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @ConvertToCurrencyCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all CurrencyConversion data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@ConvertToCurrencyCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblAccounts_CurrencyConversion]
	WHERE [ConvertToCurrencyCode] =  @ConvertToCurrencyCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteAllCurrencyConversionDataByMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @MetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all CurrencyConversion data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblAccounts_CurrencyConversion]
	WHERE [MetaPartnerID] =  @MetaPartnerID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteAllDebitAccountDataByAccountID
	  @SqlErrorNumber int = 0 OUTPUT
	, @AccountID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all DebitAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblAccounts_DebitAccount]
	WHERE [AccountID] =  @AccountID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteAllDebitAccountDataByAccountSubTypeCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @AccountSubTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all DebitAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountSubTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblAccounts_DebitAccount]
	WHERE [AccountID] IN (SELECT [AccountID] FROM [dbo].[tblAccounts_Account] WHERE [AccountSubTypeCode] =  @AccountSubTypeCode)

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteAllDebitAccountDataByCurrencyCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @CurrencyCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all DebitAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@CurrencyCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblAccounts_DebitAccount]
	WHERE [AccountID] IN (SELECT [AccountID] FROM [dbo].[tblAccounts_Account] WHERE [CurrencyCode] =  @CurrencyCode)

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteAllDebitAccountDataByMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @MetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all DebitAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblAccounts_DebitAccount]
	WHERE [AccountID] IN (SELECT [AccountID] FROM [dbo].[tblAccounts_Account] WHERE [MetaPartnerID] =  @MetaPartnerID)

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteAllFundAccountDataByAccountID
	  @SqlErrorNumber int = 0 OUTPUT
	, @AccountID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all FundAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblAccounts_FundAccount]
	WHERE [AccountID] =  @AccountID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteAllFundAccountDataByAccountSubTypeCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @AccountSubTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all FundAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountSubTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblAccounts_FundAccount]
	WHERE [AccountID] IN (SELECT [AccountID] FROM [dbo].[tblAccounts_Account] WHERE [AccountSubTypeCode] =  @AccountSubTypeCode)

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteAllFundAccountDataByCurrencyCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @CurrencyCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all FundAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@CurrencyCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblAccounts_FundAccount]
	WHERE [AccountID] IN (SELECT [AccountID] FROM [dbo].[tblAccounts_Account] WHERE [CurrencyCode] =  @CurrencyCode)

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteAllFundAccountDataByFrequencyCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @FrequencyCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all FundAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@FrequencyCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblAccounts_FundAccount]
	WHERE [FrequencyCode] =  @FrequencyCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteAllFundAccountDataByFundAccountTypeCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @FundAccountTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all FundAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@FundAccountTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblAccounts_FundAccount]
	WHERE [FundAccountTypeCode] =  @FundAccountTypeCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteAllFundAccountDataByMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @MetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all FundAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblAccounts_FundAccount]
	WHERE [AccountID] IN (SELECT [AccountID] FROM [dbo].[tblAccounts_Account] WHERE [MetaPartnerID] =  @MetaPartnerID)

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteAllLoanAccountDataByAccountID
	  @SqlErrorNumber int = 0 OUTPUT
	, @AccountID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all LoanAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblAccounts_LoanAccount]
	WHERE [AccountID] =  @AccountID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteAllLoanAccountDataByAccountSubTypeCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @AccountSubTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all LoanAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountSubTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblAccounts_LoanAccount]
	WHERE [AccountID] IN (SELECT [AccountID] FROM [dbo].[tblAccounts_Account] WHERE [AccountSubTypeCode] =  @AccountSubTypeCode)

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteAllLoanAccountDataByCurrencyCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @CurrencyCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all LoanAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@CurrencyCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblAccounts_LoanAccount]
	WHERE [AccountID] IN (SELECT [AccountID] FROM [dbo].[tblAccounts_Account] WHERE [CurrencyCode] =  @CurrencyCode)

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteAllLoanAccountDataByMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @MetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all LoanAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblAccounts_LoanAccount]
	WHERE [AccountID] IN (SELECT [AccountID] FROM [dbo].[tblAccounts_Account] WHERE [MetaPartnerID] =  @MetaPartnerID)

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteAllLoanToMetaPartnerDataByAccountID
	  @SqlErrorNumber int = 0 OUTPUT
	, @AccountID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all LoanToMetaPartner data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[trelAccounts_LoanToMetaPartner]
	WHERE [AccountID] =  @AccountID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteAllLoanToMetaPartnerDataByMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @MetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all LoanToMetaPartner data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[trelAccounts_LoanToMetaPartner]
	WHERE [MetaPartnerID] =  @MetaPartnerID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteAllMetaTransferAccountDataByAccountID
	  @SqlErrorNumber int = 0 OUTPUT
	, @AccountID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all MetaTransferAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblAccounts_MetaTransferAccount]
	WHERE [AccountID] =  @AccountID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteAllMetaTransferAccountDataByAccountSubTypeCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @AccountSubTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all MetaTransferAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountSubTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblAccounts_MetaTransferAccount]
	WHERE [AccountID] IN (SELECT [AccountID] FROM [dbo].[tblAccounts_Account] WHERE [AccountSubTypeCode] =  @AccountSubTypeCode)

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteAllMetaTransferAccountDataByCurrencyCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @CurrencyCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all MetaTransferAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@CurrencyCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblAccounts_MetaTransferAccount]
	WHERE [AccountID] IN (SELECT [AccountID] FROM [dbo].[tblAccounts_Account] WHERE [CurrencyCode] =  @CurrencyCode)

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteAllMetaTransferAccountDataByMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @MetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all MetaTransferAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblAccounts_MetaTransferAccount]
	WHERE [AccountID] IN (SELECT [AccountID] FROM [dbo].[tblAccounts_Account] WHERE [MetaPartnerID] =  @MetaPartnerID)

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteAllMetaTransferAccountDataByPaymentInstitutionCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @PaymentInstitutionCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all MetaTransferAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@PaymentInstitutionCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblAccounts_MetaTransferAccount]
	WHERE [PaymentInstitutionCode] =  @PaymentInstitutionCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteAllParticipatingPartnerDataByAccountID
	  @SqlErrorNumber int = 0 OUTPUT
	, @AccountID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all ParticipatingPartner data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[trelAccounts_ParticipatingPartner]
	WHERE [AccountID] =  @AccountID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteAllParticipatingPartnerDataByMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @MetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all ParticipatingPartner data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[trelAccounts_ParticipatingPartner]
	WHERE [MetaPartnerID] =  @MetaPartnerID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteAllStoredValueAccountDataByAccountID
	  @SqlErrorNumber int = 0 OUTPUT
	, @AccountID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all StoredValueAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblAccounts_StoredValueAccount]
	WHERE [AccountID] =  @AccountID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteAllStoredValueAccountDataByAccountIDAndPhoneMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @AccountID uniqueidentifier
	, @PhoneMetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all StoredValueAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountID IS NULL OR @PhoneMetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblAccounts_StoredValueAccount]
	WHERE [AccountID] =  @AccountID AND [PhoneMetaPartnerID] =  @PhoneMetaPartnerID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteAllStoredValueAccountDataByAccountSubTypeCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @AccountSubTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all StoredValueAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountSubTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblAccounts_StoredValueAccount]
	WHERE [AccountID] IN (SELECT [AccountID] FROM [dbo].[tblAccounts_Account] WHERE [AccountSubTypeCode] =  @AccountSubTypeCode)

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteAllStoredValueAccountDataByCurrencyCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @CurrencyCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all StoredValueAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@CurrencyCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblAccounts_StoredValueAccount]
	WHERE [AccountID] IN (SELECT [AccountID] FROM [dbo].[tblAccounts_Account] WHERE [CurrencyCode] =  @CurrencyCode)

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteAllStoredValueAccountDataByMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @MetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all StoredValueAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblAccounts_StoredValueAccount]
	WHERE [AccountID] IN (SELECT [AccountID] FROM [dbo].[tblAccounts_Account] WHERE [MetaPartnerID] =  @MetaPartnerID)

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteAllStoredValueAccountDataByMetaPartnerPhoneIDAndPhoneMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @MetaPartnerPhoneID uniqueidentifier
	, @PhoneMetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all StoredValueAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@MetaPartnerPhoneID IS NULL OR @PhoneMetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblAccounts_StoredValueAccount]
	WHERE [MetaPartnerPhoneID] =  @MetaPartnerPhoneID AND [PhoneMetaPartnerID] =  @PhoneMetaPartnerID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteOneAccount
	  @SqlErrorNumber int = 0 OUTPUT
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @AccountID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes Account data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [AccountID] FROM [dbo].[tblAccounts_Account] WHERE [AccountID] =  @AccountID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [AccountID] FROM [dbo].[tblAccounts_Account] WHERE [AccountID] =  @AccountID AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblAccounts_Account]
	WHERE [AccountID] =  @AccountID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteOneAccountAttribute
	  @SqlErrorNumber int = 0 OUTPUT
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @BaseAttributeID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes AccountAttribute data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@BaseAttributeID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [BaseAttributeID] FROM [dbo].[tblAccounts_AccountAttribute] WHERE [BaseAttributeID] =  @BaseAttributeID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [BaseAttributeID] FROM [dbo].[tblAccounts_AccountAttribute] WHERE [BaseAttributeID] =  @BaseAttributeID AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblAccounts_AccountAttribute]
	WHERE [BaseAttributeID] =  @BaseAttributeID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteOneAccountAttributeValue
	  @SqlErrorNumber int = 0 OUTPUT
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @AccountAttributeValueID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes AccountAttributeValue data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountAttributeValueID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [AccountAttributeValueID] FROM [dbo].[tblAccounts_AccountAttributeValue] WHERE [AccountAttributeValueID] =  @AccountAttributeValueID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [AccountAttributeValueID] FROM [dbo].[tblAccounts_AccountAttributeValue] WHERE [AccountAttributeValueID] =  @AccountAttributeValueID AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblAccounts_AccountAttributeValue]
	WHERE [AccountAttributeValueID] =  @AccountAttributeValueID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteOneAccountSubType
	  @SqlErrorNumber int = 0 OUTPUT
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @AccountSubTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes AccountSubType data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountSubTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [AccountSubTypeCode] FROM [dbo].[tlkpAccounts_AccountSubType] WHERE [AccountSubTypeCode] =  @AccountSubTypeCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [AccountSubTypeCode] FROM [dbo].[tlkpAccounts_AccountSubType] WHERE [AccountSubTypeCode] =  @AccountSubTypeCode AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tlkpAccounts_AccountSubType]
	WHERE [AccountSubTypeCode] =  @AccountSubTypeCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteOneBankAccount
	  @SqlErrorNumber int = 0 OUTPUT
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @AccountID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes BankAccount data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [AccountID] FROM [dbo].[tblAccounts_BankAccount] WHERE [AccountID] =  @AccountID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [AccountID] FROM [dbo].[tblAccounts_BankAccount] WHERE [AccountID] =  @AccountID AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblAccounts_BankAccount]
	WHERE [AccountID] =  @AccountID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteOneBillPayAccount
	  @SqlErrorNumber int = 0 OUTPUT
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @AccountID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes BillPayAccount data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [AccountID] FROM [dbo].[tblAccounts_BillPayAccount] WHERE [AccountID] =  @AccountID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [AccountID] FROM [dbo].[tblAccounts_BillPayAccount] WHERE [AccountID] =  @AccountID AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblAccounts_BillPayAccount]
	WHERE [AccountID] =  @AccountID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteOneCreditAccount
	  @SqlErrorNumber int = 0 OUTPUT
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @AccountID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes CreditAccount data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [AccountID] FROM [dbo].[tblAccounts_CreditAccount] WHERE [AccountID] =  @AccountID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [AccountID] FROM [dbo].[tblAccounts_CreditAccount] WHERE [AccountID] =  @AccountID AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblAccounts_CreditAccount]
	WHERE [AccountID] =  @AccountID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteOneCreditCardType
	  @SqlErrorNumber int = 0 OUTPUT
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @CreditCardTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes CreditCardType data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@CreditCardTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [CreditCardTypeCode] FROM [dbo].[tlkpAccounts_CreditCardType] WHERE [CreditCardTypeCode] =  @CreditCardTypeCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [CreditCardTypeCode] FROM [dbo].[tlkpAccounts_CreditCardType] WHERE [CreditCardTypeCode] =  @CreditCardTypeCode AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tlkpAccounts_CreditCardType]
	WHERE [CreditCardTypeCode] =  @CreditCardTypeCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteOneCurrency
	  @SqlErrorNumber int = 0 OUTPUT
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @CurrencyCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes Currency data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@CurrencyCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [CurrencyCode] FROM [dbo].[tlkpAccounts_Currency] WHERE [CurrencyCode] =  @CurrencyCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [CurrencyCode] FROM [dbo].[tlkpAccounts_Currency] WHERE [CurrencyCode] =  @CurrencyCode AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tlkpAccounts_Currency]
	WHERE [CurrencyCode] =  @CurrencyCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteOneCurrencyConversion
	  @SqlErrorNumber int = 0 OUTPUT
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @CurrencyConversionID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes CurrencyConversion data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@CurrencyConversionID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [CurrencyConversionID] FROM [dbo].[tblAccounts_CurrencyConversion] WHERE [CurrencyConversionID] =  @CurrencyConversionID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [CurrencyConversionID] FROM [dbo].[tblAccounts_CurrencyConversion] WHERE [CurrencyConversionID] =  @CurrencyConversionID AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblAccounts_CurrencyConversion]
	WHERE [CurrencyConversionID] =  @CurrencyConversionID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteOneDebitAccount
	  @SqlErrorNumber int = 0 OUTPUT
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @AccountID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes DebitAccount data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [AccountID] FROM [dbo].[tblAccounts_DebitAccount] WHERE [AccountID] =  @AccountID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [AccountID] FROM [dbo].[tblAccounts_DebitAccount] WHERE [AccountID] =  @AccountID AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblAccounts_DebitAccount]
	WHERE [AccountID] =  @AccountID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteOneFrequency
	  @SqlErrorNumber int = 0 OUTPUT
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @FrequencyCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes Frequency data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@FrequencyCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [FrequencyCode] FROM [dbo].[tlkpAccounts_Frequency] WHERE [FrequencyCode] =  @FrequencyCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [FrequencyCode] FROM [dbo].[tlkpAccounts_Frequency] WHERE [FrequencyCode] =  @FrequencyCode AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tlkpAccounts_Frequency]
	WHERE [FrequencyCode] =  @FrequencyCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteOneFundAccount
	  @SqlErrorNumber int = 0 OUTPUT
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @AccountID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes FundAccount data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [AccountID] FROM [dbo].[tblAccounts_FundAccount] WHERE [AccountID] =  @AccountID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [AccountID] FROM [dbo].[tblAccounts_FundAccount] WHERE [AccountID] =  @AccountID AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblAccounts_FundAccount]
	WHERE [AccountID] =  @AccountID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteOneFundAccountType
	  @SqlErrorNumber int = 0 OUTPUT
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @FundAccountTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes FundAccountType data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@FundAccountTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [FundAccountTypeCode] FROM [dbo].[tlkpAccounts_FundAccountType] WHERE [FundAccountTypeCode] =  @FundAccountTypeCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [FundAccountTypeCode] FROM [dbo].[tlkpAccounts_FundAccountType] WHERE [FundAccountTypeCode] =  @FundAccountTypeCode AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tlkpAccounts_FundAccountType]
	WHERE [FundAccountTypeCode] =  @FundAccountTypeCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteOneLoanAccount
	  @SqlErrorNumber int = 0 OUTPUT
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @AccountID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes LoanAccount data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [AccountID] FROM [dbo].[tblAccounts_LoanAccount] WHERE [AccountID] =  @AccountID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [AccountID] FROM [dbo].[tblAccounts_LoanAccount] WHERE [AccountID] =  @AccountID AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblAccounts_LoanAccount]
	WHERE [AccountID] =  @AccountID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteOneLoanToMetaPartner
	  @SqlErrorNumber int = 0 OUTPUT
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @AccountID uniqueidentifier
	, @MetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes LoanToMetaPartner data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountID IS NULL OR @MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [AccountID], [MetaPartnerID] FROM [dbo].[trelAccounts_LoanToMetaPartner] WHERE [AccountID] =  @AccountID AND [MetaPartnerID] =  @MetaPartnerID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [AccountID], [MetaPartnerID] FROM [dbo].[trelAccounts_LoanToMetaPartner] WHERE [AccountID] =  @AccountID AND [MetaPartnerID] =  @MetaPartnerID AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[trelAccounts_LoanToMetaPartner]
	WHERE [AccountID] =  @AccountID AND [MetaPartnerID] =  @MetaPartnerID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteOneMetaTransferAccount
	  @SqlErrorNumber int = 0 OUTPUT
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @AccountID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes MetaTransferAccount data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [AccountID] FROM [dbo].[tblAccounts_MetaTransferAccount] WHERE [AccountID] =  @AccountID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [AccountID] FROM [dbo].[tblAccounts_MetaTransferAccount] WHERE [AccountID] =  @AccountID AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblAccounts_MetaTransferAccount]
	WHERE [AccountID] =  @AccountID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteOneParticipatingPartner
	  @SqlErrorNumber int = 0 OUTPUT
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @AccountID uniqueidentifier
	, @MetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes ParticipatingPartner data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountID IS NULL OR @MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [AccountID], [MetaPartnerID] FROM [dbo].[trelAccounts_ParticipatingPartner] WHERE [AccountID] =  @AccountID AND [MetaPartnerID] =  @MetaPartnerID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [AccountID], [MetaPartnerID] FROM [dbo].[trelAccounts_ParticipatingPartner] WHERE [AccountID] =  @AccountID AND [MetaPartnerID] =  @MetaPartnerID AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[trelAccounts_ParticipatingPartner]
	WHERE [AccountID] =  @AccountID AND [MetaPartnerID] =  @MetaPartnerID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteOnePaymentInstitution
	  @SqlErrorNumber int = 0 OUTPUT
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @PaymentInstitutionCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes PaymentInstitution data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@PaymentInstitutionCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [PaymentInstitutionCode] FROM [dbo].[tlkpAccounts_PaymentInstitution] WHERE [PaymentInstitutionCode] =  @PaymentInstitutionCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [PaymentInstitutionCode] FROM [dbo].[tlkpAccounts_PaymentInstitution] WHERE [PaymentInstitutionCode] =  @PaymentInstitutionCode AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tlkpAccounts_PaymentInstitution]
	WHERE [PaymentInstitutionCode] =  @PaymentInstitutionCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_DeleteOneStoredValueAccount
	  @SqlErrorNumber int = 0 OUTPUT
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @AccountID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes StoredValueAccount data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [AccountID] FROM [dbo].[tblAccounts_StoredValueAccount] WHERE [AccountID] =  @AccountID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [AccountID] FROM [dbo].[tblAccounts_StoredValueAccount] WHERE [AccountID] =  @AccountID AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblAccounts_StoredValueAccount]
	WHERE [AccountID] =  @AccountID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllAccountAttributeData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'BaseAttributeID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all AccountAttribute data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='BaseAttributeID'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  AccountAttribute1.[BaseAttributeID]
		, AccountAttribute1.[AttributeCode]
		, AccountAttribute1.[CreatedByUserID]
		, AccountAttribute1.[CreatedDate]
		, AccountAttribute1.[LastModifiedByUserID]
		, AccountAttribute1.[LastModifiedDate]
		, AccountAttribute1.[Timestamp]
		, BaseAttribute1.[AttributeName]
		, BaseAttribute1.[AttributeTypeCode]
		, BaseAttribute1.[DataTypeCode]
		, BaseAttribute1.[Description]
		, BaseAttribute1.[IsActive]
		, AttributeType1.[AttributeTypeName]
		, DataType1.[DataTypeName]
	FROM
	      [dbo].[tblAccounts_AccountAttribute] AccountAttribute1
	INNER JOIN [dbo].[tblCore_BaseAttribute] BaseAttribute1 ON BaseAttribute1.[BaseAttributeID]=AccountAttribute1.[BaseAttributeID]
	INNER JOIN [dbo].[tlkpCore_AttributeType] AttributeType1 ON AttributeType1.[AttributeTypeCode]=BaseAttribute1.[AttributeTypeCode]
	INNER JOIN [dbo].[tlkpCore_DataType] DataType1 ON DataType1.[DataTypeCode]=BaseAttribute1.[DataTypeCode]
	WHERE 
		BaseAttribute1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN BaseAttribute1.[IsActive] ELSE 1 END

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  AccountAttribute1.[BaseAttributeID]
		, AccountAttribute1.[AttributeCode]
		, AccountAttribute1.[CreatedByUserID]
		, AccountAttribute1.[CreatedDate]
		, AccountAttribute1.[LastModifiedByUserID]
		, AccountAttribute1.[LastModifiedDate]
		, AccountAttribute1.[Timestamp]
		, BaseAttribute1.[AttributeName]
		, BaseAttribute1.[AttributeTypeCode]
		, BaseAttribute1.[DataTypeCode]
		, BaseAttribute1.[Description]
		, BaseAttribute1.[IsActive]
		, AttributeType1.[AttributeTypeName]
		, DataType1.[DataTypeName]
	FROM
	      [dbo].[tblAccounts_AccountAttribute] AccountAttribute1
	INNER JOIN [dbo].[tblCore_BaseAttribute] BaseAttribute1 ON BaseAttribute1.[BaseAttributeID]=AccountAttribute1.[BaseAttributeID]
	INNER JOIN [dbo].[tlkpCore_AttributeType] AttributeType1 ON AttributeType1.[AttributeTypeCode]=BaseAttribute1.[AttributeTypeCode]
	INNER JOIN [dbo].[tlkpCore_DataType] DataType1 ON DataType1.[DataTypeCode]=BaseAttribute1.[DataTypeCode]
	WHERE 
		BaseAttribute1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN BaseAttribute1.[IsActive] ELSE 1 END

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BaseAttributeID' THEN AccountAttribute1.[BaseAttributeID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BaseAttributeID' THEN AccountAttribute1.[BaseAttributeID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeCode' THEN AccountAttribute1.[AttributeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeCode' THEN AccountAttribute1.[AttributeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN AccountAttribute1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN AccountAttribute1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN AccountAttribute1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN AccountAttribute1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN AccountAttribute1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN AccountAttribute1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN AccountAttribute1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN AccountAttribute1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN AccountAttribute1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN AccountAttribute1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeName' THEN BaseAttribute1.[AttributeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeName' THEN BaseAttribute1.[AttributeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeTypeCode' THEN BaseAttribute1.[AttributeTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeTypeCode' THEN BaseAttribute1.[AttributeTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DataTypeCode' THEN BaseAttribute1.[DataTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DataTypeCode' THEN BaseAttribute1.[DataTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN BaseAttribute1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN BaseAttribute1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN BaseAttribute1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN BaseAttribute1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeTypeName' THEN AttributeType1.[AttributeTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeTypeName' THEN AttributeType1.[AttributeTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DataTypeName' THEN DataType1.[DataTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DataTypeName' THEN DataType1.[DataTypeName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllAccountAttributeDataByAttributeTypeCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'AttributeTypeCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @AttributeTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all AccountAttribute data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='AttributeTypeCode'

/*
** parameter validation
*/
IF (@AttributeTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  AccountAttribute1.[BaseAttributeID]
		, AccountAttribute1.[AttributeCode]
		, AccountAttribute1.[CreatedByUserID]
		, AccountAttribute1.[CreatedDate]
		, AccountAttribute1.[LastModifiedByUserID]
		, AccountAttribute1.[LastModifiedDate]
		, AccountAttribute1.[Timestamp]
		, BaseAttribute1.[AttributeName]
		, BaseAttribute1.[AttributeTypeCode]
		, BaseAttribute1.[DataTypeCode]
		, BaseAttribute1.[Description]
		, BaseAttribute1.[IsActive]
		, AttributeType1.[AttributeTypeName]
		, DataType1.[DataTypeName]
	FROM
	      [dbo].[tblAccounts_AccountAttribute] AccountAttribute1
	INNER JOIN [dbo].[tblCore_BaseAttribute] BaseAttribute1 ON BaseAttribute1.[BaseAttributeID]=AccountAttribute1.[BaseAttributeID]
	INNER JOIN [dbo].[tlkpCore_AttributeType] AttributeType1 ON AttributeType1.[AttributeTypeCode]=BaseAttribute1.[AttributeTypeCode]
	INNER JOIN [dbo].[tlkpCore_DataType] DataType1 ON DataType1.[DataTypeCode]=BaseAttribute1.[DataTypeCode]
	WHERE 
		BaseAttribute1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN BaseAttribute1.[IsActive] ELSE 1 END
		AND BaseAttribute1.[AttributeTypeCode] = @AttributeTypeCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  AccountAttribute1.[BaseAttributeID]
		, AccountAttribute1.[AttributeCode]
		, AccountAttribute1.[CreatedByUserID]
		, AccountAttribute1.[CreatedDate]
		, AccountAttribute1.[LastModifiedByUserID]
		, AccountAttribute1.[LastModifiedDate]
		, AccountAttribute1.[Timestamp]
		, BaseAttribute1.[AttributeName]
		, BaseAttribute1.[AttributeTypeCode]
		, BaseAttribute1.[DataTypeCode]
		, BaseAttribute1.[Description]
		, BaseAttribute1.[IsActive]
		, AttributeType1.[AttributeTypeName]
		, DataType1.[DataTypeName]
	FROM
	      [dbo].[tblAccounts_AccountAttribute] AccountAttribute1
	INNER JOIN [dbo].[tblCore_BaseAttribute] BaseAttribute1 ON BaseAttribute1.[BaseAttributeID]=AccountAttribute1.[BaseAttributeID]
	INNER JOIN [dbo].[tlkpCore_AttributeType] AttributeType1 ON AttributeType1.[AttributeTypeCode]=BaseAttribute1.[AttributeTypeCode]
	INNER JOIN [dbo].[tlkpCore_DataType] DataType1 ON DataType1.[DataTypeCode]=BaseAttribute1.[DataTypeCode]
	WHERE 
		BaseAttribute1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN BaseAttribute1.[IsActive] ELSE 1 END
		AND BaseAttribute1.[AttributeTypeCode] = @AttributeTypeCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BaseAttributeID' THEN AccountAttribute1.[BaseAttributeID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BaseAttributeID' THEN AccountAttribute1.[BaseAttributeID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeCode' THEN AccountAttribute1.[AttributeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeCode' THEN AccountAttribute1.[AttributeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN AccountAttribute1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN AccountAttribute1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN AccountAttribute1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN AccountAttribute1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN AccountAttribute1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN AccountAttribute1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN AccountAttribute1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN AccountAttribute1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN AccountAttribute1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN AccountAttribute1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeName' THEN BaseAttribute1.[AttributeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeName' THEN BaseAttribute1.[AttributeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeTypeCode' THEN BaseAttribute1.[AttributeTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeTypeCode' THEN BaseAttribute1.[AttributeTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DataTypeCode' THEN BaseAttribute1.[DataTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DataTypeCode' THEN BaseAttribute1.[DataTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN BaseAttribute1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN BaseAttribute1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN BaseAttribute1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN BaseAttribute1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeTypeName' THEN AttributeType1.[AttributeTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeTypeName' THEN AttributeType1.[AttributeTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DataTypeName' THEN DataType1.[DataTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DataTypeName' THEN DataType1.[DataTypeName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllAccountAttributeDataByBaseAttributeID
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'BaseAttributeID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @BaseAttributeID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all AccountAttribute data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='BaseAttributeID'

/*
** parameter validation
*/
IF (@BaseAttributeID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  AccountAttribute1.[BaseAttributeID]
		, AccountAttribute1.[AttributeCode]
		, AccountAttribute1.[CreatedByUserID]
		, AccountAttribute1.[CreatedDate]
		, AccountAttribute1.[LastModifiedByUserID]
		, AccountAttribute1.[LastModifiedDate]
		, AccountAttribute1.[Timestamp]
		, BaseAttribute1.[AttributeName]
		, BaseAttribute1.[AttributeTypeCode]
		, BaseAttribute1.[DataTypeCode]
		, BaseAttribute1.[Description]
		, BaseAttribute1.[IsActive]
		, AttributeType1.[AttributeTypeName]
		, DataType1.[DataTypeName]
	FROM
	      [dbo].[tblAccounts_AccountAttribute] AccountAttribute1
	INNER JOIN [dbo].[tblCore_BaseAttribute] BaseAttribute1 ON BaseAttribute1.[BaseAttributeID]=AccountAttribute1.[BaseAttributeID]
	INNER JOIN [dbo].[tlkpCore_AttributeType] AttributeType1 ON AttributeType1.[AttributeTypeCode]=BaseAttribute1.[AttributeTypeCode]
	INNER JOIN [dbo].[tlkpCore_DataType] DataType1 ON DataType1.[DataTypeCode]=BaseAttribute1.[DataTypeCode]
	WHERE 
		BaseAttribute1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN BaseAttribute1.[IsActive] ELSE 1 END
		AND AccountAttribute1.[BaseAttributeID] = @BaseAttributeID

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  AccountAttribute1.[BaseAttributeID]
		, AccountAttribute1.[AttributeCode]
		, AccountAttribute1.[CreatedByUserID]
		, AccountAttribute1.[CreatedDate]
		, AccountAttribute1.[LastModifiedByUserID]
		, AccountAttribute1.[LastModifiedDate]
		, AccountAttribute1.[Timestamp]
		, BaseAttribute1.[AttributeName]
		, BaseAttribute1.[AttributeTypeCode]
		, BaseAttribute1.[DataTypeCode]
		, BaseAttribute1.[Description]
		, BaseAttribute1.[IsActive]
		, AttributeType1.[AttributeTypeName]
		, DataType1.[DataTypeName]
	FROM
	      [dbo].[tblAccounts_AccountAttribute] AccountAttribute1
	INNER JOIN [dbo].[tblCore_BaseAttribute] BaseAttribute1 ON BaseAttribute1.[BaseAttributeID]=AccountAttribute1.[BaseAttributeID]
	INNER JOIN [dbo].[tlkpCore_AttributeType] AttributeType1 ON AttributeType1.[AttributeTypeCode]=BaseAttribute1.[AttributeTypeCode]
	INNER JOIN [dbo].[tlkpCore_DataType] DataType1 ON DataType1.[DataTypeCode]=BaseAttribute1.[DataTypeCode]
	WHERE 
		BaseAttribute1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN BaseAttribute1.[IsActive] ELSE 1 END
		AND AccountAttribute1.[BaseAttributeID] = @BaseAttributeID

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BaseAttributeID' THEN AccountAttribute1.[BaseAttributeID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BaseAttributeID' THEN AccountAttribute1.[BaseAttributeID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeCode' THEN AccountAttribute1.[AttributeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeCode' THEN AccountAttribute1.[AttributeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN AccountAttribute1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN AccountAttribute1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN AccountAttribute1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN AccountAttribute1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN AccountAttribute1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN AccountAttribute1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN AccountAttribute1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN AccountAttribute1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN AccountAttribute1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN AccountAttribute1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeName' THEN BaseAttribute1.[AttributeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeName' THEN BaseAttribute1.[AttributeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeTypeCode' THEN BaseAttribute1.[AttributeTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeTypeCode' THEN BaseAttribute1.[AttributeTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DataTypeCode' THEN BaseAttribute1.[DataTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DataTypeCode' THEN BaseAttribute1.[DataTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN BaseAttribute1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN BaseAttribute1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN BaseAttribute1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN BaseAttribute1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeTypeName' THEN AttributeType1.[AttributeTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeTypeName' THEN AttributeType1.[AttributeTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DataTypeName' THEN DataType1.[DataTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DataTypeName' THEN DataType1.[DataTypeName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllAccountAttributeDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'AttributeName'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @AttributeName nvarchar(100)
	, @AttributeTypeCode int
	, @DataTypeCode int
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all AccountAttribute data by criteria.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='AttributeName'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  AccountAttribute1.[BaseAttributeID]
		, AccountAttribute1.[AttributeCode]
		, AccountAttribute1.[CreatedByUserID]
		, AccountAttribute1.[CreatedDate]
		, AccountAttribute1.[LastModifiedByUserID]
		, AccountAttribute1.[LastModifiedDate]
		, AccountAttribute1.[Timestamp]
		, BaseAttribute1.[AttributeName]
		, BaseAttribute1.[AttributeTypeCode]
		, BaseAttribute1.[DataTypeCode]
		, BaseAttribute1.[Description]
		, BaseAttribute1.[IsActive]
		, AttributeType1.[AttributeTypeName]
		, DataType1.[DataTypeName]
	FROM
	      [dbo].[tblAccounts_AccountAttribute] AccountAttribute1
	INNER JOIN [dbo].[tblCore_BaseAttribute] BaseAttribute1 ON BaseAttribute1.[BaseAttributeID]=AccountAttribute1.[BaseAttributeID]
	INNER JOIN [dbo].[tlkpCore_AttributeType] AttributeType1 ON AttributeType1.[AttributeTypeCode]=BaseAttribute1.[AttributeTypeCode]
	INNER JOIN [dbo].[tlkpCore_DataType] DataType1 ON DataType1.[DataTypeCode]=BaseAttribute1.[DataTypeCode]
	WHERE 
		BaseAttribute1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN BaseAttribute1.[IsActive] ELSE 1 END
		AND (@AttributeName IS NULL OR BaseAttribute1.[AttributeName] like '%' + @AttributeName + '%')
		AND (@AttributeTypeCode IS NULL OR BaseAttribute1.[AttributeTypeCode] = @AttributeTypeCode)
		AND (@DataTypeCode IS NULL OR BaseAttribute1.[DataTypeCode] = @DataTypeCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (BaseAttribute1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (BaseAttribute1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  AccountAttribute1.[BaseAttributeID]
		, AccountAttribute1.[AttributeCode]
		, AccountAttribute1.[CreatedByUserID]
		, AccountAttribute1.[CreatedDate]
		, AccountAttribute1.[LastModifiedByUserID]
		, AccountAttribute1.[LastModifiedDate]
		, AccountAttribute1.[Timestamp]
		, BaseAttribute1.[AttributeName]
		, BaseAttribute1.[AttributeTypeCode]
		, BaseAttribute1.[DataTypeCode]
		, BaseAttribute1.[Description]
		, BaseAttribute1.[IsActive]
		, AttributeType1.[AttributeTypeName]
		, DataType1.[DataTypeName]
	FROM
	      [dbo].[tblAccounts_AccountAttribute] AccountAttribute1
	INNER JOIN [dbo].[tblCore_BaseAttribute] BaseAttribute1 ON BaseAttribute1.[BaseAttributeID]=AccountAttribute1.[BaseAttributeID]
	INNER JOIN [dbo].[tlkpCore_AttributeType] AttributeType1 ON AttributeType1.[AttributeTypeCode]=BaseAttribute1.[AttributeTypeCode]
	INNER JOIN [dbo].[tlkpCore_DataType] DataType1 ON DataType1.[DataTypeCode]=BaseAttribute1.[DataTypeCode]
	WHERE 
		BaseAttribute1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN BaseAttribute1.[IsActive] ELSE 1 END
		AND (@AttributeName IS NULL OR BaseAttribute1.[AttributeName] like '%' + @AttributeName + '%')
		AND (@AttributeTypeCode IS NULL OR BaseAttribute1.[AttributeTypeCode] = @AttributeTypeCode)
		AND (@DataTypeCode IS NULL OR BaseAttribute1.[DataTypeCode] = @DataTypeCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (BaseAttribute1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (BaseAttribute1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BaseAttributeID' THEN AccountAttribute1.[BaseAttributeID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BaseAttributeID' THEN AccountAttribute1.[BaseAttributeID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeCode' THEN AccountAttribute1.[AttributeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeCode' THEN AccountAttribute1.[AttributeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN AccountAttribute1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN AccountAttribute1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN AccountAttribute1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN AccountAttribute1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN AccountAttribute1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN AccountAttribute1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN AccountAttribute1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN AccountAttribute1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN AccountAttribute1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN AccountAttribute1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeName' THEN BaseAttribute1.[AttributeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeName' THEN BaseAttribute1.[AttributeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeTypeCode' THEN BaseAttribute1.[AttributeTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeTypeCode' THEN BaseAttribute1.[AttributeTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DataTypeCode' THEN BaseAttribute1.[DataTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DataTypeCode' THEN BaseAttribute1.[DataTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN BaseAttribute1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN BaseAttribute1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN BaseAttribute1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN BaseAttribute1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeTypeName' THEN AttributeType1.[AttributeTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeTypeName' THEN AttributeType1.[AttributeTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DataTypeName' THEN DataType1.[DataTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DataTypeName' THEN DataType1.[DataTypeName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllAccountAttributeDataByDataTypeCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'DataTypeCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @DataTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all AccountAttribute data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='DataTypeCode'

/*
** parameter validation
*/
IF (@DataTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  AccountAttribute1.[BaseAttributeID]
		, AccountAttribute1.[AttributeCode]
		, AccountAttribute1.[CreatedByUserID]
		, AccountAttribute1.[CreatedDate]
		, AccountAttribute1.[LastModifiedByUserID]
		, AccountAttribute1.[LastModifiedDate]
		, AccountAttribute1.[Timestamp]
		, BaseAttribute1.[AttributeName]
		, BaseAttribute1.[AttributeTypeCode]
		, BaseAttribute1.[DataTypeCode]
		, BaseAttribute1.[Description]
		, BaseAttribute1.[IsActive]
		, AttributeType1.[AttributeTypeName]
		, DataType1.[DataTypeName]
	FROM
	      [dbo].[tblAccounts_AccountAttribute] AccountAttribute1
	INNER JOIN [dbo].[tblCore_BaseAttribute] BaseAttribute1 ON BaseAttribute1.[BaseAttributeID]=AccountAttribute1.[BaseAttributeID]
	INNER JOIN [dbo].[tlkpCore_AttributeType] AttributeType1 ON AttributeType1.[AttributeTypeCode]=BaseAttribute1.[AttributeTypeCode]
	INNER JOIN [dbo].[tlkpCore_DataType] DataType1 ON DataType1.[DataTypeCode]=BaseAttribute1.[DataTypeCode]
	WHERE 
		BaseAttribute1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN BaseAttribute1.[IsActive] ELSE 1 END
		AND BaseAttribute1.[DataTypeCode] = @DataTypeCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  AccountAttribute1.[BaseAttributeID]
		, AccountAttribute1.[AttributeCode]
		, AccountAttribute1.[CreatedByUserID]
		, AccountAttribute1.[CreatedDate]
		, AccountAttribute1.[LastModifiedByUserID]
		, AccountAttribute1.[LastModifiedDate]
		, AccountAttribute1.[Timestamp]
		, BaseAttribute1.[AttributeName]
		, BaseAttribute1.[AttributeTypeCode]
		, BaseAttribute1.[DataTypeCode]
		, BaseAttribute1.[Description]
		, BaseAttribute1.[IsActive]
		, AttributeType1.[AttributeTypeName]
		, DataType1.[DataTypeName]
	FROM
	      [dbo].[tblAccounts_AccountAttribute] AccountAttribute1
	INNER JOIN [dbo].[tblCore_BaseAttribute] BaseAttribute1 ON BaseAttribute1.[BaseAttributeID]=AccountAttribute1.[BaseAttributeID]
	INNER JOIN [dbo].[tlkpCore_AttributeType] AttributeType1 ON AttributeType1.[AttributeTypeCode]=BaseAttribute1.[AttributeTypeCode]
	INNER JOIN [dbo].[tlkpCore_DataType] DataType1 ON DataType1.[DataTypeCode]=BaseAttribute1.[DataTypeCode]
	WHERE 
		BaseAttribute1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN BaseAttribute1.[IsActive] ELSE 1 END
		AND BaseAttribute1.[DataTypeCode] = @DataTypeCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BaseAttributeID' THEN AccountAttribute1.[BaseAttributeID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BaseAttributeID' THEN AccountAttribute1.[BaseAttributeID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeCode' THEN AccountAttribute1.[AttributeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeCode' THEN AccountAttribute1.[AttributeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN AccountAttribute1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN AccountAttribute1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN AccountAttribute1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN AccountAttribute1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN AccountAttribute1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN AccountAttribute1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN AccountAttribute1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN AccountAttribute1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN AccountAttribute1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN AccountAttribute1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeName' THEN BaseAttribute1.[AttributeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeName' THEN BaseAttribute1.[AttributeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeTypeCode' THEN BaseAttribute1.[AttributeTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeTypeCode' THEN BaseAttribute1.[AttributeTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DataTypeCode' THEN BaseAttribute1.[DataTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DataTypeCode' THEN BaseAttribute1.[DataTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN BaseAttribute1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN BaseAttribute1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN BaseAttribute1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN BaseAttribute1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeTypeName' THEN AttributeType1.[AttributeTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeTypeName' THEN AttributeType1.[AttributeTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DataTypeName' THEN DataType1.[DataTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DataTypeName' THEN DataType1.[DataTypeName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllAccountAttributeValueData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'AccountAttributeValueID'
	, @SortDirection nvarchar(20) = 'Ascending'
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all AccountAttributeValue data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='AccountAttributeValueID'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  AccountAttributeValue1.[AccountAttributeValueID]
		, AccountAttributeValue1.[AccountID]
		, AccountAttributeValue1.[BaseAttributeID]
		, AccountAttributeValue1.[ParameterValue]
		, AccountAttributeValue1.[CreatedByUserID]
		, AccountAttributeValue1.[CreatedDate]
		, AccountAttributeValue1.[LastModifiedByUserID]
		, AccountAttributeValue1.[LastModifiedDate]
		, AccountAttributeValue1.[Timestamp]
		, Account1.[AccountName]
	FROM
	      [dbo].[tblAccounts_AccountAttributeValue] AccountAttributeValue1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=AccountAttributeValue1.[AccountID]

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  AccountAttributeValue1.[AccountAttributeValueID]
		, AccountAttributeValue1.[AccountID]
		, AccountAttributeValue1.[BaseAttributeID]
		, AccountAttributeValue1.[ParameterValue]
		, AccountAttributeValue1.[CreatedByUserID]
		, AccountAttributeValue1.[CreatedDate]
		, AccountAttributeValue1.[LastModifiedByUserID]
		, AccountAttributeValue1.[LastModifiedDate]
		, AccountAttributeValue1.[Timestamp]
		, Account1.[AccountName]
	FROM
	      [dbo].[tblAccounts_AccountAttributeValue] AccountAttributeValue1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=AccountAttributeValue1.[AccountID]

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountAttributeValueID' THEN AccountAttributeValue1.[AccountAttributeValueID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountAttributeValueID' THEN AccountAttributeValue1.[AccountAttributeValueID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN AccountAttributeValue1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN AccountAttributeValue1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BaseAttributeID' THEN AccountAttributeValue1.[BaseAttributeID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BaseAttributeID' THEN AccountAttributeValue1.[BaseAttributeID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ParameterValue' THEN AccountAttributeValue1.[ParameterValue] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ParameterValue' THEN AccountAttributeValue1.[ParameterValue] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN AccountAttributeValue1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN AccountAttributeValue1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN AccountAttributeValue1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN AccountAttributeValue1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN AccountAttributeValue1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN AccountAttributeValue1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN AccountAttributeValue1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN AccountAttributeValue1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN AccountAttributeValue1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN AccountAttributeValue1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllAccountAttributeValueDataByAccountID
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'AccountID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @AccountID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all AccountAttributeValue data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='AccountID'

/*
** parameter validation
*/
IF (@AccountID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  AccountAttributeValue1.[AccountAttributeValueID]
		, AccountAttributeValue1.[AccountID]
		, AccountAttributeValue1.[BaseAttributeID]
		, AccountAttributeValue1.[ParameterValue]
		, AccountAttributeValue1.[CreatedByUserID]
		, AccountAttributeValue1.[CreatedDate]
		, AccountAttributeValue1.[LastModifiedByUserID]
		, AccountAttributeValue1.[LastModifiedDate]
		, AccountAttributeValue1.[Timestamp]
		, Account1.[AccountName]
	FROM
	      [dbo].[tblAccounts_AccountAttributeValue] AccountAttributeValue1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=AccountAttributeValue1.[AccountID]
	WHERE 
		AccountAttributeValue1.[AccountID] = @AccountID

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  AccountAttributeValue1.[AccountAttributeValueID]
		, AccountAttributeValue1.[AccountID]
		, AccountAttributeValue1.[BaseAttributeID]
		, AccountAttributeValue1.[ParameterValue]
		, AccountAttributeValue1.[CreatedByUserID]
		, AccountAttributeValue1.[CreatedDate]
		, AccountAttributeValue1.[LastModifiedByUserID]
		, AccountAttributeValue1.[LastModifiedDate]
		, AccountAttributeValue1.[Timestamp]
		, Account1.[AccountName]
	FROM
	      [dbo].[tblAccounts_AccountAttributeValue] AccountAttributeValue1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=AccountAttributeValue1.[AccountID]
	WHERE 
		AccountAttributeValue1.[AccountID] = @AccountID

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountAttributeValueID' THEN AccountAttributeValue1.[AccountAttributeValueID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountAttributeValueID' THEN AccountAttributeValue1.[AccountAttributeValueID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN AccountAttributeValue1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN AccountAttributeValue1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BaseAttributeID' THEN AccountAttributeValue1.[BaseAttributeID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BaseAttributeID' THEN AccountAttributeValue1.[BaseAttributeID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ParameterValue' THEN AccountAttributeValue1.[ParameterValue] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ParameterValue' THEN AccountAttributeValue1.[ParameterValue] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN AccountAttributeValue1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN AccountAttributeValue1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN AccountAttributeValue1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN AccountAttributeValue1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN AccountAttributeValue1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN AccountAttributeValue1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN AccountAttributeValue1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN AccountAttributeValue1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN AccountAttributeValue1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN AccountAttributeValue1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllAccountAttributeValueDataByBaseAttributeID
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'BaseAttributeID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @BaseAttributeID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all AccountAttributeValue data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='BaseAttributeID'

/*
** parameter validation
*/
IF (@BaseAttributeID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  AccountAttributeValue1.[AccountAttributeValueID]
		, AccountAttributeValue1.[AccountID]
		, AccountAttributeValue1.[BaseAttributeID]
		, AccountAttributeValue1.[ParameterValue]
		, AccountAttributeValue1.[CreatedByUserID]
		, AccountAttributeValue1.[CreatedDate]
		, AccountAttributeValue1.[LastModifiedByUserID]
		, AccountAttributeValue1.[LastModifiedDate]
		, AccountAttributeValue1.[Timestamp]
		, Account1.[AccountName]
	FROM
	      [dbo].[tblAccounts_AccountAttributeValue] AccountAttributeValue1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=AccountAttributeValue1.[AccountID]
	WHERE 
		AccountAttributeValue1.[BaseAttributeID] = @BaseAttributeID

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  AccountAttributeValue1.[AccountAttributeValueID]
		, AccountAttributeValue1.[AccountID]
		, AccountAttributeValue1.[BaseAttributeID]
		, AccountAttributeValue1.[ParameterValue]
		, AccountAttributeValue1.[CreatedByUserID]
		, AccountAttributeValue1.[CreatedDate]
		, AccountAttributeValue1.[LastModifiedByUserID]
		, AccountAttributeValue1.[LastModifiedDate]
		, AccountAttributeValue1.[Timestamp]
		, Account1.[AccountName]
	FROM
	      [dbo].[tblAccounts_AccountAttributeValue] AccountAttributeValue1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=AccountAttributeValue1.[AccountID]
	WHERE 
		AccountAttributeValue1.[BaseAttributeID] = @BaseAttributeID

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountAttributeValueID' THEN AccountAttributeValue1.[AccountAttributeValueID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountAttributeValueID' THEN AccountAttributeValue1.[AccountAttributeValueID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN AccountAttributeValue1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN AccountAttributeValue1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BaseAttributeID' THEN AccountAttributeValue1.[BaseAttributeID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BaseAttributeID' THEN AccountAttributeValue1.[BaseAttributeID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ParameterValue' THEN AccountAttributeValue1.[ParameterValue] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ParameterValue' THEN AccountAttributeValue1.[ParameterValue] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN AccountAttributeValue1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN AccountAttributeValue1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN AccountAttributeValue1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN AccountAttributeValue1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN AccountAttributeValue1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN AccountAttributeValue1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN AccountAttributeValue1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN AccountAttributeValue1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN AccountAttributeValue1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN AccountAttributeValue1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllAccountAttributeValueDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'ParameterValue'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @ParameterValue nvarchar(255) = NULL
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all AccountAttributeValue data by criteria.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='ParameterValue'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  AccountAttributeValue1.[AccountAttributeValueID]
		, AccountAttributeValue1.[AccountID]
		, AccountAttributeValue1.[BaseAttributeID]
		, AccountAttributeValue1.[ParameterValue]
		, AccountAttributeValue1.[CreatedByUserID]
		, AccountAttributeValue1.[CreatedDate]
		, AccountAttributeValue1.[LastModifiedByUserID]
		, AccountAttributeValue1.[LastModifiedDate]
		, AccountAttributeValue1.[Timestamp]
		, Account1.[AccountName]
	FROM
	      [dbo].[tblAccounts_AccountAttributeValue] AccountAttributeValue1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=AccountAttributeValue1.[AccountID]
	WHERE 
		(@ParameterValue IS NULL OR AccountAttributeValue1.[ParameterValue] like '%' + @ParameterValue + '%')
		AND ((@LastModifiedDateStart  IS NULL) OR (AccountAttributeValue1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (AccountAttributeValue1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  AccountAttributeValue1.[AccountAttributeValueID]
		, AccountAttributeValue1.[AccountID]
		, AccountAttributeValue1.[BaseAttributeID]
		, AccountAttributeValue1.[ParameterValue]
		, AccountAttributeValue1.[CreatedByUserID]
		, AccountAttributeValue1.[CreatedDate]
		, AccountAttributeValue1.[LastModifiedByUserID]
		, AccountAttributeValue1.[LastModifiedDate]
		, AccountAttributeValue1.[Timestamp]
		, Account1.[AccountName]
	FROM
	      [dbo].[tblAccounts_AccountAttributeValue] AccountAttributeValue1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=AccountAttributeValue1.[AccountID]
	WHERE 
		(@ParameterValue IS NULL OR AccountAttributeValue1.[ParameterValue] like '%' + @ParameterValue + '%')
		AND ((@LastModifiedDateStart  IS NULL) OR (AccountAttributeValue1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (AccountAttributeValue1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountAttributeValueID' THEN AccountAttributeValue1.[AccountAttributeValueID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountAttributeValueID' THEN AccountAttributeValue1.[AccountAttributeValueID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN AccountAttributeValue1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN AccountAttributeValue1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BaseAttributeID' THEN AccountAttributeValue1.[BaseAttributeID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BaseAttributeID' THEN AccountAttributeValue1.[BaseAttributeID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ParameterValue' THEN AccountAttributeValue1.[ParameterValue] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ParameterValue' THEN AccountAttributeValue1.[ParameterValue] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN AccountAttributeValue1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN AccountAttributeValue1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN AccountAttributeValue1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN AccountAttributeValue1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN AccountAttributeValue1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN AccountAttributeValue1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN AccountAttributeValue1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN AccountAttributeValue1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN AccountAttributeValue1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN AccountAttributeValue1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllAccountData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'AccountID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all Account data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='AccountID'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  Account1.[AccountID]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, Account1.[CreatedByUserID]
		, Account1.[CreatedDate]
		, Account1.[LastModifiedByUserID]
		, Account1.[LastModifiedDate]
		, Account1.[Timestamp]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_Account] Account1
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  Account1.[AccountID]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, Account1.[CreatedByUserID]
		, Account1.[CreatedDate]
		, Account1.[LastModifiedByUserID]
		, Account1.[LastModifiedDate]
		, Account1.[Timestamp]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_Account] Account1
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN Account1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN Account1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Account1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Account1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Account1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Account1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Account1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Account1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Account1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Account1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Account1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Account1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Account1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Account1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllAccountDataByAccountSubTypeCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'AccountSubTypeCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @AccountSubTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all Account data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='AccountSubTypeCode'

/*
** parameter validation
*/
IF (@AccountSubTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  Account1.[AccountID]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, Account1.[CreatedByUserID]
		, Account1.[CreatedDate]
		, Account1.[LastModifiedByUserID]
		, Account1.[LastModifiedDate]
		, Account1.[Timestamp]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_Account] Account1
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND Account1.[AccountSubTypeCode] = @AccountSubTypeCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  Account1.[AccountID]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, Account1.[CreatedByUserID]
		, Account1.[CreatedDate]
		, Account1.[LastModifiedByUserID]
		, Account1.[LastModifiedDate]
		, Account1.[Timestamp]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_Account] Account1
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND Account1.[AccountSubTypeCode] = @AccountSubTypeCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN Account1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN Account1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Account1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Account1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Account1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Account1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Account1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Account1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Account1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Account1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Account1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Account1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Account1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Account1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllAccountDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'AccountName'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @AccountName nvarchar(255)
	, @AccountSubTypeCode int
	, @CurrencyCode int
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all Account data by criteria.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='AccountName'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  Account1.[AccountID]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, Account1.[CreatedByUserID]
		, Account1.[CreatedDate]
		, Account1.[LastModifiedByUserID]
		, Account1.[LastModifiedDate]
		, Account1.[Timestamp]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_Account] Account1
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND (@AccountName IS NULL OR Account1.[AccountName] like '%' + @AccountName + '%')
		AND (@AccountSubTypeCode IS NULL OR Account1.[AccountSubTypeCode] = @AccountSubTypeCode)
		AND (@CurrencyCode IS NULL OR Account1.[CurrencyCode] = @CurrencyCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (Account1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (Account1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  Account1.[AccountID]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, Account1.[CreatedByUserID]
		, Account1.[CreatedDate]
		, Account1.[LastModifiedByUserID]
		, Account1.[LastModifiedDate]
		, Account1.[Timestamp]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_Account] Account1
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND (@AccountName IS NULL OR Account1.[AccountName] like '%' + @AccountName + '%')
		AND (@AccountSubTypeCode IS NULL OR Account1.[AccountSubTypeCode] = @AccountSubTypeCode)
		AND (@CurrencyCode IS NULL OR Account1.[CurrencyCode] = @CurrencyCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (Account1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (Account1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN Account1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN Account1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Account1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Account1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Account1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Account1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Account1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Account1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Account1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Account1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Account1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Account1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Account1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Account1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllAccountDataByCurrencyCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'CurrencyCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @CurrencyCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all Account data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='CurrencyCode'

/*
** parameter validation
*/
IF (@CurrencyCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  Account1.[AccountID]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, Account1.[CreatedByUserID]
		, Account1.[CreatedDate]
		, Account1.[LastModifiedByUserID]
		, Account1.[LastModifiedDate]
		, Account1.[Timestamp]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_Account] Account1
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND Account1.[CurrencyCode] = @CurrencyCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  Account1.[AccountID]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, Account1.[CreatedByUserID]
		, Account1.[CreatedDate]
		, Account1.[LastModifiedByUserID]
		, Account1.[LastModifiedDate]
		, Account1.[Timestamp]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_Account] Account1
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND Account1.[CurrencyCode] = @CurrencyCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN Account1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN Account1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Account1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Account1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Account1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Account1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Account1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Account1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Account1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Account1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Account1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Account1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Account1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Account1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllAccountDataByMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'MetaPartnerID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @MetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all Account data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='MetaPartnerID'

/*
** parameter validation
*/
IF (@MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  Account1.[AccountID]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, Account1.[CreatedByUserID]
		, Account1.[CreatedDate]
		, Account1.[LastModifiedByUserID]
		, Account1.[LastModifiedDate]
		, Account1.[Timestamp]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_Account] Account1
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND Account1.[MetaPartnerID] = @MetaPartnerID

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  Account1.[AccountID]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, Account1.[CreatedByUserID]
		, Account1.[CreatedDate]
		, Account1.[LastModifiedByUserID]
		, Account1.[LastModifiedDate]
		, Account1.[Timestamp]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_Account] Account1
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND Account1.[MetaPartnerID] = @MetaPartnerID

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN Account1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN Account1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Account1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Account1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Account1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Account1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Account1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Account1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Account1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Account1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Account1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Account1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Account1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Account1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllAccountSubTypeData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'AccountSubTypeCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all AccountSubType data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='AccountSubTypeCode'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  AccountSubType1.[AccountSubTypeCode]
		, AccountSubType1.[AccountSubTypeName]
		, AccountSubType1.[Description]
		, AccountSubType1.[IsActive]
		, AccountSubType1.[CreatedByUserID]
		, AccountSubType1.[CreatedDate]
		, AccountSubType1.[LastModifiedByUserID]
		, AccountSubType1.[LastModifiedDate]
		, AccountSubType1.[Timestamp]
	FROM
	      [dbo].[tlkpAccounts_AccountSubType] AccountSubType1
	WHERE 
		AccountSubType1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN AccountSubType1.[IsActive] ELSE 1 END

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  AccountSubType1.[AccountSubTypeCode]
		, AccountSubType1.[AccountSubTypeName]
		, AccountSubType1.[Description]
		, AccountSubType1.[IsActive]
		, AccountSubType1.[CreatedByUserID]
		, AccountSubType1.[CreatedDate]
		, AccountSubType1.[LastModifiedByUserID]
		, AccountSubType1.[LastModifiedDate]
		, AccountSubType1.[Timestamp]
	FROM
	      [dbo].[tlkpAccounts_AccountSubType] AccountSubType1
	WHERE 
		AccountSubType1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN AccountSubType1.[IsActive] ELSE 1 END

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN AccountSubType1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN AccountSubType1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN AccountSubType1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN AccountSubType1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN AccountSubType1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN AccountSubType1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN AccountSubType1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN AccountSubType1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN AccountSubType1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN AccountSubType1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN AccountSubType1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN AccountSubType1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN AccountSubType1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN AccountSubType1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN AccountSubType1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN AccountSubType1.[Timestamp] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllBankAccountData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'AccountID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all BankAccount data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='AccountID'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  BankAccount1.[AccountID]
		, BankAccount1.[BankMetaPartnerID]
		, BankAccount1.[CreatedByUserID]
		, BankAccount1.[CreatedDate]
		, BankAccount1.[LastModifiedByUserID]
		, BankAccount1.[LastModifiedDate]
		, BankAccount1.[Timestamp]
		, DebitAccount1.[DebitAccountNumber]
		, DebitAccount1.[IsDefaultDebitAccount]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_BankAccount] BankAccount1
	INNER JOIN [dbo].[tblAccounts_DebitAccount] DebitAccount1 ON DebitAccount1.[AccountID]=BankAccount1.[AccountID]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=DebitAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  BankAccount1.[AccountID]
		, BankAccount1.[BankMetaPartnerID]
		, BankAccount1.[CreatedByUserID]
		, BankAccount1.[CreatedDate]
		, BankAccount1.[LastModifiedByUserID]
		, BankAccount1.[LastModifiedDate]
		, BankAccount1.[Timestamp]
		, DebitAccount1.[DebitAccountNumber]
		, DebitAccount1.[IsDefaultDebitAccount]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_BankAccount] BankAccount1
	INNER JOIN [dbo].[tblAccounts_DebitAccount] DebitAccount1 ON DebitAccount1.[AccountID]=BankAccount1.[AccountID]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=DebitAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN BankAccount1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN BankAccount1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BankMetaPartnerID' THEN BankAccount1.[BankMetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BankMetaPartnerID' THEN BankAccount1.[BankMetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN BankAccount1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN BankAccount1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN BankAccount1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN BankAccount1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN BankAccount1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN BankAccount1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN BankAccount1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN BankAccount1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN BankAccount1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN BankAccount1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DebitAccountNumber' THEN DebitAccount1.[DebitAccountNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DebitAccountNumber' THEN DebitAccount1.[DebitAccountNumber] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsDefaultDebitAccount' THEN DebitAccount1.[IsDefaultDebitAccount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsDefaultDebitAccount' THEN DebitAccount1.[IsDefaultDebitAccount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Account1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Account1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllBankAccountDataByAccountID
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'AccountID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @AccountID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all BankAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='AccountID'

/*
** parameter validation
*/
IF (@AccountID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  BankAccount1.[AccountID]
		, BankAccount1.[BankMetaPartnerID]
		, BankAccount1.[CreatedByUserID]
		, BankAccount1.[CreatedDate]
		, BankAccount1.[LastModifiedByUserID]
		, BankAccount1.[LastModifiedDate]
		, BankAccount1.[Timestamp]
		, DebitAccount1.[DebitAccountNumber]
		, DebitAccount1.[IsDefaultDebitAccount]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_BankAccount] BankAccount1
	INNER JOIN [dbo].[tblAccounts_DebitAccount] DebitAccount1 ON DebitAccount1.[AccountID]=BankAccount1.[AccountID]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=DebitAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND BankAccount1.[AccountID] = @AccountID

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  BankAccount1.[AccountID]
		, BankAccount1.[BankMetaPartnerID]
		, BankAccount1.[CreatedByUserID]
		, BankAccount1.[CreatedDate]
		, BankAccount1.[LastModifiedByUserID]
		, BankAccount1.[LastModifiedDate]
		, BankAccount1.[Timestamp]
		, DebitAccount1.[DebitAccountNumber]
		, DebitAccount1.[IsDefaultDebitAccount]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_BankAccount] BankAccount1
	INNER JOIN [dbo].[tblAccounts_DebitAccount] DebitAccount1 ON DebitAccount1.[AccountID]=BankAccount1.[AccountID]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=DebitAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND BankAccount1.[AccountID] = @AccountID

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN BankAccount1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN BankAccount1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BankMetaPartnerID' THEN BankAccount1.[BankMetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BankMetaPartnerID' THEN BankAccount1.[BankMetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN BankAccount1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN BankAccount1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN BankAccount1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN BankAccount1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN BankAccount1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN BankAccount1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN BankAccount1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN BankAccount1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN BankAccount1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN BankAccount1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DebitAccountNumber' THEN DebitAccount1.[DebitAccountNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DebitAccountNumber' THEN DebitAccount1.[DebitAccountNumber] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsDefaultDebitAccount' THEN DebitAccount1.[IsDefaultDebitAccount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsDefaultDebitAccount' THEN DebitAccount1.[IsDefaultDebitAccount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Account1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Account1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllBankAccountDataByAccountSubTypeCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'AccountSubTypeCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @AccountSubTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all BankAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='AccountSubTypeCode'

/*
** parameter validation
*/
IF (@AccountSubTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  BankAccount1.[AccountID]
		, BankAccount1.[BankMetaPartnerID]
		, BankAccount1.[CreatedByUserID]
		, BankAccount1.[CreatedDate]
		, BankAccount1.[LastModifiedByUserID]
		, BankAccount1.[LastModifiedDate]
		, BankAccount1.[Timestamp]
		, DebitAccount1.[DebitAccountNumber]
		, DebitAccount1.[IsDefaultDebitAccount]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_BankAccount] BankAccount1
	INNER JOIN [dbo].[tblAccounts_DebitAccount] DebitAccount1 ON DebitAccount1.[AccountID]=BankAccount1.[AccountID]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=DebitAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND Account1.[AccountSubTypeCode] = @AccountSubTypeCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  BankAccount1.[AccountID]
		, BankAccount1.[BankMetaPartnerID]
		, BankAccount1.[CreatedByUserID]
		, BankAccount1.[CreatedDate]
		, BankAccount1.[LastModifiedByUserID]
		, BankAccount1.[LastModifiedDate]
		, BankAccount1.[Timestamp]
		, DebitAccount1.[DebitAccountNumber]
		, DebitAccount1.[IsDefaultDebitAccount]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_BankAccount] BankAccount1
	INNER JOIN [dbo].[tblAccounts_DebitAccount] DebitAccount1 ON DebitAccount1.[AccountID]=BankAccount1.[AccountID]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=DebitAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND Account1.[AccountSubTypeCode] = @AccountSubTypeCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN BankAccount1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN BankAccount1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BankMetaPartnerID' THEN BankAccount1.[BankMetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BankMetaPartnerID' THEN BankAccount1.[BankMetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN BankAccount1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN BankAccount1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN BankAccount1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN BankAccount1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN BankAccount1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN BankAccount1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN BankAccount1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN BankAccount1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN BankAccount1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN BankAccount1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DebitAccountNumber' THEN DebitAccount1.[DebitAccountNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DebitAccountNumber' THEN DebitAccount1.[DebitAccountNumber] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsDefaultDebitAccount' THEN DebitAccount1.[IsDefaultDebitAccount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsDefaultDebitAccount' THEN DebitAccount1.[IsDefaultDebitAccount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Account1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Account1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllBankAccountDataByBankMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'BankMetaPartnerID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @BankMetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all BankAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='BankMetaPartnerID'

/*
** parameter validation
*/
IF (@BankMetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  BankAccount1.[AccountID]
		, BankAccount1.[BankMetaPartnerID]
		, BankAccount1.[CreatedByUserID]
		, BankAccount1.[CreatedDate]
		, BankAccount1.[LastModifiedByUserID]
		, BankAccount1.[LastModifiedDate]
		, BankAccount1.[Timestamp]
		, DebitAccount1.[DebitAccountNumber]
		, DebitAccount1.[IsDefaultDebitAccount]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_BankAccount] BankAccount1
	INNER JOIN [dbo].[tblAccounts_DebitAccount] DebitAccount1 ON DebitAccount1.[AccountID]=BankAccount1.[AccountID]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=DebitAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND BankAccount1.[BankMetaPartnerID] = @BankMetaPartnerID

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  BankAccount1.[AccountID]
		, BankAccount1.[BankMetaPartnerID]
		, BankAccount1.[CreatedByUserID]
		, BankAccount1.[CreatedDate]
		, BankAccount1.[LastModifiedByUserID]
		, BankAccount1.[LastModifiedDate]
		, BankAccount1.[Timestamp]
		, DebitAccount1.[DebitAccountNumber]
		, DebitAccount1.[IsDefaultDebitAccount]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_BankAccount] BankAccount1
	INNER JOIN [dbo].[tblAccounts_DebitAccount] DebitAccount1 ON DebitAccount1.[AccountID]=BankAccount1.[AccountID]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=DebitAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND BankAccount1.[BankMetaPartnerID] = @BankMetaPartnerID

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN BankAccount1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN BankAccount1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BankMetaPartnerID' THEN BankAccount1.[BankMetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BankMetaPartnerID' THEN BankAccount1.[BankMetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN BankAccount1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN BankAccount1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN BankAccount1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN BankAccount1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN BankAccount1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN BankAccount1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN BankAccount1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN BankAccount1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN BankAccount1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN BankAccount1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DebitAccountNumber' THEN DebitAccount1.[DebitAccountNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DebitAccountNumber' THEN DebitAccount1.[DebitAccountNumber] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsDefaultDebitAccount' THEN DebitAccount1.[IsDefaultDebitAccount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsDefaultDebitAccount' THEN DebitAccount1.[IsDefaultDebitAccount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Account1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Account1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllBankAccountDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'DebitAccountNumber'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @DebitAccountNumber nvarchar(100)
	, @AccountName nvarchar(255)
	, @CurrencyCode int
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all BankAccount data by criteria.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='DebitAccountNumber'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  BankAccount1.[AccountID]
		, BankAccount1.[BankMetaPartnerID]
		, BankAccount1.[CreatedByUserID]
		, BankAccount1.[CreatedDate]
		, BankAccount1.[LastModifiedByUserID]
		, BankAccount1.[LastModifiedDate]
		, BankAccount1.[Timestamp]
		, DebitAccount1.[DebitAccountNumber]
		, DebitAccount1.[IsDefaultDebitAccount]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_BankAccount] BankAccount1
	INNER JOIN [dbo].[tblAccounts_DebitAccount] DebitAccount1 ON DebitAccount1.[AccountID]=BankAccount1.[AccountID]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=DebitAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND (@DebitAccountNumber IS NULL OR DebitAccount1.[DebitAccountNumber] like '%' + @DebitAccountNumber + '%')
		AND (@AccountName IS NULL OR Account1.[AccountName] like '%' + @AccountName + '%')
		AND (@CurrencyCode IS NULL OR Account1.[CurrencyCode] = @CurrencyCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (Account1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (Account1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  BankAccount1.[AccountID]
		, BankAccount1.[BankMetaPartnerID]
		, BankAccount1.[CreatedByUserID]
		, BankAccount1.[CreatedDate]
		, BankAccount1.[LastModifiedByUserID]
		, BankAccount1.[LastModifiedDate]
		, BankAccount1.[Timestamp]
		, DebitAccount1.[DebitAccountNumber]
		, DebitAccount1.[IsDefaultDebitAccount]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_BankAccount] BankAccount1
	INNER JOIN [dbo].[tblAccounts_DebitAccount] DebitAccount1 ON DebitAccount1.[AccountID]=BankAccount1.[AccountID]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=DebitAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND (@DebitAccountNumber IS NULL OR DebitAccount1.[DebitAccountNumber] like '%' + @DebitAccountNumber + '%')
		AND (@AccountName IS NULL OR Account1.[AccountName] like '%' + @AccountName + '%')
		AND (@CurrencyCode IS NULL OR Account1.[CurrencyCode] = @CurrencyCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (Account1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (Account1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN BankAccount1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN BankAccount1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BankMetaPartnerID' THEN BankAccount1.[BankMetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BankMetaPartnerID' THEN BankAccount1.[BankMetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN BankAccount1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN BankAccount1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN BankAccount1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN BankAccount1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN BankAccount1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN BankAccount1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN BankAccount1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN BankAccount1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN BankAccount1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN BankAccount1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DebitAccountNumber' THEN DebitAccount1.[DebitAccountNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DebitAccountNumber' THEN DebitAccount1.[DebitAccountNumber] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsDefaultDebitAccount' THEN DebitAccount1.[IsDefaultDebitAccount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsDefaultDebitAccount' THEN DebitAccount1.[IsDefaultDebitAccount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Account1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Account1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllBankAccountDataByCurrencyCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'CurrencyCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @CurrencyCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all BankAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='CurrencyCode'

/*
** parameter validation
*/
IF (@CurrencyCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  BankAccount1.[AccountID]
		, BankAccount1.[BankMetaPartnerID]
		, BankAccount1.[CreatedByUserID]
		, BankAccount1.[CreatedDate]
		, BankAccount1.[LastModifiedByUserID]
		, BankAccount1.[LastModifiedDate]
		, BankAccount1.[Timestamp]
		, DebitAccount1.[DebitAccountNumber]
		, DebitAccount1.[IsDefaultDebitAccount]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_BankAccount] BankAccount1
	INNER JOIN [dbo].[tblAccounts_DebitAccount] DebitAccount1 ON DebitAccount1.[AccountID]=BankAccount1.[AccountID]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=DebitAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND Account1.[CurrencyCode] = @CurrencyCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  BankAccount1.[AccountID]
		, BankAccount1.[BankMetaPartnerID]
		, BankAccount1.[CreatedByUserID]
		, BankAccount1.[CreatedDate]
		, BankAccount1.[LastModifiedByUserID]
		, BankAccount1.[LastModifiedDate]
		, BankAccount1.[Timestamp]
		, DebitAccount1.[DebitAccountNumber]
		, DebitAccount1.[IsDefaultDebitAccount]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_BankAccount] BankAccount1
	INNER JOIN [dbo].[tblAccounts_DebitAccount] DebitAccount1 ON DebitAccount1.[AccountID]=BankAccount1.[AccountID]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=DebitAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND Account1.[CurrencyCode] = @CurrencyCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN BankAccount1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN BankAccount1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BankMetaPartnerID' THEN BankAccount1.[BankMetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BankMetaPartnerID' THEN BankAccount1.[BankMetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN BankAccount1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN BankAccount1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN BankAccount1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN BankAccount1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN BankAccount1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN BankAccount1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN BankAccount1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN BankAccount1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN BankAccount1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN BankAccount1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DebitAccountNumber' THEN DebitAccount1.[DebitAccountNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DebitAccountNumber' THEN DebitAccount1.[DebitAccountNumber] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsDefaultDebitAccount' THEN DebitAccount1.[IsDefaultDebitAccount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsDefaultDebitAccount' THEN DebitAccount1.[IsDefaultDebitAccount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Account1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Account1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllBankAccountDataByMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'MetaPartnerID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @MetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all BankAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='MetaPartnerID'

/*
** parameter validation
*/
IF (@MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  BankAccount1.[AccountID]
		, BankAccount1.[BankMetaPartnerID]
		, BankAccount1.[CreatedByUserID]
		, BankAccount1.[CreatedDate]
		, BankAccount1.[LastModifiedByUserID]
		, BankAccount1.[LastModifiedDate]
		, BankAccount1.[Timestamp]
		, DebitAccount1.[DebitAccountNumber]
		, DebitAccount1.[IsDefaultDebitAccount]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_BankAccount] BankAccount1
	INNER JOIN [dbo].[tblAccounts_DebitAccount] DebitAccount1 ON DebitAccount1.[AccountID]=BankAccount1.[AccountID]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=DebitAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND Account1.[MetaPartnerID] = @MetaPartnerID

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  BankAccount1.[AccountID]
		, BankAccount1.[BankMetaPartnerID]
		, BankAccount1.[CreatedByUserID]
		, BankAccount1.[CreatedDate]
		, BankAccount1.[LastModifiedByUserID]
		, BankAccount1.[LastModifiedDate]
		, BankAccount1.[Timestamp]
		, DebitAccount1.[DebitAccountNumber]
		, DebitAccount1.[IsDefaultDebitAccount]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_BankAccount] BankAccount1
	INNER JOIN [dbo].[tblAccounts_DebitAccount] DebitAccount1 ON DebitAccount1.[AccountID]=BankAccount1.[AccountID]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=DebitAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND Account1.[MetaPartnerID] = @MetaPartnerID

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN BankAccount1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN BankAccount1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BankMetaPartnerID' THEN BankAccount1.[BankMetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BankMetaPartnerID' THEN BankAccount1.[BankMetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN BankAccount1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN BankAccount1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN BankAccount1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN BankAccount1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN BankAccount1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN BankAccount1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN BankAccount1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN BankAccount1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN BankAccount1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN BankAccount1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DebitAccountNumber' THEN DebitAccount1.[DebitAccountNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DebitAccountNumber' THEN DebitAccount1.[DebitAccountNumber] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsDefaultDebitAccount' THEN DebitAccount1.[IsDefaultDebitAccount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsDefaultDebitAccount' THEN DebitAccount1.[IsDefaultDebitAccount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Account1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Account1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllBillPayAccountData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'AccountID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeDateInactive bit = 0
	, @IncludeInactive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all BillPayAccount data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='AccountID'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  BillPayAccount1.[AccountID]
		, BillPayAccount1.[BusinessAccountNumber]
		, BillPayAccount1.[StartDate]
		, BillPayAccount1.[EndDate]
		, BillPayAccount1.[DefaultMinimumPayment]
		, BillPayAccount1.[DefaultMaximumPayment]
		, BillPayAccount1.[BusinessMetaPartnerID]
		, BillPayAccount1.[HourOfDay]
		, BillPayAccount1.[DayOfWeek]
		, BillPayAccount1.[WeekOfMonth]
		, BillPayAccount1.[MonthOfYear]
		, BillPayAccount1.[NumberOfReminders]
		, BillPayAccount1.[FrequencyCode]
		, BillPayAccount1.[CreatedByUserID]
		, BillPayAccount1.[CreatedDate]
		, BillPayAccount1.[LastModifiedByUserID]
		, BillPayAccount1.[LastModifiedDate]
		, BillPayAccount1.[Timestamp]
		, Frequency1.[FrequencyName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_BillPayAccount] BillPayAccount1
	INNER JOIN [dbo].[tlkpAccounts_Frequency] Frequency1 ON Frequency1.[FrequencyCode]=BillPayAccount1.[FrequencyCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=BillPayAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		((BillPayAccount1.[StartDate] IS NULL) OR (BillPayAccount1.[StartDate] <= CASE WHEN @IncludeDateInactive=1 THEN BillPayAccount1.[StartDate] ELSE getdate() END))
		AND ((BillPayAccount1.[EndDate] IS NULL) OR (BillPayAccount1.[EndDate] >= CASE WHEN @IncludeDateInactive=1 THEN BillPayAccount1.[EndDate] ELSE getdate() END))
		AND Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  BillPayAccount1.[AccountID]
		, BillPayAccount1.[BusinessAccountNumber]
		, BillPayAccount1.[StartDate]
		, BillPayAccount1.[EndDate]
		, BillPayAccount1.[DefaultMinimumPayment]
		, BillPayAccount1.[DefaultMaximumPayment]
		, BillPayAccount1.[BusinessMetaPartnerID]
		, BillPayAccount1.[HourOfDay]
		, BillPayAccount1.[DayOfWeek]
		, BillPayAccount1.[WeekOfMonth]
		, BillPayAccount1.[MonthOfYear]
		, BillPayAccount1.[NumberOfReminders]
		, BillPayAccount1.[FrequencyCode]
		, BillPayAccount1.[CreatedByUserID]
		, BillPayAccount1.[CreatedDate]
		, BillPayAccount1.[LastModifiedByUserID]
		, BillPayAccount1.[LastModifiedDate]
		, BillPayAccount1.[Timestamp]
		, Frequency1.[FrequencyName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_BillPayAccount] BillPayAccount1
	INNER JOIN [dbo].[tlkpAccounts_Frequency] Frequency1 ON Frequency1.[FrequencyCode]=BillPayAccount1.[FrequencyCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=BillPayAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		((BillPayAccount1.[StartDate] IS NULL) OR (BillPayAccount1.[StartDate] <= CASE WHEN @IncludeDateInactive=1 THEN BillPayAccount1.[StartDate] ELSE getdate() END))
		AND ((BillPayAccount1.[EndDate] IS NULL) OR (BillPayAccount1.[EndDate] >= CASE WHEN @IncludeDateInactive=1 THEN BillPayAccount1.[EndDate] ELSE getdate() END))
		AND Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN BillPayAccount1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN BillPayAccount1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BusinessAccountNumber' THEN BillPayAccount1.[BusinessAccountNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BusinessAccountNumber' THEN BillPayAccount1.[BusinessAccountNumber] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'StartDate' THEN BillPayAccount1.[StartDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'StartDate' THEN BillPayAccount1.[StartDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EndDate' THEN BillPayAccount1.[EndDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EndDate' THEN BillPayAccount1.[EndDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DefaultMinimumPayment' THEN BillPayAccount1.[DefaultMinimumPayment] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DefaultMinimumPayment' THEN BillPayAccount1.[DefaultMinimumPayment] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DefaultMaximumPayment' THEN BillPayAccount1.[DefaultMaximumPayment] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DefaultMaximumPayment' THEN BillPayAccount1.[DefaultMaximumPayment] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BusinessMetaPartnerID' THEN BillPayAccount1.[BusinessMetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BusinessMetaPartnerID' THEN BillPayAccount1.[BusinessMetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'HourOfDay' THEN BillPayAccount1.[HourOfDay] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'HourOfDay' THEN BillPayAccount1.[HourOfDay] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DayOfWeek' THEN BillPayAccount1.[DayOfWeek] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DayOfWeek' THEN BillPayAccount1.[DayOfWeek] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'WeekOfMonth' THEN BillPayAccount1.[WeekOfMonth] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'WeekOfMonth' THEN BillPayAccount1.[WeekOfMonth] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MonthOfYear' THEN BillPayAccount1.[MonthOfYear] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MonthOfYear' THEN BillPayAccount1.[MonthOfYear] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NumberOfReminders' THEN BillPayAccount1.[NumberOfReminders] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NumberOfReminders' THEN BillPayAccount1.[NumberOfReminders] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FrequencyCode' THEN BillPayAccount1.[FrequencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FrequencyCode' THEN BillPayAccount1.[FrequencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN BillPayAccount1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN BillPayAccount1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN BillPayAccount1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN BillPayAccount1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN BillPayAccount1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN BillPayAccount1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN BillPayAccount1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN BillPayAccount1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN BillPayAccount1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN BillPayAccount1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FrequencyName' THEN Frequency1.[FrequencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FrequencyName' THEN Frequency1.[FrequencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Account1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Account1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllBillPayAccountDataByAccountID
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'AccountID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeDateInactive bit = 0
	, @IncludeInactive bit = 0
	, @AccountID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all BillPayAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='AccountID'

/*
** parameter validation
*/
IF (@AccountID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  BillPayAccount1.[AccountID]
		, BillPayAccount1.[BusinessAccountNumber]
		, BillPayAccount1.[StartDate]
		, BillPayAccount1.[EndDate]
		, BillPayAccount1.[DefaultMinimumPayment]
		, BillPayAccount1.[DefaultMaximumPayment]
		, BillPayAccount1.[BusinessMetaPartnerID]
		, BillPayAccount1.[HourOfDay]
		, BillPayAccount1.[DayOfWeek]
		, BillPayAccount1.[WeekOfMonth]
		, BillPayAccount1.[MonthOfYear]
		, BillPayAccount1.[NumberOfReminders]
		, BillPayAccount1.[FrequencyCode]
		, BillPayAccount1.[CreatedByUserID]
		, BillPayAccount1.[CreatedDate]
		, BillPayAccount1.[LastModifiedByUserID]
		, BillPayAccount1.[LastModifiedDate]
		, BillPayAccount1.[Timestamp]
		, Frequency1.[FrequencyName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_BillPayAccount] BillPayAccount1
	INNER JOIN [dbo].[tlkpAccounts_Frequency] Frequency1 ON Frequency1.[FrequencyCode]=BillPayAccount1.[FrequencyCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=BillPayAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		((BillPayAccount1.[StartDate] IS NULL) OR (BillPayAccount1.[StartDate] <= CASE WHEN @IncludeDateInactive=1 THEN BillPayAccount1.[StartDate] ELSE getdate() END))
		AND ((BillPayAccount1.[EndDate] IS NULL) OR (BillPayAccount1.[EndDate] >= CASE WHEN @IncludeDateInactive=1 THEN BillPayAccount1.[EndDate] ELSE getdate() END))
		AND Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND BillPayAccount1.[AccountID] = @AccountID

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  BillPayAccount1.[AccountID]
		, BillPayAccount1.[BusinessAccountNumber]
		, BillPayAccount1.[StartDate]
		, BillPayAccount1.[EndDate]
		, BillPayAccount1.[DefaultMinimumPayment]
		, BillPayAccount1.[DefaultMaximumPayment]
		, BillPayAccount1.[BusinessMetaPartnerID]
		, BillPayAccount1.[HourOfDay]
		, BillPayAccount1.[DayOfWeek]
		, BillPayAccount1.[WeekOfMonth]
		, BillPayAccount1.[MonthOfYear]
		, BillPayAccount1.[NumberOfReminders]
		, BillPayAccount1.[FrequencyCode]
		, BillPayAccount1.[CreatedByUserID]
		, BillPayAccount1.[CreatedDate]
		, BillPayAccount1.[LastModifiedByUserID]
		, BillPayAccount1.[LastModifiedDate]
		, BillPayAccount1.[Timestamp]
		, Frequency1.[FrequencyName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_BillPayAccount] BillPayAccount1
	INNER JOIN [dbo].[tlkpAccounts_Frequency] Frequency1 ON Frequency1.[FrequencyCode]=BillPayAccount1.[FrequencyCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=BillPayAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		((BillPayAccount1.[StartDate] IS NULL) OR (BillPayAccount1.[StartDate] <= CASE WHEN @IncludeDateInactive=1 THEN BillPayAccount1.[StartDate] ELSE getdate() END))
		AND ((BillPayAccount1.[EndDate] IS NULL) OR (BillPayAccount1.[EndDate] >= CASE WHEN @IncludeDateInactive=1 THEN BillPayAccount1.[EndDate] ELSE getdate() END))
		AND Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND BillPayAccount1.[AccountID] = @AccountID

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN BillPayAccount1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN BillPayAccount1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BusinessAccountNumber' THEN BillPayAccount1.[BusinessAccountNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BusinessAccountNumber' THEN BillPayAccount1.[BusinessAccountNumber] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'StartDate' THEN BillPayAccount1.[StartDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'StartDate' THEN BillPayAccount1.[StartDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EndDate' THEN BillPayAccount1.[EndDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EndDate' THEN BillPayAccount1.[EndDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DefaultMinimumPayment' THEN BillPayAccount1.[DefaultMinimumPayment] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DefaultMinimumPayment' THEN BillPayAccount1.[DefaultMinimumPayment] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DefaultMaximumPayment' THEN BillPayAccount1.[DefaultMaximumPayment] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DefaultMaximumPayment' THEN BillPayAccount1.[DefaultMaximumPayment] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BusinessMetaPartnerID' THEN BillPayAccount1.[BusinessMetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BusinessMetaPartnerID' THEN BillPayAccount1.[BusinessMetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'HourOfDay' THEN BillPayAccount1.[HourOfDay] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'HourOfDay' THEN BillPayAccount1.[HourOfDay] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DayOfWeek' THEN BillPayAccount1.[DayOfWeek] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DayOfWeek' THEN BillPayAccount1.[DayOfWeek] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'WeekOfMonth' THEN BillPayAccount1.[WeekOfMonth] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'WeekOfMonth' THEN BillPayAccount1.[WeekOfMonth] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MonthOfYear' THEN BillPayAccount1.[MonthOfYear] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MonthOfYear' THEN BillPayAccount1.[MonthOfYear] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NumberOfReminders' THEN BillPayAccount1.[NumberOfReminders] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NumberOfReminders' THEN BillPayAccount1.[NumberOfReminders] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FrequencyCode' THEN BillPayAccount1.[FrequencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FrequencyCode' THEN BillPayAccount1.[FrequencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN BillPayAccount1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN BillPayAccount1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN BillPayAccount1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN BillPayAccount1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN BillPayAccount1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN BillPayAccount1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN BillPayAccount1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN BillPayAccount1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN BillPayAccount1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN BillPayAccount1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FrequencyName' THEN Frequency1.[FrequencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FrequencyName' THEN Frequency1.[FrequencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Account1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Account1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllBillPayAccountDataByAccountSubTypeCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'AccountSubTypeCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeDateInactive bit = 0
	, @IncludeInactive bit = 0
	, @AccountSubTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all BillPayAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='AccountSubTypeCode'

/*
** parameter validation
*/
IF (@AccountSubTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  BillPayAccount1.[AccountID]
		, BillPayAccount1.[BusinessAccountNumber]
		, BillPayAccount1.[StartDate]
		, BillPayAccount1.[EndDate]
		, BillPayAccount1.[DefaultMinimumPayment]
		, BillPayAccount1.[DefaultMaximumPayment]
		, BillPayAccount1.[BusinessMetaPartnerID]
		, BillPayAccount1.[HourOfDay]
		, BillPayAccount1.[DayOfWeek]
		, BillPayAccount1.[WeekOfMonth]
		, BillPayAccount1.[MonthOfYear]
		, BillPayAccount1.[NumberOfReminders]
		, BillPayAccount1.[FrequencyCode]
		, BillPayAccount1.[CreatedByUserID]
		, BillPayAccount1.[CreatedDate]
		, BillPayAccount1.[LastModifiedByUserID]
		, BillPayAccount1.[LastModifiedDate]
		, BillPayAccount1.[Timestamp]
		, Frequency1.[FrequencyName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_BillPayAccount] BillPayAccount1
	INNER JOIN [dbo].[tlkpAccounts_Frequency] Frequency1 ON Frequency1.[FrequencyCode]=BillPayAccount1.[FrequencyCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=BillPayAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		((BillPayAccount1.[StartDate] IS NULL) OR (BillPayAccount1.[StartDate] <= CASE WHEN @IncludeDateInactive=1 THEN BillPayAccount1.[StartDate] ELSE getdate() END))
		AND ((BillPayAccount1.[EndDate] IS NULL) OR (BillPayAccount1.[EndDate] >= CASE WHEN @IncludeDateInactive=1 THEN BillPayAccount1.[EndDate] ELSE getdate() END))
		AND Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND Account1.[AccountSubTypeCode] = @AccountSubTypeCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  BillPayAccount1.[AccountID]
		, BillPayAccount1.[BusinessAccountNumber]
		, BillPayAccount1.[StartDate]
		, BillPayAccount1.[EndDate]
		, BillPayAccount1.[DefaultMinimumPayment]
		, BillPayAccount1.[DefaultMaximumPayment]
		, BillPayAccount1.[BusinessMetaPartnerID]
		, BillPayAccount1.[HourOfDay]
		, BillPayAccount1.[DayOfWeek]
		, BillPayAccount1.[WeekOfMonth]
		, BillPayAccount1.[MonthOfYear]
		, BillPayAccount1.[NumberOfReminders]
		, BillPayAccount1.[FrequencyCode]
		, BillPayAccount1.[CreatedByUserID]
		, BillPayAccount1.[CreatedDate]
		, BillPayAccount1.[LastModifiedByUserID]
		, BillPayAccount1.[LastModifiedDate]
		, BillPayAccount1.[Timestamp]
		, Frequency1.[FrequencyName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_BillPayAccount] BillPayAccount1
	INNER JOIN [dbo].[tlkpAccounts_Frequency] Frequency1 ON Frequency1.[FrequencyCode]=BillPayAccount1.[FrequencyCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=BillPayAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		((BillPayAccount1.[StartDate] IS NULL) OR (BillPayAccount1.[StartDate] <= CASE WHEN @IncludeDateInactive=1 THEN BillPayAccount1.[StartDate] ELSE getdate() END))
		AND ((BillPayAccount1.[EndDate] IS NULL) OR (BillPayAccount1.[EndDate] >= CASE WHEN @IncludeDateInactive=1 THEN BillPayAccount1.[EndDate] ELSE getdate() END))
		AND Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND Account1.[AccountSubTypeCode] = @AccountSubTypeCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN BillPayAccount1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN BillPayAccount1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BusinessAccountNumber' THEN BillPayAccount1.[BusinessAccountNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BusinessAccountNumber' THEN BillPayAccount1.[BusinessAccountNumber] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'StartDate' THEN BillPayAccount1.[StartDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'StartDate' THEN BillPayAccount1.[StartDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EndDate' THEN BillPayAccount1.[EndDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EndDate' THEN BillPayAccount1.[EndDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DefaultMinimumPayment' THEN BillPayAccount1.[DefaultMinimumPayment] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DefaultMinimumPayment' THEN BillPayAccount1.[DefaultMinimumPayment] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DefaultMaximumPayment' THEN BillPayAccount1.[DefaultMaximumPayment] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DefaultMaximumPayment' THEN BillPayAccount1.[DefaultMaximumPayment] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BusinessMetaPartnerID' THEN BillPayAccount1.[BusinessMetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BusinessMetaPartnerID' THEN BillPayAccount1.[BusinessMetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'HourOfDay' THEN BillPayAccount1.[HourOfDay] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'HourOfDay' THEN BillPayAccount1.[HourOfDay] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DayOfWeek' THEN BillPayAccount1.[DayOfWeek] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DayOfWeek' THEN BillPayAccount1.[DayOfWeek] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'WeekOfMonth' THEN BillPayAccount1.[WeekOfMonth] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'WeekOfMonth' THEN BillPayAccount1.[WeekOfMonth] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MonthOfYear' THEN BillPayAccount1.[MonthOfYear] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MonthOfYear' THEN BillPayAccount1.[MonthOfYear] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NumberOfReminders' THEN BillPayAccount1.[NumberOfReminders] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NumberOfReminders' THEN BillPayAccount1.[NumberOfReminders] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FrequencyCode' THEN BillPayAccount1.[FrequencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FrequencyCode' THEN BillPayAccount1.[FrequencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN BillPayAccount1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN BillPayAccount1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN BillPayAccount1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN BillPayAccount1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN BillPayAccount1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN BillPayAccount1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN BillPayAccount1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN BillPayAccount1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN BillPayAccount1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN BillPayAccount1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FrequencyName' THEN Frequency1.[FrequencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FrequencyName' THEN Frequency1.[FrequencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Account1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Account1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllBillPayAccountDataByBusinessMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'BusinessMetaPartnerID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeDateInactive bit = 0
	, @IncludeInactive bit = 0
	, @BusinessMetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all BillPayAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='BusinessMetaPartnerID'

/*
** parameter validation
*/
IF (@BusinessMetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  BillPayAccount1.[AccountID]
		, BillPayAccount1.[BusinessAccountNumber]
		, BillPayAccount1.[StartDate]
		, BillPayAccount1.[EndDate]
		, BillPayAccount1.[DefaultMinimumPayment]
		, BillPayAccount1.[DefaultMaximumPayment]
		, BillPayAccount1.[BusinessMetaPartnerID]
		, BillPayAccount1.[HourOfDay]
		, BillPayAccount1.[DayOfWeek]
		, BillPayAccount1.[WeekOfMonth]
		, BillPayAccount1.[MonthOfYear]
		, BillPayAccount1.[NumberOfReminders]
		, BillPayAccount1.[FrequencyCode]
		, BillPayAccount1.[CreatedByUserID]
		, BillPayAccount1.[CreatedDate]
		, BillPayAccount1.[LastModifiedByUserID]
		, BillPayAccount1.[LastModifiedDate]
		, BillPayAccount1.[Timestamp]
		, Frequency1.[FrequencyName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_BillPayAccount] BillPayAccount1
	INNER JOIN [dbo].[tlkpAccounts_Frequency] Frequency1 ON Frequency1.[FrequencyCode]=BillPayAccount1.[FrequencyCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=BillPayAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		((BillPayAccount1.[StartDate] IS NULL) OR (BillPayAccount1.[StartDate] <= CASE WHEN @IncludeDateInactive=1 THEN BillPayAccount1.[StartDate] ELSE getdate() END))
		AND ((BillPayAccount1.[EndDate] IS NULL) OR (BillPayAccount1.[EndDate] >= CASE WHEN @IncludeDateInactive=1 THEN BillPayAccount1.[EndDate] ELSE getdate() END))
		AND Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND BillPayAccount1.[BusinessMetaPartnerID] = @BusinessMetaPartnerID

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  BillPayAccount1.[AccountID]
		, BillPayAccount1.[BusinessAccountNumber]
		, BillPayAccount1.[StartDate]
		, BillPayAccount1.[EndDate]
		, BillPayAccount1.[DefaultMinimumPayment]
		, BillPayAccount1.[DefaultMaximumPayment]
		, BillPayAccount1.[BusinessMetaPartnerID]
		, BillPayAccount1.[HourOfDay]
		, BillPayAccount1.[DayOfWeek]
		, BillPayAccount1.[WeekOfMonth]
		, BillPayAccount1.[MonthOfYear]
		, BillPayAccount1.[NumberOfReminders]
		, BillPayAccount1.[FrequencyCode]
		, BillPayAccount1.[CreatedByUserID]
		, BillPayAccount1.[CreatedDate]
		, BillPayAccount1.[LastModifiedByUserID]
		, BillPayAccount1.[LastModifiedDate]
		, BillPayAccount1.[Timestamp]
		, Frequency1.[FrequencyName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_BillPayAccount] BillPayAccount1
	INNER JOIN [dbo].[tlkpAccounts_Frequency] Frequency1 ON Frequency1.[FrequencyCode]=BillPayAccount1.[FrequencyCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=BillPayAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		((BillPayAccount1.[StartDate] IS NULL) OR (BillPayAccount1.[StartDate] <= CASE WHEN @IncludeDateInactive=1 THEN BillPayAccount1.[StartDate] ELSE getdate() END))
		AND ((BillPayAccount1.[EndDate] IS NULL) OR (BillPayAccount1.[EndDate] >= CASE WHEN @IncludeDateInactive=1 THEN BillPayAccount1.[EndDate] ELSE getdate() END))
		AND Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND BillPayAccount1.[BusinessMetaPartnerID] = @BusinessMetaPartnerID

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN BillPayAccount1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN BillPayAccount1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BusinessAccountNumber' THEN BillPayAccount1.[BusinessAccountNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BusinessAccountNumber' THEN BillPayAccount1.[BusinessAccountNumber] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'StartDate' THEN BillPayAccount1.[StartDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'StartDate' THEN BillPayAccount1.[StartDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EndDate' THEN BillPayAccount1.[EndDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EndDate' THEN BillPayAccount1.[EndDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DefaultMinimumPayment' THEN BillPayAccount1.[DefaultMinimumPayment] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DefaultMinimumPayment' THEN BillPayAccount1.[DefaultMinimumPayment] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DefaultMaximumPayment' THEN BillPayAccount1.[DefaultMaximumPayment] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DefaultMaximumPayment' THEN BillPayAccount1.[DefaultMaximumPayment] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BusinessMetaPartnerID' THEN BillPayAccount1.[BusinessMetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BusinessMetaPartnerID' THEN BillPayAccount1.[BusinessMetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'HourOfDay' THEN BillPayAccount1.[HourOfDay] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'HourOfDay' THEN BillPayAccount1.[HourOfDay] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DayOfWeek' THEN BillPayAccount1.[DayOfWeek] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DayOfWeek' THEN BillPayAccount1.[DayOfWeek] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'WeekOfMonth' THEN BillPayAccount1.[WeekOfMonth] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'WeekOfMonth' THEN BillPayAccount1.[WeekOfMonth] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MonthOfYear' THEN BillPayAccount1.[MonthOfYear] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MonthOfYear' THEN BillPayAccount1.[MonthOfYear] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NumberOfReminders' THEN BillPayAccount1.[NumberOfReminders] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NumberOfReminders' THEN BillPayAccount1.[NumberOfReminders] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FrequencyCode' THEN BillPayAccount1.[FrequencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FrequencyCode' THEN BillPayAccount1.[FrequencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN BillPayAccount1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN BillPayAccount1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN BillPayAccount1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN BillPayAccount1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN BillPayAccount1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN BillPayAccount1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN BillPayAccount1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN BillPayAccount1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN BillPayAccount1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN BillPayAccount1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FrequencyName' THEN Frequency1.[FrequencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FrequencyName' THEN Frequency1.[FrequencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Account1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Account1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllBillPayAccountDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'BusinessAccountNumber'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeDateInactive bit = 0
	, @IncludeInactive bit = 0
	, @BusinessAccountNumber nvarchar(100)
	, @StartDate datetime
	, @EndDate datetime
	, @NumberOfReminders int
	, @FrequencyCode int
	, @AccountName nvarchar(255)
	, @CurrencyCode int
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all BillPayAccount data by criteria.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='BusinessAccountNumber'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  BillPayAccount1.[AccountID]
		, BillPayAccount1.[BusinessAccountNumber]
		, BillPayAccount1.[StartDate]
		, BillPayAccount1.[EndDate]
		, BillPayAccount1.[DefaultMinimumPayment]
		, BillPayAccount1.[DefaultMaximumPayment]
		, BillPayAccount1.[BusinessMetaPartnerID]
		, BillPayAccount1.[HourOfDay]
		, BillPayAccount1.[DayOfWeek]
		, BillPayAccount1.[WeekOfMonth]
		, BillPayAccount1.[MonthOfYear]
		, BillPayAccount1.[NumberOfReminders]
		, BillPayAccount1.[FrequencyCode]
		, BillPayAccount1.[CreatedByUserID]
		, BillPayAccount1.[CreatedDate]
		, BillPayAccount1.[LastModifiedByUserID]
		, BillPayAccount1.[LastModifiedDate]
		, BillPayAccount1.[Timestamp]
		, Frequency1.[FrequencyName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_BillPayAccount] BillPayAccount1
	INNER JOIN [dbo].[tlkpAccounts_Frequency] Frequency1 ON Frequency1.[FrequencyCode]=BillPayAccount1.[FrequencyCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=BillPayAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		((BillPayAccount1.[StartDate] IS NULL) OR (BillPayAccount1.[StartDate] <= CASE WHEN @IncludeDateInactive=1 THEN BillPayAccount1.[StartDate] ELSE getdate() END))
		AND ((BillPayAccount1.[EndDate] IS NULL) OR (BillPayAccount1.[EndDate] >= CASE WHEN @IncludeDateInactive=1 THEN BillPayAccount1.[EndDate] ELSE getdate() END))
		AND Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND (@BusinessAccountNumber IS NULL OR BillPayAccount1.[BusinessAccountNumber] like '%' + @BusinessAccountNumber + '%')
		AND (@StartDate IS NULL OR BillPayAccount1.[StartDate] <= @StartDate)
		AND (@EndDate IS NULL OR BillPayAccount1.[EndDate] >= @EndDate)
		AND (@NumberOfReminders IS NULL OR BillPayAccount1.[NumberOfReminders] = @NumberOfReminders)
		AND (@FrequencyCode IS NULL OR BillPayAccount1.[FrequencyCode] = @FrequencyCode)
		AND (@AccountName IS NULL OR Account1.[AccountName] like '%' + @AccountName + '%')
		AND (@CurrencyCode IS NULL OR Account1.[CurrencyCode] = @CurrencyCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (Account1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (Account1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  BillPayAccount1.[AccountID]
		, BillPayAccount1.[BusinessAccountNumber]
		, BillPayAccount1.[StartDate]
		, BillPayAccount1.[EndDate]
		, BillPayAccount1.[DefaultMinimumPayment]
		, BillPayAccount1.[DefaultMaximumPayment]
		, BillPayAccount1.[BusinessMetaPartnerID]
		, BillPayAccount1.[HourOfDay]
		, BillPayAccount1.[DayOfWeek]
		, BillPayAccount1.[WeekOfMonth]
		, BillPayAccount1.[MonthOfYear]
		, BillPayAccount1.[NumberOfReminders]
		, BillPayAccount1.[FrequencyCode]
		, BillPayAccount1.[CreatedByUserID]
		, BillPayAccount1.[CreatedDate]
		, BillPayAccount1.[LastModifiedByUserID]
		, BillPayAccount1.[LastModifiedDate]
		, BillPayAccount1.[Timestamp]
		, Frequency1.[FrequencyName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_BillPayAccount] BillPayAccount1
	INNER JOIN [dbo].[tlkpAccounts_Frequency] Frequency1 ON Frequency1.[FrequencyCode]=BillPayAccount1.[FrequencyCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=BillPayAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		((BillPayAccount1.[StartDate] IS NULL) OR (BillPayAccount1.[StartDate] <= CASE WHEN @IncludeDateInactive=1 THEN BillPayAccount1.[StartDate] ELSE getdate() END))
		AND ((BillPayAccount1.[EndDate] IS NULL) OR (BillPayAccount1.[EndDate] >= CASE WHEN @IncludeDateInactive=1 THEN BillPayAccount1.[EndDate] ELSE getdate() END))
		AND Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND (@BusinessAccountNumber IS NULL OR BillPayAccount1.[BusinessAccountNumber] like '%' + @BusinessAccountNumber + '%')
		AND (@StartDate IS NULL OR BillPayAccount1.[StartDate] <= @StartDate)
		AND (@EndDate IS NULL OR BillPayAccount1.[EndDate] >= @EndDate)
		AND (@NumberOfReminders IS NULL OR BillPayAccount1.[NumberOfReminders] = @NumberOfReminders)
		AND (@FrequencyCode IS NULL OR BillPayAccount1.[FrequencyCode] = @FrequencyCode)
		AND (@AccountName IS NULL OR Account1.[AccountName] like '%' + @AccountName + '%')
		AND (@CurrencyCode IS NULL OR Account1.[CurrencyCode] = @CurrencyCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (Account1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (Account1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN BillPayAccount1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN BillPayAccount1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BusinessAccountNumber' THEN BillPayAccount1.[BusinessAccountNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BusinessAccountNumber' THEN BillPayAccount1.[BusinessAccountNumber] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'StartDate' THEN BillPayAccount1.[StartDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'StartDate' THEN BillPayAccount1.[StartDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EndDate' THEN BillPayAccount1.[EndDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EndDate' THEN BillPayAccount1.[EndDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DefaultMinimumPayment' THEN BillPayAccount1.[DefaultMinimumPayment] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DefaultMinimumPayment' THEN BillPayAccount1.[DefaultMinimumPayment] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DefaultMaximumPayment' THEN BillPayAccount1.[DefaultMaximumPayment] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DefaultMaximumPayment' THEN BillPayAccount1.[DefaultMaximumPayment] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BusinessMetaPartnerID' THEN BillPayAccount1.[BusinessMetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BusinessMetaPartnerID' THEN BillPayAccount1.[BusinessMetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'HourOfDay' THEN BillPayAccount1.[HourOfDay] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'HourOfDay' THEN BillPayAccount1.[HourOfDay] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DayOfWeek' THEN BillPayAccount1.[DayOfWeek] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DayOfWeek' THEN BillPayAccount1.[DayOfWeek] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'WeekOfMonth' THEN BillPayAccount1.[WeekOfMonth] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'WeekOfMonth' THEN BillPayAccount1.[WeekOfMonth] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MonthOfYear' THEN BillPayAccount1.[MonthOfYear] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MonthOfYear' THEN BillPayAccount1.[MonthOfYear] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NumberOfReminders' THEN BillPayAccount1.[NumberOfReminders] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NumberOfReminders' THEN BillPayAccount1.[NumberOfReminders] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FrequencyCode' THEN BillPayAccount1.[FrequencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FrequencyCode' THEN BillPayAccount1.[FrequencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN BillPayAccount1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN BillPayAccount1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN BillPayAccount1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN BillPayAccount1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN BillPayAccount1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN BillPayAccount1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN BillPayAccount1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN BillPayAccount1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN BillPayAccount1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN BillPayAccount1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FrequencyName' THEN Frequency1.[FrequencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FrequencyName' THEN Frequency1.[FrequencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Account1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Account1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllBillPayAccountDataByCurrencyCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'CurrencyCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeDateInactive bit = 0
	, @IncludeInactive bit = 0
	, @CurrencyCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all BillPayAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='CurrencyCode'

/*
** parameter validation
*/
IF (@CurrencyCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  BillPayAccount1.[AccountID]
		, BillPayAccount1.[BusinessAccountNumber]
		, BillPayAccount1.[StartDate]
		, BillPayAccount1.[EndDate]
		, BillPayAccount1.[DefaultMinimumPayment]
		, BillPayAccount1.[DefaultMaximumPayment]
		, BillPayAccount1.[BusinessMetaPartnerID]
		, BillPayAccount1.[HourOfDay]
		, BillPayAccount1.[DayOfWeek]
		, BillPayAccount1.[WeekOfMonth]
		, BillPayAccount1.[MonthOfYear]
		, BillPayAccount1.[NumberOfReminders]
		, BillPayAccount1.[FrequencyCode]
		, BillPayAccount1.[CreatedByUserID]
		, BillPayAccount1.[CreatedDate]
		, BillPayAccount1.[LastModifiedByUserID]
		, BillPayAccount1.[LastModifiedDate]
		, BillPayAccount1.[Timestamp]
		, Frequency1.[FrequencyName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_BillPayAccount] BillPayAccount1
	INNER JOIN [dbo].[tlkpAccounts_Frequency] Frequency1 ON Frequency1.[FrequencyCode]=BillPayAccount1.[FrequencyCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=BillPayAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		((BillPayAccount1.[StartDate] IS NULL) OR (BillPayAccount1.[StartDate] <= CASE WHEN @IncludeDateInactive=1 THEN BillPayAccount1.[StartDate] ELSE getdate() END))
		AND ((BillPayAccount1.[EndDate] IS NULL) OR (BillPayAccount1.[EndDate] >= CASE WHEN @IncludeDateInactive=1 THEN BillPayAccount1.[EndDate] ELSE getdate() END))
		AND Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND Account1.[CurrencyCode] = @CurrencyCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  BillPayAccount1.[AccountID]
		, BillPayAccount1.[BusinessAccountNumber]
		, BillPayAccount1.[StartDate]
		, BillPayAccount1.[EndDate]
		, BillPayAccount1.[DefaultMinimumPayment]
		, BillPayAccount1.[DefaultMaximumPayment]
		, BillPayAccount1.[BusinessMetaPartnerID]
		, BillPayAccount1.[HourOfDay]
		, BillPayAccount1.[DayOfWeek]
		, BillPayAccount1.[WeekOfMonth]
		, BillPayAccount1.[MonthOfYear]
		, BillPayAccount1.[NumberOfReminders]
		, BillPayAccount1.[FrequencyCode]
		, BillPayAccount1.[CreatedByUserID]
		, BillPayAccount1.[CreatedDate]
		, BillPayAccount1.[LastModifiedByUserID]
		, BillPayAccount1.[LastModifiedDate]
		, BillPayAccount1.[Timestamp]
		, Frequency1.[FrequencyName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_BillPayAccount] BillPayAccount1
	INNER JOIN [dbo].[tlkpAccounts_Frequency] Frequency1 ON Frequency1.[FrequencyCode]=BillPayAccount1.[FrequencyCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=BillPayAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		((BillPayAccount1.[StartDate] IS NULL) OR (BillPayAccount1.[StartDate] <= CASE WHEN @IncludeDateInactive=1 THEN BillPayAccount1.[StartDate] ELSE getdate() END))
		AND ((BillPayAccount1.[EndDate] IS NULL) OR (BillPayAccount1.[EndDate] >= CASE WHEN @IncludeDateInactive=1 THEN BillPayAccount1.[EndDate] ELSE getdate() END))
		AND Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND Account1.[CurrencyCode] = @CurrencyCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN BillPayAccount1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN BillPayAccount1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BusinessAccountNumber' THEN BillPayAccount1.[BusinessAccountNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BusinessAccountNumber' THEN BillPayAccount1.[BusinessAccountNumber] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'StartDate' THEN BillPayAccount1.[StartDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'StartDate' THEN BillPayAccount1.[StartDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EndDate' THEN BillPayAccount1.[EndDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EndDate' THEN BillPayAccount1.[EndDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DefaultMinimumPayment' THEN BillPayAccount1.[DefaultMinimumPayment] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DefaultMinimumPayment' THEN BillPayAccount1.[DefaultMinimumPayment] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DefaultMaximumPayment' THEN BillPayAccount1.[DefaultMaximumPayment] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DefaultMaximumPayment' THEN BillPayAccount1.[DefaultMaximumPayment] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BusinessMetaPartnerID' THEN BillPayAccount1.[BusinessMetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BusinessMetaPartnerID' THEN BillPayAccount1.[BusinessMetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'HourOfDay' THEN BillPayAccount1.[HourOfDay] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'HourOfDay' THEN BillPayAccount1.[HourOfDay] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DayOfWeek' THEN BillPayAccount1.[DayOfWeek] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DayOfWeek' THEN BillPayAccount1.[DayOfWeek] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'WeekOfMonth' THEN BillPayAccount1.[WeekOfMonth] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'WeekOfMonth' THEN BillPayAccount1.[WeekOfMonth] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MonthOfYear' THEN BillPayAccount1.[MonthOfYear] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MonthOfYear' THEN BillPayAccount1.[MonthOfYear] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NumberOfReminders' THEN BillPayAccount1.[NumberOfReminders] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NumberOfReminders' THEN BillPayAccount1.[NumberOfReminders] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FrequencyCode' THEN BillPayAccount1.[FrequencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FrequencyCode' THEN BillPayAccount1.[FrequencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN BillPayAccount1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN BillPayAccount1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN BillPayAccount1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN BillPayAccount1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN BillPayAccount1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN BillPayAccount1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN BillPayAccount1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN BillPayAccount1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN BillPayAccount1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN BillPayAccount1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FrequencyName' THEN Frequency1.[FrequencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FrequencyName' THEN Frequency1.[FrequencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Account1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Account1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllBillPayAccountDataByFrequencyCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'FrequencyCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeDateInactive bit = 0
	, @IncludeInactive bit = 0
	, @FrequencyCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all BillPayAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='FrequencyCode'

/*
** parameter validation
*/
IF (@FrequencyCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  BillPayAccount1.[AccountID]
		, BillPayAccount1.[BusinessAccountNumber]
		, BillPayAccount1.[StartDate]
		, BillPayAccount1.[EndDate]
		, BillPayAccount1.[DefaultMinimumPayment]
		, BillPayAccount1.[DefaultMaximumPayment]
		, BillPayAccount1.[BusinessMetaPartnerID]
		, BillPayAccount1.[HourOfDay]
		, BillPayAccount1.[DayOfWeek]
		, BillPayAccount1.[WeekOfMonth]
		, BillPayAccount1.[MonthOfYear]
		, BillPayAccount1.[NumberOfReminders]
		, BillPayAccount1.[FrequencyCode]
		, BillPayAccount1.[CreatedByUserID]
		, BillPayAccount1.[CreatedDate]
		, BillPayAccount1.[LastModifiedByUserID]
		, BillPayAccount1.[LastModifiedDate]
		, BillPayAccount1.[Timestamp]
		, Frequency1.[FrequencyName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_BillPayAccount] BillPayAccount1
	INNER JOIN [dbo].[tlkpAccounts_Frequency] Frequency1 ON Frequency1.[FrequencyCode]=BillPayAccount1.[FrequencyCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=BillPayAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		((BillPayAccount1.[StartDate] IS NULL) OR (BillPayAccount1.[StartDate] <= CASE WHEN @IncludeDateInactive=1 THEN BillPayAccount1.[StartDate] ELSE getdate() END))
		AND ((BillPayAccount1.[EndDate] IS NULL) OR (BillPayAccount1.[EndDate] >= CASE WHEN @IncludeDateInactive=1 THEN BillPayAccount1.[EndDate] ELSE getdate() END))
		AND Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND BillPayAccount1.[FrequencyCode] = @FrequencyCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  BillPayAccount1.[AccountID]
		, BillPayAccount1.[BusinessAccountNumber]
		, BillPayAccount1.[StartDate]
		, BillPayAccount1.[EndDate]
		, BillPayAccount1.[DefaultMinimumPayment]
		, BillPayAccount1.[DefaultMaximumPayment]
		, BillPayAccount1.[BusinessMetaPartnerID]
		, BillPayAccount1.[HourOfDay]
		, BillPayAccount1.[DayOfWeek]
		, BillPayAccount1.[WeekOfMonth]
		, BillPayAccount1.[MonthOfYear]
		, BillPayAccount1.[NumberOfReminders]
		, BillPayAccount1.[FrequencyCode]
		, BillPayAccount1.[CreatedByUserID]
		, BillPayAccount1.[CreatedDate]
		, BillPayAccount1.[LastModifiedByUserID]
		, BillPayAccount1.[LastModifiedDate]
		, BillPayAccount1.[Timestamp]
		, Frequency1.[FrequencyName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_BillPayAccount] BillPayAccount1
	INNER JOIN [dbo].[tlkpAccounts_Frequency] Frequency1 ON Frequency1.[FrequencyCode]=BillPayAccount1.[FrequencyCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=BillPayAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		((BillPayAccount1.[StartDate] IS NULL) OR (BillPayAccount1.[StartDate] <= CASE WHEN @IncludeDateInactive=1 THEN BillPayAccount1.[StartDate] ELSE getdate() END))
		AND ((BillPayAccount1.[EndDate] IS NULL) OR (BillPayAccount1.[EndDate] >= CASE WHEN @IncludeDateInactive=1 THEN BillPayAccount1.[EndDate] ELSE getdate() END))
		AND Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND BillPayAccount1.[FrequencyCode] = @FrequencyCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN BillPayAccount1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN BillPayAccount1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BusinessAccountNumber' THEN BillPayAccount1.[BusinessAccountNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BusinessAccountNumber' THEN BillPayAccount1.[BusinessAccountNumber] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'StartDate' THEN BillPayAccount1.[StartDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'StartDate' THEN BillPayAccount1.[StartDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EndDate' THEN BillPayAccount1.[EndDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EndDate' THEN BillPayAccount1.[EndDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DefaultMinimumPayment' THEN BillPayAccount1.[DefaultMinimumPayment] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DefaultMinimumPayment' THEN BillPayAccount1.[DefaultMinimumPayment] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DefaultMaximumPayment' THEN BillPayAccount1.[DefaultMaximumPayment] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DefaultMaximumPayment' THEN BillPayAccount1.[DefaultMaximumPayment] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BusinessMetaPartnerID' THEN BillPayAccount1.[BusinessMetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BusinessMetaPartnerID' THEN BillPayAccount1.[BusinessMetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'HourOfDay' THEN BillPayAccount1.[HourOfDay] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'HourOfDay' THEN BillPayAccount1.[HourOfDay] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DayOfWeek' THEN BillPayAccount1.[DayOfWeek] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DayOfWeek' THEN BillPayAccount1.[DayOfWeek] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'WeekOfMonth' THEN BillPayAccount1.[WeekOfMonth] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'WeekOfMonth' THEN BillPayAccount1.[WeekOfMonth] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MonthOfYear' THEN BillPayAccount1.[MonthOfYear] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MonthOfYear' THEN BillPayAccount1.[MonthOfYear] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NumberOfReminders' THEN BillPayAccount1.[NumberOfReminders] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NumberOfReminders' THEN BillPayAccount1.[NumberOfReminders] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FrequencyCode' THEN BillPayAccount1.[FrequencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FrequencyCode' THEN BillPayAccount1.[FrequencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN BillPayAccount1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN BillPayAccount1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN BillPayAccount1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN BillPayAccount1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN BillPayAccount1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN BillPayAccount1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN BillPayAccount1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN BillPayAccount1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN BillPayAccount1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN BillPayAccount1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FrequencyName' THEN Frequency1.[FrequencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FrequencyName' THEN Frequency1.[FrequencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Account1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Account1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllBillPayAccountDataByMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'MetaPartnerID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeDateInactive bit = 0
	, @IncludeInactive bit = 0
	, @MetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all BillPayAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='MetaPartnerID'

/*
** parameter validation
*/
IF (@MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  BillPayAccount1.[AccountID]
		, BillPayAccount1.[BusinessAccountNumber]
		, BillPayAccount1.[StartDate]
		, BillPayAccount1.[EndDate]
		, BillPayAccount1.[DefaultMinimumPayment]
		, BillPayAccount1.[DefaultMaximumPayment]
		, BillPayAccount1.[BusinessMetaPartnerID]
		, BillPayAccount1.[HourOfDay]
		, BillPayAccount1.[DayOfWeek]
		, BillPayAccount1.[WeekOfMonth]
		, BillPayAccount1.[MonthOfYear]
		, BillPayAccount1.[NumberOfReminders]
		, BillPayAccount1.[FrequencyCode]
		, BillPayAccount1.[CreatedByUserID]
		, BillPayAccount1.[CreatedDate]
		, BillPayAccount1.[LastModifiedByUserID]
		, BillPayAccount1.[LastModifiedDate]
		, BillPayAccount1.[Timestamp]
		, Frequency1.[FrequencyName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_BillPayAccount] BillPayAccount1
	INNER JOIN [dbo].[tlkpAccounts_Frequency] Frequency1 ON Frequency1.[FrequencyCode]=BillPayAccount1.[FrequencyCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=BillPayAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		((BillPayAccount1.[StartDate] IS NULL) OR (BillPayAccount1.[StartDate] <= CASE WHEN @IncludeDateInactive=1 THEN BillPayAccount1.[StartDate] ELSE getdate() END))
		AND ((BillPayAccount1.[EndDate] IS NULL) OR (BillPayAccount1.[EndDate] >= CASE WHEN @IncludeDateInactive=1 THEN BillPayAccount1.[EndDate] ELSE getdate() END))
		AND Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND Account1.[MetaPartnerID] = @MetaPartnerID

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  BillPayAccount1.[AccountID]
		, BillPayAccount1.[BusinessAccountNumber]
		, BillPayAccount1.[StartDate]
		, BillPayAccount1.[EndDate]
		, BillPayAccount1.[DefaultMinimumPayment]
		, BillPayAccount1.[DefaultMaximumPayment]
		, BillPayAccount1.[BusinessMetaPartnerID]
		, BillPayAccount1.[HourOfDay]
		, BillPayAccount1.[DayOfWeek]
		, BillPayAccount1.[WeekOfMonth]
		, BillPayAccount1.[MonthOfYear]
		, BillPayAccount1.[NumberOfReminders]
		, BillPayAccount1.[FrequencyCode]
		, BillPayAccount1.[CreatedByUserID]
		, BillPayAccount1.[CreatedDate]
		, BillPayAccount1.[LastModifiedByUserID]
		, BillPayAccount1.[LastModifiedDate]
		, BillPayAccount1.[Timestamp]
		, Frequency1.[FrequencyName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_BillPayAccount] BillPayAccount1
	INNER JOIN [dbo].[tlkpAccounts_Frequency] Frequency1 ON Frequency1.[FrequencyCode]=BillPayAccount1.[FrequencyCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=BillPayAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		((BillPayAccount1.[StartDate] IS NULL) OR (BillPayAccount1.[StartDate] <= CASE WHEN @IncludeDateInactive=1 THEN BillPayAccount1.[StartDate] ELSE getdate() END))
		AND ((BillPayAccount1.[EndDate] IS NULL) OR (BillPayAccount1.[EndDate] >= CASE WHEN @IncludeDateInactive=1 THEN BillPayAccount1.[EndDate] ELSE getdate() END))
		AND Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND Account1.[MetaPartnerID] = @MetaPartnerID

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN BillPayAccount1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN BillPayAccount1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BusinessAccountNumber' THEN BillPayAccount1.[BusinessAccountNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BusinessAccountNumber' THEN BillPayAccount1.[BusinessAccountNumber] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'StartDate' THEN BillPayAccount1.[StartDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'StartDate' THEN BillPayAccount1.[StartDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EndDate' THEN BillPayAccount1.[EndDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EndDate' THEN BillPayAccount1.[EndDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DefaultMinimumPayment' THEN BillPayAccount1.[DefaultMinimumPayment] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DefaultMinimumPayment' THEN BillPayAccount1.[DefaultMinimumPayment] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DefaultMaximumPayment' THEN BillPayAccount1.[DefaultMaximumPayment] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DefaultMaximumPayment' THEN BillPayAccount1.[DefaultMaximumPayment] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BusinessMetaPartnerID' THEN BillPayAccount1.[BusinessMetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BusinessMetaPartnerID' THEN BillPayAccount1.[BusinessMetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'HourOfDay' THEN BillPayAccount1.[HourOfDay] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'HourOfDay' THEN BillPayAccount1.[HourOfDay] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DayOfWeek' THEN BillPayAccount1.[DayOfWeek] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DayOfWeek' THEN BillPayAccount1.[DayOfWeek] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'WeekOfMonth' THEN BillPayAccount1.[WeekOfMonth] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'WeekOfMonth' THEN BillPayAccount1.[WeekOfMonth] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MonthOfYear' THEN BillPayAccount1.[MonthOfYear] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MonthOfYear' THEN BillPayAccount1.[MonthOfYear] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NumberOfReminders' THEN BillPayAccount1.[NumberOfReminders] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NumberOfReminders' THEN BillPayAccount1.[NumberOfReminders] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FrequencyCode' THEN BillPayAccount1.[FrequencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FrequencyCode' THEN BillPayAccount1.[FrequencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN BillPayAccount1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN BillPayAccount1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN BillPayAccount1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN BillPayAccount1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN BillPayAccount1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN BillPayAccount1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN BillPayAccount1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN BillPayAccount1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN BillPayAccount1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN BillPayAccount1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FrequencyName' THEN Frequency1.[FrequencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FrequencyName' THEN Frequency1.[FrequencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Account1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Account1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllCreditAccountData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'AccountID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all CreditAccount data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='AccountID'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  CreditAccount1.[AccountID]
		, CreditAccount1.[CreditCardNumber]
		, CreditAccount1.[CreditCardLastFour]
		, CreditAccount1.[CreditCardName]
		, CreditAccount1.[ExpirationDate]
		, CreditAccount1.[CreditCardTypeCode]
		, CreditAccount1.[CreatedByUserID]
		, CreditAccount1.[CreatedDate]
		, CreditAccount1.[LastModifiedByUserID]
		, CreditAccount1.[LastModifiedDate]
		, CreditAccount1.[Timestamp]
		, CreditCardType1.[CreditCardTypeName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_CreditAccount] CreditAccount1
	INNER JOIN [dbo].[tlkpAccounts_CreditCardType] CreditCardType1 ON CreditCardType1.[CreditCardTypeCode]=CreditAccount1.[CreditCardTypeCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=CreditAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  CreditAccount1.[AccountID]
		, CreditAccount1.[CreditCardNumber]
		, CreditAccount1.[CreditCardLastFour]
		, CreditAccount1.[CreditCardName]
		, CreditAccount1.[ExpirationDate]
		, CreditAccount1.[CreditCardTypeCode]
		, CreditAccount1.[CreatedByUserID]
		, CreditAccount1.[CreatedDate]
		, CreditAccount1.[LastModifiedByUserID]
		, CreditAccount1.[LastModifiedDate]
		, CreditAccount1.[Timestamp]
		, CreditCardType1.[CreditCardTypeName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_CreditAccount] CreditAccount1
	INNER JOIN [dbo].[tlkpAccounts_CreditCardType] CreditCardType1 ON CreditCardType1.[CreditCardTypeCode]=CreditAccount1.[CreditCardTypeCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=CreditAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN CreditAccount1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN CreditAccount1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreditCardNumber' THEN CreditAccount1.[CreditCardNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreditCardNumber' THEN CreditAccount1.[CreditCardNumber] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreditCardLastFour' THEN CreditAccount1.[CreditCardLastFour] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreditCardLastFour' THEN CreditAccount1.[CreditCardLastFour] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreditCardName' THEN CreditAccount1.[CreditCardName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreditCardName' THEN CreditAccount1.[CreditCardName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ExpirationDate' THEN CreditAccount1.[ExpirationDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ExpirationDate' THEN CreditAccount1.[ExpirationDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreditCardTypeCode' THEN CreditAccount1.[CreditCardTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreditCardTypeCode' THEN CreditAccount1.[CreditCardTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN CreditAccount1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN CreditAccount1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN CreditAccount1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN CreditAccount1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN CreditAccount1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN CreditAccount1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN CreditAccount1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN CreditAccount1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN CreditAccount1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN CreditAccount1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreditCardTypeName' THEN CreditCardType1.[CreditCardTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreditCardTypeName' THEN CreditCardType1.[CreditCardTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Account1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Account1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllCreditAccountDataByAccountID
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'AccountID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @AccountID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all CreditAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='AccountID'

/*
** parameter validation
*/
IF (@AccountID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  CreditAccount1.[AccountID]
		, CreditAccount1.[CreditCardNumber]
		, CreditAccount1.[CreditCardLastFour]
		, CreditAccount1.[CreditCardName]
		, CreditAccount1.[ExpirationDate]
		, CreditAccount1.[CreditCardTypeCode]
		, CreditAccount1.[CreatedByUserID]
		, CreditAccount1.[CreatedDate]
		, CreditAccount1.[LastModifiedByUserID]
		, CreditAccount1.[LastModifiedDate]
		, CreditAccount1.[Timestamp]
		, CreditCardType1.[CreditCardTypeName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_CreditAccount] CreditAccount1
	INNER JOIN [dbo].[tlkpAccounts_CreditCardType] CreditCardType1 ON CreditCardType1.[CreditCardTypeCode]=CreditAccount1.[CreditCardTypeCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=CreditAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND CreditAccount1.[AccountID] = @AccountID

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  CreditAccount1.[AccountID]
		, CreditAccount1.[CreditCardNumber]
		, CreditAccount1.[CreditCardLastFour]
		, CreditAccount1.[CreditCardName]
		, CreditAccount1.[ExpirationDate]
		, CreditAccount1.[CreditCardTypeCode]
		, CreditAccount1.[CreatedByUserID]
		, CreditAccount1.[CreatedDate]
		, CreditAccount1.[LastModifiedByUserID]
		, CreditAccount1.[LastModifiedDate]
		, CreditAccount1.[Timestamp]
		, CreditCardType1.[CreditCardTypeName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_CreditAccount] CreditAccount1
	INNER JOIN [dbo].[tlkpAccounts_CreditCardType] CreditCardType1 ON CreditCardType1.[CreditCardTypeCode]=CreditAccount1.[CreditCardTypeCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=CreditAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND CreditAccount1.[AccountID] = @AccountID

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN CreditAccount1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN CreditAccount1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreditCardNumber' THEN CreditAccount1.[CreditCardNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreditCardNumber' THEN CreditAccount1.[CreditCardNumber] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreditCardLastFour' THEN CreditAccount1.[CreditCardLastFour] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreditCardLastFour' THEN CreditAccount1.[CreditCardLastFour] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreditCardName' THEN CreditAccount1.[CreditCardName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreditCardName' THEN CreditAccount1.[CreditCardName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ExpirationDate' THEN CreditAccount1.[ExpirationDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ExpirationDate' THEN CreditAccount1.[ExpirationDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreditCardTypeCode' THEN CreditAccount1.[CreditCardTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreditCardTypeCode' THEN CreditAccount1.[CreditCardTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN CreditAccount1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN CreditAccount1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN CreditAccount1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN CreditAccount1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN CreditAccount1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN CreditAccount1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN CreditAccount1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN CreditAccount1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN CreditAccount1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN CreditAccount1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreditCardTypeName' THEN CreditCardType1.[CreditCardTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreditCardTypeName' THEN CreditCardType1.[CreditCardTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Account1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Account1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllCreditAccountDataByAccountSubTypeCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'AccountSubTypeCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @AccountSubTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all CreditAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='AccountSubTypeCode'

/*
** parameter validation
*/
IF (@AccountSubTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  CreditAccount1.[AccountID]
		, CreditAccount1.[CreditCardNumber]
		, CreditAccount1.[CreditCardLastFour]
		, CreditAccount1.[CreditCardName]
		, CreditAccount1.[ExpirationDate]
		, CreditAccount1.[CreditCardTypeCode]
		, CreditAccount1.[CreatedByUserID]
		, CreditAccount1.[CreatedDate]
		, CreditAccount1.[LastModifiedByUserID]
		, CreditAccount1.[LastModifiedDate]
		, CreditAccount1.[Timestamp]
		, CreditCardType1.[CreditCardTypeName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_CreditAccount] CreditAccount1
	INNER JOIN [dbo].[tlkpAccounts_CreditCardType] CreditCardType1 ON CreditCardType1.[CreditCardTypeCode]=CreditAccount1.[CreditCardTypeCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=CreditAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND Account1.[AccountSubTypeCode] = @AccountSubTypeCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  CreditAccount1.[AccountID]
		, CreditAccount1.[CreditCardNumber]
		, CreditAccount1.[CreditCardLastFour]
		, CreditAccount1.[CreditCardName]
		, CreditAccount1.[ExpirationDate]
		, CreditAccount1.[CreditCardTypeCode]
		, CreditAccount1.[CreatedByUserID]
		, CreditAccount1.[CreatedDate]
		, CreditAccount1.[LastModifiedByUserID]
		, CreditAccount1.[LastModifiedDate]
		, CreditAccount1.[Timestamp]
		, CreditCardType1.[CreditCardTypeName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_CreditAccount] CreditAccount1
	INNER JOIN [dbo].[tlkpAccounts_CreditCardType] CreditCardType1 ON CreditCardType1.[CreditCardTypeCode]=CreditAccount1.[CreditCardTypeCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=CreditAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND Account1.[AccountSubTypeCode] = @AccountSubTypeCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN CreditAccount1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN CreditAccount1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreditCardNumber' THEN CreditAccount1.[CreditCardNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreditCardNumber' THEN CreditAccount1.[CreditCardNumber] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreditCardLastFour' THEN CreditAccount1.[CreditCardLastFour] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreditCardLastFour' THEN CreditAccount1.[CreditCardLastFour] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreditCardName' THEN CreditAccount1.[CreditCardName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreditCardName' THEN CreditAccount1.[CreditCardName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ExpirationDate' THEN CreditAccount1.[ExpirationDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ExpirationDate' THEN CreditAccount1.[ExpirationDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreditCardTypeCode' THEN CreditAccount1.[CreditCardTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreditCardTypeCode' THEN CreditAccount1.[CreditCardTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN CreditAccount1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN CreditAccount1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN CreditAccount1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN CreditAccount1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN CreditAccount1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN CreditAccount1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN CreditAccount1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN CreditAccount1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN CreditAccount1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN CreditAccount1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreditCardTypeName' THEN CreditCardType1.[CreditCardTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreditCardTypeName' THEN CreditCardType1.[CreditCardTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Account1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Account1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllCreditAccountDataByCreditCardTypeCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'CreditCardTypeCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @CreditCardTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all CreditAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='CreditCardTypeCode'

/*
** parameter validation
*/
IF (@CreditCardTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  CreditAccount1.[AccountID]
		, CreditAccount1.[CreditCardNumber]
		, CreditAccount1.[CreditCardLastFour]
		, CreditAccount1.[CreditCardName]
		, CreditAccount1.[ExpirationDate]
		, CreditAccount1.[CreditCardTypeCode]
		, CreditAccount1.[CreatedByUserID]
		, CreditAccount1.[CreatedDate]
		, CreditAccount1.[LastModifiedByUserID]
		, CreditAccount1.[LastModifiedDate]
		, CreditAccount1.[Timestamp]
		, CreditCardType1.[CreditCardTypeName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_CreditAccount] CreditAccount1
	INNER JOIN [dbo].[tlkpAccounts_CreditCardType] CreditCardType1 ON CreditCardType1.[CreditCardTypeCode]=CreditAccount1.[CreditCardTypeCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=CreditAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND CreditAccount1.[CreditCardTypeCode] = @CreditCardTypeCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  CreditAccount1.[AccountID]
		, CreditAccount1.[CreditCardNumber]
		, CreditAccount1.[CreditCardLastFour]
		, CreditAccount1.[CreditCardName]
		, CreditAccount1.[ExpirationDate]
		, CreditAccount1.[CreditCardTypeCode]
		, CreditAccount1.[CreatedByUserID]
		, CreditAccount1.[CreatedDate]
		, CreditAccount1.[LastModifiedByUserID]
		, CreditAccount1.[LastModifiedDate]
		, CreditAccount1.[Timestamp]
		, CreditCardType1.[CreditCardTypeName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_CreditAccount] CreditAccount1
	INNER JOIN [dbo].[tlkpAccounts_CreditCardType] CreditCardType1 ON CreditCardType1.[CreditCardTypeCode]=CreditAccount1.[CreditCardTypeCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=CreditAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND CreditAccount1.[CreditCardTypeCode] = @CreditCardTypeCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN CreditAccount1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN CreditAccount1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreditCardNumber' THEN CreditAccount1.[CreditCardNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreditCardNumber' THEN CreditAccount1.[CreditCardNumber] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreditCardLastFour' THEN CreditAccount1.[CreditCardLastFour] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreditCardLastFour' THEN CreditAccount1.[CreditCardLastFour] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreditCardName' THEN CreditAccount1.[CreditCardName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreditCardName' THEN CreditAccount1.[CreditCardName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ExpirationDate' THEN CreditAccount1.[ExpirationDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ExpirationDate' THEN CreditAccount1.[ExpirationDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreditCardTypeCode' THEN CreditAccount1.[CreditCardTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreditCardTypeCode' THEN CreditAccount1.[CreditCardTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN CreditAccount1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN CreditAccount1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN CreditAccount1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN CreditAccount1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN CreditAccount1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN CreditAccount1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN CreditAccount1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN CreditAccount1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN CreditAccount1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN CreditAccount1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreditCardTypeName' THEN CreditCardType1.[CreditCardTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreditCardTypeName' THEN CreditCardType1.[CreditCardTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Account1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Account1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllCreditAccountDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'CreditCardNumber'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @CreditCardNumber nvarchar(50) = NULL
	, @CreditCardName nvarchar(255) = NULL
	, @ExpirationDateStart datetime = NULL
	, @ExpirationDateEnd datetime = NULL
	, @CreditCardTypeCode int
	, @AccountName nvarchar(255)
	, @CurrencyCode int
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all CreditAccount data by criteria.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='CreditCardNumber'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  CreditAccount1.[AccountID]
		, CreditAccount1.[CreditCardNumber]
		, CreditAccount1.[CreditCardLastFour]
		, CreditAccount1.[CreditCardName]
		, CreditAccount1.[ExpirationDate]
		, CreditAccount1.[CreditCardTypeCode]
		, CreditAccount1.[CreatedByUserID]
		, CreditAccount1.[CreatedDate]
		, CreditAccount1.[LastModifiedByUserID]
		, CreditAccount1.[LastModifiedDate]
		, CreditAccount1.[Timestamp]
		, CreditCardType1.[CreditCardTypeName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_CreditAccount] CreditAccount1
	INNER JOIN [dbo].[tlkpAccounts_CreditCardType] CreditCardType1 ON CreditCardType1.[CreditCardTypeCode]=CreditAccount1.[CreditCardTypeCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=CreditAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND (@CreditCardNumber IS NULL OR CreditAccount1.[CreditCardNumber] like '%' + @CreditCardNumber + '%')
		AND (@CreditCardName IS NULL OR CreditAccount1.[CreditCardName] like '%' + @CreditCardName + '%')
		AND ((@ExpirationDateStart  IS NULL) OR (CreditAccount1.[ExpirationDate] >=  @ExpirationDateStart))
		AND ((@ExpirationDateEnd  IS NULL) OR (CreditAccount1.[ExpirationDate] <=  @ExpirationDateEnd))
		AND (@CreditCardTypeCode IS NULL OR CreditAccount1.[CreditCardTypeCode] = @CreditCardTypeCode)
		AND (@AccountName IS NULL OR Account1.[AccountName] like '%' + @AccountName + '%')
		AND (@CurrencyCode IS NULL OR Account1.[CurrencyCode] = @CurrencyCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (Account1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (Account1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  CreditAccount1.[AccountID]
		, CreditAccount1.[CreditCardNumber]
		, CreditAccount1.[CreditCardLastFour]
		, CreditAccount1.[CreditCardName]
		, CreditAccount1.[ExpirationDate]
		, CreditAccount1.[CreditCardTypeCode]
		, CreditAccount1.[CreatedByUserID]
		, CreditAccount1.[CreatedDate]
		, CreditAccount1.[LastModifiedByUserID]
		, CreditAccount1.[LastModifiedDate]
		, CreditAccount1.[Timestamp]
		, CreditCardType1.[CreditCardTypeName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_CreditAccount] CreditAccount1
	INNER JOIN [dbo].[tlkpAccounts_CreditCardType] CreditCardType1 ON CreditCardType1.[CreditCardTypeCode]=CreditAccount1.[CreditCardTypeCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=CreditAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND (@CreditCardNumber IS NULL OR CreditAccount1.[CreditCardNumber] like '%' + @CreditCardNumber + '%')
		AND (@CreditCardName IS NULL OR CreditAccount1.[CreditCardName] like '%' + @CreditCardName + '%')
		AND ((@ExpirationDateStart  IS NULL) OR (CreditAccount1.[ExpirationDate] >=  @ExpirationDateStart))
		AND ((@ExpirationDateEnd  IS NULL) OR (CreditAccount1.[ExpirationDate] <=  @ExpirationDateEnd))
		AND (@CreditCardTypeCode IS NULL OR CreditAccount1.[CreditCardTypeCode] = @CreditCardTypeCode)
		AND (@AccountName IS NULL OR Account1.[AccountName] like '%' + @AccountName + '%')
		AND (@CurrencyCode IS NULL OR Account1.[CurrencyCode] = @CurrencyCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (Account1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (Account1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN CreditAccount1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN CreditAccount1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreditCardNumber' THEN CreditAccount1.[CreditCardNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreditCardNumber' THEN CreditAccount1.[CreditCardNumber] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreditCardLastFour' THEN CreditAccount1.[CreditCardLastFour] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreditCardLastFour' THEN CreditAccount1.[CreditCardLastFour] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreditCardName' THEN CreditAccount1.[CreditCardName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreditCardName' THEN CreditAccount1.[CreditCardName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ExpirationDate' THEN CreditAccount1.[ExpirationDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ExpirationDate' THEN CreditAccount1.[ExpirationDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreditCardTypeCode' THEN CreditAccount1.[CreditCardTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreditCardTypeCode' THEN CreditAccount1.[CreditCardTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN CreditAccount1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN CreditAccount1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN CreditAccount1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN CreditAccount1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN CreditAccount1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN CreditAccount1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN CreditAccount1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN CreditAccount1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN CreditAccount1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN CreditAccount1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreditCardTypeName' THEN CreditCardType1.[CreditCardTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreditCardTypeName' THEN CreditCardType1.[CreditCardTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Account1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Account1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllCreditAccountDataByCurrencyCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'CurrencyCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @CurrencyCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all CreditAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='CurrencyCode'

/*
** parameter validation
*/
IF (@CurrencyCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  CreditAccount1.[AccountID]
		, CreditAccount1.[CreditCardNumber]
		, CreditAccount1.[CreditCardLastFour]
		, CreditAccount1.[CreditCardName]
		, CreditAccount1.[ExpirationDate]
		, CreditAccount1.[CreditCardTypeCode]
		, CreditAccount1.[CreatedByUserID]
		, CreditAccount1.[CreatedDate]
		, CreditAccount1.[LastModifiedByUserID]
		, CreditAccount1.[LastModifiedDate]
		, CreditAccount1.[Timestamp]
		, CreditCardType1.[CreditCardTypeName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_CreditAccount] CreditAccount1
	INNER JOIN [dbo].[tlkpAccounts_CreditCardType] CreditCardType1 ON CreditCardType1.[CreditCardTypeCode]=CreditAccount1.[CreditCardTypeCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=CreditAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND Account1.[CurrencyCode] = @CurrencyCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  CreditAccount1.[AccountID]
		, CreditAccount1.[CreditCardNumber]
		, CreditAccount1.[CreditCardLastFour]
		, CreditAccount1.[CreditCardName]
		, CreditAccount1.[ExpirationDate]
		, CreditAccount1.[CreditCardTypeCode]
		, CreditAccount1.[CreatedByUserID]
		, CreditAccount1.[CreatedDate]
		, CreditAccount1.[LastModifiedByUserID]
		, CreditAccount1.[LastModifiedDate]
		, CreditAccount1.[Timestamp]
		, CreditCardType1.[CreditCardTypeName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_CreditAccount] CreditAccount1
	INNER JOIN [dbo].[tlkpAccounts_CreditCardType] CreditCardType1 ON CreditCardType1.[CreditCardTypeCode]=CreditAccount1.[CreditCardTypeCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=CreditAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND Account1.[CurrencyCode] = @CurrencyCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN CreditAccount1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN CreditAccount1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreditCardNumber' THEN CreditAccount1.[CreditCardNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreditCardNumber' THEN CreditAccount1.[CreditCardNumber] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreditCardLastFour' THEN CreditAccount1.[CreditCardLastFour] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreditCardLastFour' THEN CreditAccount1.[CreditCardLastFour] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreditCardName' THEN CreditAccount1.[CreditCardName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreditCardName' THEN CreditAccount1.[CreditCardName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ExpirationDate' THEN CreditAccount1.[ExpirationDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ExpirationDate' THEN CreditAccount1.[ExpirationDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreditCardTypeCode' THEN CreditAccount1.[CreditCardTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreditCardTypeCode' THEN CreditAccount1.[CreditCardTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN CreditAccount1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN CreditAccount1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN CreditAccount1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN CreditAccount1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN CreditAccount1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN CreditAccount1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN CreditAccount1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN CreditAccount1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN CreditAccount1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN CreditAccount1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreditCardTypeName' THEN CreditCardType1.[CreditCardTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreditCardTypeName' THEN CreditCardType1.[CreditCardTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Account1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Account1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllCreditAccountDataByMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'MetaPartnerID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @MetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all CreditAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='MetaPartnerID'

/*
** parameter validation
*/
IF (@MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  CreditAccount1.[AccountID]
		, CreditAccount1.[CreditCardNumber]
		, CreditAccount1.[CreditCardLastFour]
		, CreditAccount1.[CreditCardName]
		, CreditAccount1.[ExpirationDate]
		, CreditAccount1.[CreditCardTypeCode]
		, CreditAccount1.[CreatedByUserID]
		, CreditAccount1.[CreatedDate]
		, CreditAccount1.[LastModifiedByUserID]
		, CreditAccount1.[LastModifiedDate]
		, CreditAccount1.[Timestamp]
		, CreditCardType1.[CreditCardTypeName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_CreditAccount] CreditAccount1
	INNER JOIN [dbo].[tlkpAccounts_CreditCardType] CreditCardType1 ON CreditCardType1.[CreditCardTypeCode]=CreditAccount1.[CreditCardTypeCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=CreditAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND Account1.[MetaPartnerID] = @MetaPartnerID

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  CreditAccount1.[AccountID]
		, CreditAccount1.[CreditCardNumber]
		, CreditAccount1.[CreditCardLastFour]
		, CreditAccount1.[CreditCardName]
		, CreditAccount1.[ExpirationDate]
		, CreditAccount1.[CreditCardTypeCode]
		, CreditAccount1.[CreatedByUserID]
		, CreditAccount1.[CreatedDate]
		, CreditAccount1.[LastModifiedByUserID]
		, CreditAccount1.[LastModifiedDate]
		, CreditAccount1.[Timestamp]
		, CreditCardType1.[CreditCardTypeName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_CreditAccount] CreditAccount1
	INNER JOIN [dbo].[tlkpAccounts_CreditCardType] CreditCardType1 ON CreditCardType1.[CreditCardTypeCode]=CreditAccount1.[CreditCardTypeCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=CreditAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND Account1.[MetaPartnerID] = @MetaPartnerID

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN CreditAccount1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN CreditAccount1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreditCardNumber' THEN CreditAccount1.[CreditCardNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreditCardNumber' THEN CreditAccount1.[CreditCardNumber] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreditCardLastFour' THEN CreditAccount1.[CreditCardLastFour] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreditCardLastFour' THEN CreditAccount1.[CreditCardLastFour] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreditCardName' THEN CreditAccount1.[CreditCardName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreditCardName' THEN CreditAccount1.[CreditCardName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ExpirationDate' THEN CreditAccount1.[ExpirationDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ExpirationDate' THEN CreditAccount1.[ExpirationDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreditCardTypeCode' THEN CreditAccount1.[CreditCardTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreditCardTypeCode' THEN CreditAccount1.[CreditCardTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN CreditAccount1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN CreditAccount1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN CreditAccount1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN CreditAccount1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN CreditAccount1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN CreditAccount1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN CreditAccount1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN CreditAccount1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN CreditAccount1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN CreditAccount1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreditCardTypeName' THEN CreditCardType1.[CreditCardTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreditCardTypeName' THEN CreditCardType1.[CreditCardTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Account1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Account1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllCreditCardTypeData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'CreditCardTypeCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all CreditCardType data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='CreditCardTypeCode'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  CreditCardType1.[CreditCardTypeCode]
		, CreditCardType1.[CreditCardTypeName]
		, CreditCardType1.[Description]
		, CreditCardType1.[IsActive]
		, CreditCardType1.[CreatedByUserID]
		, CreditCardType1.[CreatedDate]
		, CreditCardType1.[LastModifiedByUserID]
		, CreditCardType1.[LastModifiedDate]
		, CreditCardType1.[Timestamp]
	FROM
	      [dbo].[tlkpAccounts_CreditCardType] CreditCardType1
	WHERE 
		CreditCardType1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN CreditCardType1.[IsActive] ELSE 1 END

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  CreditCardType1.[CreditCardTypeCode]
		, CreditCardType1.[CreditCardTypeName]
		, CreditCardType1.[Description]
		, CreditCardType1.[IsActive]
		, CreditCardType1.[CreatedByUserID]
		, CreditCardType1.[CreatedDate]
		, CreditCardType1.[LastModifiedByUserID]
		, CreditCardType1.[LastModifiedDate]
		, CreditCardType1.[Timestamp]
	FROM
	      [dbo].[tlkpAccounts_CreditCardType] CreditCardType1
	WHERE 
		CreditCardType1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN CreditCardType1.[IsActive] ELSE 1 END

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreditCardTypeCode' THEN CreditCardType1.[CreditCardTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreditCardTypeCode' THEN CreditCardType1.[CreditCardTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreditCardTypeName' THEN CreditCardType1.[CreditCardTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreditCardTypeName' THEN CreditCardType1.[CreditCardTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN CreditCardType1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN CreditCardType1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN CreditCardType1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN CreditCardType1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN CreditCardType1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN CreditCardType1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN CreditCardType1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN CreditCardType1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN CreditCardType1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN CreditCardType1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN CreditCardType1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN CreditCardType1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN CreditCardType1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN CreditCardType1.[Timestamp] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllCurrencyConversionData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'CurrencyConversionID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all CurrencyConversion data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='CurrencyConversionID'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  CurrencyConversion1.[CurrencyConversionID]
		, CurrencyConversion1.[ConvertFromCurrencyCode]
		, CurrencyConversion1.[ConvertToCurrencyCode]
		, CurrencyConversion1.[MetaPartnerID]
		, CurrencyConversion1.[ConversionRate]
		, CurrencyConversion1.[IsActive]
		, CurrencyConversion1.[CreatedByUserID]
		, CurrencyConversion1.[CreatedDate]
		, CurrencyConversion1.[LastModifiedByUserID]
		, CurrencyConversion1.[LastModifiedDate]
		, CurrencyConversion1.[Timestamp]
		, Currency1.[CurrencyName]
	FROM
	      [dbo].[tblAccounts_CurrencyConversion] CurrencyConversion1
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=CurrencyConversion1.[ConvertFromCurrencyCode]
	WHERE 
		CurrencyConversion1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN CurrencyConversion1.[IsActive] ELSE 1 END

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  CurrencyConversion1.[CurrencyConversionID]
		, CurrencyConversion1.[ConvertFromCurrencyCode]
		, CurrencyConversion1.[ConvertToCurrencyCode]
		, CurrencyConversion1.[MetaPartnerID]
		, CurrencyConversion1.[ConversionRate]
		, CurrencyConversion1.[IsActive]
		, CurrencyConversion1.[CreatedByUserID]
		, CurrencyConversion1.[CreatedDate]
		, CurrencyConversion1.[LastModifiedByUserID]
		, CurrencyConversion1.[LastModifiedDate]
		, CurrencyConversion1.[Timestamp]
		, Currency1.[CurrencyName]
	FROM
	      [dbo].[tblAccounts_CurrencyConversion] CurrencyConversion1
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=CurrencyConversion1.[ConvertFromCurrencyCode]
	WHERE 
		CurrencyConversion1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN CurrencyConversion1.[IsActive] ELSE 1 END

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyConversionID' THEN CurrencyConversion1.[CurrencyConversionID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyConversionID' THEN CurrencyConversion1.[CurrencyConversionID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ConvertFromCurrencyCode' THEN CurrencyConversion1.[ConvertFromCurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ConvertFromCurrencyCode' THEN CurrencyConversion1.[ConvertFromCurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ConvertToCurrencyCode' THEN CurrencyConversion1.[ConvertToCurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ConvertToCurrencyCode' THEN CurrencyConversion1.[ConvertToCurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN CurrencyConversion1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN CurrencyConversion1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ConversionRate' THEN CurrencyConversion1.[ConversionRate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ConversionRate' THEN CurrencyConversion1.[ConversionRate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN CurrencyConversion1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN CurrencyConversion1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN CurrencyConversion1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN CurrencyConversion1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN CurrencyConversion1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN CurrencyConversion1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN CurrencyConversion1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN CurrencyConversion1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN CurrencyConversion1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN CurrencyConversion1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN CurrencyConversion1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN CurrencyConversion1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllCurrencyConversionDataByConvertFromCurrencyCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'ConvertFromCurrencyCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @ConvertFromCurrencyCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all CurrencyConversion data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='ConvertFromCurrencyCode'

/*
** parameter validation
*/
IF (@ConvertFromCurrencyCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  CurrencyConversion1.[CurrencyConversionID]
		, CurrencyConversion1.[ConvertFromCurrencyCode]
		, CurrencyConversion1.[ConvertToCurrencyCode]
		, CurrencyConversion1.[MetaPartnerID]
		, CurrencyConversion1.[ConversionRate]
		, CurrencyConversion1.[IsActive]
		, CurrencyConversion1.[CreatedByUserID]
		, CurrencyConversion1.[CreatedDate]
		, CurrencyConversion1.[LastModifiedByUserID]
		, CurrencyConversion1.[LastModifiedDate]
		, CurrencyConversion1.[Timestamp]
		, Currency1.[CurrencyName]
	FROM
	      [dbo].[tblAccounts_CurrencyConversion] CurrencyConversion1
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=CurrencyConversion1.[ConvertFromCurrencyCode]
	WHERE 
		CurrencyConversion1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN CurrencyConversion1.[IsActive] ELSE 1 END
		AND CurrencyConversion1.[ConvertFromCurrencyCode] = @ConvertFromCurrencyCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  CurrencyConversion1.[CurrencyConversionID]
		, CurrencyConversion1.[ConvertFromCurrencyCode]
		, CurrencyConversion1.[ConvertToCurrencyCode]
		, CurrencyConversion1.[MetaPartnerID]
		, CurrencyConversion1.[ConversionRate]
		, CurrencyConversion1.[IsActive]
		, CurrencyConversion1.[CreatedByUserID]
		, CurrencyConversion1.[CreatedDate]
		, CurrencyConversion1.[LastModifiedByUserID]
		, CurrencyConversion1.[LastModifiedDate]
		, CurrencyConversion1.[Timestamp]
		, Currency1.[CurrencyName]
	FROM
	      [dbo].[tblAccounts_CurrencyConversion] CurrencyConversion1
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=CurrencyConversion1.[ConvertFromCurrencyCode]
	WHERE 
		CurrencyConversion1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN CurrencyConversion1.[IsActive] ELSE 1 END
		AND CurrencyConversion1.[ConvertFromCurrencyCode] = @ConvertFromCurrencyCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyConversionID' THEN CurrencyConversion1.[CurrencyConversionID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyConversionID' THEN CurrencyConversion1.[CurrencyConversionID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ConvertFromCurrencyCode' THEN CurrencyConversion1.[ConvertFromCurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ConvertFromCurrencyCode' THEN CurrencyConversion1.[ConvertFromCurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ConvertToCurrencyCode' THEN CurrencyConversion1.[ConvertToCurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ConvertToCurrencyCode' THEN CurrencyConversion1.[ConvertToCurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN CurrencyConversion1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN CurrencyConversion1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ConversionRate' THEN CurrencyConversion1.[ConversionRate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ConversionRate' THEN CurrencyConversion1.[ConversionRate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN CurrencyConversion1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN CurrencyConversion1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN CurrencyConversion1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN CurrencyConversion1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN CurrencyConversion1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN CurrencyConversion1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN CurrencyConversion1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN CurrencyConversion1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN CurrencyConversion1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN CurrencyConversion1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN CurrencyConversion1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN CurrencyConversion1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllCurrencyConversionDataByConvertToCurrencyCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'ConvertToCurrencyCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @ConvertToCurrencyCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all CurrencyConversion data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='ConvertToCurrencyCode'

/*
** parameter validation
*/
IF (@ConvertToCurrencyCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  CurrencyConversion1.[CurrencyConversionID]
		, CurrencyConversion1.[ConvertFromCurrencyCode]
		, CurrencyConversion1.[ConvertToCurrencyCode]
		, CurrencyConversion1.[MetaPartnerID]
		, CurrencyConversion1.[ConversionRate]
		, CurrencyConversion1.[IsActive]
		, CurrencyConversion1.[CreatedByUserID]
		, CurrencyConversion1.[CreatedDate]
		, CurrencyConversion1.[LastModifiedByUserID]
		, CurrencyConversion1.[LastModifiedDate]
		, CurrencyConversion1.[Timestamp]
		, Currency1.[CurrencyName]
	FROM
	      [dbo].[tblAccounts_CurrencyConversion] CurrencyConversion1
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=CurrencyConversion1.[ConvertFromCurrencyCode]
	WHERE 
		CurrencyConversion1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN CurrencyConversion1.[IsActive] ELSE 1 END
		AND CurrencyConversion1.[ConvertToCurrencyCode] = @ConvertToCurrencyCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  CurrencyConversion1.[CurrencyConversionID]
		, CurrencyConversion1.[ConvertFromCurrencyCode]
		, CurrencyConversion1.[ConvertToCurrencyCode]
		, CurrencyConversion1.[MetaPartnerID]
		, CurrencyConversion1.[ConversionRate]
		, CurrencyConversion1.[IsActive]
		, CurrencyConversion1.[CreatedByUserID]
		, CurrencyConversion1.[CreatedDate]
		, CurrencyConversion1.[LastModifiedByUserID]
		, CurrencyConversion1.[LastModifiedDate]
		, CurrencyConversion1.[Timestamp]
		, Currency1.[CurrencyName]
	FROM
	      [dbo].[tblAccounts_CurrencyConversion] CurrencyConversion1
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=CurrencyConversion1.[ConvertFromCurrencyCode]
	WHERE 
		CurrencyConversion1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN CurrencyConversion1.[IsActive] ELSE 1 END
		AND CurrencyConversion1.[ConvertToCurrencyCode] = @ConvertToCurrencyCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyConversionID' THEN CurrencyConversion1.[CurrencyConversionID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyConversionID' THEN CurrencyConversion1.[CurrencyConversionID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ConvertFromCurrencyCode' THEN CurrencyConversion1.[ConvertFromCurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ConvertFromCurrencyCode' THEN CurrencyConversion1.[ConvertFromCurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ConvertToCurrencyCode' THEN CurrencyConversion1.[ConvertToCurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ConvertToCurrencyCode' THEN CurrencyConversion1.[ConvertToCurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN CurrencyConversion1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN CurrencyConversion1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ConversionRate' THEN CurrencyConversion1.[ConversionRate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ConversionRate' THEN CurrencyConversion1.[ConversionRate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN CurrencyConversion1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN CurrencyConversion1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN CurrencyConversion1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN CurrencyConversion1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN CurrencyConversion1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN CurrencyConversion1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN CurrencyConversion1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN CurrencyConversion1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN CurrencyConversion1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN CurrencyConversion1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN CurrencyConversion1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN CurrencyConversion1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllCurrencyConversionDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'ConvertFromCurrencyCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @ConvertFromCurrencyCode int
	, @ConvertToCurrencyCode int
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all CurrencyConversion data by criteria.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='ConvertFromCurrencyCode'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  CurrencyConversion1.[CurrencyConversionID]
		, CurrencyConversion1.[ConvertFromCurrencyCode]
		, CurrencyConversion1.[ConvertToCurrencyCode]
		, CurrencyConversion1.[MetaPartnerID]
		, CurrencyConversion1.[ConversionRate]
		, CurrencyConversion1.[IsActive]
		, CurrencyConversion1.[CreatedByUserID]
		, CurrencyConversion1.[CreatedDate]
		, CurrencyConversion1.[LastModifiedByUserID]
		, CurrencyConversion1.[LastModifiedDate]
		, CurrencyConversion1.[Timestamp]
		, Currency1.[CurrencyName]
	FROM
	      [dbo].[tblAccounts_CurrencyConversion] CurrencyConversion1
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=CurrencyConversion1.[ConvertFromCurrencyCode]
	WHERE 
		CurrencyConversion1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN CurrencyConversion1.[IsActive] ELSE 1 END
		AND (@ConvertFromCurrencyCode IS NULL OR CurrencyConversion1.[ConvertFromCurrencyCode] = @ConvertFromCurrencyCode)
		AND (@ConvertToCurrencyCode IS NULL OR CurrencyConversion1.[ConvertToCurrencyCode] = @ConvertToCurrencyCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (CurrencyConversion1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (CurrencyConversion1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  CurrencyConversion1.[CurrencyConversionID]
		, CurrencyConversion1.[ConvertFromCurrencyCode]
		, CurrencyConversion1.[ConvertToCurrencyCode]
		, CurrencyConversion1.[MetaPartnerID]
		, CurrencyConversion1.[ConversionRate]
		, CurrencyConversion1.[IsActive]
		, CurrencyConversion1.[CreatedByUserID]
		, CurrencyConversion1.[CreatedDate]
		, CurrencyConversion1.[LastModifiedByUserID]
		, CurrencyConversion1.[LastModifiedDate]
		, CurrencyConversion1.[Timestamp]
		, Currency1.[CurrencyName]
	FROM
	      [dbo].[tblAccounts_CurrencyConversion] CurrencyConversion1
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=CurrencyConversion1.[ConvertFromCurrencyCode]
	WHERE 
		CurrencyConversion1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN CurrencyConversion1.[IsActive] ELSE 1 END
		AND (@ConvertFromCurrencyCode IS NULL OR CurrencyConversion1.[ConvertFromCurrencyCode] = @ConvertFromCurrencyCode)
		AND (@ConvertToCurrencyCode IS NULL OR CurrencyConversion1.[ConvertToCurrencyCode] = @ConvertToCurrencyCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (CurrencyConversion1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (CurrencyConversion1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyConversionID' THEN CurrencyConversion1.[CurrencyConversionID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyConversionID' THEN CurrencyConversion1.[CurrencyConversionID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ConvertFromCurrencyCode' THEN CurrencyConversion1.[ConvertFromCurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ConvertFromCurrencyCode' THEN CurrencyConversion1.[ConvertFromCurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ConvertToCurrencyCode' THEN CurrencyConversion1.[ConvertToCurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ConvertToCurrencyCode' THEN CurrencyConversion1.[ConvertToCurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN CurrencyConversion1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN CurrencyConversion1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ConversionRate' THEN CurrencyConversion1.[ConversionRate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ConversionRate' THEN CurrencyConversion1.[ConversionRate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN CurrencyConversion1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN CurrencyConversion1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN CurrencyConversion1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN CurrencyConversion1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN CurrencyConversion1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN CurrencyConversion1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN CurrencyConversion1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN CurrencyConversion1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN CurrencyConversion1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN CurrencyConversion1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN CurrencyConversion1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN CurrencyConversion1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllCurrencyConversionDataByMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'MetaPartnerID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @MetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all CurrencyConversion data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='MetaPartnerID'

/*
** parameter validation
*/
IF (@MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  CurrencyConversion1.[CurrencyConversionID]
		, CurrencyConversion1.[ConvertFromCurrencyCode]
		, CurrencyConversion1.[ConvertToCurrencyCode]
		, CurrencyConversion1.[MetaPartnerID]
		, CurrencyConversion1.[ConversionRate]
		, CurrencyConversion1.[IsActive]
		, CurrencyConversion1.[CreatedByUserID]
		, CurrencyConversion1.[CreatedDate]
		, CurrencyConversion1.[LastModifiedByUserID]
		, CurrencyConversion1.[LastModifiedDate]
		, CurrencyConversion1.[Timestamp]
		, Currency1.[CurrencyName]
	FROM
	      [dbo].[tblAccounts_CurrencyConversion] CurrencyConversion1
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=CurrencyConversion1.[ConvertFromCurrencyCode]
	WHERE 
		CurrencyConversion1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN CurrencyConversion1.[IsActive] ELSE 1 END
		AND CurrencyConversion1.[MetaPartnerID] = @MetaPartnerID

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  CurrencyConversion1.[CurrencyConversionID]
		, CurrencyConversion1.[ConvertFromCurrencyCode]
		, CurrencyConversion1.[ConvertToCurrencyCode]
		, CurrencyConversion1.[MetaPartnerID]
		, CurrencyConversion1.[ConversionRate]
		, CurrencyConversion1.[IsActive]
		, CurrencyConversion1.[CreatedByUserID]
		, CurrencyConversion1.[CreatedDate]
		, CurrencyConversion1.[LastModifiedByUserID]
		, CurrencyConversion1.[LastModifiedDate]
		, CurrencyConversion1.[Timestamp]
		, Currency1.[CurrencyName]
	FROM
	      [dbo].[tblAccounts_CurrencyConversion] CurrencyConversion1
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=CurrencyConversion1.[ConvertFromCurrencyCode]
	WHERE 
		CurrencyConversion1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN CurrencyConversion1.[IsActive] ELSE 1 END
		AND CurrencyConversion1.[MetaPartnerID] = @MetaPartnerID

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyConversionID' THEN CurrencyConversion1.[CurrencyConversionID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyConversionID' THEN CurrencyConversion1.[CurrencyConversionID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ConvertFromCurrencyCode' THEN CurrencyConversion1.[ConvertFromCurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ConvertFromCurrencyCode' THEN CurrencyConversion1.[ConvertFromCurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ConvertToCurrencyCode' THEN CurrencyConversion1.[ConvertToCurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ConvertToCurrencyCode' THEN CurrencyConversion1.[ConvertToCurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN CurrencyConversion1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN CurrencyConversion1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ConversionRate' THEN CurrencyConversion1.[ConversionRate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ConversionRate' THEN CurrencyConversion1.[ConversionRate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN CurrencyConversion1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN CurrencyConversion1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN CurrencyConversion1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN CurrencyConversion1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN CurrencyConversion1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN CurrencyConversion1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN CurrencyConversion1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN CurrencyConversion1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN CurrencyConversion1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN CurrencyConversion1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN CurrencyConversion1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN CurrencyConversion1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllCurrencyData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'CurrencyCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all Currency data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='CurrencyCode'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  Currency1.[CurrencyCode]
		, Currency1.[CurrencyName]
		, Currency1.[IsPaymentCurrency]
		, Currency1.[Description]
		, Currency1.[IsActive]
		, Currency1.[CreatedByUserID]
		, Currency1.[CreatedDate]
		, Currency1.[LastModifiedByUserID]
		, Currency1.[LastModifiedDate]
		, Currency1.[Timestamp]
	FROM
	      [dbo].[tlkpAccounts_Currency] Currency1
	WHERE 
		Currency1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Currency1.[IsActive] ELSE 1 END

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  Currency1.[CurrencyCode]
		, Currency1.[CurrencyName]
		, Currency1.[IsPaymentCurrency]
		, Currency1.[Description]
		, Currency1.[IsActive]
		, Currency1.[CreatedByUserID]
		, Currency1.[CreatedDate]
		, Currency1.[LastModifiedByUserID]
		, Currency1.[LastModifiedDate]
		, Currency1.[Timestamp]
	FROM
	      [dbo].[tlkpAccounts_Currency] Currency1
	WHERE 
		Currency1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Currency1.[IsActive] ELSE 1 END

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Currency1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Currency1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsPaymentCurrency' THEN Currency1.[IsPaymentCurrency] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsPaymentCurrency' THEN Currency1.[IsPaymentCurrency] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Currency1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Currency1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Currency1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Currency1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Currency1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Currency1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Currency1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Currency1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Currency1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Currency1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Currency1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Currency1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Currency1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Currency1.[Timestamp] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllDebitAccountData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'AccountID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all DebitAccount data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='AccountID'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  DebitAccount1.[AccountID]
		, DebitAccount1.[DebitAccountNumber]
		, DebitAccount1.[IsDefaultDebitAccount]
		, DebitAccount1.[CreatedByUserID]
		, DebitAccount1.[CreatedDate]
		, DebitAccount1.[LastModifiedByUserID]
		, DebitAccount1.[LastModifiedDate]
		, DebitAccount1.[Timestamp]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_DebitAccount] DebitAccount1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=DebitAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  DebitAccount1.[AccountID]
		, DebitAccount1.[DebitAccountNumber]
		, DebitAccount1.[IsDefaultDebitAccount]
		, DebitAccount1.[CreatedByUserID]
		, DebitAccount1.[CreatedDate]
		, DebitAccount1.[LastModifiedByUserID]
		, DebitAccount1.[LastModifiedDate]
		, DebitAccount1.[Timestamp]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_DebitAccount] DebitAccount1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=DebitAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN DebitAccount1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN DebitAccount1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DebitAccountNumber' THEN DebitAccount1.[DebitAccountNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DebitAccountNumber' THEN DebitAccount1.[DebitAccountNumber] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsDefaultDebitAccount' THEN DebitAccount1.[IsDefaultDebitAccount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsDefaultDebitAccount' THEN DebitAccount1.[IsDefaultDebitAccount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN DebitAccount1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN DebitAccount1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN DebitAccount1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN DebitAccount1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN DebitAccount1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN DebitAccount1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN DebitAccount1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN DebitAccount1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN DebitAccount1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN DebitAccount1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Account1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Account1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllDebitAccountDataByAccountID
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'AccountID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @AccountID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all DebitAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='AccountID'

/*
** parameter validation
*/
IF (@AccountID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  DebitAccount1.[AccountID]
		, DebitAccount1.[DebitAccountNumber]
		, DebitAccount1.[IsDefaultDebitAccount]
		, DebitAccount1.[CreatedByUserID]
		, DebitAccount1.[CreatedDate]
		, DebitAccount1.[LastModifiedByUserID]
		, DebitAccount1.[LastModifiedDate]
		, DebitAccount1.[Timestamp]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_DebitAccount] DebitAccount1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=DebitAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND DebitAccount1.[AccountID] = @AccountID

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  DebitAccount1.[AccountID]
		, DebitAccount1.[DebitAccountNumber]
		, DebitAccount1.[IsDefaultDebitAccount]
		, DebitAccount1.[CreatedByUserID]
		, DebitAccount1.[CreatedDate]
		, DebitAccount1.[LastModifiedByUserID]
		, DebitAccount1.[LastModifiedDate]
		, DebitAccount1.[Timestamp]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_DebitAccount] DebitAccount1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=DebitAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND DebitAccount1.[AccountID] = @AccountID

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN DebitAccount1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN DebitAccount1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DebitAccountNumber' THEN DebitAccount1.[DebitAccountNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DebitAccountNumber' THEN DebitAccount1.[DebitAccountNumber] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsDefaultDebitAccount' THEN DebitAccount1.[IsDefaultDebitAccount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsDefaultDebitAccount' THEN DebitAccount1.[IsDefaultDebitAccount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN DebitAccount1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN DebitAccount1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN DebitAccount1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN DebitAccount1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN DebitAccount1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN DebitAccount1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN DebitAccount1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN DebitAccount1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN DebitAccount1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN DebitAccount1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Account1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Account1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllDebitAccountDataByAccountSubTypeCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'AccountSubTypeCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @AccountSubTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all DebitAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='AccountSubTypeCode'

/*
** parameter validation
*/
IF (@AccountSubTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  DebitAccount1.[AccountID]
		, DebitAccount1.[DebitAccountNumber]
		, DebitAccount1.[IsDefaultDebitAccount]
		, DebitAccount1.[CreatedByUserID]
		, DebitAccount1.[CreatedDate]
		, DebitAccount1.[LastModifiedByUserID]
		, DebitAccount1.[LastModifiedDate]
		, DebitAccount1.[Timestamp]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_DebitAccount] DebitAccount1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=DebitAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND Account1.[AccountSubTypeCode] = @AccountSubTypeCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  DebitAccount1.[AccountID]
		, DebitAccount1.[DebitAccountNumber]
		, DebitAccount1.[IsDefaultDebitAccount]
		, DebitAccount1.[CreatedByUserID]
		, DebitAccount1.[CreatedDate]
		, DebitAccount1.[LastModifiedByUserID]
		, DebitAccount1.[LastModifiedDate]
		, DebitAccount1.[Timestamp]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_DebitAccount] DebitAccount1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=DebitAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND Account1.[AccountSubTypeCode] = @AccountSubTypeCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN DebitAccount1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN DebitAccount1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DebitAccountNumber' THEN DebitAccount1.[DebitAccountNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DebitAccountNumber' THEN DebitAccount1.[DebitAccountNumber] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsDefaultDebitAccount' THEN DebitAccount1.[IsDefaultDebitAccount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsDefaultDebitAccount' THEN DebitAccount1.[IsDefaultDebitAccount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN DebitAccount1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN DebitAccount1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN DebitAccount1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN DebitAccount1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN DebitAccount1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN DebitAccount1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN DebitAccount1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN DebitAccount1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN DebitAccount1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN DebitAccount1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Account1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Account1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllDebitAccountDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'DebitAccountNumber'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @DebitAccountNumber nvarchar(100)
	, @AccountName nvarchar(255)
	, @CurrencyCode int
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all DebitAccount data by criteria.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='DebitAccountNumber'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  DebitAccount1.[AccountID]
		, DebitAccount1.[DebitAccountNumber]
		, DebitAccount1.[IsDefaultDebitAccount]
		, DebitAccount1.[CreatedByUserID]
		, DebitAccount1.[CreatedDate]
		, DebitAccount1.[LastModifiedByUserID]
		, DebitAccount1.[LastModifiedDate]
		, DebitAccount1.[Timestamp]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_DebitAccount] DebitAccount1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=DebitAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND (@DebitAccountNumber IS NULL OR DebitAccount1.[DebitAccountNumber] like '%' + @DebitAccountNumber + '%')
		AND (@AccountName IS NULL OR Account1.[AccountName] like '%' + @AccountName + '%')
		AND (@CurrencyCode IS NULL OR Account1.[CurrencyCode] = @CurrencyCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (Account1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (Account1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  DebitAccount1.[AccountID]
		, DebitAccount1.[DebitAccountNumber]
		, DebitAccount1.[IsDefaultDebitAccount]
		, DebitAccount1.[CreatedByUserID]
		, DebitAccount1.[CreatedDate]
		, DebitAccount1.[LastModifiedByUserID]
		, DebitAccount1.[LastModifiedDate]
		, DebitAccount1.[Timestamp]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_DebitAccount] DebitAccount1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=DebitAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND (@DebitAccountNumber IS NULL OR DebitAccount1.[DebitAccountNumber] like '%' + @DebitAccountNumber + '%')
		AND (@AccountName IS NULL OR Account1.[AccountName] like '%' + @AccountName + '%')
		AND (@CurrencyCode IS NULL OR Account1.[CurrencyCode] = @CurrencyCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (Account1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (Account1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN DebitAccount1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN DebitAccount1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DebitAccountNumber' THEN DebitAccount1.[DebitAccountNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DebitAccountNumber' THEN DebitAccount1.[DebitAccountNumber] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsDefaultDebitAccount' THEN DebitAccount1.[IsDefaultDebitAccount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsDefaultDebitAccount' THEN DebitAccount1.[IsDefaultDebitAccount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN DebitAccount1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN DebitAccount1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN DebitAccount1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN DebitAccount1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN DebitAccount1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN DebitAccount1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN DebitAccount1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN DebitAccount1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN DebitAccount1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN DebitAccount1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Account1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Account1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllDebitAccountDataByCurrencyCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'CurrencyCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @CurrencyCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all DebitAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='CurrencyCode'

/*
** parameter validation
*/
IF (@CurrencyCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  DebitAccount1.[AccountID]
		, DebitAccount1.[DebitAccountNumber]
		, DebitAccount1.[IsDefaultDebitAccount]
		, DebitAccount1.[CreatedByUserID]
		, DebitAccount1.[CreatedDate]
		, DebitAccount1.[LastModifiedByUserID]
		, DebitAccount1.[LastModifiedDate]
		, DebitAccount1.[Timestamp]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_DebitAccount] DebitAccount1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=DebitAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND Account1.[CurrencyCode] = @CurrencyCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  DebitAccount1.[AccountID]
		, DebitAccount1.[DebitAccountNumber]
		, DebitAccount1.[IsDefaultDebitAccount]
		, DebitAccount1.[CreatedByUserID]
		, DebitAccount1.[CreatedDate]
		, DebitAccount1.[LastModifiedByUserID]
		, DebitAccount1.[LastModifiedDate]
		, DebitAccount1.[Timestamp]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_DebitAccount] DebitAccount1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=DebitAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND Account1.[CurrencyCode] = @CurrencyCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN DebitAccount1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN DebitAccount1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DebitAccountNumber' THEN DebitAccount1.[DebitAccountNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DebitAccountNumber' THEN DebitAccount1.[DebitAccountNumber] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsDefaultDebitAccount' THEN DebitAccount1.[IsDefaultDebitAccount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsDefaultDebitAccount' THEN DebitAccount1.[IsDefaultDebitAccount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN DebitAccount1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN DebitAccount1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN DebitAccount1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN DebitAccount1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN DebitAccount1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN DebitAccount1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN DebitAccount1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN DebitAccount1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN DebitAccount1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN DebitAccount1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Account1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Account1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllDebitAccountDataByMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'MetaPartnerID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @MetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all DebitAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='MetaPartnerID'

/*
** parameter validation
*/
IF (@MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  DebitAccount1.[AccountID]
		, DebitAccount1.[DebitAccountNumber]
		, DebitAccount1.[IsDefaultDebitAccount]
		, DebitAccount1.[CreatedByUserID]
		, DebitAccount1.[CreatedDate]
		, DebitAccount1.[LastModifiedByUserID]
		, DebitAccount1.[LastModifiedDate]
		, DebitAccount1.[Timestamp]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_DebitAccount] DebitAccount1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=DebitAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND Account1.[MetaPartnerID] = @MetaPartnerID

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  DebitAccount1.[AccountID]
		, DebitAccount1.[DebitAccountNumber]
		, DebitAccount1.[IsDefaultDebitAccount]
		, DebitAccount1.[CreatedByUserID]
		, DebitAccount1.[CreatedDate]
		, DebitAccount1.[LastModifiedByUserID]
		, DebitAccount1.[LastModifiedDate]
		, DebitAccount1.[Timestamp]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_DebitAccount] DebitAccount1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=DebitAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND Account1.[MetaPartnerID] = @MetaPartnerID

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN DebitAccount1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN DebitAccount1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DebitAccountNumber' THEN DebitAccount1.[DebitAccountNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DebitAccountNumber' THEN DebitAccount1.[DebitAccountNumber] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsDefaultDebitAccount' THEN DebitAccount1.[IsDefaultDebitAccount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsDefaultDebitAccount' THEN DebitAccount1.[IsDefaultDebitAccount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN DebitAccount1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN DebitAccount1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN DebitAccount1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN DebitAccount1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN DebitAccount1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN DebitAccount1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN DebitAccount1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN DebitAccount1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN DebitAccount1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN DebitAccount1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Account1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Account1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllFrequencyData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'FrequencyCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all Frequency data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='FrequencyCode'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  Frequency1.[FrequencyCode]
		, Frequency1.[FrequencyName]
		, Frequency1.[Description]
		, Frequency1.[IsActive]
		, Frequency1.[CreatedByUserID]
		, Frequency1.[CreatedDate]
		, Frequency1.[LastModifiedByUserID]
		, Frequency1.[LastModifiedDate]
		, Frequency1.[Timestamp]
	FROM
	      [dbo].[tlkpAccounts_Frequency] Frequency1
	WHERE 
		Frequency1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Frequency1.[IsActive] ELSE 1 END

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  Frequency1.[FrequencyCode]
		, Frequency1.[FrequencyName]
		, Frequency1.[Description]
		, Frequency1.[IsActive]
		, Frequency1.[CreatedByUserID]
		, Frequency1.[CreatedDate]
		, Frequency1.[LastModifiedByUserID]
		, Frequency1.[LastModifiedDate]
		, Frequency1.[Timestamp]
	FROM
	      [dbo].[tlkpAccounts_Frequency] Frequency1
	WHERE 
		Frequency1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Frequency1.[IsActive] ELSE 1 END

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FrequencyCode' THEN Frequency1.[FrequencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FrequencyCode' THEN Frequency1.[FrequencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FrequencyName' THEN Frequency1.[FrequencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FrequencyName' THEN Frequency1.[FrequencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Frequency1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Frequency1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Frequency1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Frequency1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Frequency1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Frequency1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Frequency1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Frequency1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Frequency1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Frequency1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Frequency1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Frequency1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Frequency1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Frequency1.[Timestamp] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllFundAccountData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'AccountID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeDateInactive bit = 0
	, @IncludeInactive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all FundAccount data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='AccountID'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  FundAccount1.[AccountID]
		, FundAccount1.[StartDate]
		, FundAccount1.[EndDate]
		, FundAccount1.[FundCode]
		, FundAccount1.[TargetAmount]
		, FundAccount1.[MinimumDonationAmount]
		, FundAccount1.[MaximumDonationAmount]
		, FundAccount1.[DonatedAmount]
		, FundAccount1.[IsPublic]
		, FundAccount1.[FundAccountTypeCode]
		, FundAccount1.[FrequencyCode]
		, FundAccount1.[CreatedByUserID]
		, FundAccount1.[CreatedDate]
		, FundAccount1.[LastModifiedByUserID]
		, FundAccount1.[LastModifiedDate]
		, FundAccount1.[Timestamp]
		, FundAccountType1.[FundAccountTypeName]
		, Frequency1.[FrequencyName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_FundAccount] FundAccount1
	INNER JOIN [dbo].[tlkpAccounts_FundAccountType] FundAccountType1 ON FundAccountType1.[FundAccountTypeCode]=FundAccount1.[FundAccountTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Frequency] Frequency1 ON Frequency1.[FrequencyCode]=FundAccount1.[FrequencyCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=FundAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		((FundAccount1.[StartDate] IS NULL) OR (FundAccount1.[StartDate] <= CASE WHEN @IncludeDateInactive=1 THEN FundAccount1.[StartDate] ELSE getdate() END))
		AND ((FundAccount1.[EndDate] IS NULL) OR (FundAccount1.[EndDate] >= CASE WHEN @IncludeDateInactive=1 THEN FundAccount1.[EndDate] ELSE getdate() END))
		AND Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  FundAccount1.[AccountID]
		, FundAccount1.[StartDate]
		, FundAccount1.[EndDate]
		, FundAccount1.[FundCode]
		, FundAccount1.[TargetAmount]
		, FundAccount1.[MinimumDonationAmount]
		, FundAccount1.[MaximumDonationAmount]
		, FundAccount1.[DonatedAmount]
		, FundAccount1.[IsPublic]
		, FundAccount1.[FundAccountTypeCode]
		, FundAccount1.[FrequencyCode]
		, FundAccount1.[CreatedByUserID]
		, FundAccount1.[CreatedDate]
		, FundAccount1.[LastModifiedByUserID]
		, FundAccount1.[LastModifiedDate]
		, FundAccount1.[Timestamp]
		, FundAccountType1.[FundAccountTypeName]
		, Frequency1.[FrequencyName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_FundAccount] FundAccount1
	INNER JOIN [dbo].[tlkpAccounts_FundAccountType] FundAccountType1 ON FundAccountType1.[FundAccountTypeCode]=FundAccount1.[FundAccountTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Frequency] Frequency1 ON Frequency1.[FrequencyCode]=FundAccount1.[FrequencyCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=FundAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		((FundAccount1.[StartDate] IS NULL) OR (FundAccount1.[StartDate] <= CASE WHEN @IncludeDateInactive=1 THEN FundAccount1.[StartDate] ELSE getdate() END))
		AND ((FundAccount1.[EndDate] IS NULL) OR (FundAccount1.[EndDate] >= CASE WHEN @IncludeDateInactive=1 THEN FundAccount1.[EndDate] ELSE getdate() END))
		AND Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN FundAccount1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN FundAccount1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'StartDate' THEN FundAccount1.[StartDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'StartDate' THEN FundAccount1.[StartDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EndDate' THEN FundAccount1.[EndDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EndDate' THEN FundAccount1.[EndDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FundCode' THEN FundAccount1.[FundCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FundCode' THEN FundAccount1.[FundCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TargetAmount' THEN FundAccount1.[TargetAmount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TargetAmount' THEN FundAccount1.[TargetAmount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MinimumDonationAmount' THEN FundAccount1.[MinimumDonationAmount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MinimumDonationAmount' THEN FundAccount1.[MinimumDonationAmount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MaximumDonationAmount' THEN FundAccount1.[MaximumDonationAmount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MaximumDonationAmount' THEN FundAccount1.[MaximumDonationAmount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DonatedAmount' THEN FundAccount1.[DonatedAmount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DonatedAmount' THEN FundAccount1.[DonatedAmount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsPublic' THEN FundAccount1.[IsPublic] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsPublic' THEN FundAccount1.[IsPublic] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FundAccountTypeCode' THEN FundAccount1.[FundAccountTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FundAccountTypeCode' THEN FundAccount1.[FundAccountTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FrequencyCode' THEN FundAccount1.[FrequencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FrequencyCode' THEN FundAccount1.[FrequencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN FundAccount1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN FundAccount1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN FundAccount1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN FundAccount1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN FundAccount1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN FundAccount1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN FundAccount1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN FundAccount1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN FundAccount1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN FundAccount1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FundAccountTypeName' THEN FundAccountType1.[FundAccountTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FundAccountTypeName' THEN FundAccountType1.[FundAccountTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FrequencyName' THEN Frequency1.[FrequencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FrequencyName' THEN Frequency1.[FrequencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Account1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Account1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllFundAccountDataByAccountID
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'AccountID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeDateInactive bit = 0
	, @IncludeInactive bit = 0
	, @AccountID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all FundAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='AccountID'

/*
** parameter validation
*/
IF (@AccountID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  FundAccount1.[AccountID]
		, FundAccount1.[StartDate]
		, FundAccount1.[EndDate]
		, FundAccount1.[FundCode]
		, FundAccount1.[TargetAmount]
		, FundAccount1.[MinimumDonationAmount]
		, FundAccount1.[MaximumDonationAmount]
		, FundAccount1.[DonatedAmount]
		, FundAccount1.[IsPublic]
		, FundAccount1.[FundAccountTypeCode]
		, FundAccount1.[FrequencyCode]
		, FundAccount1.[CreatedByUserID]
		, FundAccount1.[CreatedDate]
		, FundAccount1.[LastModifiedByUserID]
		, FundAccount1.[LastModifiedDate]
		, FundAccount1.[Timestamp]
		, FundAccountType1.[FundAccountTypeName]
		, Frequency1.[FrequencyName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_FundAccount] FundAccount1
	INNER JOIN [dbo].[tlkpAccounts_FundAccountType] FundAccountType1 ON FundAccountType1.[FundAccountTypeCode]=FundAccount1.[FundAccountTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Frequency] Frequency1 ON Frequency1.[FrequencyCode]=FundAccount1.[FrequencyCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=FundAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		((FundAccount1.[StartDate] IS NULL) OR (FundAccount1.[StartDate] <= CASE WHEN @IncludeDateInactive=1 THEN FundAccount1.[StartDate] ELSE getdate() END))
		AND ((FundAccount1.[EndDate] IS NULL) OR (FundAccount1.[EndDate] >= CASE WHEN @IncludeDateInactive=1 THEN FundAccount1.[EndDate] ELSE getdate() END))
		AND Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND FundAccount1.[AccountID] = @AccountID

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  FundAccount1.[AccountID]
		, FundAccount1.[StartDate]
		, FundAccount1.[EndDate]
		, FundAccount1.[FundCode]
		, FundAccount1.[TargetAmount]
		, FundAccount1.[MinimumDonationAmount]
		, FundAccount1.[MaximumDonationAmount]
		, FundAccount1.[DonatedAmount]
		, FundAccount1.[IsPublic]
		, FundAccount1.[FundAccountTypeCode]
		, FundAccount1.[FrequencyCode]
		, FundAccount1.[CreatedByUserID]
		, FundAccount1.[CreatedDate]
		, FundAccount1.[LastModifiedByUserID]
		, FundAccount1.[LastModifiedDate]
		, FundAccount1.[Timestamp]
		, FundAccountType1.[FundAccountTypeName]
		, Frequency1.[FrequencyName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_FundAccount] FundAccount1
	INNER JOIN [dbo].[tlkpAccounts_FundAccountType] FundAccountType1 ON FundAccountType1.[FundAccountTypeCode]=FundAccount1.[FundAccountTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Frequency] Frequency1 ON Frequency1.[FrequencyCode]=FundAccount1.[FrequencyCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=FundAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		((FundAccount1.[StartDate] IS NULL) OR (FundAccount1.[StartDate] <= CASE WHEN @IncludeDateInactive=1 THEN FundAccount1.[StartDate] ELSE getdate() END))
		AND ((FundAccount1.[EndDate] IS NULL) OR (FundAccount1.[EndDate] >= CASE WHEN @IncludeDateInactive=1 THEN FundAccount1.[EndDate] ELSE getdate() END))
		AND Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND FundAccount1.[AccountID] = @AccountID

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN FundAccount1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN FundAccount1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'StartDate' THEN FundAccount1.[StartDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'StartDate' THEN FundAccount1.[StartDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EndDate' THEN FundAccount1.[EndDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EndDate' THEN FundAccount1.[EndDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FundCode' THEN FundAccount1.[FundCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FundCode' THEN FundAccount1.[FundCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TargetAmount' THEN FundAccount1.[TargetAmount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TargetAmount' THEN FundAccount1.[TargetAmount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MinimumDonationAmount' THEN FundAccount1.[MinimumDonationAmount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MinimumDonationAmount' THEN FundAccount1.[MinimumDonationAmount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MaximumDonationAmount' THEN FundAccount1.[MaximumDonationAmount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MaximumDonationAmount' THEN FundAccount1.[MaximumDonationAmount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DonatedAmount' THEN FundAccount1.[DonatedAmount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DonatedAmount' THEN FundAccount1.[DonatedAmount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsPublic' THEN FundAccount1.[IsPublic] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsPublic' THEN FundAccount1.[IsPublic] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FundAccountTypeCode' THEN FundAccount1.[FundAccountTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FundAccountTypeCode' THEN FundAccount1.[FundAccountTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FrequencyCode' THEN FundAccount1.[FrequencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FrequencyCode' THEN FundAccount1.[FrequencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN FundAccount1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN FundAccount1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN FundAccount1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN FundAccount1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN FundAccount1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN FundAccount1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN FundAccount1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN FundAccount1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN FundAccount1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN FundAccount1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FundAccountTypeName' THEN FundAccountType1.[FundAccountTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FundAccountTypeName' THEN FundAccountType1.[FundAccountTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FrequencyName' THEN Frequency1.[FrequencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FrequencyName' THEN Frequency1.[FrequencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Account1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Account1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllFundAccountDataByAccountSubTypeCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'AccountSubTypeCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeDateInactive bit = 0
	, @IncludeInactive bit = 0
	, @AccountSubTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all FundAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='AccountSubTypeCode'

/*
** parameter validation
*/
IF (@AccountSubTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  FundAccount1.[AccountID]
		, FundAccount1.[StartDate]
		, FundAccount1.[EndDate]
		, FundAccount1.[FundCode]
		, FundAccount1.[TargetAmount]
		, FundAccount1.[MinimumDonationAmount]
		, FundAccount1.[MaximumDonationAmount]
		, FundAccount1.[DonatedAmount]
		, FundAccount1.[IsPublic]
		, FundAccount1.[FundAccountTypeCode]
		, FundAccount1.[FrequencyCode]
		, FundAccount1.[CreatedByUserID]
		, FundAccount1.[CreatedDate]
		, FundAccount1.[LastModifiedByUserID]
		, FundAccount1.[LastModifiedDate]
		, FundAccount1.[Timestamp]
		, FundAccountType1.[FundAccountTypeName]
		, Frequency1.[FrequencyName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_FundAccount] FundAccount1
	INNER JOIN [dbo].[tlkpAccounts_FundAccountType] FundAccountType1 ON FundAccountType1.[FundAccountTypeCode]=FundAccount1.[FundAccountTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Frequency] Frequency1 ON Frequency1.[FrequencyCode]=FundAccount1.[FrequencyCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=FundAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		((FundAccount1.[StartDate] IS NULL) OR (FundAccount1.[StartDate] <= CASE WHEN @IncludeDateInactive=1 THEN FundAccount1.[StartDate] ELSE getdate() END))
		AND ((FundAccount1.[EndDate] IS NULL) OR (FundAccount1.[EndDate] >= CASE WHEN @IncludeDateInactive=1 THEN FundAccount1.[EndDate] ELSE getdate() END))
		AND Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND Account1.[AccountSubTypeCode] = @AccountSubTypeCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  FundAccount1.[AccountID]
		, FundAccount1.[StartDate]
		, FundAccount1.[EndDate]
		, FundAccount1.[FundCode]
		, FundAccount1.[TargetAmount]
		, FundAccount1.[MinimumDonationAmount]
		, FundAccount1.[MaximumDonationAmount]
		, FundAccount1.[DonatedAmount]
		, FundAccount1.[IsPublic]
		, FundAccount1.[FundAccountTypeCode]
		, FundAccount1.[FrequencyCode]
		, FundAccount1.[CreatedByUserID]
		, FundAccount1.[CreatedDate]
		, FundAccount1.[LastModifiedByUserID]
		, FundAccount1.[LastModifiedDate]
		, FundAccount1.[Timestamp]
		, FundAccountType1.[FundAccountTypeName]
		, Frequency1.[FrequencyName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_FundAccount] FundAccount1
	INNER JOIN [dbo].[tlkpAccounts_FundAccountType] FundAccountType1 ON FundAccountType1.[FundAccountTypeCode]=FundAccount1.[FundAccountTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Frequency] Frequency1 ON Frequency1.[FrequencyCode]=FundAccount1.[FrequencyCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=FundAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		((FundAccount1.[StartDate] IS NULL) OR (FundAccount1.[StartDate] <= CASE WHEN @IncludeDateInactive=1 THEN FundAccount1.[StartDate] ELSE getdate() END))
		AND ((FundAccount1.[EndDate] IS NULL) OR (FundAccount1.[EndDate] >= CASE WHEN @IncludeDateInactive=1 THEN FundAccount1.[EndDate] ELSE getdate() END))
		AND Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND Account1.[AccountSubTypeCode] = @AccountSubTypeCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN FundAccount1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN FundAccount1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'StartDate' THEN FundAccount1.[StartDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'StartDate' THEN FundAccount1.[StartDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EndDate' THEN FundAccount1.[EndDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EndDate' THEN FundAccount1.[EndDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FundCode' THEN FundAccount1.[FundCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FundCode' THEN FundAccount1.[FundCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TargetAmount' THEN FundAccount1.[TargetAmount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TargetAmount' THEN FundAccount1.[TargetAmount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MinimumDonationAmount' THEN FundAccount1.[MinimumDonationAmount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MinimumDonationAmount' THEN FundAccount1.[MinimumDonationAmount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MaximumDonationAmount' THEN FundAccount1.[MaximumDonationAmount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MaximumDonationAmount' THEN FundAccount1.[MaximumDonationAmount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DonatedAmount' THEN FundAccount1.[DonatedAmount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DonatedAmount' THEN FundAccount1.[DonatedAmount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsPublic' THEN FundAccount1.[IsPublic] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsPublic' THEN FundAccount1.[IsPublic] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FundAccountTypeCode' THEN FundAccount1.[FundAccountTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FundAccountTypeCode' THEN FundAccount1.[FundAccountTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FrequencyCode' THEN FundAccount1.[FrequencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FrequencyCode' THEN FundAccount1.[FrequencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN FundAccount1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN FundAccount1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN FundAccount1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN FundAccount1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN FundAccount1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN FundAccount1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN FundAccount1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN FundAccount1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN FundAccount1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN FundAccount1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FundAccountTypeName' THEN FundAccountType1.[FundAccountTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FundAccountTypeName' THEN FundAccountType1.[FundAccountTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FrequencyName' THEN Frequency1.[FrequencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FrequencyName' THEN Frequency1.[FrequencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Account1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Account1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllFundAccountDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'StartDate'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeDateInactive bit = 0
	, @IncludeInactive bit = 0
	, @StartDate datetime
	, @EndDate datetime
	, @FundAccountTypeCode int
	, @FrequencyCode int
	, @AccountName nvarchar(255)
	, @CurrencyCode int
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all FundAccount data by criteria.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='StartDate'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  FundAccount1.[AccountID]
		, FundAccount1.[StartDate]
		, FundAccount1.[EndDate]
		, FundAccount1.[FundCode]
		, FundAccount1.[TargetAmount]
		, FundAccount1.[MinimumDonationAmount]
		, FundAccount1.[MaximumDonationAmount]
		, FundAccount1.[DonatedAmount]
		, FundAccount1.[IsPublic]
		, FundAccount1.[FundAccountTypeCode]
		, FundAccount1.[FrequencyCode]
		, FundAccount1.[CreatedByUserID]
		, FundAccount1.[CreatedDate]
		, FundAccount1.[LastModifiedByUserID]
		, FundAccount1.[LastModifiedDate]
		, FundAccount1.[Timestamp]
		, FundAccountType1.[FundAccountTypeName]
		, Frequency1.[FrequencyName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_FundAccount] FundAccount1
	INNER JOIN [dbo].[tlkpAccounts_FundAccountType] FundAccountType1 ON FundAccountType1.[FundAccountTypeCode]=FundAccount1.[FundAccountTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Frequency] Frequency1 ON Frequency1.[FrequencyCode]=FundAccount1.[FrequencyCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=FundAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		((FundAccount1.[StartDate] IS NULL) OR (FundAccount1.[StartDate] <= CASE WHEN @IncludeDateInactive=1 THEN FundAccount1.[StartDate] ELSE getdate() END))
		AND ((FundAccount1.[EndDate] IS NULL) OR (FundAccount1.[EndDate] >= CASE WHEN @IncludeDateInactive=1 THEN FundAccount1.[EndDate] ELSE getdate() END))
		AND Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND (@StartDate IS NULL OR FundAccount1.[StartDate] <= @StartDate)
		AND (@EndDate IS NULL OR FundAccount1.[EndDate] >= @EndDate)
		AND (@FundAccountTypeCode IS NULL OR FundAccount1.[FundAccountTypeCode] = @FundAccountTypeCode)
		AND (@FrequencyCode IS NULL OR FundAccount1.[FrequencyCode] = @FrequencyCode)
		AND (@AccountName IS NULL OR Account1.[AccountName] like '%' + @AccountName + '%')
		AND (@CurrencyCode IS NULL OR Account1.[CurrencyCode] = @CurrencyCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (Account1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (Account1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  FundAccount1.[AccountID]
		, FundAccount1.[StartDate]
		, FundAccount1.[EndDate]
		, FundAccount1.[FundCode]
		, FundAccount1.[TargetAmount]
		, FundAccount1.[MinimumDonationAmount]
		, FundAccount1.[MaximumDonationAmount]
		, FundAccount1.[DonatedAmount]
		, FundAccount1.[IsPublic]
		, FundAccount1.[FundAccountTypeCode]
		, FundAccount1.[FrequencyCode]
		, FundAccount1.[CreatedByUserID]
		, FundAccount1.[CreatedDate]
		, FundAccount1.[LastModifiedByUserID]
		, FundAccount1.[LastModifiedDate]
		, FundAccount1.[Timestamp]
		, FundAccountType1.[FundAccountTypeName]
		, Frequency1.[FrequencyName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_FundAccount] FundAccount1
	INNER JOIN [dbo].[tlkpAccounts_FundAccountType] FundAccountType1 ON FundAccountType1.[FundAccountTypeCode]=FundAccount1.[FundAccountTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Frequency] Frequency1 ON Frequency1.[FrequencyCode]=FundAccount1.[FrequencyCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=FundAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		((FundAccount1.[StartDate] IS NULL) OR (FundAccount1.[StartDate] <= CASE WHEN @IncludeDateInactive=1 THEN FundAccount1.[StartDate] ELSE getdate() END))
		AND ((FundAccount1.[EndDate] IS NULL) OR (FundAccount1.[EndDate] >= CASE WHEN @IncludeDateInactive=1 THEN FundAccount1.[EndDate] ELSE getdate() END))
		AND Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND (@StartDate IS NULL OR FundAccount1.[StartDate] <= @StartDate)
		AND (@EndDate IS NULL OR FundAccount1.[EndDate] >= @EndDate)
		AND (@FundAccountTypeCode IS NULL OR FundAccount1.[FundAccountTypeCode] = @FundAccountTypeCode)
		AND (@FrequencyCode IS NULL OR FundAccount1.[FrequencyCode] = @FrequencyCode)
		AND (@AccountName IS NULL OR Account1.[AccountName] like '%' + @AccountName + '%')
		AND (@CurrencyCode IS NULL OR Account1.[CurrencyCode] = @CurrencyCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (Account1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (Account1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN FundAccount1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN FundAccount1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'StartDate' THEN FundAccount1.[StartDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'StartDate' THEN FundAccount1.[StartDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EndDate' THEN FundAccount1.[EndDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EndDate' THEN FundAccount1.[EndDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FundCode' THEN FundAccount1.[FundCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FundCode' THEN FundAccount1.[FundCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TargetAmount' THEN FundAccount1.[TargetAmount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TargetAmount' THEN FundAccount1.[TargetAmount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MinimumDonationAmount' THEN FundAccount1.[MinimumDonationAmount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MinimumDonationAmount' THEN FundAccount1.[MinimumDonationAmount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MaximumDonationAmount' THEN FundAccount1.[MaximumDonationAmount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MaximumDonationAmount' THEN FundAccount1.[MaximumDonationAmount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DonatedAmount' THEN FundAccount1.[DonatedAmount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DonatedAmount' THEN FundAccount1.[DonatedAmount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsPublic' THEN FundAccount1.[IsPublic] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsPublic' THEN FundAccount1.[IsPublic] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FundAccountTypeCode' THEN FundAccount1.[FundAccountTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FundAccountTypeCode' THEN FundAccount1.[FundAccountTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FrequencyCode' THEN FundAccount1.[FrequencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FrequencyCode' THEN FundAccount1.[FrequencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN FundAccount1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN FundAccount1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN FundAccount1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN FundAccount1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN FundAccount1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN FundAccount1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN FundAccount1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN FundAccount1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN FundAccount1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN FundAccount1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FundAccountTypeName' THEN FundAccountType1.[FundAccountTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FundAccountTypeName' THEN FundAccountType1.[FundAccountTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FrequencyName' THEN Frequency1.[FrequencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FrequencyName' THEN Frequency1.[FrequencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Account1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Account1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllFundAccountDataByCurrencyCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'CurrencyCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeDateInactive bit = 0
	, @IncludeInactive bit = 0
	, @CurrencyCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all FundAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='CurrencyCode'

/*
** parameter validation
*/
IF (@CurrencyCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  FundAccount1.[AccountID]
		, FundAccount1.[StartDate]
		, FundAccount1.[EndDate]
		, FundAccount1.[FundCode]
		, FundAccount1.[TargetAmount]
		, FundAccount1.[MinimumDonationAmount]
		, FundAccount1.[MaximumDonationAmount]
		, FundAccount1.[DonatedAmount]
		, FundAccount1.[IsPublic]
		, FundAccount1.[FundAccountTypeCode]
		, FundAccount1.[FrequencyCode]
		, FundAccount1.[CreatedByUserID]
		, FundAccount1.[CreatedDate]
		, FundAccount1.[LastModifiedByUserID]
		, FundAccount1.[LastModifiedDate]
		, FundAccount1.[Timestamp]
		, FundAccountType1.[FundAccountTypeName]
		, Frequency1.[FrequencyName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_FundAccount] FundAccount1
	INNER JOIN [dbo].[tlkpAccounts_FundAccountType] FundAccountType1 ON FundAccountType1.[FundAccountTypeCode]=FundAccount1.[FundAccountTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Frequency] Frequency1 ON Frequency1.[FrequencyCode]=FundAccount1.[FrequencyCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=FundAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		((FundAccount1.[StartDate] IS NULL) OR (FundAccount1.[StartDate] <= CASE WHEN @IncludeDateInactive=1 THEN FundAccount1.[StartDate] ELSE getdate() END))
		AND ((FundAccount1.[EndDate] IS NULL) OR (FundAccount1.[EndDate] >= CASE WHEN @IncludeDateInactive=1 THEN FundAccount1.[EndDate] ELSE getdate() END))
		AND Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND Account1.[CurrencyCode] = @CurrencyCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  FundAccount1.[AccountID]
		, FundAccount1.[StartDate]
		, FundAccount1.[EndDate]
		, FundAccount1.[FundCode]
		, FundAccount1.[TargetAmount]
		, FundAccount1.[MinimumDonationAmount]
		, FundAccount1.[MaximumDonationAmount]
		, FundAccount1.[DonatedAmount]
		, FundAccount1.[IsPublic]
		, FundAccount1.[FundAccountTypeCode]
		, FundAccount1.[FrequencyCode]
		, FundAccount1.[CreatedByUserID]
		, FundAccount1.[CreatedDate]
		, FundAccount1.[LastModifiedByUserID]
		, FundAccount1.[LastModifiedDate]
		, FundAccount1.[Timestamp]
		, FundAccountType1.[FundAccountTypeName]
		, Frequency1.[FrequencyName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_FundAccount] FundAccount1
	INNER JOIN [dbo].[tlkpAccounts_FundAccountType] FundAccountType1 ON FundAccountType1.[FundAccountTypeCode]=FundAccount1.[FundAccountTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Frequency] Frequency1 ON Frequency1.[FrequencyCode]=FundAccount1.[FrequencyCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=FundAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		((FundAccount1.[StartDate] IS NULL) OR (FundAccount1.[StartDate] <= CASE WHEN @IncludeDateInactive=1 THEN FundAccount1.[StartDate] ELSE getdate() END))
		AND ((FundAccount1.[EndDate] IS NULL) OR (FundAccount1.[EndDate] >= CASE WHEN @IncludeDateInactive=1 THEN FundAccount1.[EndDate] ELSE getdate() END))
		AND Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND Account1.[CurrencyCode] = @CurrencyCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN FundAccount1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN FundAccount1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'StartDate' THEN FundAccount1.[StartDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'StartDate' THEN FundAccount1.[StartDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EndDate' THEN FundAccount1.[EndDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EndDate' THEN FundAccount1.[EndDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FundCode' THEN FundAccount1.[FundCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FundCode' THEN FundAccount1.[FundCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TargetAmount' THEN FundAccount1.[TargetAmount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TargetAmount' THEN FundAccount1.[TargetAmount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MinimumDonationAmount' THEN FundAccount1.[MinimumDonationAmount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MinimumDonationAmount' THEN FundAccount1.[MinimumDonationAmount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MaximumDonationAmount' THEN FundAccount1.[MaximumDonationAmount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MaximumDonationAmount' THEN FundAccount1.[MaximumDonationAmount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DonatedAmount' THEN FundAccount1.[DonatedAmount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DonatedAmount' THEN FundAccount1.[DonatedAmount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsPublic' THEN FundAccount1.[IsPublic] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsPublic' THEN FundAccount1.[IsPublic] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FundAccountTypeCode' THEN FundAccount1.[FundAccountTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FundAccountTypeCode' THEN FundAccount1.[FundAccountTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FrequencyCode' THEN FundAccount1.[FrequencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FrequencyCode' THEN FundAccount1.[FrequencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN FundAccount1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN FundAccount1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN FundAccount1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN FundAccount1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN FundAccount1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN FundAccount1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN FundAccount1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN FundAccount1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN FundAccount1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN FundAccount1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FundAccountTypeName' THEN FundAccountType1.[FundAccountTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FundAccountTypeName' THEN FundAccountType1.[FundAccountTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FrequencyName' THEN Frequency1.[FrequencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FrequencyName' THEN Frequency1.[FrequencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Account1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Account1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllFundAccountDataByFrequencyCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'FrequencyCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeDateInactive bit = 0
	, @IncludeInactive bit = 0
	, @FrequencyCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all FundAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='FrequencyCode'

/*
** parameter validation
*/
IF (@FrequencyCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  FundAccount1.[AccountID]
		, FundAccount1.[StartDate]
		, FundAccount1.[EndDate]
		, FundAccount1.[FundCode]
		, FundAccount1.[TargetAmount]
		, FundAccount1.[MinimumDonationAmount]
		, FundAccount1.[MaximumDonationAmount]
		, FundAccount1.[DonatedAmount]
		, FundAccount1.[IsPublic]
		, FundAccount1.[FundAccountTypeCode]
		, FundAccount1.[FrequencyCode]
		, FundAccount1.[CreatedByUserID]
		, FundAccount1.[CreatedDate]
		, FundAccount1.[LastModifiedByUserID]
		, FundAccount1.[LastModifiedDate]
		, FundAccount1.[Timestamp]
		, FundAccountType1.[FundAccountTypeName]
		, Frequency1.[FrequencyName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_FundAccount] FundAccount1
	INNER JOIN [dbo].[tlkpAccounts_FundAccountType] FundAccountType1 ON FundAccountType1.[FundAccountTypeCode]=FundAccount1.[FundAccountTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Frequency] Frequency1 ON Frequency1.[FrequencyCode]=FundAccount1.[FrequencyCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=FundAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		((FundAccount1.[StartDate] IS NULL) OR (FundAccount1.[StartDate] <= CASE WHEN @IncludeDateInactive=1 THEN FundAccount1.[StartDate] ELSE getdate() END))
		AND ((FundAccount1.[EndDate] IS NULL) OR (FundAccount1.[EndDate] >= CASE WHEN @IncludeDateInactive=1 THEN FundAccount1.[EndDate] ELSE getdate() END))
		AND Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND FundAccount1.[FrequencyCode] = @FrequencyCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  FundAccount1.[AccountID]
		, FundAccount1.[StartDate]
		, FundAccount1.[EndDate]
		, FundAccount1.[FundCode]
		, FundAccount1.[TargetAmount]
		, FundAccount1.[MinimumDonationAmount]
		, FundAccount1.[MaximumDonationAmount]
		, FundAccount1.[DonatedAmount]
		, FundAccount1.[IsPublic]
		, FundAccount1.[FundAccountTypeCode]
		, FundAccount1.[FrequencyCode]
		, FundAccount1.[CreatedByUserID]
		, FundAccount1.[CreatedDate]
		, FundAccount1.[LastModifiedByUserID]
		, FundAccount1.[LastModifiedDate]
		, FundAccount1.[Timestamp]
		, FundAccountType1.[FundAccountTypeName]
		, Frequency1.[FrequencyName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_FundAccount] FundAccount1
	INNER JOIN [dbo].[tlkpAccounts_FundAccountType] FundAccountType1 ON FundAccountType1.[FundAccountTypeCode]=FundAccount1.[FundAccountTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Frequency] Frequency1 ON Frequency1.[FrequencyCode]=FundAccount1.[FrequencyCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=FundAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		((FundAccount1.[StartDate] IS NULL) OR (FundAccount1.[StartDate] <= CASE WHEN @IncludeDateInactive=1 THEN FundAccount1.[StartDate] ELSE getdate() END))
		AND ((FundAccount1.[EndDate] IS NULL) OR (FundAccount1.[EndDate] >= CASE WHEN @IncludeDateInactive=1 THEN FundAccount1.[EndDate] ELSE getdate() END))
		AND Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND FundAccount1.[FrequencyCode] = @FrequencyCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN FundAccount1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN FundAccount1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'StartDate' THEN FundAccount1.[StartDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'StartDate' THEN FundAccount1.[StartDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EndDate' THEN FundAccount1.[EndDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EndDate' THEN FundAccount1.[EndDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FundCode' THEN FundAccount1.[FundCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FundCode' THEN FundAccount1.[FundCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TargetAmount' THEN FundAccount1.[TargetAmount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TargetAmount' THEN FundAccount1.[TargetAmount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MinimumDonationAmount' THEN FundAccount1.[MinimumDonationAmount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MinimumDonationAmount' THEN FundAccount1.[MinimumDonationAmount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MaximumDonationAmount' THEN FundAccount1.[MaximumDonationAmount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MaximumDonationAmount' THEN FundAccount1.[MaximumDonationAmount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DonatedAmount' THEN FundAccount1.[DonatedAmount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DonatedAmount' THEN FundAccount1.[DonatedAmount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsPublic' THEN FundAccount1.[IsPublic] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsPublic' THEN FundAccount1.[IsPublic] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FundAccountTypeCode' THEN FundAccount1.[FundAccountTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FundAccountTypeCode' THEN FundAccount1.[FundAccountTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FrequencyCode' THEN FundAccount1.[FrequencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FrequencyCode' THEN FundAccount1.[FrequencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN FundAccount1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN FundAccount1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN FundAccount1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN FundAccount1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN FundAccount1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN FundAccount1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN FundAccount1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN FundAccount1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN FundAccount1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN FundAccount1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FundAccountTypeName' THEN FundAccountType1.[FundAccountTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FundAccountTypeName' THEN FundAccountType1.[FundAccountTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FrequencyName' THEN Frequency1.[FrequencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FrequencyName' THEN Frequency1.[FrequencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Account1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Account1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllFundAccountDataByFundAccountTypeCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'FundAccountTypeCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeDateInactive bit = 0
	, @IncludeInactive bit = 0
	, @FundAccountTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all FundAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='FundAccountTypeCode'

/*
** parameter validation
*/
IF (@FundAccountTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  FundAccount1.[AccountID]
		, FundAccount1.[StartDate]
		, FundAccount1.[EndDate]
		, FundAccount1.[FundCode]
		, FundAccount1.[TargetAmount]
		, FundAccount1.[MinimumDonationAmount]
		, FundAccount1.[MaximumDonationAmount]
		, FundAccount1.[DonatedAmount]
		, FundAccount1.[IsPublic]
		, FundAccount1.[FundAccountTypeCode]
		, FundAccount1.[FrequencyCode]
		, FundAccount1.[CreatedByUserID]
		, FundAccount1.[CreatedDate]
		, FundAccount1.[LastModifiedByUserID]
		, FundAccount1.[LastModifiedDate]
		, FundAccount1.[Timestamp]
		, FundAccountType1.[FundAccountTypeName]
		, Frequency1.[FrequencyName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_FundAccount] FundAccount1
	INNER JOIN [dbo].[tlkpAccounts_FundAccountType] FundAccountType1 ON FundAccountType1.[FundAccountTypeCode]=FundAccount1.[FundAccountTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Frequency] Frequency1 ON Frequency1.[FrequencyCode]=FundAccount1.[FrequencyCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=FundAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		((FundAccount1.[StartDate] IS NULL) OR (FundAccount1.[StartDate] <= CASE WHEN @IncludeDateInactive=1 THEN FundAccount1.[StartDate] ELSE getdate() END))
		AND ((FundAccount1.[EndDate] IS NULL) OR (FundAccount1.[EndDate] >= CASE WHEN @IncludeDateInactive=1 THEN FundAccount1.[EndDate] ELSE getdate() END))
		AND Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND FundAccount1.[FundAccountTypeCode] = @FundAccountTypeCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  FundAccount1.[AccountID]
		, FundAccount1.[StartDate]
		, FundAccount1.[EndDate]
		, FundAccount1.[FundCode]
		, FundAccount1.[TargetAmount]
		, FundAccount1.[MinimumDonationAmount]
		, FundAccount1.[MaximumDonationAmount]
		, FundAccount1.[DonatedAmount]
		, FundAccount1.[IsPublic]
		, FundAccount1.[FundAccountTypeCode]
		, FundAccount1.[FrequencyCode]
		, FundAccount1.[CreatedByUserID]
		, FundAccount1.[CreatedDate]
		, FundAccount1.[LastModifiedByUserID]
		, FundAccount1.[LastModifiedDate]
		, FundAccount1.[Timestamp]
		, FundAccountType1.[FundAccountTypeName]
		, Frequency1.[FrequencyName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_FundAccount] FundAccount1
	INNER JOIN [dbo].[tlkpAccounts_FundAccountType] FundAccountType1 ON FundAccountType1.[FundAccountTypeCode]=FundAccount1.[FundAccountTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Frequency] Frequency1 ON Frequency1.[FrequencyCode]=FundAccount1.[FrequencyCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=FundAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		((FundAccount1.[StartDate] IS NULL) OR (FundAccount1.[StartDate] <= CASE WHEN @IncludeDateInactive=1 THEN FundAccount1.[StartDate] ELSE getdate() END))
		AND ((FundAccount1.[EndDate] IS NULL) OR (FundAccount1.[EndDate] >= CASE WHEN @IncludeDateInactive=1 THEN FundAccount1.[EndDate] ELSE getdate() END))
		AND Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND FundAccount1.[FundAccountTypeCode] = @FundAccountTypeCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN FundAccount1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN FundAccount1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'StartDate' THEN FundAccount1.[StartDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'StartDate' THEN FundAccount1.[StartDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EndDate' THEN FundAccount1.[EndDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EndDate' THEN FundAccount1.[EndDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FundCode' THEN FundAccount1.[FundCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FundCode' THEN FundAccount1.[FundCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TargetAmount' THEN FundAccount1.[TargetAmount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TargetAmount' THEN FundAccount1.[TargetAmount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MinimumDonationAmount' THEN FundAccount1.[MinimumDonationAmount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MinimumDonationAmount' THEN FundAccount1.[MinimumDonationAmount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MaximumDonationAmount' THEN FundAccount1.[MaximumDonationAmount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MaximumDonationAmount' THEN FundAccount1.[MaximumDonationAmount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DonatedAmount' THEN FundAccount1.[DonatedAmount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DonatedAmount' THEN FundAccount1.[DonatedAmount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsPublic' THEN FundAccount1.[IsPublic] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsPublic' THEN FundAccount1.[IsPublic] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FundAccountTypeCode' THEN FundAccount1.[FundAccountTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FundAccountTypeCode' THEN FundAccount1.[FundAccountTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FrequencyCode' THEN FundAccount1.[FrequencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FrequencyCode' THEN FundAccount1.[FrequencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN FundAccount1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN FundAccount1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN FundAccount1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN FundAccount1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN FundAccount1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN FundAccount1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN FundAccount1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN FundAccount1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN FundAccount1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN FundAccount1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FundAccountTypeName' THEN FundAccountType1.[FundAccountTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FundAccountTypeName' THEN FundAccountType1.[FundAccountTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FrequencyName' THEN Frequency1.[FrequencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FrequencyName' THEN Frequency1.[FrequencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Account1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Account1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllFundAccountDataByMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'MetaPartnerID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeDateInactive bit = 0
	, @IncludeInactive bit = 0
	, @MetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all FundAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='MetaPartnerID'

/*
** parameter validation
*/
IF (@MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  FundAccount1.[AccountID]
		, FundAccount1.[StartDate]
		, FundAccount1.[EndDate]
		, FundAccount1.[FundCode]
		, FundAccount1.[TargetAmount]
		, FundAccount1.[MinimumDonationAmount]
		, FundAccount1.[MaximumDonationAmount]
		, FundAccount1.[DonatedAmount]
		, FundAccount1.[IsPublic]
		, FundAccount1.[FundAccountTypeCode]
		, FundAccount1.[FrequencyCode]
		, FundAccount1.[CreatedByUserID]
		, FundAccount1.[CreatedDate]
		, FundAccount1.[LastModifiedByUserID]
		, FundAccount1.[LastModifiedDate]
		, FundAccount1.[Timestamp]
		, FundAccountType1.[FundAccountTypeName]
		, Frequency1.[FrequencyName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_FundAccount] FundAccount1
	INNER JOIN [dbo].[tlkpAccounts_FundAccountType] FundAccountType1 ON FundAccountType1.[FundAccountTypeCode]=FundAccount1.[FundAccountTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Frequency] Frequency1 ON Frequency1.[FrequencyCode]=FundAccount1.[FrequencyCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=FundAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		((FundAccount1.[StartDate] IS NULL) OR (FundAccount1.[StartDate] <= CASE WHEN @IncludeDateInactive=1 THEN FundAccount1.[StartDate] ELSE getdate() END))
		AND ((FundAccount1.[EndDate] IS NULL) OR (FundAccount1.[EndDate] >= CASE WHEN @IncludeDateInactive=1 THEN FundAccount1.[EndDate] ELSE getdate() END))
		AND Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND Account1.[MetaPartnerID] = @MetaPartnerID

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  FundAccount1.[AccountID]
		, FundAccount1.[StartDate]
		, FundAccount1.[EndDate]
		, FundAccount1.[FundCode]
		, FundAccount1.[TargetAmount]
		, FundAccount1.[MinimumDonationAmount]
		, FundAccount1.[MaximumDonationAmount]
		, FundAccount1.[DonatedAmount]
		, FundAccount1.[IsPublic]
		, FundAccount1.[FundAccountTypeCode]
		, FundAccount1.[FrequencyCode]
		, FundAccount1.[CreatedByUserID]
		, FundAccount1.[CreatedDate]
		, FundAccount1.[LastModifiedByUserID]
		, FundAccount1.[LastModifiedDate]
		, FundAccount1.[Timestamp]
		, FundAccountType1.[FundAccountTypeName]
		, Frequency1.[FrequencyName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_FundAccount] FundAccount1
	INNER JOIN [dbo].[tlkpAccounts_FundAccountType] FundAccountType1 ON FundAccountType1.[FundAccountTypeCode]=FundAccount1.[FundAccountTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Frequency] Frequency1 ON Frequency1.[FrequencyCode]=FundAccount1.[FrequencyCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=FundAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		((FundAccount1.[StartDate] IS NULL) OR (FundAccount1.[StartDate] <= CASE WHEN @IncludeDateInactive=1 THEN FundAccount1.[StartDate] ELSE getdate() END))
		AND ((FundAccount1.[EndDate] IS NULL) OR (FundAccount1.[EndDate] >= CASE WHEN @IncludeDateInactive=1 THEN FundAccount1.[EndDate] ELSE getdate() END))
		AND Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND Account1.[MetaPartnerID] = @MetaPartnerID

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN FundAccount1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN FundAccount1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'StartDate' THEN FundAccount1.[StartDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'StartDate' THEN FundAccount1.[StartDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EndDate' THEN FundAccount1.[EndDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EndDate' THEN FundAccount1.[EndDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FundCode' THEN FundAccount1.[FundCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FundCode' THEN FundAccount1.[FundCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TargetAmount' THEN FundAccount1.[TargetAmount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TargetAmount' THEN FundAccount1.[TargetAmount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MinimumDonationAmount' THEN FundAccount1.[MinimumDonationAmount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MinimumDonationAmount' THEN FundAccount1.[MinimumDonationAmount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MaximumDonationAmount' THEN FundAccount1.[MaximumDonationAmount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MaximumDonationAmount' THEN FundAccount1.[MaximumDonationAmount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DonatedAmount' THEN FundAccount1.[DonatedAmount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DonatedAmount' THEN FundAccount1.[DonatedAmount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsPublic' THEN FundAccount1.[IsPublic] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsPublic' THEN FundAccount1.[IsPublic] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FundAccountTypeCode' THEN FundAccount1.[FundAccountTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FundAccountTypeCode' THEN FundAccount1.[FundAccountTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FrequencyCode' THEN FundAccount1.[FrequencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FrequencyCode' THEN FundAccount1.[FrequencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN FundAccount1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN FundAccount1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN FundAccount1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN FundAccount1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN FundAccount1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN FundAccount1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN FundAccount1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN FundAccount1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN FundAccount1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN FundAccount1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FundAccountTypeName' THEN FundAccountType1.[FundAccountTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FundAccountTypeName' THEN FundAccountType1.[FundAccountTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FrequencyName' THEN Frequency1.[FrequencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FrequencyName' THEN Frequency1.[FrequencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Account1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Account1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllFundAccountTypeData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'FundAccountTypeCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all FundAccountType data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='FundAccountTypeCode'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  FundAccountType1.[FundAccountTypeCode]
		, FundAccountType1.[FundAccountTypeName]
		, FundAccountType1.[Description]
		, FundAccountType1.[IsActive]
		, FundAccountType1.[CreatedByUserID]
		, FundAccountType1.[CreatedDate]
		, FundAccountType1.[LastModifiedByUserID]
		, FundAccountType1.[LastModifiedDate]
		, FundAccountType1.[Timestamp]
	FROM
	      [dbo].[tlkpAccounts_FundAccountType] FundAccountType1
	WHERE 
		FundAccountType1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN FundAccountType1.[IsActive] ELSE 1 END

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  FundAccountType1.[FundAccountTypeCode]
		, FundAccountType1.[FundAccountTypeName]
		, FundAccountType1.[Description]
		, FundAccountType1.[IsActive]
		, FundAccountType1.[CreatedByUserID]
		, FundAccountType1.[CreatedDate]
		, FundAccountType1.[LastModifiedByUserID]
		, FundAccountType1.[LastModifiedDate]
		, FundAccountType1.[Timestamp]
	FROM
	      [dbo].[tlkpAccounts_FundAccountType] FundAccountType1
	WHERE 
		FundAccountType1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN FundAccountType1.[IsActive] ELSE 1 END

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FundAccountTypeCode' THEN FundAccountType1.[FundAccountTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FundAccountTypeCode' THEN FundAccountType1.[FundAccountTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FundAccountTypeName' THEN FundAccountType1.[FundAccountTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FundAccountTypeName' THEN FundAccountType1.[FundAccountTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN FundAccountType1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN FundAccountType1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN FundAccountType1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN FundAccountType1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN FundAccountType1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN FundAccountType1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN FundAccountType1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN FundAccountType1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN FundAccountType1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN FundAccountType1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN FundAccountType1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN FundAccountType1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN FundAccountType1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN FundAccountType1.[Timestamp] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllLoanAccountData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'AccountID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all LoanAccount data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='AccountID'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  LoanAccount1.[AccountID]
		, LoanAccount1.[LoanAmount]
		, LoanAccount1.[OutstandingAmount]
		, LoanAccount1.[DueDate]
		, LoanAccount1.[LoanRate]
		, LoanAccount1.[CreatedByUserID]
		, LoanAccount1.[CreatedDate]
		, LoanAccount1.[LastModifiedByUserID]
		, LoanAccount1.[LastModifiedDate]
		, LoanAccount1.[Timestamp]
		, "LoaningMetaPartnerName" = MetaPartner1.[MetaPartnerName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_LoanAccount] LoanAccount1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=LoanAccount1.[AccountID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  LoanAccount1.[AccountID]
		, LoanAccount1.[LoanAmount]
		, LoanAccount1.[OutstandingAmount]
		, LoanAccount1.[DueDate]
		, LoanAccount1.[LoanRate]
		, LoanAccount1.[CreatedByUserID]
		, LoanAccount1.[CreatedDate]
		, LoanAccount1.[LastModifiedByUserID]
		, LoanAccount1.[LastModifiedDate]
		, LoanAccount1.[Timestamp]
		, "LoaningMetaPartnerName" = MetaPartner1.[MetaPartnerName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_LoanAccount] LoanAccount1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=LoanAccount1.[AccountID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN LoanAccount1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN LoanAccount1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LoanAmount' THEN LoanAccount1.[LoanAmount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LoanAmount' THEN LoanAccount1.[LoanAmount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OutstandingAmount' THEN LoanAccount1.[OutstandingAmount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OutstandingAmount' THEN LoanAccount1.[OutstandingAmount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DueDate' THEN LoanAccount1.[DueDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DueDate' THEN LoanAccount1.[DueDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LoanRate' THEN LoanAccount1.[LoanRate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LoanRate' THEN LoanAccount1.[LoanRate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN LoanAccount1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN LoanAccount1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN LoanAccount1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN LoanAccount1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN LoanAccount1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN LoanAccount1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN LoanAccount1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN LoanAccount1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN LoanAccount1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN LoanAccount1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LoaningMetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LoaningMetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Account1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Account1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllLoanAccountDataByAccountID
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'AccountID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @AccountID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all LoanAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='AccountID'

/*
** parameter validation
*/
IF (@AccountID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  LoanAccount1.[AccountID]
		, LoanAccount1.[LoanAmount]
		, LoanAccount1.[OutstandingAmount]
		, LoanAccount1.[DueDate]
		, LoanAccount1.[LoanRate]
		, LoanAccount1.[CreatedByUserID]
		, LoanAccount1.[CreatedDate]
		, LoanAccount1.[LastModifiedByUserID]
		, LoanAccount1.[LastModifiedDate]
		, LoanAccount1.[Timestamp]
		, "LoaningMetaPartnerName" = MetaPartner1.[MetaPartnerName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_LoanAccount] LoanAccount1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=LoanAccount1.[AccountID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND LoanAccount1.[AccountID] = @AccountID

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  LoanAccount1.[AccountID]
		, LoanAccount1.[LoanAmount]
		, LoanAccount1.[OutstandingAmount]
		, LoanAccount1.[DueDate]
		, LoanAccount1.[LoanRate]
		, LoanAccount1.[CreatedByUserID]
		, LoanAccount1.[CreatedDate]
		, LoanAccount1.[LastModifiedByUserID]
		, LoanAccount1.[LastModifiedDate]
		, LoanAccount1.[Timestamp]
		, "LoaningMetaPartnerName" = MetaPartner1.[MetaPartnerName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_LoanAccount] LoanAccount1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=LoanAccount1.[AccountID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND LoanAccount1.[AccountID] = @AccountID

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN LoanAccount1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN LoanAccount1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LoanAmount' THEN LoanAccount1.[LoanAmount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LoanAmount' THEN LoanAccount1.[LoanAmount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OutstandingAmount' THEN LoanAccount1.[OutstandingAmount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OutstandingAmount' THEN LoanAccount1.[OutstandingAmount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DueDate' THEN LoanAccount1.[DueDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DueDate' THEN LoanAccount1.[DueDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LoanRate' THEN LoanAccount1.[LoanRate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LoanRate' THEN LoanAccount1.[LoanRate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN LoanAccount1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN LoanAccount1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN LoanAccount1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN LoanAccount1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN LoanAccount1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN LoanAccount1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN LoanAccount1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN LoanAccount1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN LoanAccount1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN LoanAccount1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LoaningMetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LoaningMetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Account1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Account1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllLoanAccountDataByAccountSubTypeCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'AccountSubTypeCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @AccountSubTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all LoanAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='AccountSubTypeCode'

/*
** parameter validation
*/
IF (@AccountSubTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  LoanAccount1.[AccountID]
		, LoanAccount1.[LoanAmount]
		, LoanAccount1.[OutstandingAmount]
		, LoanAccount1.[DueDate]
		, LoanAccount1.[LoanRate]
		, LoanAccount1.[CreatedByUserID]
		, LoanAccount1.[CreatedDate]
		, LoanAccount1.[LastModifiedByUserID]
		, LoanAccount1.[LastModifiedDate]
		, LoanAccount1.[Timestamp]
		, "LoaningMetaPartnerName" = MetaPartner1.[MetaPartnerName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_LoanAccount] LoanAccount1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=LoanAccount1.[AccountID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND Account1.[AccountSubTypeCode] = @AccountSubTypeCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  LoanAccount1.[AccountID]
		, LoanAccount1.[LoanAmount]
		, LoanAccount1.[OutstandingAmount]
		, LoanAccount1.[DueDate]
		, LoanAccount1.[LoanRate]
		, LoanAccount1.[CreatedByUserID]
		, LoanAccount1.[CreatedDate]
		, LoanAccount1.[LastModifiedByUserID]
		, LoanAccount1.[LastModifiedDate]
		, LoanAccount1.[Timestamp]
		, "LoaningMetaPartnerName" = MetaPartner1.[MetaPartnerName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_LoanAccount] LoanAccount1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=LoanAccount1.[AccountID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND Account1.[AccountSubTypeCode] = @AccountSubTypeCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN LoanAccount1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN LoanAccount1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LoanAmount' THEN LoanAccount1.[LoanAmount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LoanAmount' THEN LoanAccount1.[LoanAmount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OutstandingAmount' THEN LoanAccount1.[OutstandingAmount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OutstandingAmount' THEN LoanAccount1.[OutstandingAmount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DueDate' THEN LoanAccount1.[DueDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DueDate' THEN LoanAccount1.[DueDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LoanRate' THEN LoanAccount1.[LoanRate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LoanRate' THEN LoanAccount1.[LoanRate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN LoanAccount1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN LoanAccount1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN LoanAccount1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN LoanAccount1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN LoanAccount1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN LoanAccount1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN LoanAccount1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN LoanAccount1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN LoanAccount1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN LoanAccount1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LoaningMetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LoaningMetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Account1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Account1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllLoanAccountDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'DueDate'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @DueDateStart datetime
	, @DueDateEnd datetime
	, @AccountName nvarchar(255)
	, @CurrencyCode int
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all LoanAccount data by criteria.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='DueDate'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  LoanAccount1.[AccountID]
		, LoanAccount1.[LoanAmount]
		, LoanAccount1.[OutstandingAmount]
		, LoanAccount1.[DueDate]
		, LoanAccount1.[LoanRate]
		, LoanAccount1.[CreatedByUserID]
		, LoanAccount1.[CreatedDate]
		, LoanAccount1.[LastModifiedByUserID]
		, LoanAccount1.[LastModifiedDate]
		, LoanAccount1.[Timestamp]
		, "LoaningMetaPartnerName" = MetaPartner1.[MetaPartnerName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_LoanAccount] LoanAccount1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=LoanAccount1.[AccountID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND ((@DueDateStart  IS NULL) OR (LoanAccount1.[DueDate] >=  @DueDateStart))
		AND ((@DueDateEnd  IS NULL) OR (LoanAccount1.[DueDate] <=  @DueDateEnd))
		AND (@AccountName IS NULL OR Account1.[AccountName] like '%' + @AccountName + '%')
		AND (@CurrencyCode IS NULL OR Account1.[CurrencyCode] = @CurrencyCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (Account1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (Account1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  LoanAccount1.[AccountID]
		, LoanAccount1.[LoanAmount]
		, LoanAccount1.[OutstandingAmount]
		, LoanAccount1.[DueDate]
		, LoanAccount1.[LoanRate]
		, LoanAccount1.[CreatedByUserID]
		, LoanAccount1.[CreatedDate]
		, LoanAccount1.[LastModifiedByUserID]
		, LoanAccount1.[LastModifiedDate]
		, LoanAccount1.[Timestamp]
		, "LoaningMetaPartnerName" = MetaPartner1.[MetaPartnerName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_LoanAccount] LoanAccount1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=LoanAccount1.[AccountID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND ((@DueDateStart  IS NULL) OR (LoanAccount1.[DueDate] >=  @DueDateStart))
		AND ((@DueDateEnd  IS NULL) OR (LoanAccount1.[DueDate] <=  @DueDateEnd))
		AND (@AccountName IS NULL OR Account1.[AccountName] like '%' + @AccountName + '%')
		AND (@CurrencyCode IS NULL OR Account1.[CurrencyCode] = @CurrencyCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (Account1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (Account1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN LoanAccount1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN LoanAccount1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LoanAmount' THEN LoanAccount1.[LoanAmount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LoanAmount' THEN LoanAccount1.[LoanAmount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OutstandingAmount' THEN LoanAccount1.[OutstandingAmount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OutstandingAmount' THEN LoanAccount1.[OutstandingAmount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DueDate' THEN LoanAccount1.[DueDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DueDate' THEN LoanAccount1.[DueDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LoanRate' THEN LoanAccount1.[LoanRate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LoanRate' THEN LoanAccount1.[LoanRate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN LoanAccount1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN LoanAccount1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN LoanAccount1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN LoanAccount1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN LoanAccount1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN LoanAccount1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN LoanAccount1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN LoanAccount1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN LoanAccount1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN LoanAccount1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LoaningMetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LoaningMetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Account1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Account1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllLoanAccountDataByCurrencyCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'CurrencyCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @CurrencyCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all LoanAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='CurrencyCode'

/*
** parameter validation
*/
IF (@CurrencyCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  LoanAccount1.[AccountID]
		, LoanAccount1.[LoanAmount]
		, LoanAccount1.[OutstandingAmount]
		, LoanAccount1.[DueDate]
		, LoanAccount1.[LoanRate]
		, LoanAccount1.[CreatedByUserID]
		, LoanAccount1.[CreatedDate]
		, LoanAccount1.[LastModifiedByUserID]
		, LoanAccount1.[LastModifiedDate]
		, LoanAccount1.[Timestamp]
		, "LoaningMetaPartnerName" = MetaPartner1.[MetaPartnerName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_LoanAccount] LoanAccount1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=LoanAccount1.[AccountID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND Account1.[CurrencyCode] = @CurrencyCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  LoanAccount1.[AccountID]
		, LoanAccount1.[LoanAmount]
		, LoanAccount1.[OutstandingAmount]
		, LoanAccount1.[DueDate]
		, LoanAccount1.[LoanRate]
		, LoanAccount1.[CreatedByUserID]
		, LoanAccount1.[CreatedDate]
		, LoanAccount1.[LastModifiedByUserID]
		, LoanAccount1.[LastModifiedDate]
		, LoanAccount1.[Timestamp]
		, "LoaningMetaPartnerName" = MetaPartner1.[MetaPartnerName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_LoanAccount] LoanAccount1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=LoanAccount1.[AccountID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND Account1.[CurrencyCode] = @CurrencyCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN LoanAccount1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN LoanAccount1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LoanAmount' THEN LoanAccount1.[LoanAmount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LoanAmount' THEN LoanAccount1.[LoanAmount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OutstandingAmount' THEN LoanAccount1.[OutstandingAmount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OutstandingAmount' THEN LoanAccount1.[OutstandingAmount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DueDate' THEN LoanAccount1.[DueDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DueDate' THEN LoanAccount1.[DueDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LoanRate' THEN LoanAccount1.[LoanRate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LoanRate' THEN LoanAccount1.[LoanRate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN LoanAccount1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN LoanAccount1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN LoanAccount1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN LoanAccount1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN LoanAccount1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN LoanAccount1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN LoanAccount1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN LoanAccount1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN LoanAccount1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN LoanAccount1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LoaningMetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LoaningMetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Account1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Account1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllLoanAccountDataByMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'MetaPartnerID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @MetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all LoanAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='MetaPartnerID'

/*
** parameter validation
*/
IF (@MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  LoanAccount1.[AccountID]
		, LoanAccount1.[LoanAmount]
		, LoanAccount1.[OutstandingAmount]
		, LoanAccount1.[DueDate]
		, LoanAccount1.[LoanRate]
		, LoanAccount1.[CreatedByUserID]
		, LoanAccount1.[CreatedDate]
		, LoanAccount1.[LastModifiedByUserID]
		, LoanAccount1.[LastModifiedDate]
		, LoanAccount1.[Timestamp]
		, "LoaningMetaPartnerName" = MetaPartner1.[MetaPartnerName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_LoanAccount] LoanAccount1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=LoanAccount1.[AccountID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND Account1.[MetaPartnerID] = @MetaPartnerID

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  LoanAccount1.[AccountID]
		, LoanAccount1.[LoanAmount]
		, LoanAccount1.[OutstandingAmount]
		, LoanAccount1.[DueDate]
		, LoanAccount1.[LoanRate]
		, LoanAccount1.[CreatedByUserID]
		, LoanAccount1.[CreatedDate]
		, LoanAccount1.[LastModifiedByUserID]
		, LoanAccount1.[LastModifiedDate]
		, LoanAccount1.[Timestamp]
		, "LoaningMetaPartnerName" = MetaPartner1.[MetaPartnerName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_LoanAccount] LoanAccount1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=LoanAccount1.[AccountID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND Account1.[MetaPartnerID] = @MetaPartnerID

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN LoanAccount1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN LoanAccount1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LoanAmount' THEN LoanAccount1.[LoanAmount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LoanAmount' THEN LoanAccount1.[LoanAmount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OutstandingAmount' THEN LoanAccount1.[OutstandingAmount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OutstandingAmount' THEN LoanAccount1.[OutstandingAmount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DueDate' THEN LoanAccount1.[DueDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DueDate' THEN LoanAccount1.[DueDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LoanRate' THEN LoanAccount1.[LoanRate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LoanRate' THEN LoanAccount1.[LoanRate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN LoanAccount1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN LoanAccount1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN LoanAccount1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN LoanAccount1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN LoanAccount1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN LoanAccount1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN LoanAccount1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN LoanAccount1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN LoanAccount1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN LoanAccount1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LoaningMetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LoaningMetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Account1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Account1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllLoanToMetaPartnerData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'AccountID'
	, @SortDirection nvarchar(20) = 'Ascending'
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all LoanToMetaPartner data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='AccountID'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  LoanToMetaPartner1.[AccountID]
		, LoanToMetaPartner1.[MetaPartnerID]
		, LoanToMetaPartner1.[CreatedByUserID]
		, LoanToMetaPartner1.[CreatedDate]
		, LoanToMetaPartner1.[LastModifiedByUserID]
		, LoanToMetaPartner1.[LastModifiedDate]
		, LoanToMetaPartner1.[Timestamp]
		, LoanAccount1.[DueDate]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[MetaPartnerName]
	FROM
	      [dbo].[trelAccounts_LoanToMetaPartner] LoanToMetaPartner1
	INNER JOIN [dbo].[tblAccounts_LoanAccount] LoanAccount1 ON LoanAccount1.[AccountID]=LoanToMetaPartner1.[AccountID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=LoanToMetaPartner1.[MetaPartnerID]

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  LoanToMetaPartner1.[AccountID]
		, LoanToMetaPartner1.[MetaPartnerID]
		, LoanToMetaPartner1.[CreatedByUserID]
		, LoanToMetaPartner1.[CreatedDate]
		, LoanToMetaPartner1.[LastModifiedByUserID]
		, LoanToMetaPartner1.[LastModifiedDate]
		, LoanToMetaPartner1.[Timestamp]
		, LoanAccount1.[DueDate]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[MetaPartnerName]
	FROM
	      [dbo].[trelAccounts_LoanToMetaPartner] LoanToMetaPartner1
	INNER JOIN [dbo].[tblAccounts_LoanAccount] LoanAccount1 ON LoanAccount1.[AccountID]=LoanToMetaPartner1.[AccountID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=LoanToMetaPartner1.[MetaPartnerID]

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN LoanToMetaPartner1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN LoanToMetaPartner1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN LoanToMetaPartner1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN LoanToMetaPartner1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN LoanToMetaPartner1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN LoanToMetaPartner1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN LoanToMetaPartner1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN LoanToMetaPartner1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN LoanToMetaPartner1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN LoanToMetaPartner1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN LoanToMetaPartner1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN LoanToMetaPartner1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN LoanToMetaPartner1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN LoanToMetaPartner1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DueDate' THEN LoanAccount1.[DueDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DueDate' THEN LoanAccount1.[DueDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllLoanToMetaPartnerDataByAccountID
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'AccountID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @AccountID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all LoanToMetaPartner data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='AccountID'

/*
** parameter validation
*/
IF (@AccountID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  LoanToMetaPartner1.[AccountID]
		, LoanToMetaPartner1.[MetaPartnerID]
		, LoanToMetaPartner1.[CreatedByUserID]
		, LoanToMetaPartner1.[CreatedDate]
		, LoanToMetaPartner1.[LastModifiedByUserID]
		, LoanToMetaPartner1.[LastModifiedDate]
		, LoanToMetaPartner1.[Timestamp]
		, LoanAccount1.[DueDate]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[MetaPartnerName]
	FROM
	      [dbo].[trelAccounts_LoanToMetaPartner] LoanToMetaPartner1
	INNER JOIN [dbo].[tblAccounts_LoanAccount] LoanAccount1 ON LoanAccount1.[AccountID]=LoanToMetaPartner1.[AccountID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=LoanToMetaPartner1.[MetaPartnerID]
	WHERE 
		LoanToMetaPartner1.[AccountID] = @AccountID

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  LoanToMetaPartner1.[AccountID]
		, LoanToMetaPartner1.[MetaPartnerID]
		, LoanToMetaPartner1.[CreatedByUserID]
		, LoanToMetaPartner1.[CreatedDate]
		, LoanToMetaPartner1.[LastModifiedByUserID]
		, LoanToMetaPartner1.[LastModifiedDate]
		, LoanToMetaPartner1.[Timestamp]
		, LoanAccount1.[DueDate]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[MetaPartnerName]
	FROM
	      [dbo].[trelAccounts_LoanToMetaPartner] LoanToMetaPartner1
	INNER JOIN [dbo].[tblAccounts_LoanAccount] LoanAccount1 ON LoanAccount1.[AccountID]=LoanToMetaPartner1.[AccountID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=LoanToMetaPartner1.[MetaPartnerID]
	WHERE 
		LoanToMetaPartner1.[AccountID] = @AccountID

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN LoanToMetaPartner1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN LoanToMetaPartner1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN LoanToMetaPartner1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN LoanToMetaPartner1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN LoanToMetaPartner1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN LoanToMetaPartner1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN LoanToMetaPartner1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN LoanToMetaPartner1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN LoanToMetaPartner1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN LoanToMetaPartner1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN LoanToMetaPartner1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN LoanToMetaPartner1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN LoanToMetaPartner1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN LoanToMetaPartner1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DueDate' THEN LoanAccount1.[DueDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DueDate' THEN LoanAccount1.[DueDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllLoanToMetaPartnerDataByMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'MetaPartnerID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @MetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all LoanToMetaPartner data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='MetaPartnerID'

/*
** parameter validation
*/
IF (@MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  LoanToMetaPartner1.[AccountID]
		, LoanToMetaPartner1.[MetaPartnerID]
		, LoanToMetaPartner1.[CreatedByUserID]
		, LoanToMetaPartner1.[CreatedDate]
		, LoanToMetaPartner1.[LastModifiedByUserID]
		, LoanToMetaPartner1.[LastModifiedDate]
		, LoanToMetaPartner1.[Timestamp]
		, LoanAccount1.[DueDate]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[MetaPartnerName]
	FROM
	      [dbo].[trelAccounts_LoanToMetaPartner] LoanToMetaPartner1
	INNER JOIN [dbo].[tblAccounts_LoanAccount] LoanAccount1 ON LoanAccount1.[AccountID]=LoanToMetaPartner1.[AccountID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=LoanToMetaPartner1.[MetaPartnerID]
	WHERE 
		LoanToMetaPartner1.[MetaPartnerID] = @MetaPartnerID

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  LoanToMetaPartner1.[AccountID]
		, LoanToMetaPartner1.[MetaPartnerID]
		, LoanToMetaPartner1.[CreatedByUserID]
		, LoanToMetaPartner1.[CreatedDate]
		, LoanToMetaPartner1.[LastModifiedByUserID]
		, LoanToMetaPartner1.[LastModifiedDate]
		, LoanToMetaPartner1.[Timestamp]
		, LoanAccount1.[DueDate]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[MetaPartnerName]
	FROM
	      [dbo].[trelAccounts_LoanToMetaPartner] LoanToMetaPartner1
	INNER JOIN [dbo].[tblAccounts_LoanAccount] LoanAccount1 ON LoanAccount1.[AccountID]=LoanToMetaPartner1.[AccountID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=LoanToMetaPartner1.[MetaPartnerID]
	WHERE 
		LoanToMetaPartner1.[MetaPartnerID] = @MetaPartnerID

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN LoanToMetaPartner1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN LoanToMetaPartner1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN LoanToMetaPartner1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN LoanToMetaPartner1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN LoanToMetaPartner1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN LoanToMetaPartner1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN LoanToMetaPartner1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN LoanToMetaPartner1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN LoanToMetaPartner1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN LoanToMetaPartner1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN LoanToMetaPartner1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN LoanToMetaPartner1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN LoanToMetaPartner1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN LoanToMetaPartner1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DueDate' THEN LoanAccount1.[DueDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DueDate' THEN LoanAccount1.[DueDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllMetaTransferAccountData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'AccountID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all MetaTransferAccount data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='AccountID'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  MetaTransferAccount1.[AccountID]
		, MetaTransferAccount1.[MetaTransferAccountNumber]
		, MetaTransferAccount1.[PaymentInstitutionCode]
		, MetaTransferAccount1.[CreatedByUserID]
		, MetaTransferAccount1.[CreatedDate]
		, MetaTransferAccount1.[LastModifiedByUserID]
		, MetaTransferAccount1.[LastModifiedDate]
		, MetaTransferAccount1.[Timestamp]
		, PaymentInstitution1.[PaymentInstitutionName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_MetaTransferAccount] MetaTransferAccount1
	INNER JOIN [dbo].[tlkpAccounts_PaymentInstitution] PaymentInstitution1 ON PaymentInstitution1.[PaymentInstitutionCode]=MetaTransferAccount1.[PaymentInstitutionCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=MetaTransferAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  MetaTransferAccount1.[AccountID]
		, MetaTransferAccount1.[MetaTransferAccountNumber]
		, MetaTransferAccount1.[PaymentInstitutionCode]
		, MetaTransferAccount1.[CreatedByUserID]
		, MetaTransferAccount1.[CreatedDate]
		, MetaTransferAccount1.[LastModifiedByUserID]
		, MetaTransferAccount1.[LastModifiedDate]
		, MetaTransferAccount1.[Timestamp]
		, PaymentInstitution1.[PaymentInstitutionName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_MetaTransferAccount] MetaTransferAccount1
	INNER JOIN [dbo].[tlkpAccounts_PaymentInstitution] PaymentInstitution1 ON PaymentInstitution1.[PaymentInstitutionCode]=MetaTransferAccount1.[PaymentInstitutionCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=MetaTransferAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN MetaTransferAccount1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN MetaTransferAccount1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaTransferAccountNumber' THEN MetaTransferAccount1.[MetaTransferAccountNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaTransferAccountNumber' THEN MetaTransferAccount1.[MetaTransferAccountNumber] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentInstitutionCode' THEN MetaTransferAccount1.[PaymentInstitutionCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentInstitutionCode' THEN MetaTransferAccount1.[PaymentInstitutionCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN MetaTransferAccount1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN MetaTransferAccount1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN MetaTransferAccount1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN MetaTransferAccount1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN MetaTransferAccount1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN MetaTransferAccount1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN MetaTransferAccount1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN MetaTransferAccount1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN MetaTransferAccount1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN MetaTransferAccount1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentInstitutionName' THEN PaymentInstitution1.[PaymentInstitutionName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentInstitutionName' THEN PaymentInstitution1.[PaymentInstitutionName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Account1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Account1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllMetaTransferAccountDataByAccountID
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'AccountID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @AccountID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all MetaTransferAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='AccountID'

/*
** parameter validation
*/
IF (@AccountID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  MetaTransferAccount1.[AccountID]
		, MetaTransferAccount1.[MetaTransferAccountNumber]
		, MetaTransferAccount1.[PaymentInstitutionCode]
		, MetaTransferAccount1.[CreatedByUserID]
		, MetaTransferAccount1.[CreatedDate]
		, MetaTransferAccount1.[LastModifiedByUserID]
		, MetaTransferAccount1.[LastModifiedDate]
		, MetaTransferAccount1.[Timestamp]
		, PaymentInstitution1.[PaymentInstitutionName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_MetaTransferAccount] MetaTransferAccount1
	INNER JOIN [dbo].[tlkpAccounts_PaymentInstitution] PaymentInstitution1 ON PaymentInstitution1.[PaymentInstitutionCode]=MetaTransferAccount1.[PaymentInstitutionCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=MetaTransferAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND MetaTransferAccount1.[AccountID] = @AccountID

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  MetaTransferAccount1.[AccountID]
		, MetaTransferAccount1.[MetaTransferAccountNumber]
		, MetaTransferAccount1.[PaymentInstitutionCode]
		, MetaTransferAccount1.[CreatedByUserID]
		, MetaTransferAccount1.[CreatedDate]
		, MetaTransferAccount1.[LastModifiedByUserID]
		, MetaTransferAccount1.[LastModifiedDate]
		, MetaTransferAccount1.[Timestamp]
		, PaymentInstitution1.[PaymentInstitutionName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_MetaTransferAccount] MetaTransferAccount1
	INNER JOIN [dbo].[tlkpAccounts_PaymentInstitution] PaymentInstitution1 ON PaymentInstitution1.[PaymentInstitutionCode]=MetaTransferAccount1.[PaymentInstitutionCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=MetaTransferAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND MetaTransferAccount1.[AccountID] = @AccountID

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN MetaTransferAccount1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN MetaTransferAccount1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaTransferAccountNumber' THEN MetaTransferAccount1.[MetaTransferAccountNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaTransferAccountNumber' THEN MetaTransferAccount1.[MetaTransferAccountNumber] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentInstitutionCode' THEN MetaTransferAccount1.[PaymentInstitutionCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentInstitutionCode' THEN MetaTransferAccount1.[PaymentInstitutionCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN MetaTransferAccount1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN MetaTransferAccount1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN MetaTransferAccount1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN MetaTransferAccount1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN MetaTransferAccount1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN MetaTransferAccount1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN MetaTransferAccount1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN MetaTransferAccount1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN MetaTransferAccount1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN MetaTransferAccount1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentInstitutionName' THEN PaymentInstitution1.[PaymentInstitutionName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentInstitutionName' THEN PaymentInstitution1.[PaymentInstitutionName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Account1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Account1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllMetaTransferAccountDataByAccountSubTypeCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'AccountSubTypeCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @AccountSubTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all MetaTransferAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='AccountSubTypeCode'

/*
** parameter validation
*/
IF (@AccountSubTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  MetaTransferAccount1.[AccountID]
		, MetaTransferAccount1.[MetaTransferAccountNumber]
		, MetaTransferAccount1.[PaymentInstitutionCode]
		, MetaTransferAccount1.[CreatedByUserID]
		, MetaTransferAccount1.[CreatedDate]
		, MetaTransferAccount1.[LastModifiedByUserID]
		, MetaTransferAccount1.[LastModifiedDate]
		, MetaTransferAccount1.[Timestamp]
		, PaymentInstitution1.[PaymentInstitutionName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_MetaTransferAccount] MetaTransferAccount1
	INNER JOIN [dbo].[tlkpAccounts_PaymentInstitution] PaymentInstitution1 ON PaymentInstitution1.[PaymentInstitutionCode]=MetaTransferAccount1.[PaymentInstitutionCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=MetaTransferAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND Account1.[AccountSubTypeCode] = @AccountSubTypeCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  MetaTransferAccount1.[AccountID]
		, MetaTransferAccount1.[MetaTransferAccountNumber]
		, MetaTransferAccount1.[PaymentInstitutionCode]
		, MetaTransferAccount1.[CreatedByUserID]
		, MetaTransferAccount1.[CreatedDate]
		, MetaTransferAccount1.[LastModifiedByUserID]
		, MetaTransferAccount1.[LastModifiedDate]
		, MetaTransferAccount1.[Timestamp]
		, PaymentInstitution1.[PaymentInstitutionName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_MetaTransferAccount] MetaTransferAccount1
	INNER JOIN [dbo].[tlkpAccounts_PaymentInstitution] PaymentInstitution1 ON PaymentInstitution1.[PaymentInstitutionCode]=MetaTransferAccount1.[PaymentInstitutionCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=MetaTransferAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND Account1.[AccountSubTypeCode] = @AccountSubTypeCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN MetaTransferAccount1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN MetaTransferAccount1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaTransferAccountNumber' THEN MetaTransferAccount1.[MetaTransferAccountNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaTransferAccountNumber' THEN MetaTransferAccount1.[MetaTransferAccountNumber] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentInstitutionCode' THEN MetaTransferAccount1.[PaymentInstitutionCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentInstitutionCode' THEN MetaTransferAccount1.[PaymentInstitutionCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN MetaTransferAccount1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN MetaTransferAccount1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN MetaTransferAccount1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN MetaTransferAccount1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN MetaTransferAccount1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN MetaTransferAccount1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN MetaTransferAccount1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN MetaTransferAccount1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN MetaTransferAccount1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN MetaTransferAccount1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentInstitutionName' THEN PaymentInstitution1.[PaymentInstitutionName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentInstitutionName' THEN PaymentInstitution1.[PaymentInstitutionName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Account1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Account1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllMetaTransferAccountDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'MetaTransferAccountNumber'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @MetaTransferAccountNumber nvarchar(100)
	, @PaymentInstitutionCode int
	, @AccountName nvarchar(255)
	, @CurrencyCode int
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all MetaTransferAccount data by criteria.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='MetaTransferAccountNumber'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  MetaTransferAccount1.[AccountID]
		, MetaTransferAccount1.[MetaTransferAccountNumber]
		, MetaTransferAccount1.[PaymentInstitutionCode]
		, MetaTransferAccount1.[CreatedByUserID]
		, MetaTransferAccount1.[CreatedDate]
		, MetaTransferAccount1.[LastModifiedByUserID]
		, MetaTransferAccount1.[LastModifiedDate]
		, MetaTransferAccount1.[Timestamp]
		, PaymentInstitution1.[PaymentInstitutionName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_MetaTransferAccount] MetaTransferAccount1
	INNER JOIN [dbo].[tlkpAccounts_PaymentInstitution] PaymentInstitution1 ON PaymentInstitution1.[PaymentInstitutionCode]=MetaTransferAccount1.[PaymentInstitutionCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=MetaTransferAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND (@MetaTransferAccountNumber IS NULL OR MetaTransferAccount1.[MetaTransferAccountNumber] like '%' + @MetaTransferAccountNumber + '%')
		AND (@PaymentInstitutionCode IS NULL OR MetaTransferAccount1.[PaymentInstitutionCode] = @PaymentInstitutionCode)
		AND (@AccountName IS NULL OR Account1.[AccountName] like '%' + @AccountName + '%')
		AND (@CurrencyCode IS NULL OR Account1.[CurrencyCode] = @CurrencyCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (Account1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (Account1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  MetaTransferAccount1.[AccountID]
		, MetaTransferAccount1.[MetaTransferAccountNumber]
		, MetaTransferAccount1.[PaymentInstitutionCode]
		, MetaTransferAccount1.[CreatedByUserID]
		, MetaTransferAccount1.[CreatedDate]
		, MetaTransferAccount1.[LastModifiedByUserID]
		, MetaTransferAccount1.[LastModifiedDate]
		, MetaTransferAccount1.[Timestamp]
		, PaymentInstitution1.[PaymentInstitutionName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_MetaTransferAccount] MetaTransferAccount1
	INNER JOIN [dbo].[tlkpAccounts_PaymentInstitution] PaymentInstitution1 ON PaymentInstitution1.[PaymentInstitutionCode]=MetaTransferAccount1.[PaymentInstitutionCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=MetaTransferAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND (@MetaTransferAccountNumber IS NULL OR MetaTransferAccount1.[MetaTransferAccountNumber] like '%' + @MetaTransferAccountNumber + '%')
		AND (@PaymentInstitutionCode IS NULL OR MetaTransferAccount1.[PaymentInstitutionCode] = @PaymentInstitutionCode)
		AND (@AccountName IS NULL OR Account1.[AccountName] like '%' + @AccountName + '%')
		AND (@CurrencyCode IS NULL OR Account1.[CurrencyCode] = @CurrencyCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (Account1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (Account1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN MetaTransferAccount1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN MetaTransferAccount1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaTransferAccountNumber' THEN MetaTransferAccount1.[MetaTransferAccountNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaTransferAccountNumber' THEN MetaTransferAccount1.[MetaTransferAccountNumber] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentInstitutionCode' THEN MetaTransferAccount1.[PaymentInstitutionCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentInstitutionCode' THEN MetaTransferAccount1.[PaymentInstitutionCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN MetaTransferAccount1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN MetaTransferAccount1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN MetaTransferAccount1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN MetaTransferAccount1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN MetaTransferAccount1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN MetaTransferAccount1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN MetaTransferAccount1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN MetaTransferAccount1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN MetaTransferAccount1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN MetaTransferAccount1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentInstitutionName' THEN PaymentInstitution1.[PaymentInstitutionName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentInstitutionName' THEN PaymentInstitution1.[PaymentInstitutionName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Account1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Account1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllMetaTransferAccountDataByCurrencyCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'CurrencyCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @CurrencyCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all MetaTransferAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='CurrencyCode'

/*
** parameter validation
*/
IF (@CurrencyCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  MetaTransferAccount1.[AccountID]
		, MetaTransferAccount1.[MetaTransferAccountNumber]
		, MetaTransferAccount1.[PaymentInstitutionCode]
		, MetaTransferAccount1.[CreatedByUserID]
		, MetaTransferAccount1.[CreatedDate]
		, MetaTransferAccount1.[LastModifiedByUserID]
		, MetaTransferAccount1.[LastModifiedDate]
		, MetaTransferAccount1.[Timestamp]
		, PaymentInstitution1.[PaymentInstitutionName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_MetaTransferAccount] MetaTransferAccount1
	INNER JOIN [dbo].[tlkpAccounts_PaymentInstitution] PaymentInstitution1 ON PaymentInstitution1.[PaymentInstitutionCode]=MetaTransferAccount1.[PaymentInstitutionCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=MetaTransferAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND Account1.[CurrencyCode] = @CurrencyCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  MetaTransferAccount1.[AccountID]
		, MetaTransferAccount1.[MetaTransferAccountNumber]
		, MetaTransferAccount1.[PaymentInstitutionCode]
		, MetaTransferAccount1.[CreatedByUserID]
		, MetaTransferAccount1.[CreatedDate]
		, MetaTransferAccount1.[LastModifiedByUserID]
		, MetaTransferAccount1.[LastModifiedDate]
		, MetaTransferAccount1.[Timestamp]
		, PaymentInstitution1.[PaymentInstitutionName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_MetaTransferAccount] MetaTransferAccount1
	INNER JOIN [dbo].[tlkpAccounts_PaymentInstitution] PaymentInstitution1 ON PaymentInstitution1.[PaymentInstitutionCode]=MetaTransferAccount1.[PaymentInstitutionCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=MetaTransferAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND Account1.[CurrencyCode] = @CurrencyCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN MetaTransferAccount1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN MetaTransferAccount1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaTransferAccountNumber' THEN MetaTransferAccount1.[MetaTransferAccountNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaTransferAccountNumber' THEN MetaTransferAccount1.[MetaTransferAccountNumber] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentInstitutionCode' THEN MetaTransferAccount1.[PaymentInstitutionCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentInstitutionCode' THEN MetaTransferAccount1.[PaymentInstitutionCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN MetaTransferAccount1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN MetaTransferAccount1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN MetaTransferAccount1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN MetaTransferAccount1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN MetaTransferAccount1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN MetaTransferAccount1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN MetaTransferAccount1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN MetaTransferAccount1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN MetaTransferAccount1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN MetaTransferAccount1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentInstitutionName' THEN PaymentInstitution1.[PaymentInstitutionName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentInstitutionName' THEN PaymentInstitution1.[PaymentInstitutionName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Account1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Account1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllMetaTransferAccountDataByMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'MetaPartnerID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @MetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all MetaTransferAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='MetaPartnerID'

/*
** parameter validation
*/
IF (@MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  MetaTransferAccount1.[AccountID]
		, MetaTransferAccount1.[MetaTransferAccountNumber]
		, MetaTransferAccount1.[PaymentInstitutionCode]
		, MetaTransferAccount1.[CreatedByUserID]
		, MetaTransferAccount1.[CreatedDate]
		, MetaTransferAccount1.[LastModifiedByUserID]
		, MetaTransferAccount1.[LastModifiedDate]
		, MetaTransferAccount1.[Timestamp]
		, PaymentInstitution1.[PaymentInstitutionName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_MetaTransferAccount] MetaTransferAccount1
	INNER JOIN [dbo].[tlkpAccounts_PaymentInstitution] PaymentInstitution1 ON PaymentInstitution1.[PaymentInstitutionCode]=MetaTransferAccount1.[PaymentInstitutionCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=MetaTransferAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND Account1.[MetaPartnerID] = @MetaPartnerID

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  MetaTransferAccount1.[AccountID]
		, MetaTransferAccount1.[MetaTransferAccountNumber]
		, MetaTransferAccount1.[PaymentInstitutionCode]
		, MetaTransferAccount1.[CreatedByUserID]
		, MetaTransferAccount1.[CreatedDate]
		, MetaTransferAccount1.[LastModifiedByUserID]
		, MetaTransferAccount1.[LastModifiedDate]
		, MetaTransferAccount1.[Timestamp]
		, PaymentInstitution1.[PaymentInstitutionName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_MetaTransferAccount] MetaTransferAccount1
	INNER JOIN [dbo].[tlkpAccounts_PaymentInstitution] PaymentInstitution1 ON PaymentInstitution1.[PaymentInstitutionCode]=MetaTransferAccount1.[PaymentInstitutionCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=MetaTransferAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND Account1.[MetaPartnerID] = @MetaPartnerID

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN MetaTransferAccount1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN MetaTransferAccount1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaTransferAccountNumber' THEN MetaTransferAccount1.[MetaTransferAccountNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaTransferAccountNumber' THEN MetaTransferAccount1.[MetaTransferAccountNumber] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentInstitutionCode' THEN MetaTransferAccount1.[PaymentInstitutionCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentInstitutionCode' THEN MetaTransferAccount1.[PaymentInstitutionCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN MetaTransferAccount1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN MetaTransferAccount1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN MetaTransferAccount1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN MetaTransferAccount1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN MetaTransferAccount1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN MetaTransferAccount1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN MetaTransferAccount1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN MetaTransferAccount1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN MetaTransferAccount1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN MetaTransferAccount1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentInstitutionName' THEN PaymentInstitution1.[PaymentInstitutionName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentInstitutionName' THEN PaymentInstitution1.[PaymentInstitutionName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Account1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Account1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllMetaTransferAccountDataByPaymentInstitutionCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'PaymentInstitutionCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @PaymentInstitutionCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all MetaTransferAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='PaymentInstitutionCode'

/*
** parameter validation
*/
IF (@PaymentInstitutionCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  MetaTransferAccount1.[AccountID]
		, MetaTransferAccount1.[MetaTransferAccountNumber]
		, MetaTransferAccount1.[PaymentInstitutionCode]
		, MetaTransferAccount1.[CreatedByUserID]
		, MetaTransferAccount1.[CreatedDate]
		, MetaTransferAccount1.[LastModifiedByUserID]
		, MetaTransferAccount1.[LastModifiedDate]
		, MetaTransferAccount1.[Timestamp]
		, PaymentInstitution1.[PaymentInstitutionName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_MetaTransferAccount] MetaTransferAccount1
	INNER JOIN [dbo].[tlkpAccounts_PaymentInstitution] PaymentInstitution1 ON PaymentInstitution1.[PaymentInstitutionCode]=MetaTransferAccount1.[PaymentInstitutionCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=MetaTransferAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND MetaTransferAccount1.[PaymentInstitutionCode] = @PaymentInstitutionCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  MetaTransferAccount1.[AccountID]
		, MetaTransferAccount1.[MetaTransferAccountNumber]
		, MetaTransferAccount1.[PaymentInstitutionCode]
		, MetaTransferAccount1.[CreatedByUserID]
		, MetaTransferAccount1.[CreatedDate]
		, MetaTransferAccount1.[LastModifiedByUserID]
		, MetaTransferAccount1.[LastModifiedDate]
		, MetaTransferAccount1.[Timestamp]
		, PaymentInstitution1.[PaymentInstitutionName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_MetaTransferAccount] MetaTransferAccount1
	INNER JOIN [dbo].[tlkpAccounts_PaymentInstitution] PaymentInstitution1 ON PaymentInstitution1.[PaymentInstitutionCode]=MetaTransferAccount1.[PaymentInstitutionCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=MetaTransferAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND MetaTransferAccount1.[PaymentInstitutionCode] = @PaymentInstitutionCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN MetaTransferAccount1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN MetaTransferAccount1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaTransferAccountNumber' THEN MetaTransferAccount1.[MetaTransferAccountNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaTransferAccountNumber' THEN MetaTransferAccount1.[MetaTransferAccountNumber] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentInstitutionCode' THEN MetaTransferAccount1.[PaymentInstitutionCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentInstitutionCode' THEN MetaTransferAccount1.[PaymentInstitutionCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN MetaTransferAccount1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN MetaTransferAccount1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN MetaTransferAccount1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN MetaTransferAccount1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN MetaTransferAccount1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN MetaTransferAccount1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN MetaTransferAccount1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN MetaTransferAccount1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN MetaTransferAccount1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN MetaTransferAccount1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentInstitutionName' THEN PaymentInstitution1.[PaymentInstitutionName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentInstitutionName' THEN PaymentInstitution1.[PaymentInstitutionName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Account1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Account1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllParticipatingPartnerData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'AccountID'
	, @SortDirection nvarchar(20) = 'Ascending'
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all ParticipatingPartner data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='AccountID'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  ParticipatingPartner1.[AccountID]
		, ParticipatingPartner1.[MetaPartnerID]
		, ParticipatingPartner1.[CreatedByUserID]
		, ParticipatingPartner1.[CreatedDate]
		, ParticipatingPartner1.[LastModifiedByUserID]
		, ParticipatingPartner1.[LastModifiedDate]
		, ParticipatingPartner1.[Timestamp]
		, MetaPartner1.[MetaPartnerName]
		, FundAccount1.[StartDate]
		, FundAccount1.[EndDate]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[trelAccounts_ParticipatingPartner] ParticipatingPartner1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=ParticipatingPartner1.[MetaPartnerID]
	INNER JOIN [dbo].[tblAccounts_FundAccount] FundAccount1 ON FundAccount1.[AccountID]=ParticipatingPartner1.[AccountID]

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  ParticipatingPartner1.[AccountID]
		, ParticipatingPartner1.[MetaPartnerID]
		, ParticipatingPartner1.[CreatedByUserID]
		, ParticipatingPartner1.[CreatedDate]
		, ParticipatingPartner1.[LastModifiedByUserID]
		, ParticipatingPartner1.[LastModifiedDate]
		, ParticipatingPartner1.[Timestamp]
		, MetaPartner1.[MetaPartnerName]
		, FundAccount1.[StartDate]
		, FundAccount1.[EndDate]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[trelAccounts_ParticipatingPartner] ParticipatingPartner1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=ParticipatingPartner1.[MetaPartnerID]
	INNER JOIN [dbo].[tblAccounts_FundAccount] FundAccount1 ON FundAccount1.[AccountID]=ParticipatingPartner1.[AccountID]

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN ParticipatingPartner1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN ParticipatingPartner1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN ParticipatingPartner1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN ParticipatingPartner1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN ParticipatingPartner1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN ParticipatingPartner1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN ParticipatingPartner1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN ParticipatingPartner1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN ParticipatingPartner1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN ParticipatingPartner1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN ParticipatingPartner1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN ParticipatingPartner1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN ParticipatingPartner1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN ParticipatingPartner1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'StartDate' THEN FundAccount1.[StartDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'StartDate' THEN FundAccount1.[StartDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EndDate' THEN FundAccount1.[EndDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EndDate' THEN FundAccount1.[EndDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllParticipatingPartnerDataByAccountID
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'AccountID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @AccountID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all ParticipatingPartner data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='AccountID'

/*
** parameter validation
*/
IF (@AccountID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  ParticipatingPartner1.[AccountID]
		, ParticipatingPartner1.[MetaPartnerID]
		, ParticipatingPartner1.[CreatedByUserID]
		, ParticipatingPartner1.[CreatedDate]
		, ParticipatingPartner1.[LastModifiedByUserID]
		, ParticipatingPartner1.[LastModifiedDate]
		, ParticipatingPartner1.[Timestamp]
		, MetaPartner1.[MetaPartnerName]
		, FundAccount1.[StartDate]
		, FundAccount1.[EndDate]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[trelAccounts_ParticipatingPartner] ParticipatingPartner1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=ParticipatingPartner1.[MetaPartnerID]
	INNER JOIN [dbo].[tblAccounts_FundAccount] FundAccount1 ON FundAccount1.[AccountID]=ParticipatingPartner1.[AccountID]
	WHERE 
		ParticipatingPartner1.[AccountID] = @AccountID

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  ParticipatingPartner1.[AccountID]
		, ParticipatingPartner1.[MetaPartnerID]
		, ParticipatingPartner1.[CreatedByUserID]
		, ParticipatingPartner1.[CreatedDate]
		, ParticipatingPartner1.[LastModifiedByUserID]
		, ParticipatingPartner1.[LastModifiedDate]
		, ParticipatingPartner1.[Timestamp]
		, MetaPartner1.[MetaPartnerName]
		, FundAccount1.[StartDate]
		, FundAccount1.[EndDate]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[trelAccounts_ParticipatingPartner] ParticipatingPartner1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=ParticipatingPartner1.[MetaPartnerID]
	INNER JOIN [dbo].[tblAccounts_FundAccount] FundAccount1 ON FundAccount1.[AccountID]=ParticipatingPartner1.[AccountID]
	WHERE 
		ParticipatingPartner1.[AccountID] = @AccountID

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN ParticipatingPartner1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN ParticipatingPartner1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN ParticipatingPartner1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN ParticipatingPartner1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN ParticipatingPartner1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN ParticipatingPartner1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN ParticipatingPartner1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN ParticipatingPartner1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN ParticipatingPartner1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN ParticipatingPartner1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN ParticipatingPartner1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN ParticipatingPartner1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN ParticipatingPartner1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN ParticipatingPartner1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'StartDate' THEN FundAccount1.[StartDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'StartDate' THEN FundAccount1.[StartDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EndDate' THEN FundAccount1.[EndDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EndDate' THEN FundAccount1.[EndDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllParticipatingPartnerDataByMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'MetaPartnerID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @MetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all ParticipatingPartner data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='MetaPartnerID'

/*
** parameter validation
*/
IF (@MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  ParticipatingPartner1.[AccountID]
		, ParticipatingPartner1.[MetaPartnerID]
		, ParticipatingPartner1.[CreatedByUserID]
		, ParticipatingPartner1.[CreatedDate]
		, ParticipatingPartner1.[LastModifiedByUserID]
		, ParticipatingPartner1.[LastModifiedDate]
		, ParticipatingPartner1.[Timestamp]
		, MetaPartner1.[MetaPartnerName]
		, FundAccount1.[StartDate]
		, FundAccount1.[EndDate]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[trelAccounts_ParticipatingPartner] ParticipatingPartner1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=ParticipatingPartner1.[MetaPartnerID]
	INNER JOIN [dbo].[tblAccounts_FundAccount] FundAccount1 ON FundAccount1.[AccountID]=ParticipatingPartner1.[AccountID]
	WHERE 
		ParticipatingPartner1.[MetaPartnerID] = @MetaPartnerID

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  ParticipatingPartner1.[AccountID]
		, ParticipatingPartner1.[MetaPartnerID]
		, ParticipatingPartner1.[CreatedByUserID]
		, ParticipatingPartner1.[CreatedDate]
		, ParticipatingPartner1.[LastModifiedByUserID]
		, ParticipatingPartner1.[LastModifiedDate]
		, ParticipatingPartner1.[Timestamp]
		, MetaPartner1.[MetaPartnerName]
		, FundAccount1.[StartDate]
		, FundAccount1.[EndDate]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[trelAccounts_ParticipatingPartner] ParticipatingPartner1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=ParticipatingPartner1.[MetaPartnerID]
	INNER JOIN [dbo].[tblAccounts_FundAccount] FundAccount1 ON FundAccount1.[AccountID]=ParticipatingPartner1.[AccountID]
	WHERE 
		ParticipatingPartner1.[MetaPartnerID] = @MetaPartnerID

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN ParticipatingPartner1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN ParticipatingPartner1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN ParticipatingPartner1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN ParticipatingPartner1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN ParticipatingPartner1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN ParticipatingPartner1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN ParticipatingPartner1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN ParticipatingPartner1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN ParticipatingPartner1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN ParticipatingPartner1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN ParticipatingPartner1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN ParticipatingPartner1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN ParticipatingPartner1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN ParticipatingPartner1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'StartDate' THEN FundAccount1.[StartDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'StartDate' THEN FundAccount1.[StartDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EndDate' THEN FundAccount1.[EndDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EndDate' THEN FundAccount1.[EndDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllPaymentInstitutionData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'PaymentInstitutionCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all PaymentInstitution data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='PaymentInstitutionCode'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  PaymentInstitution1.[PaymentInstitutionCode]
		, PaymentInstitution1.[PaymentInstitutionName]
		, PaymentInstitution1.[Description]
		, PaymentInstitution1.[IsActive]
		, PaymentInstitution1.[CreatedByUserID]
		, PaymentInstitution1.[CreatedDate]
		, PaymentInstitution1.[LastModifiedByUserID]
		, PaymentInstitution1.[LastModifiedDate]
		, PaymentInstitution1.[Timestamp]
	FROM
	      [dbo].[tlkpAccounts_PaymentInstitution] PaymentInstitution1
	WHERE 
		PaymentInstitution1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN PaymentInstitution1.[IsActive] ELSE 1 END

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  PaymentInstitution1.[PaymentInstitutionCode]
		, PaymentInstitution1.[PaymentInstitutionName]
		, PaymentInstitution1.[Description]
		, PaymentInstitution1.[IsActive]
		, PaymentInstitution1.[CreatedByUserID]
		, PaymentInstitution1.[CreatedDate]
		, PaymentInstitution1.[LastModifiedByUserID]
		, PaymentInstitution1.[LastModifiedDate]
		, PaymentInstitution1.[Timestamp]
	FROM
	      [dbo].[tlkpAccounts_PaymentInstitution] PaymentInstitution1
	WHERE 
		PaymentInstitution1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN PaymentInstitution1.[IsActive] ELSE 1 END

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentInstitutionCode' THEN PaymentInstitution1.[PaymentInstitutionCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentInstitutionCode' THEN PaymentInstitution1.[PaymentInstitutionCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentInstitutionName' THEN PaymentInstitution1.[PaymentInstitutionName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentInstitutionName' THEN PaymentInstitution1.[PaymentInstitutionName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN PaymentInstitution1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN PaymentInstitution1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN PaymentInstitution1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN PaymentInstitution1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN PaymentInstitution1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN PaymentInstitution1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN PaymentInstitution1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN PaymentInstitution1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN PaymentInstitution1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN PaymentInstitution1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN PaymentInstitution1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN PaymentInstitution1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN PaymentInstitution1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN PaymentInstitution1.[Timestamp] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllStoredValueAccountData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'AccountID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all StoredValueAccount data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='AccountID'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  StoredValueAccount1.[AccountID]
		, StoredValueAccount1.[PhoneMetaPartnerID]
		, StoredValueAccount1.[MetaPartnerPhoneID]
		, StoredValueAccount1.[Balance]
		, StoredValueAccount1.[CreatedByUserID]
		, StoredValueAccount1.[CreatedDate]
		, StoredValueAccount1.[LastModifiedByUserID]
		, StoredValueAccount1.[LastModifiedDate]
		, StoredValueAccount1.[Timestamp]
		, MetaPartnerPhone1.[PhoneNumber]
		, DebitAccount1.[DebitAccountNumber]
		, DebitAccount1.[IsDefaultDebitAccount]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_StoredValueAccount] StoredValueAccount1
	INNER JOIN [dbo].[tblCustomers_MetaPartnerPhone] MetaPartnerPhone1 ON MetaPartnerPhone1.[MetaPartnerPhoneID]=StoredValueAccount1.[MetaPartnerPhoneID] AND MetaPartnerPhone1.[MetaPartnerID]=StoredValueAccount1.[PhoneMetaPartnerID]
	INNER JOIN [dbo].[tblAccounts_DebitAccount] DebitAccount1 ON DebitAccount1.[AccountID]=StoredValueAccount1.[AccountID]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=DebitAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  StoredValueAccount1.[AccountID]
		, StoredValueAccount1.[PhoneMetaPartnerID]
		, StoredValueAccount1.[MetaPartnerPhoneID]
		, StoredValueAccount1.[Balance]
		, StoredValueAccount1.[CreatedByUserID]
		, StoredValueAccount1.[CreatedDate]
		, StoredValueAccount1.[LastModifiedByUserID]
		, StoredValueAccount1.[LastModifiedDate]
		, StoredValueAccount1.[Timestamp]
		, MetaPartnerPhone1.[PhoneNumber]
		, DebitAccount1.[DebitAccountNumber]
		, DebitAccount1.[IsDefaultDebitAccount]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_StoredValueAccount] StoredValueAccount1
	INNER JOIN [dbo].[tblCustomers_MetaPartnerPhone] MetaPartnerPhone1 ON MetaPartnerPhone1.[MetaPartnerPhoneID]=StoredValueAccount1.[MetaPartnerPhoneID] AND MetaPartnerPhone1.[MetaPartnerID]=StoredValueAccount1.[PhoneMetaPartnerID]
	INNER JOIN [dbo].[tblAccounts_DebitAccount] DebitAccount1 ON DebitAccount1.[AccountID]=StoredValueAccount1.[AccountID]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=DebitAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN StoredValueAccount1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN StoredValueAccount1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PhoneMetaPartnerID' THEN StoredValueAccount1.[PhoneMetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PhoneMetaPartnerID' THEN StoredValueAccount1.[PhoneMetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerPhoneID' THEN StoredValueAccount1.[MetaPartnerPhoneID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerPhoneID' THEN StoredValueAccount1.[MetaPartnerPhoneID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Balance' THEN StoredValueAccount1.[Balance] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Balance' THEN StoredValueAccount1.[Balance] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN StoredValueAccount1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN StoredValueAccount1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN StoredValueAccount1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN StoredValueAccount1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN StoredValueAccount1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN StoredValueAccount1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN StoredValueAccount1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN StoredValueAccount1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN StoredValueAccount1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN StoredValueAccount1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PhoneNumber' THEN MetaPartnerPhone1.[PhoneNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PhoneNumber' THEN MetaPartnerPhone1.[PhoneNumber] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DebitAccountNumber' THEN DebitAccount1.[DebitAccountNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DebitAccountNumber' THEN DebitAccount1.[DebitAccountNumber] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsDefaultDebitAccount' THEN DebitAccount1.[IsDefaultDebitAccount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsDefaultDebitAccount' THEN DebitAccount1.[IsDefaultDebitAccount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Account1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Account1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllStoredValueAccountDataByAccountID
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'AccountID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @AccountID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all StoredValueAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='AccountID'

/*
** parameter validation
*/
IF (@AccountID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  StoredValueAccount1.[AccountID]
		, StoredValueAccount1.[PhoneMetaPartnerID]
		, StoredValueAccount1.[MetaPartnerPhoneID]
		, StoredValueAccount1.[Balance]
		, StoredValueAccount1.[CreatedByUserID]
		, StoredValueAccount1.[CreatedDate]
		, StoredValueAccount1.[LastModifiedByUserID]
		, StoredValueAccount1.[LastModifiedDate]
		, StoredValueAccount1.[Timestamp]
		, MetaPartnerPhone1.[PhoneNumber]
		, DebitAccount1.[DebitAccountNumber]
		, DebitAccount1.[IsDefaultDebitAccount]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_StoredValueAccount] StoredValueAccount1
	INNER JOIN [dbo].[tblCustomers_MetaPartnerPhone] MetaPartnerPhone1 ON MetaPartnerPhone1.[MetaPartnerPhoneID]=StoredValueAccount1.[MetaPartnerPhoneID] AND MetaPartnerPhone1.[MetaPartnerID]=StoredValueAccount1.[PhoneMetaPartnerID]
	INNER JOIN [dbo].[tblAccounts_DebitAccount] DebitAccount1 ON DebitAccount1.[AccountID]=StoredValueAccount1.[AccountID]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=DebitAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND StoredValueAccount1.[AccountID] = @AccountID

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  StoredValueAccount1.[AccountID]
		, StoredValueAccount1.[PhoneMetaPartnerID]
		, StoredValueAccount1.[MetaPartnerPhoneID]
		, StoredValueAccount1.[Balance]
		, StoredValueAccount1.[CreatedByUserID]
		, StoredValueAccount1.[CreatedDate]
		, StoredValueAccount1.[LastModifiedByUserID]
		, StoredValueAccount1.[LastModifiedDate]
		, StoredValueAccount1.[Timestamp]
		, MetaPartnerPhone1.[PhoneNumber]
		, DebitAccount1.[DebitAccountNumber]
		, DebitAccount1.[IsDefaultDebitAccount]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_StoredValueAccount] StoredValueAccount1
	INNER JOIN [dbo].[tblCustomers_MetaPartnerPhone] MetaPartnerPhone1 ON MetaPartnerPhone1.[MetaPartnerPhoneID]=StoredValueAccount1.[MetaPartnerPhoneID] AND MetaPartnerPhone1.[MetaPartnerID]=StoredValueAccount1.[PhoneMetaPartnerID]
	INNER JOIN [dbo].[tblAccounts_DebitAccount] DebitAccount1 ON DebitAccount1.[AccountID]=StoredValueAccount1.[AccountID]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=DebitAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND StoredValueAccount1.[AccountID] = @AccountID

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN StoredValueAccount1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN StoredValueAccount1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PhoneMetaPartnerID' THEN StoredValueAccount1.[PhoneMetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PhoneMetaPartnerID' THEN StoredValueAccount1.[PhoneMetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerPhoneID' THEN StoredValueAccount1.[MetaPartnerPhoneID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerPhoneID' THEN StoredValueAccount1.[MetaPartnerPhoneID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Balance' THEN StoredValueAccount1.[Balance] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Balance' THEN StoredValueAccount1.[Balance] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN StoredValueAccount1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN StoredValueAccount1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN StoredValueAccount1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN StoredValueAccount1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN StoredValueAccount1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN StoredValueAccount1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN StoredValueAccount1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN StoredValueAccount1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN StoredValueAccount1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN StoredValueAccount1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PhoneNumber' THEN MetaPartnerPhone1.[PhoneNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PhoneNumber' THEN MetaPartnerPhone1.[PhoneNumber] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DebitAccountNumber' THEN DebitAccount1.[DebitAccountNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DebitAccountNumber' THEN DebitAccount1.[DebitAccountNumber] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsDefaultDebitAccount' THEN DebitAccount1.[IsDefaultDebitAccount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsDefaultDebitAccount' THEN DebitAccount1.[IsDefaultDebitAccount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Account1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Account1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllStoredValueAccountDataByAccountIDAndPhoneMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'AccountID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @AccountID uniqueidentifier
	, @PhoneMetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all StoredValueAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='AccountID'

/*
** parameter validation
*/
IF (@AccountID IS NULL OR @PhoneMetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  StoredValueAccount1.[AccountID]
		, StoredValueAccount1.[PhoneMetaPartnerID]
		, StoredValueAccount1.[MetaPartnerPhoneID]
		, StoredValueAccount1.[Balance]
		, StoredValueAccount1.[CreatedByUserID]
		, StoredValueAccount1.[CreatedDate]
		, StoredValueAccount1.[LastModifiedByUserID]
		, StoredValueAccount1.[LastModifiedDate]
		, StoredValueAccount1.[Timestamp]
		, MetaPartnerPhone1.[PhoneNumber]
		, DebitAccount1.[DebitAccountNumber]
		, DebitAccount1.[IsDefaultDebitAccount]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_StoredValueAccount] StoredValueAccount1
	INNER JOIN [dbo].[tblCustomers_MetaPartnerPhone] MetaPartnerPhone1 ON MetaPartnerPhone1.[MetaPartnerPhoneID]=StoredValueAccount1.[MetaPartnerPhoneID] AND MetaPartnerPhone1.[MetaPartnerID]=StoredValueAccount1.[PhoneMetaPartnerID]
	INNER JOIN [dbo].[tblAccounts_DebitAccount] DebitAccount1 ON DebitAccount1.[AccountID]=StoredValueAccount1.[AccountID]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=DebitAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND StoredValueAccount1.[AccountID] = @AccountID
		AND StoredValueAccount1.[PhoneMetaPartnerID] = @PhoneMetaPartnerID

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  StoredValueAccount1.[AccountID]
		, StoredValueAccount1.[PhoneMetaPartnerID]
		, StoredValueAccount1.[MetaPartnerPhoneID]
		, StoredValueAccount1.[Balance]
		, StoredValueAccount1.[CreatedByUserID]
		, StoredValueAccount1.[CreatedDate]
		, StoredValueAccount1.[LastModifiedByUserID]
		, StoredValueAccount1.[LastModifiedDate]
		, StoredValueAccount1.[Timestamp]
		, MetaPartnerPhone1.[PhoneNumber]
		, DebitAccount1.[DebitAccountNumber]
		, DebitAccount1.[IsDefaultDebitAccount]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_StoredValueAccount] StoredValueAccount1
	INNER JOIN [dbo].[tblCustomers_MetaPartnerPhone] MetaPartnerPhone1 ON MetaPartnerPhone1.[MetaPartnerPhoneID]=StoredValueAccount1.[MetaPartnerPhoneID] AND MetaPartnerPhone1.[MetaPartnerID]=StoredValueAccount1.[PhoneMetaPartnerID]
	INNER JOIN [dbo].[tblAccounts_DebitAccount] DebitAccount1 ON DebitAccount1.[AccountID]=StoredValueAccount1.[AccountID]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=DebitAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND StoredValueAccount1.[AccountID] = @AccountID
		AND StoredValueAccount1.[PhoneMetaPartnerID] = @PhoneMetaPartnerID

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN StoredValueAccount1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN StoredValueAccount1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PhoneMetaPartnerID' THEN StoredValueAccount1.[PhoneMetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PhoneMetaPartnerID' THEN StoredValueAccount1.[PhoneMetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerPhoneID' THEN StoredValueAccount1.[MetaPartnerPhoneID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerPhoneID' THEN StoredValueAccount1.[MetaPartnerPhoneID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Balance' THEN StoredValueAccount1.[Balance] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Balance' THEN StoredValueAccount1.[Balance] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN StoredValueAccount1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN StoredValueAccount1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN StoredValueAccount1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN StoredValueAccount1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN StoredValueAccount1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN StoredValueAccount1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN StoredValueAccount1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN StoredValueAccount1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN StoredValueAccount1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN StoredValueAccount1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PhoneNumber' THEN MetaPartnerPhone1.[PhoneNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PhoneNumber' THEN MetaPartnerPhone1.[PhoneNumber] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DebitAccountNumber' THEN DebitAccount1.[DebitAccountNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DebitAccountNumber' THEN DebitAccount1.[DebitAccountNumber] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsDefaultDebitAccount' THEN DebitAccount1.[IsDefaultDebitAccount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsDefaultDebitAccount' THEN DebitAccount1.[IsDefaultDebitAccount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Account1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Account1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllStoredValueAccountDataByAccountSubTypeCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'AccountSubTypeCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @AccountSubTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all StoredValueAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='AccountSubTypeCode'

/*
** parameter validation
*/
IF (@AccountSubTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  StoredValueAccount1.[AccountID]
		, StoredValueAccount1.[PhoneMetaPartnerID]
		, StoredValueAccount1.[MetaPartnerPhoneID]
		, StoredValueAccount1.[Balance]
		, StoredValueAccount1.[CreatedByUserID]
		, StoredValueAccount1.[CreatedDate]
		, StoredValueAccount1.[LastModifiedByUserID]
		, StoredValueAccount1.[LastModifiedDate]
		, StoredValueAccount1.[Timestamp]
		, MetaPartnerPhone1.[PhoneNumber]
		, DebitAccount1.[DebitAccountNumber]
		, DebitAccount1.[IsDefaultDebitAccount]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_StoredValueAccount] StoredValueAccount1
	INNER JOIN [dbo].[tblCustomers_MetaPartnerPhone] MetaPartnerPhone1 ON MetaPartnerPhone1.[MetaPartnerPhoneID]=StoredValueAccount1.[MetaPartnerPhoneID] AND MetaPartnerPhone1.[MetaPartnerID]=StoredValueAccount1.[PhoneMetaPartnerID]
	INNER JOIN [dbo].[tblAccounts_DebitAccount] DebitAccount1 ON DebitAccount1.[AccountID]=StoredValueAccount1.[AccountID]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=DebitAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND Account1.[AccountSubTypeCode] = @AccountSubTypeCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  StoredValueAccount1.[AccountID]
		, StoredValueAccount1.[PhoneMetaPartnerID]
		, StoredValueAccount1.[MetaPartnerPhoneID]
		, StoredValueAccount1.[Balance]
		, StoredValueAccount1.[CreatedByUserID]
		, StoredValueAccount1.[CreatedDate]
		, StoredValueAccount1.[LastModifiedByUserID]
		, StoredValueAccount1.[LastModifiedDate]
		, StoredValueAccount1.[Timestamp]
		, MetaPartnerPhone1.[PhoneNumber]
		, DebitAccount1.[DebitAccountNumber]
		, DebitAccount1.[IsDefaultDebitAccount]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_StoredValueAccount] StoredValueAccount1
	INNER JOIN [dbo].[tblCustomers_MetaPartnerPhone] MetaPartnerPhone1 ON MetaPartnerPhone1.[MetaPartnerPhoneID]=StoredValueAccount1.[MetaPartnerPhoneID] AND MetaPartnerPhone1.[MetaPartnerID]=StoredValueAccount1.[PhoneMetaPartnerID]
	INNER JOIN [dbo].[tblAccounts_DebitAccount] DebitAccount1 ON DebitAccount1.[AccountID]=StoredValueAccount1.[AccountID]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=DebitAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND Account1.[AccountSubTypeCode] = @AccountSubTypeCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN StoredValueAccount1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN StoredValueAccount1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PhoneMetaPartnerID' THEN StoredValueAccount1.[PhoneMetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PhoneMetaPartnerID' THEN StoredValueAccount1.[PhoneMetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerPhoneID' THEN StoredValueAccount1.[MetaPartnerPhoneID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerPhoneID' THEN StoredValueAccount1.[MetaPartnerPhoneID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Balance' THEN StoredValueAccount1.[Balance] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Balance' THEN StoredValueAccount1.[Balance] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN StoredValueAccount1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN StoredValueAccount1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN StoredValueAccount1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN StoredValueAccount1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN StoredValueAccount1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN StoredValueAccount1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN StoredValueAccount1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN StoredValueAccount1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN StoredValueAccount1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN StoredValueAccount1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PhoneNumber' THEN MetaPartnerPhone1.[PhoneNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PhoneNumber' THEN MetaPartnerPhone1.[PhoneNumber] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DebitAccountNumber' THEN DebitAccount1.[DebitAccountNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DebitAccountNumber' THEN DebitAccount1.[DebitAccountNumber] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsDefaultDebitAccount' THEN DebitAccount1.[IsDefaultDebitAccount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsDefaultDebitAccount' THEN DebitAccount1.[IsDefaultDebitAccount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Account1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Account1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllStoredValueAccountDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'DebitAccountNumber'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @DebitAccountNumber nvarchar(100)
	, @AccountName nvarchar(255)
	, @CurrencyCode int
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all StoredValueAccount data by criteria.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='DebitAccountNumber'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  StoredValueAccount1.[AccountID]
		, StoredValueAccount1.[PhoneMetaPartnerID]
		, StoredValueAccount1.[MetaPartnerPhoneID]
		, StoredValueAccount1.[Balance]
		, StoredValueAccount1.[CreatedByUserID]
		, StoredValueAccount1.[CreatedDate]
		, StoredValueAccount1.[LastModifiedByUserID]
		, StoredValueAccount1.[LastModifiedDate]
		, StoredValueAccount1.[Timestamp]
		, MetaPartnerPhone1.[PhoneNumber]
		, DebitAccount1.[DebitAccountNumber]
		, DebitAccount1.[IsDefaultDebitAccount]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_StoredValueAccount] StoredValueAccount1
	INNER JOIN [dbo].[tblCustomers_MetaPartnerPhone] MetaPartnerPhone1 ON MetaPartnerPhone1.[MetaPartnerPhoneID]=StoredValueAccount1.[MetaPartnerPhoneID] AND MetaPartnerPhone1.[MetaPartnerID]=StoredValueAccount1.[PhoneMetaPartnerID]
	INNER JOIN [dbo].[tblAccounts_DebitAccount] DebitAccount1 ON DebitAccount1.[AccountID]=StoredValueAccount1.[AccountID]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=DebitAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND (@DebitAccountNumber IS NULL OR DebitAccount1.[DebitAccountNumber] like '%' + @DebitAccountNumber + '%')
		AND (@AccountName IS NULL OR Account1.[AccountName] like '%' + @AccountName + '%')
		AND (@CurrencyCode IS NULL OR Account1.[CurrencyCode] = @CurrencyCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (Account1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (Account1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  StoredValueAccount1.[AccountID]
		, StoredValueAccount1.[PhoneMetaPartnerID]
		, StoredValueAccount1.[MetaPartnerPhoneID]
		, StoredValueAccount1.[Balance]
		, StoredValueAccount1.[CreatedByUserID]
		, StoredValueAccount1.[CreatedDate]
		, StoredValueAccount1.[LastModifiedByUserID]
		, StoredValueAccount1.[LastModifiedDate]
		, StoredValueAccount1.[Timestamp]
		, MetaPartnerPhone1.[PhoneNumber]
		, DebitAccount1.[DebitAccountNumber]
		, DebitAccount1.[IsDefaultDebitAccount]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_StoredValueAccount] StoredValueAccount1
	INNER JOIN [dbo].[tblCustomers_MetaPartnerPhone] MetaPartnerPhone1 ON MetaPartnerPhone1.[MetaPartnerPhoneID]=StoredValueAccount1.[MetaPartnerPhoneID] AND MetaPartnerPhone1.[MetaPartnerID]=StoredValueAccount1.[PhoneMetaPartnerID]
	INNER JOIN [dbo].[tblAccounts_DebitAccount] DebitAccount1 ON DebitAccount1.[AccountID]=StoredValueAccount1.[AccountID]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=DebitAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND (@DebitAccountNumber IS NULL OR DebitAccount1.[DebitAccountNumber] like '%' + @DebitAccountNumber + '%')
		AND (@AccountName IS NULL OR Account1.[AccountName] like '%' + @AccountName + '%')
		AND (@CurrencyCode IS NULL OR Account1.[CurrencyCode] = @CurrencyCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (Account1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (Account1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN StoredValueAccount1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN StoredValueAccount1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PhoneMetaPartnerID' THEN StoredValueAccount1.[PhoneMetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PhoneMetaPartnerID' THEN StoredValueAccount1.[PhoneMetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerPhoneID' THEN StoredValueAccount1.[MetaPartnerPhoneID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerPhoneID' THEN StoredValueAccount1.[MetaPartnerPhoneID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Balance' THEN StoredValueAccount1.[Balance] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Balance' THEN StoredValueAccount1.[Balance] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN StoredValueAccount1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN StoredValueAccount1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN StoredValueAccount1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN StoredValueAccount1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN StoredValueAccount1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN StoredValueAccount1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN StoredValueAccount1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN StoredValueAccount1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN StoredValueAccount1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN StoredValueAccount1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PhoneNumber' THEN MetaPartnerPhone1.[PhoneNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PhoneNumber' THEN MetaPartnerPhone1.[PhoneNumber] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DebitAccountNumber' THEN DebitAccount1.[DebitAccountNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DebitAccountNumber' THEN DebitAccount1.[DebitAccountNumber] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsDefaultDebitAccount' THEN DebitAccount1.[IsDefaultDebitAccount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsDefaultDebitAccount' THEN DebitAccount1.[IsDefaultDebitAccount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Account1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Account1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllStoredValueAccountDataByCurrencyCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'CurrencyCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @CurrencyCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all StoredValueAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='CurrencyCode'

/*
** parameter validation
*/
IF (@CurrencyCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  StoredValueAccount1.[AccountID]
		, StoredValueAccount1.[PhoneMetaPartnerID]
		, StoredValueAccount1.[MetaPartnerPhoneID]
		, StoredValueAccount1.[Balance]
		, StoredValueAccount1.[CreatedByUserID]
		, StoredValueAccount1.[CreatedDate]
		, StoredValueAccount1.[LastModifiedByUserID]
		, StoredValueAccount1.[LastModifiedDate]
		, StoredValueAccount1.[Timestamp]
		, MetaPartnerPhone1.[PhoneNumber]
		, DebitAccount1.[DebitAccountNumber]
		, DebitAccount1.[IsDefaultDebitAccount]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_StoredValueAccount] StoredValueAccount1
	INNER JOIN [dbo].[tblCustomers_MetaPartnerPhone] MetaPartnerPhone1 ON MetaPartnerPhone1.[MetaPartnerPhoneID]=StoredValueAccount1.[MetaPartnerPhoneID] AND MetaPartnerPhone1.[MetaPartnerID]=StoredValueAccount1.[PhoneMetaPartnerID]
	INNER JOIN [dbo].[tblAccounts_DebitAccount] DebitAccount1 ON DebitAccount1.[AccountID]=StoredValueAccount1.[AccountID]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=DebitAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND Account1.[CurrencyCode] = @CurrencyCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  StoredValueAccount1.[AccountID]
		, StoredValueAccount1.[PhoneMetaPartnerID]
		, StoredValueAccount1.[MetaPartnerPhoneID]
		, StoredValueAccount1.[Balance]
		, StoredValueAccount1.[CreatedByUserID]
		, StoredValueAccount1.[CreatedDate]
		, StoredValueAccount1.[LastModifiedByUserID]
		, StoredValueAccount1.[LastModifiedDate]
		, StoredValueAccount1.[Timestamp]
		, MetaPartnerPhone1.[PhoneNumber]
		, DebitAccount1.[DebitAccountNumber]
		, DebitAccount1.[IsDefaultDebitAccount]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_StoredValueAccount] StoredValueAccount1
	INNER JOIN [dbo].[tblCustomers_MetaPartnerPhone] MetaPartnerPhone1 ON MetaPartnerPhone1.[MetaPartnerPhoneID]=StoredValueAccount1.[MetaPartnerPhoneID] AND MetaPartnerPhone1.[MetaPartnerID]=StoredValueAccount1.[PhoneMetaPartnerID]
	INNER JOIN [dbo].[tblAccounts_DebitAccount] DebitAccount1 ON DebitAccount1.[AccountID]=StoredValueAccount1.[AccountID]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=DebitAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND Account1.[CurrencyCode] = @CurrencyCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN StoredValueAccount1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN StoredValueAccount1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PhoneMetaPartnerID' THEN StoredValueAccount1.[PhoneMetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PhoneMetaPartnerID' THEN StoredValueAccount1.[PhoneMetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerPhoneID' THEN StoredValueAccount1.[MetaPartnerPhoneID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerPhoneID' THEN StoredValueAccount1.[MetaPartnerPhoneID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Balance' THEN StoredValueAccount1.[Balance] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Balance' THEN StoredValueAccount1.[Balance] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN StoredValueAccount1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN StoredValueAccount1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN StoredValueAccount1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN StoredValueAccount1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN StoredValueAccount1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN StoredValueAccount1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN StoredValueAccount1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN StoredValueAccount1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN StoredValueAccount1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN StoredValueAccount1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PhoneNumber' THEN MetaPartnerPhone1.[PhoneNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PhoneNumber' THEN MetaPartnerPhone1.[PhoneNumber] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DebitAccountNumber' THEN DebitAccount1.[DebitAccountNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DebitAccountNumber' THEN DebitAccount1.[DebitAccountNumber] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsDefaultDebitAccount' THEN DebitAccount1.[IsDefaultDebitAccount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsDefaultDebitAccount' THEN DebitAccount1.[IsDefaultDebitAccount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Account1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Account1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllStoredValueAccountDataByMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'MetaPartnerID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @MetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all StoredValueAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='MetaPartnerID'

/*
** parameter validation
*/
IF (@MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  StoredValueAccount1.[AccountID]
		, StoredValueAccount1.[PhoneMetaPartnerID]
		, StoredValueAccount1.[MetaPartnerPhoneID]
		, StoredValueAccount1.[Balance]
		, StoredValueAccount1.[CreatedByUserID]
		, StoredValueAccount1.[CreatedDate]
		, StoredValueAccount1.[LastModifiedByUserID]
		, StoredValueAccount1.[LastModifiedDate]
		, StoredValueAccount1.[Timestamp]
		, MetaPartnerPhone1.[PhoneNumber]
		, DebitAccount1.[DebitAccountNumber]
		, DebitAccount1.[IsDefaultDebitAccount]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_StoredValueAccount] StoredValueAccount1
	INNER JOIN [dbo].[tblCustomers_MetaPartnerPhone] MetaPartnerPhone1 ON MetaPartnerPhone1.[MetaPartnerPhoneID]=StoredValueAccount1.[MetaPartnerPhoneID] AND MetaPartnerPhone1.[MetaPartnerID]=StoredValueAccount1.[PhoneMetaPartnerID]
	INNER JOIN [dbo].[tblAccounts_DebitAccount] DebitAccount1 ON DebitAccount1.[AccountID]=StoredValueAccount1.[AccountID]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=DebitAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND Account1.[MetaPartnerID] = @MetaPartnerID

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  StoredValueAccount1.[AccountID]
		, StoredValueAccount1.[PhoneMetaPartnerID]
		, StoredValueAccount1.[MetaPartnerPhoneID]
		, StoredValueAccount1.[Balance]
		, StoredValueAccount1.[CreatedByUserID]
		, StoredValueAccount1.[CreatedDate]
		, StoredValueAccount1.[LastModifiedByUserID]
		, StoredValueAccount1.[LastModifiedDate]
		, StoredValueAccount1.[Timestamp]
		, MetaPartnerPhone1.[PhoneNumber]
		, DebitAccount1.[DebitAccountNumber]
		, DebitAccount1.[IsDefaultDebitAccount]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_StoredValueAccount] StoredValueAccount1
	INNER JOIN [dbo].[tblCustomers_MetaPartnerPhone] MetaPartnerPhone1 ON MetaPartnerPhone1.[MetaPartnerPhoneID]=StoredValueAccount1.[MetaPartnerPhoneID] AND MetaPartnerPhone1.[MetaPartnerID]=StoredValueAccount1.[PhoneMetaPartnerID]
	INNER JOIN [dbo].[tblAccounts_DebitAccount] DebitAccount1 ON DebitAccount1.[AccountID]=StoredValueAccount1.[AccountID]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=DebitAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND Account1.[MetaPartnerID] = @MetaPartnerID

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN StoredValueAccount1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN StoredValueAccount1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PhoneMetaPartnerID' THEN StoredValueAccount1.[PhoneMetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PhoneMetaPartnerID' THEN StoredValueAccount1.[PhoneMetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerPhoneID' THEN StoredValueAccount1.[MetaPartnerPhoneID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerPhoneID' THEN StoredValueAccount1.[MetaPartnerPhoneID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Balance' THEN StoredValueAccount1.[Balance] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Balance' THEN StoredValueAccount1.[Balance] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN StoredValueAccount1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN StoredValueAccount1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN StoredValueAccount1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN StoredValueAccount1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN StoredValueAccount1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN StoredValueAccount1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN StoredValueAccount1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN StoredValueAccount1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN StoredValueAccount1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN StoredValueAccount1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PhoneNumber' THEN MetaPartnerPhone1.[PhoneNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PhoneNumber' THEN MetaPartnerPhone1.[PhoneNumber] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DebitAccountNumber' THEN DebitAccount1.[DebitAccountNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DebitAccountNumber' THEN DebitAccount1.[DebitAccountNumber] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsDefaultDebitAccount' THEN DebitAccount1.[IsDefaultDebitAccount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsDefaultDebitAccount' THEN DebitAccount1.[IsDefaultDebitAccount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Account1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Account1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetAllStoredValueAccountDataByMetaPartnerPhoneIDAndPhoneMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'MetaPartnerPhoneID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @MetaPartnerPhoneID uniqueidentifier
	, @PhoneMetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all StoredValueAccount data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='MetaPartnerPhoneID'

/*
** parameter validation
*/
IF (@MetaPartnerPhoneID IS NULL OR @PhoneMetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  StoredValueAccount1.[AccountID]
		, StoredValueAccount1.[PhoneMetaPartnerID]
		, StoredValueAccount1.[MetaPartnerPhoneID]
		, StoredValueAccount1.[Balance]
		, StoredValueAccount1.[CreatedByUserID]
		, StoredValueAccount1.[CreatedDate]
		, StoredValueAccount1.[LastModifiedByUserID]
		, StoredValueAccount1.[LastModifiedDate]
		, StoredValueAccount1.[Timestamp]
		, MetaPartnerPhone1.[PhoneNumber]
		, DebitAccount1.[DebitAccountNumber]
		, DebitAccount1.[IsDefaultDebitAccount]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_StoredValueAccount] StoredValueAccount1
	INNER JOIN [dbo].[tblCustomers_MetaPartnerPhone] MetaPartnerPhone1 ON MetaPartnerPhone1.[MetaPartnerPhoneID]=StoredValueAccount1.[MetaPartnerPhoneID] AND MetaPartnerPhone1.[MetaPartnerID]=StoredValueAccount1.[PhoneMetaPartnerID]
	INNER JOIN [dbo].[tblAccounts_DebitAccount] DebitAccount1 ON DebitAccount1.[AccountID]=StoredValueAccount1.[AccountID]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=DebitAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND StoredValueAccount1.[MetaPartnerPhoneID] = @MetaPartnerPhoneID
		AND StoredValueAccount1.[PhoneMetaPartnerID] = @PhoneMetaPartnerID

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  StoredValueAccount1.[AccountID]
		, StoredValueAccount1.[PhoneMetaPartnerID]
		, StoredValueAccount1.[MetaPartnerPhoneID]
		, StoredValueAccount1.[Balance]
		, StoredValueAccount1.[CreatedByUserID]
		, StoredValueAccount1.[CreatedDate]
		, StoredValueAccount1.[LastModifiedByUserID]
		, StoredValueAccount1.[LastModifiedDate]
		, StoredValueAccount1.[Timestamp]
		, MetaPartnerPhone1.[PhoneNumber]
		, DebitAccount1.[DebitAccountNumber]
		, DebitAccount1.[IsDefaultDebitAccount]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_StoredValueAccount] StoredValueAccount1
	INNER JOIN [dbo].[tblCustomers_MetaPartnerPhone] MetaPartnerPhone1 ON MetaPartnerPhone1.[MetaPartnerPhoneID]=StoredValueAccount1.[MetaPartnerPhoneID] AND MetaPartnerPhone1.[MetaPartnerID]=StoredValueAccount1.[PhoneMetaPartnerID]
	INNER JOIN [dbo].[tblAccounts_DebitAccount] DebitAccount1 ON DebitAccount1.[AccountID]=StoredValueAccount1.[AccountID]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=DebitAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND StoredValueAccount1.[MetaPartnerPhoneID] = @MetaPartnerPhoneID
		AND StoredValueAccount1.[PhoneMetaPartnerID] = @PhoneMetaPartnerID

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN StoredValueAccount1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN StoredValueAccount1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PhoneMetaPartnerID' THEN StoredValueAccount1.[PhoneMetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PhoneMetaPartnerID' THEN StoredValueAccount1.[PhoneMetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerPhoneID' THEN StoredValueAccount1.[MetaPartnerPhoneID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerPhoneID' THEN StoredValueAccount1.[MetaPartnerPhoneID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Balance' THEN StoredValueAccount1.[Balance] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Balance' THEN StoredValueAccount1.[Balance] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN StoredValueAccount1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN StoredValueAccount1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN StoredValueAccount1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN StoredValueAccount1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN StoredValueAccount1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN StoredValueAccount1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN StoredValueAccount1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN StoredValueAccount1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN StoredValueAccount1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN StoredValueAccount1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PhoneNumber' THEN MetaPartnerPhone1.[PhoneNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PhoneNumber' THEN MetaPartnerPhone1.[PhoneNumber] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DebitAccountNumber' THEN DebitAccount1.[DebitAccountNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DebitAccountNumber' THEN DebitAccount1.[DebitAccountNumber] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsDefaultDebitAccount' THEN DebitAccount1.[IsDefaultDebitAccount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsDefaultDebitAccount' THEN DebitAccount1.[IsDefaultDebitAccount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Account1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Account1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetManyAccountAttributeDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @StartIndex int = 1
	, @PageSize int = 50
	, @MaximumListSize int = 0
	, @MaximumListSizeExceeded bit = 0 OUTPUT
	, @TotalRecords int = 0 OUTPUT
	, @SortColumn sysname = 'AttributeName'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @AttributeName nvarchar(100)
	, @AttributeTypeCode int
	, @DataTypeCode int
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets many AccountAttribute data by criteria.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

DECLARE @vEndIndex int
IF (@StartIndex < 1) SET @StartIndex=1
IF (@PageSize < 1) SET @PageSize=1
SET @vEndIndex = @StartIndex + @Pagesize
IF (@SortColumn = '') SET @SortColumn='AttributeName'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

DECLARE @OrderedRecords TABLE
(
     SearchOrderID int IDENTITY (1, 1) NOT NULL
    , BaseAttributeID uniqueidentifier
)
IF (@SortDirection = 'Random')
BEGIN
	INSERT INTO @OrderedRecords (BaseAttributeID)
	SELECT
		  AccountAttribute1.[BaseAttributeID]
	FROM
	      [dbo].[tblAccounts_AccountAttribute] AccountAttribute1
	INNER JOIN [dbo].[tblCore_BaseAttribute] BaseAttribute1 ON BaseAttribute1.[BaseAttributeID]=AccountAttribute1.[BaseAttributeID]
	INNER JOIN [dbo].[tlkpCore_AttributeType] AttributeType1 ON AttributeType1.[AttributeTypeCode]=BaseAttribute1.[AttributeTypeCode]
	INNER JOIN [dbo].[tlkpCore_DataType] DataType1 ON DataType1.[DataTypeCode]=BaseAttribute1.[DataTypeCode]
	WHERE 
		BaseAttribute1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN BaseAttribute1.[IsActive] ELSE 1 END
		AND (@AttributeName IS NULL OR BaseAttribute1.[AttributeName] like '%' + @AttributeName + '%')
		AND (@AttributeTypeCode IS NULL OR BaseAttribute1.[AttributeTypeCode] = @AttributeTypeCode)
		AND (@DataTypeCode IS NULL OR BaseAttribute1.[DataTypeCode] = @DataTypeCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (BaseAttribute1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (BaseAttribute1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY NewID()
END
ELSE
BEGIN
	INSERT INTO @OrderedRecords (BaseAttributeID)
	SELECT
		  AccountAttribute1.[BaseAttributeID]
	FROM
	      [dbo].[tblAccounts_AccountAttribute] AccountAttribute1
	INNER JOIN [dbo].[tblCore_BaseAttribute] BaseAttribute1 ON BaseAttribute1.[BaseAttributeID]=AccountAttribute1.[BaseAttributeID]
	INNER JOIN [dbo].[tlkpCore_AttributeType] AttributeType1 ON AttributeType1.[AttributeTypeCode]=BaseAttribute1.[AttributeTypeCode]
	INNER JOIN [dbo].[tlkpCore_DataType] DataType1 ON DataType1.[DataTypeCode]=BaseAttribute1.[DataTypeCode]
	WHERE 
		BaseAttribute1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN BaseAttribute1.[IsActive] ELSE 1 END
		AND (@AttributeName IS NULL OR BaseAttribute1.[AttributeName] like '%' + @AttributeName + '%')
		AND (@AttributeTypeCode IS NULL OR BaseAttribute1.[AttributeTypeCode] = @AttributeTypeCode)
		AND (@DataTypeCode IS NULL OR BaseAttribute1.[DataTypeCode] = @DataTypeCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (BaseAttribute1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (BaseAttribute1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BaseAttributeID' THEN AccountAttribute1.[BaseAttributeID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BaseAttributeID' THEN AccountAttribute1.[BaseAttributeID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeCode' THEN AccountAttribute1.[AttributeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeCode' THEN AccountAttribute1.[AttributeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN AccountAttribute1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN AccountAttribute1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN AccountAttribute1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN AccountAttribute1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN AccountAttribute1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN AccountAttribute1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN AccountAttribute1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN AccountAttribute1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN AccountAttribute1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN AccountAttribute1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeName' THEN BaseAttribute1.[AttributeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeName' THEN BaseAttribute1.[AttributeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeTypeCode' THEN BaseAttribute1.[AttributeTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeTypeCode' THEN BaseAttribute1.[AttributeTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DataTypeCode' THEN BaseAttribute1.[DataTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DataTypeCode' THEN BaseAttribute1.[DataTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN BaseAttribute1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN BaseAttribute1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN BaseAttribute1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN BaseAttribute1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeTypeName' THEN AttributeType1.[AttributeTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeTypeName' THEN AttributeType1.[AttributeTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DataTypeName' THEN DataType1.[DataTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DataTypeName' THEN DataType1.[DataTypeName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END

BEGIN
	SET @TotalRecords = (SELECT Count (*) FROM @OrderedRecords)
	IF @MaximumListSize > 0
	BEGIN
		IF @TotalRecords > @MaximumListSize
		BEGIN
			SET @MaximumListSizeExceeded = 1
			SET @TotalRecords = @MaximumListSize
		END
	END

	/* get search results */
	SELECT
		  AccountAttribute1.[BaseAttributeID]
		, AccountAttribute1.[AttributeCode]
		, AccountAttribute1.[CreatedByUserID]
		, AccountAttribute1.[CreatedDate]
		, AccountAttribute1.[LastModifiedByUserID]
		, AccountAttribute1.[LastModifiedDate]
		, AccountAttribute1.[Timestamp]
		, BaseAttribute1.[AttributeName]
		, BaseAttribute1.[AttributeTypeCode]
		, BaseAttribute1.[DataTypeCode]
		, BaseAttribute1.[Description]
		, BaseAttribute1.[IsActive]
		, AttributeType1.[AttributeTypeName]
		, DataType1.[DataTypeName]
	FROM
	      [dbo].[tblAccounts_AccountAttribute] AccountAttribute1
	INNER JOIN [dbo].[tblCore_BaseAttribute] BaseAttribute1 ON BaseAttribute1.[BaseAttributeID]=AccountAttribute1.[BaseAttributeID]
	INNER JOIN [dbo].[tlkpCore_AttributeType] AttributeType1 ON AttributeType1.[AttributeTypeCode]=BaseAttribute1.[AttributeTypeCode]
	INNER JOIN [dbo].[tlkpCore_DataType] DataType1 ON DataType1.[DataTypeCode]=BaseAttribute1.[DataTypeCode]
	INNER JOIN @OrderedRecords search ON search.[BaseAttributeID] = AccountAttribute1.[BaseAttributeID]
	WHERE
		search.SearchOrderID  >= @StartIndex AND
		search.SearchOrderID  < @vEndIndex
	ORDER BY
		search.SearchOrderID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetManyAccountAttributeValueDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @StartIndex int = 1
	, @PageSize int = 50
	, @MaximumListSize int = 0
	, @MaximumListSizeExceeded bit = 0 OUTPUT
	, @TotalRecords int = 0 OUTPUT
	, @SortColumn sysname = 'ParameterValue'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @ParameterValue nvarchar(255) = NULL
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets many AccountAttributeValue data by criteria.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

DECLARE @vEndIndex int
IF (@StartIndex < 1) SET @StartIndex=1
IF (@PageSize < 1) SET @PageSize=1
SET @vEndIndex = @StartIndex + @Pagesize
IF (@SortColumn = '') SET @SortColumn='ParameterValue'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

DECLARE @OrderedRecords TABLE
(
     SearchOrderID int IDENTITY (1, 1) NOT NULL
    , AccountAttributeValueID uniqueidentifier
)
IF (@SortDirection = 'Random')
BEGIN
	INSERT INTO @OrderedRecords (AccountAttributeValueID)
	SELECT
		  AccountAttributeValue1.[AccountAttributeValueID]
	FROM
	      [dbo].[tblAccounts_AccountAttributeValue] AccountAttributeValue1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=AccountAttributeValue1.[AccountID]
	WHERE 
		(@ParameterValue IS NULL OR AccountAttributeValue1.[ParameterValue] like '%' + @ParameterValue + '%')
		AND ((@LastModifiedDateStart  IS NULL) OR (AccountAttributeValue1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (AccountAttributeValue1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY NewID()
END
ELSE
BEGIN
	INSERT INTO @OrderedRecords (AccountAttributeValueID)
	SELECT
		  AccountAttributeValue1.[AccountAttributeValueID]
	FROM
	      [dbo].[tblAccounts_AccountAttributeValue] AccountAttributeValue1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=AccountAttributeValue1.[AccountID]
	WHERE 
		(@ParameterValue IS NULL OR AccountAttributeValue1.[ParameterValue] like '%' + @ParameterValue + '%')
		AND ((@LastModifiedDateStart  IS NULL) OR (AccountAttributeValue1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (AccountAttributeValue1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountAttributeValueID' THEN AccountAttributeValue1.[AccountAttributeValueID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountAttributeValueID' THEN AccountAttributeValue1.[AccountAttributeValueID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN AccountAttributeValue1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN AccountAttributeValue1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BaseAttributeID' THEN AccountAttributeValue1.[BaseAttributeID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BaseAttributeID' THEN AccountAttributeValue1.[BaseAttributeID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ParameterValue' THEN AccountAttributeValue1.[ParameterValue] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ParameterValue' THEN AccountAttributeValue1.[ParameterValue] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN AccountAttributeValue1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN AccountAttributeValue1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN AccountAttributeValue1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN AccountAttributeValue1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN AccountAttributeValue1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN AccountAttributeValue1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN AccountAttributeValue1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN AccountAttributeValue1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN AccountAttributeValue1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN AccountAttributeValue1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END

BEGIN
	SET @TotalRecords = (SELECT Count (*) FROM @OrderedRecords)
	IF @MaximumListSize > 0
	BEGIN
		IF @TotalRecords > @MaximumListSize
		BEGIN
			SET @MaximumListSizeExceeded = 1
			SET @TotalRecords = @MaximumListSize
		END
	END

	/* get search results */
	SELECT
		  AccountAttributeValue1.[AccountAttributeValueID]
		, AccountAttributeValue1.[AccountID]
		, AccountAttributeValue1.[BaseAttributeID]
		, AccountAttributeValue1.[ParameterValue]
		, AccountAttributeValue1.[CreatedByUserID]
		, AccountAttributeValue1.[CreatedDate]
		, AccountAttributeValue1.[LastModifiedByUserID]
		, AccountAttributeValue1.[LastModifiedDate]
		, AccountAttributeValue1.[Timestamp]
		, Account1.[AccountName]
	FROM
	      [dbo].[tblAccounts_AccountAttributeValue] AccountAttributeValue1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=AccountAttributeValue1.[AccountID]
	INNER JOIN @OrderedRecords search ON search.[AccountAttributeValueID] = AccountAttributeValue1.[AccountAttributeValueID]
	WHERE
		search.SearchOrderID  >= @StartIndex AND
		search.SearchOrderID  < @vEndIndex
	ORDER BY
		search.SearchOrderID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetManyAccountDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @StartIndex int = 1
	, @PageSize int = 50
	, @MaximumListSize int = 0
	, @MaximumListSizeExceeded bit = 0 OUTPUT
	, @TotalRecords int = 0 OUTPUT
	, @SortColumn sysname = 'AccountName'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @AccountName nvarchar(255)
	, @AccountSubTypeCode int
	, @CurrencyCode int
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets many Account data by criteria.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

DECLARE @vEndIndex int
IF (@StartIndex < 1) SET @StartIndex=1
IF (@PageSize < 1) SET @PageSize=1
SET @vEndIndex = @StartIndex + @Pagesize
IF (@SortColumn = '') SET @SortColumn='AccountName'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

DECLARE @OrderedRecords TABLE
(
     SearchOrderID int IDENTITY (1, 1) NOT NULL
    , AccountID uniqueidentifier
)
IF (@SortDirection = 'Random')
BEGIN
	INSERT INTO @OrderedRecords (AccountID)
	SELECT
		  Account1.[AccountID]
	FROM
	      [dbo].[tblAccounts_Account] Account1
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND (@AccountName IS NULL OR Account1.[AccountName] like '%' + @AccountName + '%')
		AND (@AccountSubTypeCode IS NULL OR Account1.[AccountSubTypeCode] = @AccountSubTypeCode)
		AND (@CurrencyCode IS NULL OR Account1.[CurrencyCode] = @CurrencyCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (Account1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (Account1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY NewID()
END
ELSE
BEGIN
	INSERT INTO @OrderedRecords (AccountID)
	SELECT
		  Account1.[AccountID]
	FROM
	      [dbo].[tblAccounts_Account] Account1
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND (@AccountName IS NULL OR Account1.[AccountName] like '%' + @AccountName + '%')
		AND (@AccountSubTypeCode IS NULL OR Account1.[AccountSubTypeCode] = @AccountSubTypeCode)
		AND (@CurrencyCode IS NULL OR Account1.[CurrencyCode] = @CurrencyCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (Account1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (Account1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN Account1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN Account1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Account1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Account1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Account1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Account1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Account1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Account1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Account1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Account1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Account1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Account1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Account1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Account1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END

BEGIN
	SET @TotalRecords = (SELECT Count (*) FROM @OrderedRecords)
	IF @MaximumListSize > 0
	BEGIN
		IF @TotalRecords > @MaximumListSize
		BEGIN
			SET @MaximumListSizeExceeded = 1
			SET @TotalRecords = @MaximumListSize
		END
	END

	/* get search results */
	SELECT
		  Account1.[AccountID]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, Account1.[CreatedByUserID]
		, Account1.[CreatedDate]
		, Account1.[LastModifiedByUserID]
		, Account1.[LastModifiedDate]
		, Account1.[Timestamp]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_Account] Account1
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	INNER JOIN @OrderedRecords search ON search.[AccountID] = Account1.[AccountID]
	WHERE
		search.SearchOrderID  >= @StartIndex AND
		search.SearchOrderID  < @vEndIndex
	ORDER BY
		search.SearchOrderID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetManyBankAccountDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @StartIndex int = 1
	, @PageSize int = 50
	, @MaximumListSize int = 0
	, @MaximumListSizeExceeded bit = 0 OUTPUT
	, @TotalRecords int = 0 OUTPUT
	, @SortColumn sysname = 'DebitAccountNumber'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @DebitAccountNumber nvarchar(100)
	, @AccountName nvarchar(255)
	, @CurrencyCode int
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets many BankAccount data by criteria.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

DECLARE @vEndIndex int
IF (@StartIndex < 1) SET @StartIndex=1
IF (@PageSize < 1) SET @PageSize=1
SET @vEndIndex = @StartIndex + @Pagesize
IF (@SortColumn = '') SET @SortColumn='DebitAccountNumber'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

DECLARE @OrderedRecords TABLE
(
     SearchOrderID int IDENTITY (1, 1) NOT NULL
    , AccountID uniqueidentifier
)
IF (@SortDirection = 'Random')
BEGIN
	INSERT INTO @OrderedRecords (AccountID)
	SELECT
		  BankAccount1.[AccountID]
	FROM
	      [dbo].[tblAccounts_BankAccount] BankAccount1
	INNER JOIN [dbo].[tblAccounts_DebitAccount] DebitAccount1 ON DebitAccount1.[AccountID]=BankAccount1.[AccountID]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=DebitAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND (@DebitAccountNumber IS NULL OR DebitAccount1.[DebitAccountNumber] like '%' + @DebitAccountNumber + '%')
		AND (@AccountName IS NULL OR Account1.[AccountName] like '%' + @AccountName + '%')
		AND (@CurrencyCode IS NULL OR Account1.[CurrencyCode] = @CurrencyCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (Account1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (Account1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY NewID()
END
ELSE
BEGIN
	INSERT INTO @OrderedRecords (AccountID)
	SELECT
		  BankAccount1.[AccountID]
	FROM
	      [dbo].[tblAccounts_BankAccount] BankAccount1
	INNER JOIN [dbo].[tblAccounts_DebitAccount] DebitAccount1 ON DebitAccount1.[AccountID]=BankAccount1.[AccountID]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=DebitAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND (@DebitAccountNumber IS NULL OR DebitAccount1.[DebitAccountNumber] like '%' + @DebitAccountNumber + '%')
		AND (@AccountName IS NULL OR Account1.[AccountName] like '%' + @AccountName + '%')
		AND (@CurrencyCode IS NULL OR Account1.[CurrencyCode] = @CurrencyCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (Account1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (Account1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN BankAccount1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN BankAccount1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BankMetaPartnerID' THEN BankAccount1.[BankMetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BankMetaPartnerID' THEN BankAccount1.[BankMetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN BankAccount1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN BankAccount1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN BankAccount1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN BankAccount1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN BankAccount1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN BankAccount1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN BankAccount1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN BankAccount1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN BankAccount1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN BankAccount1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DebitAccountNumber' THEN DebitAccount1.[DebitAccountNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DebitAccountNumber' THEN DebitAccount1.[DebitAccountNumber] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsDefaultDebitAccount' THEN DebitAccount1.[IsDefaultDebitAccount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsDefaultDebitAccount' THEN DebitAccount1.[IsDefaultDebitAccount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Account1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Account1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END

BEGIN
	SET @TotalRecords = (SELECT Count (*) FROM @OrderedRecords)
	IF @MaximumListSize > 0
	BEGIN
		IF @TotalRecords > @MaximumListSize
		BEGIN
			SET @MaximumListSizeExceeded = 1
			SET @TotalRecords = @MaximumListSize
		END
	END

	/* get search results */
	SELECT
		  BankAccount1.[AccountID]
		, BankAccount1.[BankMetaPartnerID]
		, BankAccount1.[CreatedByUserID]
		, BankAccount1.[CreatedDate]
		, BankAccount1.[LastModifiedByUserID]
		, BankAccount1.[LastModifiedDate]
		, BankAccount1.[Timestamp]
		, DebitAccount1.[DebitAccountNumber]
		, DebitAccount1.[IsDefaultDebitAccount]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_BankAccount] BankAccount1
	INNER JOIN [dbo].[tblAccounts_DebitAccount] DebitAccount1 ON DebitAccount1.[AccountID]=BankAccount1.[AccountID]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=DebitAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	INNER JOIN @OrderedRecords search ON search.[AccountID] = BankAccount1.[AccountID]
	WHERE
		search.SearchOrderID  >= @StartIndex AND
		search.SearchOrderID  < @vEndIndex
	ORDER BY
		search.SearchOrderID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetManyBillPayAccountDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @StartIndex int = 1
	, @PageSize int = 50
	, @MaximumListSize int = 0
	, @MaximumListSizeExceeded bit = 0 OUTPUT
	, @TotalRecords int = 0 OUTPUT
	, @SortColumn sysname = 'BusinessAccountNumber'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeDateInactive bit = 0
	, @IncludeInactive bit = 0
	, @BusinessAccountNumber nvarchar(100)
	, @StartDate datetime
	, @EndDate datetime
	, @NumberOfReminders int
	, @FrequencyCode int
	, @AccountName nvarchar(255)
	, @CurrencyCode int
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets many BillPayAccount data by criteria.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

DECLARE @vEndIndex int
IF (@StartIndex < 1) SET @StartIndex=1
IF (@PageSize < 1) SET @PageSize=1
SET @vEndIndex = @StartIndex + @Pagesize
IF (@SortColumn = '') SET @SortColumn='BusinessAccountNumber'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

DECLARE @OrderedRecords TABLE
(
     SearchOrderID int IDENTITY (1, 1) NOT NULL
    , AccountID uniqueidentifier
)
IF (@SortDirection = 'Random')
BEGIN
	INSERT INTO @OrderedRecords (AccountID)
	SELECT
		  BillPayAccount1.[AccountID]
	FROM
	      [dbo].[tblAccounts_BillPayAccount] BillPayAccount1
	INNER JOIN [dbo].[tlkpAccounts_Frequency] Frequency1 ON Frequency1.[FrequencyCode]=BillPayAccount1.[FrequencyCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=BillPayAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		((BillPayAccount1.[StartDate] IS NULL) OR (BillPayAccount1.[StartDate] <= CASE WHEN @IncludeDateInactive=1 THEN BillPayAccount1.[StartDate] ELSE getdate() END))
		AND ((BillPayAccount1.[EndDate] IS NULL) OR (BillPayAccount1.[EndDate] >= CASE WHEN @IncludeDateInactive=1 THEN BillPayAccount1.[EndDate] ELSE getdate() END))
		AND Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND (@BusinessAccountNumber IS NULL OR BillPayAccount1.[BusinessAccountNumber] like '%' + @BusinessAccountNumber + '%')
		AND (@StartDate IS NULL OR BillPayAccount1.[StartDate] <= @StartDate)
		AND (@EndDate IS NULL OR BillPayAccount1.[EndDate] >= @EndDate)
		AND (@NumberOfReminders IS NULL OR BillPayAccount1.[NumberOfReminders] = @NumberOfReminders)
		AND (@FrequencyCode IS NULL OR BillPayAccount1.[FrequencyCode] = @FrequencyCode)
		AND (@AccountName IS NULL OR Account1.[AccountName] like '%' + @AccountName + '%')
		AND (@CurrencyCode IS NULL OR Account1.[CurrencyCode] = @CurrencyCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (Account1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (Account1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY NewID()
END
ELSE
BEGIN
	INSERT INTO @OrderedRecords (AccountID)
	SELECT
		  BillPayAccount1.[AccountID]
	FROM
	      [dbo].[tblAccounts_BillPayAccount] BillPayAccount1
	INNER JOIN [dbo].[tlkpAccounts_Frequency] Frequency1 ON Frequency1.[FrequencyCode]=BillPayAccount1.[FrequencyCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=BillPayAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		((BillPayAccount1.[StartDate] IS NULL) OR (BillPayAccount1.[StartDate] <= CASE WHEN @IncludeDateInactive=1 THEN BillPayAccount1.[StartDate] ELSE getdate() END))
		AND ((BillPayAccount1.[EndDate] IS NULL) OR (BillPayAccount1.[EndDate] >= CASE WHEN @IncludeDateInactive=1 THEN BillPayAccount1.[EndDate] ELSE getdate() END))
		AND Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND (@BusinessAccountNumber IS NULL OR BillPayAccount1.[BusinessAccountNumber] like '%' + @BusinessAccountNumber + '%')
		AND (@StartDate IS NULL OR BillPayAccount1.[StartDate] <= @StartDate)
		AND (@EndDate IS NULL OR BillPayAccount1.[EndDate] >= @EndDate)
		AND (@NumberOfReminders IS NULL OR BillPayAccount1.[NumberOfReminders] = @NumberOfReminders)
		AND (@FrequencyCode IS NULL OR BillPayAccount1.[FrequencyCode] = @FrequencyCode)
		AND (@AccountName IS NULL OR Account1.[AccountName] like '%' + @AccountName + '%')
		AND (@CurrencyCode IS NULL OR Account1.[CurrencyCode] = @CurrencyCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (Account1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (Account1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN BillPayAccount1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN BillPayAccount1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BusinessAccountNumber' THEN BillPayAccount1.[BusinessAccountNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BusinessAccountNumber' THEN BillPayAccount1.[BusinessAccountNumber] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'StartDate' THEN BillPayAccount1.[StartDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'StartDate' THEN BillPayAccount1.[StartDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EndDate' THEN BillPayAccount1.[EndDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EndDate' THEN BillPayAccount1.[EndDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DefaultMinimumPayment' THEN BillPayAccount1.[DefaultMinimumPayment] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DefaultMinimumPayment' THEN BillPayAccount1.[DefaultMinimumPayment] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DefaultMaximumPayment' THEN BillPayAccount1.[DefaultMaximumPayment] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DefaultMaximumPayment' THEN BillPayAccount1.[DefaultMaximumPayment] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BusinessMetaPartnerID' THEN BillPayAccount1.[BusinessMetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BusinessMetaPartnerID' THEN BillPayAccount1.[BusinessMetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'HourOfDay' THEN BillPayAccount1.[HourOfDay] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'HourOfDay' THEN BillPayAccount1.[HourOfDay] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DayOfWeek' THEN BillPayAccount1.[DayOfWeek] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DayOfWeek' THEN BillPayAccount1.[DayOfWeek] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'WeekOfMonth' THEN BillPayAccount1.[WeekOfMonth] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'WeekOfMonth' THEN BillPayAccount1.[WeekOfMonth] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MonthOfYear' THEN BillPayAccount1.[MonthOfYear] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MonthOfYear' THEN BillPayAccount1.[MonthOfYear] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NumberOfReminders' THEN BillPayAccount1.[NumberOfReminders] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NumberOfReminders' THEN BillPayAccount1.[NumberOfReminders] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FrequencyCode' THEN BillPayAccount1.[FrequencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FrequencyCode' THEN BillPayAccount1.[FrequencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN BillPayAccount1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN BillPayAccount1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN BillPayAccount1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN BillPayAccount1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN BillPayAccount1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN BillPayAccount1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN BillPayAccount1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN BillPayAccount1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN BillPayAccount1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN BillPayAccount1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FrequencyName' THEN Frequency1.[FrequencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FrequencyName' THEN Frequency1.[FrequencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Account1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Account1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END

BEGIN
	SET @TotalRecords = (SELECT Count (*) FROM @OrderedRecords)
	IF @MaximumListSize > 0
	BEGIN
		IF @TotalRecords > @MaximumListSize
		BEGIN
			SET @MaximumListSizeExceeded = 1
			SET @TotalRecords = @MaximumListSize
		END
	END

	/* get search results */
	SELECT
		  BillPayAccount1.[AccountID]
		, BillPayAccount1.[BusinessAccountNumber]
		, BillPayAccount1.[StartDate]
		, BillPayAccount1.[EndDate]
		, BillPayAccount1.[DefaultMinimumPayment]
		, BillPayAccount1.[DefaultMaximumPayment]
		, BillPayAccount1.[BusinessMetaPartnerID]
		, BillPayAccount1.[HourOfDay]
		, BillPayAccount1.[DayOfWeek]
		, BillPayAccount1.[WeekOfMonth]
		, BillPayAccount1.[MonthOfYear]
		, BillPayAccount1.[NumberOfReminders]
		, BillPayAccount1.[FrequencyCode]
		, BillPayAccount1.[CreatedByUserID]
		, BillPayAccount1.[CreatedDate]
		, BillPayAccount1.[LastModifiedByUserID]
		, BillPayAccount1.[LastModifiedDate]
		, BillPayAccount1.[Timestamp]
		, Frequency1.[FrequencyName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_BillPayAccount] BillPayAccount1
	INNER JOIN [dbo].[tlkpAccounts_Frequency] Frequency1 ON Frequency1.[FrequencyCode]=BillPayAccount1.[FrequencyCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=BillPayAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	INNER JOIN @OrderedRecords search ON search.[AccountID] = BillPayAccount1.[AccountID]
	WHERE
		search.SearchOrderID  >= @StartIndex AND
		search.SearchOrderID  < @vEndIndex
	ORDER BY
		search.SearchOrderID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetManyCreditAccountDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @StartIndex int = 1
	, @PageSize int = 50
	, @MaximumListSize int = 0
	, @MaximumListSizeExceeded bit = 0 OUTPUT
	, @TotalRecords int = 0 OUTPUT
	, @SortColumn sysname = 'CreditCardNumber'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @CreditCardNumber nvarchar(50) = NULL
	, @CreditCardName nvarchar(255) = NULL
	, @ExpirationDateStart datetime = NULL
	, @ExpirationDateEnd datetime = NULL
	, @CreditCardTypeCode int
	, @AccountName nvarchar(255)
	, @CurrencyCode int
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets many CreditAccount data by criteria.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

DECLARE @vEndIndex int
IF (@StartIndex < 1) SET @StartIndex=1
IF (@PageSize < 1) SET @PageSize=1
SET @vEndIndex = @StartIndex + @Pagesize
IF (@SortColumn = '') SET @SortColumn='CreditCardNumber'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

DECLARE @OrderedRecords TABLE
(
     SearchOrderID int IDENTITY (1, 1) NOT NULL
    , AccountID uniqueidentifier
)
IF (@SortDirection = 'Random')
BEGIN
	INSERT INTO @OrderedRecords (AccountID)
	SELECT
		  CreditAccount1.[AccountID]
	FROM
	      [dbo].[tblAccounts_CreditAccount] CreditAccount1
	INNER JOIN [dbo].[tlkpAccounts_CreditCardType] CreditCardType1 ON CreditCardType1.[CreditCardTypeCode]=CreditAccount1.[CreditCardTypeCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=CreditAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND (@CreditCardNumber IS NULL OR CreditAccount1.[CreditCardNumber] like '%' + @CreditCardNumber + '%')
		AND (@CreditCardName IS NULL OR CreditAccount1.[CreditCardName] like '%' + @CreditCardName + '%')
		AND ((@ExpirationDateStart  IS NULL) OR (CreditAccount1.[ExpirationDate] >=  @ExpirationDateStart))
		AND ((@ExpirationDateEnd  IS NULL) OR (CreditAccount1.[ExpirationDate] <=  @ExpirationDateEnd))
		AND (@CreditCardTypeCode IS NULL OR CreditAccount1.[CreditCardTypeCode] = @CreditCardTypeCode)
		AND (@AccountName IS NULL OR Account1.[AccountName] like '%' + @AccountName + '%')
		AND (@CurrencyCode IS NULL OR Account1.[CurrencyCode] = @CurrencyCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (Account1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (Account1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY NewID()
END
ELSE
BEGIN
	INSERT INTO @OrderedRecords (AccountID)
	SELECT
		  CreditAccount1.[AccountID]
	FROM
	      [dbo].[tblAccounts_CreditAccount] CreditAccount1
	INNER JOIN [dbo].[tlkpAccounts_CreditCardType] CreditCardType1 ON CreditCardType1.[CreditCardTypeCode]=CreditAccount1.[CreditCardTypeCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=CreditAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND (@CreditCardNumber IS NULL OR CreditAccount1.[CreditCardNumber] like '%' + @CreditCardNumber + '%')
		AND (@CreditCardName IS NULL OR CreditAccount1.[CreditCardName] like '%' + @CreditCardName + '%')
		AND ((@ExpirationDateStart  IS NULL) OR (CreditAccount1.[ExpirationDate] >=  @ExpirationDateStart))
		AND ((@ExpirationDateEnd  IS NULL) OR (CreditAccount1.[ExpirationDate] <=  @ExpirationDateEnd))
		AND (@CreditCardTypeCode IS NULL OR CreditAccount1.[CreditCardTypeCode] = @CreditCardTypeCode)
		AND (@AccountName IS NULL OR Account1.[AccountName] like '%' + @AccountName + '%')
		AND (@CurrencyCode IS NULL OR Account1.[CurrencyCode] = @CurrencyCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (Account1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (Account1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN CreditAccount1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN CreditAccount1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreditCardNumber' THEN CreditAccount1.[CreditCardNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreditCardNumber' THEN CreditAccount1.[CreditCardNumber] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreditCardLastFour' THEN CreditAccount1.[CreditCardLastFour] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreditCardLastFour' THEN CreditAccount1.[CreditCardLastFour] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreditCardName' THEN CreditAccount1.[CreditCardName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreditCardName' THEN CreditAccount1.[CreditCardName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ExpirationDate' THEN CreditAccount1.[ExpirationDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ExpirationDate' THEN CreditAccount1.[ExpirationDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreditCardTypeCode' THEN CreditAccount1.[CreditCardTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreditCardTypeCode' THEN CreditAccount1.[CreditCardTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN CreditAccount1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN CreditAccount1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN CreditAccount1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN CreditAccount1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN CreditAccount1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN CreditAccount1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN CreditAccount1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN CreditAccount1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN CreditAccount1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN CreditAccount1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreditCardTypeName' THEN CreditCardType1.[CreditCardTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreditCardTypeName' THEN CreditCardType1.[CreditCardTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Account1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Account1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END

BEGIN
	SET @TotalRecords = (SELECT Count (*) FROM @OrderedRecords)
	IF @MaximumListSize > 0
	BEGIN
		IF @TotalRecords > @MaximumListSize
		BEGIN
			SET @MaximumListSizeExceeded = 1
			SET @TotalRecords = @MaximumListSize
		END
	END

	/* get search results */
	SELECT
		  CreditAccount1.[AccountID]
		, CreditAccount1.[CreditCardNumber]
		, CreditAccount1.[CreditCardLastFour]
		, CreditAccount1.[CreditCardName]
		, CreditAccount1.[ExpirationDate]
		, CreditAccount1.[CreditCardTypeCode]
		, CreditAccount1.[CreatedByUserID]
		, CreditAccount1.[CreatedDate]
		, CreditAccount1.[LastModifiedByUserID]
		, CreditAccount1.[LastModifiedDate]
		, CreditAccount1.[Timestamp]
		, CreditCardType1.[CreditCardTypeName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_CreditAccount] CreditAccount1
	INNER JOIN [dbo].[tlkpAccounts_CreditCardType] CreditCardType1 ON CreditCardType1.[CreditCardTypeCode]=CreditAccount1.[CreditCardTypeCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=CreditAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	INNER JOIN @OrderedRecords search ON search.[AccountID] = CreditAccount1.[AccountID]
	WHERE
		search.SearchOrderID  >= @StartIndex AND
		search.SearchOrderID  < @vEndIndex
	ORDER BY
		search.SearchOrderID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetManyCurrencyConversionDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @StartIndex int = 1
	, @PageSize int = 50
	, @MaximumListSize int = 0
	, @MaximumListSizeExceeded bit = 0 OUTPUT
	, @TotalRecords int = 0 OUTPUT
	, @SortColumn sysname = 'ConvertFromCurrencyCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @ConvertFromCurrencyCode int
	, @ConvertToCurrencyCode int
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets many CurrencyConversion data by criteria.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

DECLARE @vEndIndex int
IF (@StartIndex < 1) SET @StartIndex=1
IF (@PageSize < 1) SET @PageSize=1
SET @vEndIndex = @StartIndex + @Pagesize
IF (@SortColumn = '') SET @SortColumn='ConvertFromCurrencyCode'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

DECLARE @OrderedRecords TABLE
(
     SearchOrderID int IDENTITY (1, 1) NOT NULL
    , CurrencyConversionID uniqueidentifier
)
IF (@SortDirection = 'Random')
BEGIN
	INSERT INTO @OrderedRecords (CurrencyConversionID)
	SELECT
		  CurrencyConversion1.[CurrencyConversionID]
	FROM
	      [dbo].[tblAccounts_CurrencyConversion] CurrencyConversion1
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=CurrencyConversion1.[ConvertFromCurrencyCode]
	WHERE 
		CurrencyConversion1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN CurrencyConversion1.[IsActive] ELSE 1 END
		AND (@ConvertFromCurrencyCode IS NULL OR CurrencyConversion1.[ConvertFromCurrencyCode] = @ConvertFromCurrencyCode)
		AND (@ConvertToCurrencyCode IS NULL OR CurrencyConversion1.[ConvertToCurrencyCode] = @ConvertToCurrencyCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (CurrencyConversion1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (CurrencyConversion1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY NewID()
END
ELSE
BEGIN
	INSERT INTO @OrderedRecords (CurrencyConversionID)
	SELECT
		  CurrencyConversion1.[CurrencyConversionID]
	FROM
	      [dbo].[tblAccounts_CurrencyConversion] CurrencyConversion1
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=CurrencyConversion1.[ConvertFromCurrencyCode]
	WHERE 
		CurrencyConversion1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN CurrencyConversion1.[IsActive] ELSE 1 END
		AND (@ConvertFromCurrencyCode IS NULL OR CurrencyConversion1.[ConvertFromCurrencyCode] = @ConvertFromCurrencyCode)
		AND (@ConvertToCurrencyCode IS NULL OR CurrencyConversion1.[ConvertToCurrencyCode] = @ConvertToCurrencyCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (CurrencyConversion1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (CurrencyConversion1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyConversionID' THEN CurrencyConversion1.[CurrencyConversionID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyConversionID' THEN CurrencyConversion1.[CurrencyConversionID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ConvertFromCurrencyCode' THEN CurrencyConversion1.[ConvertFromCurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ConvertFromCurrencyCode' THEN CurrencyConversion1.[ConvertFromCurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ConvertToCurrencyCode' THEN CurrencyConversion1.[ConvertToCurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ConvertToCurrencyCode' THEN CurrencyConversion1.[ConvertToCurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN CurrencyConversion1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN CurrencyConversion1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ConversionRate' THEN CurrencyConversion1.[ConversionRate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ConversionRate' THEN CurrencyConversion1.[ConversionRate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN CurrencyConversion1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN CurrencyConversion1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN CurrencyConversion1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN CurrencyConversion1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN CurrencyConversion1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN CurrencyConversion1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN CurrencyConversion1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN CurrencyConversion1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN CurrencyConversion1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN CurrencyConversion1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN CurrencyConversion1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN CurrencyConversion1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END

BEGIN
	SET @TotalRecords = (SELECT Count (*) FROM @OrderedRecords)
	IF @MaximumListSize > 0
	BEGIN
		IF @TotalRecords > @MaximumListSize
		BEGIN
			SET @MaximumListSizeExceeded = 1
			SET @TotalRecords = @MaximumListSize
		END
	END

	/* get search results */
	SELECT
		  CurrencyConversion1.[CurrencyConversionID]
		, CurrencyConversion1.[ConvertFromCurrencyCode]
		, CurrencyConversion1.[ConvertToCurrencyCode]
		, CurrencyConversion1.[MetaPartnerID]
		, CurrencyConversion1.[ConversionRate]
		, CurrencyConversion1.[IsActive]
		, CurrencyConversion1.[CreatedByUserID]
		, CurrencyConversion1.[CreatedDate]
		, CurrencyConversion1.[LastModifiedByUserID]
		, CurrencyConversion1.[LastModifiedDate]
		, CurrencyConversion1.[Timestamp]
		, Currency1.[CurrencyName]
	FROM
	      [dbo].[tblAccounts_CurrencyConversion] CurrencyConversion1
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=CurrencyConversion1.[ConvertFromCurrencyCode]
	INNER JOIN @OrderedRecords search ON search.[CurrencyConversionID] = CurrencyConversion1.[CurrencyConversionID]
	WHERE
		search.SearchOrderID  >= @StartIndex AND
		search.SearchOrderID  < @vEndIndex
	ORDER BY
		search.SearchOrderID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetManyDebitAccountDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @StartIndex int = 1
	, @PageSize int = 50
	, @MaximumListSize int = 0
	, @MaximumListSizeExceeded bit = 0 OUTPUT
	, @TotalRecords int = 0 OUTPUT
	, @SortColumn sysname = 'DebitAccountNumber'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @DebitAccountNumber nvarchar(100)
	, @AccountName nvarchar(255)
	, @CurrencyCode int
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets many DebitAccount data by criteria.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

DECLARE @vEndIndex int
IF (@StartIndex < 1) SET @StartIndex=1
IF (@PageSize < 1) SET @PageSize=1
SET @vEndIndex = @StartIndex + @Pagesize
IF (@SortColumn = '') SET @SortColumn='DebitAccountNumber'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

DECLARE @OrderedRecords TABLE
(
     SearchOrderID int IDENTITY (1, 1) NOT NULL
    , AccountID uniqueidentifier
)
IF (@SortDirection = 'Random')
BEGIN
	INSERT INTO @OrderedRecords (AccountID)
	SELECT
		  DebitAccount1.[AccountID]
	FROM
	      [dbo].[tblAccounts_DebitAccount] DebitAccount1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=DebitAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND (@DebitAccountNumber IS NULL OR DebitAccount1.[DebitAccountNumber] like '%' + @DebitAccountNumber + '%')
		AND (@AccountName IS NULL OR Account1.[AccountName] like '%' + @AccountName + '%')
		AND (@CurrencyCode IS NULL OR Account1.[CurrencyCode] = @CurrencyCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (Account1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (Account1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY NewID()
END
ELSE
BEGIN
	INSERT INTO @OrderedRecords (AccountID)
	SELECT
		  DebitAccount1.[AccountID]
	FROM
	      [dbo].[tblAccounts_DebitAccount] DebitAccount1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=DebitAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND (@DebitAccountNumber IS NULL OR DebitAccount1.[DebitAccountNumber] like '%' + @DebitAccountNumber + '%')
		AND (@AccountName IS NULL OR Account1.[AccountName] like '%' + @AccountName + '%')
		AND (@CurrencyCode IS NULL OR Account1.[CurrencyCode] = @CurrencyCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (Account1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (Account1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN DebitAccount1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN DebitAccount1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DebitAccountNumber' THEN DebitAccount1.[DebitAccountNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DebitAccountNumber' THEN DebitAccount1.[DebitAccountNumber] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsDefaultDebitAccount' THEN DebitAccount1.[IsDefaultDebitAccount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsDefaultDebitAccount' THEN DebitAccount1.[IsDefaultDebitAccount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN DebitAccount1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN DebitAccount1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN DebitAccount1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN DebitAccount1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN DebitAccount1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN DebitAccount1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN DebitAccount1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN DebitAccount1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN DebitAccount1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN DebitAccount1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Account1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Account1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END

BEGIN
	SET @TotalRecords = (SELECT Count (*) FROM @OrderedRecords)
	IF @MaximumListSize > 0
	BEGIN
		IF @TotalRecords > @MaximumListSize
		BEGIN
			SET @MaximumListSizeExceeded = 1
			SET @TotalRecords = @MaximumListSize
		END
	END

	/* get search results */
	SELECT
		  DebitAccount1.[AccountID]
		, DebitAccount1.[DebitAccountNumber]
		, DebitAccount1.[IsDefaultDebitAccount]
		, DebitAccount1.[CreatedByUserID]
		, DebitAccount1.[CreatedDate]
		, DebitAccount1.[LastModifiedByUserID]
		, DebitAccount1.[LastModifiedDate]
		, DebitAccount1.[Timestamp]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_DebitAccount] DebitAccount1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=DebitAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	INNER JOIN @OrderedRecords search ON search.[AccountID] = DebitAccount1.[AccountID]
	WHERE
		search.SearchOrderID  >= @StartIndex AND
		search.SearchOrderID  < @vEndIndex
	ORDER BY
		search.SearchOrderID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetManyFundAccountDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @StartIndex int = 1
	, @PageSize int = 50
	, @MaximumListSize int = 0
	, @MaximumListSizeExceeded bit = 0 OUTPUT
	, @TotalRecords int = 0 OUTPUT
	, @SortColumn sysname = 'StartDate'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeDateInactive bit = 0
	, @IncludeInactive bit = 0
	, @StartDate datetime
	, @EndDate datetime
	, @FundAccountTypeCode int
	, @FrequencyCode int
	, @AccountName nvarchar(255)
	, @CurrencyCode int
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets many FundAccount data by criteria.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

DECLARE @vEndIndex int
IF (@StartIndex < 1) SET @StartIndex=1
IF (@PageSize < 1) SET @PageSize=1
SET @vEndIndex = @StartIndex + @Pagesize
IF (@SortColumn = '') SET @SortColumn='StartDate'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

DECLARE @OrderedRecords TABLE
(
     SearchOrderID int IDENTITY (1, 1) NOT NULL
    , AccountID uniqueidentifier
)
IF (@SortDirection = 'Random')
BEGIN
	INSERT INTO @OrderedRecords (AccountID)
	SELECT
		  FundAccount1.[AccountID]
	FROM
	      [dbo].[tblAccounts_FundAccount] FundAccount1
	INNER JOIN [dbo].[tlkpAccounts_FundAccountType] FundAccountType1 ON FundAccountType1.[FundAccountTypeCode]=FundAccount1.[FundAccountTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Frequency] Frequency1 ON Frequency1.[FrequencyCode]=FundAccount1.[FrequencyCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=FundAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		((FundAccount1.[StartDate] IS NULL) OR (FundAccount1.[StartDate] <= CASE WHEN @IncludeDateInactive=1 THEN FundAccount1.[StartDate] ELSE getdate() END))
		AND ((FundAccount1.[EndDate] IS NULL) OR (FundAccount1.[EndDate] >= CASE WHEN @IncludeDateInactive=1 THEN FundAccount1.[EndDate] ELSE getdate() END))
		AND Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND (@StartDate IS NULL OR FundAccount1.[StartDate] <= @StartDate)
		AND (@EndDate IS NULL OR FundAccount1.[EndDate] >= @EndDate)
		AND (@FundAccountTypeCode IS NULL OR FundAccount1.[FundAccountTypeCode] = @FundAccountTypeCode)
		AND (@FrequencyCode IS NULL OR FundAccount1.[FrequencyCode] = @FrequencyCode)
		AND (@AccountName IS NULL OR Account1.[AccountName] like '%' + @AccountName + '%')
		AND (@CurrencyCode IS NULL OR Account1.[CurrencyCode] = @CurrencyCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (Account1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (Account1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY NewID()
END
ELSE
BEGIN
	INSERT INTO @OrderedRecords (AccountID)
	SELECT
		  FundAccount1.[AccountID]
	FROM
	      [dbo].[tblAccounts_FundAccount] FundAccount1
	INNER JOIN [dbo].[tlkpAccounts_FundAccountType] FundAccountType1 ON FundAccountType1.[FundAccountTypeCode]=FundAccount1.[FundAccountTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Frequency] Frequency1 ON Frequency1.[FrequencyCode]=FundAccount1.[FrequencyCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=FundAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		((FundAccount1.[StartDate] IS NULL) OR (FundAccount1.[StartDate] <= CASE WHEN @IncludeDateInactive=1 THEN FundAccount1.[StartDate] ELSE getdate() END))
		AND ((FundAccount1.[EndDate] IS NULL) OR (FundAccount1.[EndDate] >= CASE WHEN @IncludeDateInactive=1 THEN FundAccount1.[EndDate] ELSE getdate() END))
		AND Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND (@StartDate IS NULL OR FundAccount1.[StartDate] <= @StartDate)
		AND (@EndDate IS NULL OR FundAccount1.[EndDate] >= @EndDate)
		AND (@FundAccountTypeCode IS NULL OR FundAccount1.[FundAccountTypeCode] = @FundAccountTypeCode)
		AND (@FrequencyCode IS NULL OR FundAccount1.[FrequencyCode] = @FrequencyCode)
		AND (@AccountName IS NULL OR Account1.[AccountName] like '%' + @AccountName + '%')
		AND (@CurrencyCode IS NULL OR Account1.[CurrencyCode] = @CurrencyCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (Account1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (Account1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN FundAccount1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN FundAccount1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'StartDate' THEN FundAccount1.[StartDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'StartDate' THEN FundAccount1.[StartDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EndDate' THEN FundAccount1.[EndDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EndDate' THEN FundAccount1.[EndDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FundCode' THEN FundAccount1.[FundCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FundCode' THEN FundAccount1.[FundCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TargetAmount' THEN FundAccount1.[TargetAmount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TargetAmount' THEN FundAccount1.[TargetAmount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MinimumDonationAmount' THEN FundAccount1.[MinimumDonationAmount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MinimumDonationAmount' THEN FundAccount1.[MinimumDonationAmount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MaximumDonationAmount' THEN FundAccount1.[MaximumDonationAmount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MaximumDonationAmount' THEN FundAccount1.[MaximumDonationAmount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DonatedAmount' THEN FundAccount1.[DonatedAmount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DonatedAmount' THEN FundAccount1.[DonatedAmount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsPublic' THEN FundAccount1.[IsPublic] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsPublic' THEN FundAccount1.[IsPublic] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FundAccountTypeCode' THEN FundAccount1.[FundAccountTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FundAccountTypeCode' THEN FundAccount1.[FundAccountTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FrequencyCode' THEN FundAccount1.[FrequencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FrequencyCode' THEN FundAccount1.[FrequencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN FundAccount1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN FundAccount1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN FundAccount1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN FundAccount1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN FundAccount1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN FundAccount1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN FundAccount1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN FundAccount1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN FundAccount1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN FundAccount1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FundAccountTypeName' THEN FundAccountType1.[FundAccountTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FundAccountTypeName' THEN FundAccountType1.[FundAccountTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FrequencyName' THEN Frequency1.[FrequencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FrequencyName' THEN Frequency1.[FrequencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Account1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Account1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END

BEGIN
	SET @TotalRecords = (SELECT Count (*) FROM @OrderedRecords)
	IF @MaximumListSize > 0
	BEGIN
		IF @TotalRecords > @MaximumListSize
		BEGIN
			SET @MaximumListSizeExceeded = 1
			SET @TotalRecords = @MaximumListSize
		END
	END

	/* get search results */
	SELECT
		  FundAccount1.[AccountID]
		, FundAccount1.[StartDate]
		, FundAccount1.[EndDate]
		, FundAccount1.[FundCode]
		, FundAccount1.[TargetAmount]
		, FundAccount1.[MinimumDonationAmount]
		, FundAccount1.[MaximumDonationAmount]
		, FundAccount1.[DonatedAmount]
		, FundAccount1.[IsPublic]
		, FundAccount1.[FundAccountTypeCode]
		, FundAccount1.[FrequencyCode]
		, FundAccount1.[CreatedByUserID]
		, FundAccount1.[CreatedDate]
		, FundAccount1.[LastModifiedByUserID]
		, FundAccount1.[LastModifiedDate]
		, FundAccount1.[Timestamp]
		, FundAccountType1.[FundAccountTypeName]
		, Frequency1.[FrequencyName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_FundAccount] FundAccount1
	INNER JOIN [dbo].[tlkpAccounts_FundAccountType] FundAccountType1 ON FundAccountType1.[FundAccountTypeCode]=FundAccount1.[FundAccountTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Frequency] Frequency1 ON Frequency1.[FrequencyCode]=FundAccount1.[FrequencyCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=FundAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	INNER JOIN @OrderedRecords search ON search.[AccountID] = FundAccount1.[AccountID]
	WHERE
		search.SearchOrderID  >= @StartIndex AND
		search.SearchOrderID  < @vEndIndex
	ORDER BY
		search.SearchOrderID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetManyLoanAccountDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @StartIndex int = 1
	, @PageSize int = 50
	, @MaximumListSize int = 0
	, @MaximumListSizeExceeded bit = 0 OUTPUT
	, @TotalRecords int = 0 OUTPUT
	, @SortColumn sysname = 'DueDate'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @DueDateStart datetime
	, @DueDateEnd datetime
	, @AccountName nvarchar(255)
	, @CurrencyCode int
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets many LoanAccount data by criteria.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

DECLARE @vEndIndex int
IF (@StartIndex < 1) SET @StartIndex=1
IF (@PageSize < 1) SET @PageSize=1
SET @vEndIndex = @StartIndex + @Pagesize
IF (@SortColumn = '') SET @SortColumn='DueDate'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

DECLARE @OrderedRecords TABLE
(
     SearchOrderID int IDENTITY (1, 1) NOT NULL
    , AccountID uniqueidentifier
)
IF (@SortDirection = 'Random')
BEGIN
	INSERT INTO @OrderedRecords (AccountID)
	SELECT
		  LoanAccount1.[AccountID]
	FROM
	      [dbo].[tblAccounts_LoanAccount] LoanAccount1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=LoanAccount1.[AccountID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND ((@DueDateStart  IS NULL) OR (LoanAccount1.[DueDate] >=  @DueDateStart))
		AND ((@DueDateEnd  IS NULL) OR (LoanAccount1.[DueDate] <=  @DueDateEnd))
		AND (@AccountName IS NULL OR Account1.[AccountName] like '%' + @AccountName + '%')
		AND (@CurrencyCode IS NULL OR Account1.[CurrencyCode] = @CurrencyCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (Account1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (Account1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY NewID()
END
ELSE
BEGIN
	INSERT INTO @OrderedRecords (AccountID)
	SELECT
		  LoanAccount1.[AccountID]
	FROM
	      [dbo].[tblAccounts_LoanAccount] LoanAccount1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=LoanAccount1.[AccountID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND ((@DueDateStart  IS NULL) OR (LoanAccount1.[DueDate] >=  @DueDateStart))
		AND ((@DueDateEnd  IS NULL) OR (LoanAccount1.[DueDate] <=  @DueDateEnd))
		AND (@AccountName IS NULL OR Account1.[AccountName] like '%' + @AccountName + '%')
		AND (@CurrencyCode IS NULL OR Account1.[CurrencyCode] = @CurrencyCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (Account1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (Account1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN LoanAccount1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN LoanAccount1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LoanAmount' THEN LoanAccount1.[LoanAmount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LoanAmount' THEN LoanAccount1.[LoanAmount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OutstandingAmount' THEN LoanAccount1.[OutstandingAmount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OutstandingAmount' THEN LoanAccount1.[OutstandingAmount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DueDate' THEN LoanAccount1.[DueDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DueDate' THEN LoanAccount1.[DueDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LoanRate' THEN LoanAccount1.[LoanRate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LoanRate' THEN LoanAccount1.[LoanRate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN LoanAccount1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN LoanAccount1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN LoanAccount1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN LoanAccount1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN LoanAccount1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN LoanAccount1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN LoanAccount1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN LoanAccount1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN LoanAccount1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN LoanAccount1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LoaningMetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LoaningMetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Account1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Account1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END

BEGIN
	SET @TotalRecords = (SELECT Count (*) FROM @OrderedRecords)
	IF @MaximumListSize > 0
	BEGIN
		IF @TotalRecords > @MaximumListSize
		BEGIN
			SET @MaximumListSizeExceeded = 1
			SET @TotalRecords = @MaximumListSize
		END
	END

	/* get search results */
	SELECT
		  LoanAccount1.[AccountID]
		, LoanAccount1.[LoanAmount]
		, LoanAccount1.[OutstandingAmount]
		, LoanAccount1.[DueDate]
		, LoanAccount1.[LoanRate]
		, LoanAccount1.[CreatedByUserID]
		, LoanAccount1.[CreatedDate]
		, LoanAccount1.[LastModifiedByUserID]
		, LoanAccount1.[LastModifiedDate]
		, LoanAccount1.[Timestamp]
		, "LoaningMetaPartnerName" = MetaPartner1.[MetaPartnerName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_LoanAccount] LoanAccount1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=LoanAccount1.[AccountID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN @OrderedRecords search ON search.[AccountID] = LoanAccount1.[AccountID]
	WHERE
		search.SearchOrderID  >= @StartIndex AND
		search.SearchOrderID  < @vEndIndex
	ORDER BY
		search.SearchOrderID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetManyMetaTransferAccountDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @StartIndex int = 1
	, @PageSize int = 50
	, @MaximumListSize int = 0
	, @MaximumListSizeExceeded bit = 0 OUTPUT
	, @TotalRecords int = 0 OUTPUT
	, @SortColumn sysname = 'MetaTransferAccountNumber'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @MetaTransferAccountNumber nvarchar(100)
	, @PaymentInstitutionCode int
	, @AccountName nvarchar(255)
	, @CurrencyCode int
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets many MetaTransferAccount data by criteria.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

DECLARE @vEndIndex int
IF (@StartIndex < 1) SET @StartIndex=1
IF (@PageSize < 1) SET @PageSize=1
SET @vEndIndex = @StartIndex + @Pagesize
IF (@SortColumn = '') SET @SortColumn='MetaTransferAccountNumber'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

DECLARE @OrderedRecords TABLE
(
     SearchOrderID int IDENTITY (1, 1) NOT NULL
    , AccountID uniqueidentifier
)
IF (@SortDirection = 'Random')
BEGIN
	INSERT INTO @OrderedRecords (AccountID)
	SELECT
		  MetaTransferAccount1.[AccountID]
	FROM
	      [dbo].[tblAccounts_MetaTransferAccount] MetaTransferAccount1
	INNER JOIN [dbo].[tlkpAccounts_PaymentInstitution] PaymentInstitution1 ON PaymentInstitution1.[PaymentInstitutionCode]=MetaTransferAccount1.[PaymentInstitutionCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=MetaTransferAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND (@MetaTransferAccountNumber IS NULL OR MetaTransferAccount1.[MetaTransferAccountNumber] like '%' + @MetaTransferAccountNumber + '%')
		AND (@PaymentInstitutionCode IS NULL OR MetaTransferAccount1.[PaymentInstitutionCode] = @PaymentInstitutionCode)
		AND (@AccountName IS NULL OR Account1.[AccountName] like '%' + @AccountName + '%')
		AND (@CurrencyCode IS NULL OR Account1.[CurrencyCode] = @CurrencyCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (Account1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (Account1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY NewID()
END
ELSE
BEGIN
	INSERT INTO @OrderedRecords (AccountID)
	SELECT
		  MetaTransferAccount1.[AccountID]
	FROM
	      [dbo].[tblAccounts_MetaTransferAccount] MetaTransferAccount1
	INNER JOIN [dbo].[tlkpAccounts_PaymentInstitution] PaymentInstitution1 ON PaymentInstitution1.[PaymentInstitutionCode]=MetaTransferAccount1.[PaymentInstitutionCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=MetaTransferAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND (@MetaTransferAccountNumber IS NULL OR MetaTransferAccount1.[MetaTransferAccountNumber] like '%' + @MetaTransferAccountNumber + '%')
		AND (@PaymentInstitutionCode IS NULL OR MetaTransferAccount1.[PaymentInstitutionCode] = @PaymentInstitutionCode)
		AND (@AccountName IS NULL OR Account1.[AccountName] like '%' + @AccountName + '%')
		AND (@CurrencyCode IS NULL OR Account1.[CurrencyCode] = @CurrencyCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (Account1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (Account1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN MetaTransferAccount1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN MetaTransferAccount1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaTransferAccountNumber' THEN MetaTransferAccount1.[MetaTransferAccountNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaTransferAccountNumber' THEN MetaTransferAccount1.[MetaTransferAccountNumber] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentInstitutionCode' THEN MetaTransferAccount1.[PaymentInstitutionCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentInstitutionCode' THEN MetaTransferAccount1.[PaymentInstitutionCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN MetaTransferAccount1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN MetaTransferAccount1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN MetaTransferAccount1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN MetaTransferAccount1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN MetaTransferAccount1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN MetaTransferAccount1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN MetaTransferAccount1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN MetaTransferAccount1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN MetaTransferAccount1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN MetaTransferAccount1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentInstitutionName' THEN PaymentInstitution1.[PaymentInstitutionName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentInstitutionName' THEN PaymentInstitution1.[PaymentInstitutionName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Account1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Account1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END

BEGIN
	SET @TotalRecords = (SELECT Count (*) FROM @OrderedRecords)
	IF @MaximumListSize > 0
	BEGIN
		IF @TotalRecords > @MaximumListSize
		BEGIN
			SET @MaximumListSizeExceeded = 1
			SET @TotalRecords = @MaximumListSize
		END
	END

	/* get search results */
	SELECT
		  MetaTransferAccount1.[AccountID]
		, MetaTransferAccount1.[MetaTransferAccountNumber]
		, MetaTransferAccount1.[PaymentInstitutionCode]
		, MetaTransferAccount1.[CreatedByUserID]
		, MetaTransferAccount1.[CreatedDate]
		, MetaTransferAccount1.[LastModifiedByUserID]
		, MetaTransferAccount1.[LastModifiedDate]
		, MetaTransferAccount1.[Timestamp]
		, PaymentInstitution1.[PaymentInstitutionName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_MetaTransferAccount] MetaTransferAccount1
	INNER JOIN [dbo].[tlkpAccounts_PaymentInstitution] PaymentInstitution1 ON PaymentInstitution1.[PaymentInstitutionCode]=MetaTransferAccount1.[PaymentInstitutionCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=MetaTransferAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	INNER JOIN @OrderedRecords search ON search.[AccountID] = MetaTransferAccount1.[AccountID]
	WHERE
		search.SearchOrderID  >= @StartIndex AND
		search.SearchOrderID  < @vEndIndex
	ORDER BY
		search.SearchOrderID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetManyStoredValueAccountDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @StartIndex int = 1
	, @PageSize int = 50
	, @MaximumListSize int = 0
	, @MaximumListSizeExceeded bit = 0 OUTPUT
	, @TotalRecords int = 0 OUTPUT
	, @SortColumn sysname = 'DebitAccountNumber'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @DebitAccountNumber nvarchar(100)
	, @AccountName nvarchar(255)
	, @CurrencyCode int
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets many StoredValueAccount data by criteria.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

DECLARE @vEndIndex int
IF (@StartIndex < 1) SET @StartIndex=1
IF (@PageSize < 1) SET @PageSize=1
SET @vEndIndex = @StartIndex + @Pagesize
IF (@SortColumn = '') SET @SortColumn='DebitAccountNumber'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

DECLARE @OrderedRecords TABLE
(
     SearchOrderID int IDENTITY (1, 1) NOT NULL
    , AccountID uniqueidentifier
)
IF (@SortDirection = 'Random')
BEGIN
	INSERT INTO @OrderedRecords (AccountID)
	SELECT
		  StoredValueAccount1.[AccountID]
	FROM
	      [dbo].[tblAccounts_StoredValueAccount] StoredValueAccount1
	INNER JOIN [dbo].[tblCustomers_MetaPartnerPhone] MetaPartnerPhone1 ON MetaPartnerPhone1.[MetaPartnerPhoneID]=StoredValueAccount1.[MetaPartnerPhoneID] AND MetaPartnerPhone1.[MetaPartnerID]=StoredValueAccount1.[PhoneMetaPartnerID]
	INNER JOIN [dbo].[tblAccounts_DebitAccount] DebitAccount1 ON DebitAccount1.[AccountID]=StoredValueAccount1.[AccountID]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=DebitAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND (@DebitAccountNumber IS NULL OR DebitAccount1.[DebitAccountNumber] like '%' + @DebitAccountNumber + '%')
		AND (@AccountName IS NULL OR Account1.[AccountName] like '%' + @AccountName + '%')
		AND (@CurrencyCode IS NULL OR Account1.[CurrencyCode] = @CurrencyCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (Account1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (Account1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY NewID()
END
ELSE
BEGIN
	INSERT INTO @OrderedRecords (AccountID)
	SELECT
		  StoredValueAccount1.[AccountID]
	FROM
	      [dbo].[tblAccounts_StoredValueAccount] StoredValueAccount1
	INNER JOIN [dbo].[tblCustomers_MetaPartnerPhone] MetaPartnerPhone1 ON MetaPartnerPhone1.[MetaPartnerPhoneID]=StoredValueAccount1.[MetaPartnerPhoneID] AND MetaPartnerPhone1.[MetaPartnerID]=StoredValueAccount1.[PhoneMetaPartnerID]
	INNER JOIN [dbo].[tblAccounts_DebitAccount] DebitAccount1 ON DebitAccount1.[AccountID]=StoredValueAccount1.[AccountID]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=DebitAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE 
		Account1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Account1.[IsActive] ELSE 1 END
		AND (@DebitAccountNumber IS NULL OR DebitAccount1.[DebitAccountNumber] like '%' + @DebitAccountNumber + '%')
		AND (@AccountName IS NULL OR Account1.[AccountName] like '%' + @AccountName + '%')
		AND (@CurrencyCode IS NULL OR Account1.[CurrencyCode] = @CurrencyCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (Account1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (Account1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountID' THEN StoredValueAccount1.[AccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountID' THEN StoredValueAccount1.[AccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PhoneMetaPartnerID' THEN StoredValueAccount1.[PhoneMetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PhoneMetaPartnerID' THEN StoredValueAccount1.[PhoneMetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerPhoneID' THEN StoredValueAccount1.[MetaPartnerPhoneID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerPhoneID' THEN StoredValueAccount1.[MetaPartnerPhoneID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Balance' THEN StoredValueAccount1.[Balance] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Balance' THEN StoredValueAccount1.[Balance] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN StoredValueAccount1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN StoredValueAccount1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN StoredValueAccount1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN StoredValueAccount1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN StoredValueAccount1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN StoredValueAccount1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN StoredValueAccount1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN StoredValueAccount1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN StoredValueAccount1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN StoredValueAccount1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PhoneNumber' THEN MetaPartnerPhone1.[PhoneNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PhoneNumber' THEN MetaPartnerPhone1.[PhoneNumber] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DebitAccountNumber' THEN DebitAccount1.[DebitAccountNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DebitAccountNumber' THEN DebitAccount1.[DebitAccountNumber] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsDefaultDebitAccount' THEN DebitAccount1.[IsDefaultDebitAccount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsDefaultDebitAccount' THEN DebitAccount1.[IsDefaultDebitAccount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Account1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeCode' THEN Account1.[AccountSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Account1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Account1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Account1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Account1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountSubTypeName' THEN AccountSubType1.[AccountSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END

BEGIN
	SET @TotalRecords = (SELECT Count (*) FROM @OrderedRecords)
	IF @MaximumListSize > 0
	BEGIN
		IF @TotalRecords > @MaximumListSize
		BEGIN
			SET @MaximumListSizeExceeded = 1
			SET @TotalRecords = @MaximumListSize
		END
	END

	/* get search results */
	SELECT
		  StoredValueAccount1.[AccountID]
		, StoredValueAccount1.[PhoneMetaPartnerID]
		, StoredValueAccount1.[MetaPartnerPhoneID]
		, StoredValueAccount1.[Balance]
		, StoredValueAccount1.[CreatedByUserID]
		, StoredValueAccount1.[CreatedDate]
		, StoredValueAccount1.[LastModifiedByUserID]
		, StoredValueAccount1.[LastModifiedDate]
		, StoredValueAccount1.[Timestamp]
		, MetaPartnerPhone1.[PhoneNumber]
		, DebitAccount1.[DebitAccountNumber]
		, DebitAccount1.[IsDefaultDebitAccount]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_StoredValueAccount] StoredValueAccount1
	INNER JOIN [dbo].[tblCustomers_MetaPartnerPhone] MetaPartnerPhone1 ON MetaPartnerPhone1.[MetaPartnerPhoneID]=StoredValueAccount1.[MetaPartnerPhoneID] AND MetaPartnerPhone1.[MetaPartnerID]=StoredValueAccount1.[PhoneMetaPartnerID]
	INNER JOIN [dbo].[tblAccounts_DebitAccount] DebitAccount1 ON DebitAccount1.[AccountID]=StoredValueAccount1.[AccountID]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=DebitAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	INNER JOIN @OrderedRecords search ON search.[AccountID] = StoredValueAccount1.[AccountID]
	WHERE
		search.SearchOrderID  >= @StartIndex AND
		search.SearchOrderID  < @vEndIndex
	ORDER BY
		search.SearchOrderID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetOneAccount
	  @SqlErrorNumber int = 0 OUTPUT
	, @AccountID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single Account by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  Account1.[AccountID]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, Account1.[CreatedByUserID]
		, Account1.[CreatedDate]
		, Account1.[LastModifiedByUserID]
		, Account1.[LastModifiedDate]
		, Account1.[Timestamp]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_Account] Account1
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE Account1.[AccountID] =  @AccountID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetOneAccountAttribute
	  @SqlErrorNumber int = 0 OUTPUT
	, @BaseAttributeID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single AccountAttribute by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@BaseAttributeID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  AccountAttribute1.[BaseAttributeID]
		, AccountAttribute1.[AttributeCode]
		, AccountAttribute1.[CreatedByUserID]
		, AccountAttribute1.[CreatedDate]
		, AccountAttribute1.[LastModifiedByUserID]
		, AccountAttribute1.[LastModifiedDate]
		, AccountAttribute1.[Timestamp]
		, BaseAttribute1.[AttributeName]
		, BaseAttribute1.[AttributeTypeCode]
		, BaseAttribute1.[DataTypeCode]
		, BaseAttribute1.[Description]
		, BaseAttribute1.[IsActive]
		, AttributeType1.[AttributeTypeName]
		, DataType1.[DataTypeName]
	FROM
	      [dbo].[tblAccounts_AccountAttribute] AccountAttribute1
	INNER JOIN [dbo].[tblCore_BaseAttribute] BaseAttribute1 ON BaseAttribute1.[BaseAttributeID]=AccountAttribute1.[BaseAttributeID]
	INNER JOIN [dbo].[tlkpCore_AttributeType] AttributeType1 ON AttributeType1.[AttributeTypeCode]=BaseAttribute1.[AttributeTypeCode]
	INNER JOIN [dbo].[tlkpCore_DataType] DataType1 ON DataType1.[DataTypeCode]=BaseAttribute1.[DataTypeCode]
	WHERE AccountAttribute1.[BaseAttributeID] =  @BaseAttributeID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetOneAccountAttributeByAttributeCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @AttributeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single AccountAttribute by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AttributeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  AccountAttribute1.[BaseAttributeID]
		, AccountAttribute1.[AttributeCode]
		, AccountAttribute1.[CreatedByUserID]
		, AccountAttribute1.[CreatedDate]
		, AccountAttribute1.[LastModifiedByUserID]
		, AccountAttribute1.[LastModifiedDate]
		, AccountAttribute1.[Timestamp]
		, BaseAttribute1.[AttributeName]
		, BaseAttribute1.[AttributeTypeCode]
		, BaseAttribute1.[DataTypeCode]
		, BaseAttribute1.[Description]
		, BaseAttribute1.[IsActive]
		, AttributeType1.[AttributeTypeName]
		, DataType1.[DataTypeName]
	FROM
	      [dbo].[tblAccounts_AccountAttribute] AccountAttribute1
	INNER JOIN [dbo].[tblCore_BaseAttribute] BaseAttribute1 ON BaseAttribute1.[BaseAttributeID]=AccountAttribute1.[BaseAttributeID]
	INNER JOIN [dbo].[tlkpCore_AttributeType] AttributeType1 ON AttributeType1.[AttributeTypeCode]=BaseAttribute1.[AttributeTypeCode]
	INNER JOIN [dbo].[tlkpCore_DataType] DataType1 ON DataType1.[DataTypeCode]=BaseAttribute1.[DataTypeCode]
	WHERE AccountAttribute1.[AttributeCode] =  @AttributeCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetOneAccountAttributeValue
	  @SqlErrorNumber int = 0 OUTPUT
	, @AccountAttributeValueID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single AccountAttributeValue by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountAttributeValueID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  AccountAttributeValue1.[AccountAttributeValueID]
		, AccountAttributeValue1.[AccountID]
		, AccountAttributeValue1.[BaseAttributeID]
		, AccountAttributeValue1.[ParameterValue]
		, AccountAttributeValue1.[CreatedByUserID]
		, AccountAttributeValue1.[CreatedDate]
		, AccountAttributeValue1.[LastModifiedByUserID]
		, AccountAttributeValue1.[LastModifiedDate]
		, AccountAttributeValue1.[Timestamp]
		, Account1.[AccountName]
	FROM
	      [dbo].[tblAccounts_AccountAttributeValue] AccountAttributeValue1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=AccountAttributeValue1.[AccountID]
	WHERE AccountAttributeValue1.[AccountAttributeValueID] =  @AccountAttributeValueID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetOneAccountByAccountIDAndMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @AccountID uniqueidentifier
	, @MetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single Account by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountID IS NULL OR @MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  Account1.[AccountID]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, Account1.[CreatedByUserID]
		, Account1.[CreatedDate]
		, Account1.[LastModifiedByUserID]
		, Account1.[LastModifiedDate]
		, Account1.[Timestamp]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_Account] Account1
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE Account1.[AccountID] =  @AccountID AND Account1.[MetaPartnerID] =  @MetaPartnerID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetOneAccountSubType
	  @SqlErrorNumber int = 0 OUTPUT
	, @AccountSubTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single AccountSubType by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountSubTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  AccountSubType1.[AccountSubTypeCode]
		, AccountSubType1.[AccountSubTypeName]
		, AccountSubType1.[Description]
		, AccountSubType1.[IsActive]
		, AccountSubType1.[CreatedByUserID]
		, AccountSubType1.[CreatedDate]
		, AccountSubType1.[LastModifiedByUserID]
		, AccountSubType1.[LastModifiedDate]
		, AccountSubType1.[Timestamp]
	FROM
	      [dbo].[tlkpAccounts_AccountSubType] AccountSubType1
	WHERE AccountSubType1.[AccountSubTypeCode] =  @AccountSubTypeCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetOneBankAccount
	  @SqlErrorNumber int = 0 OUTPUT
	, @AccountID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single BankAccount by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  BankAccount1.[AccountID]
		, BankAccount1.[BankMetaPartnerID]
		, BankAccount1.[CreatedByUserID]
		, BankAccount1.[CreatedDate]
		, BankAccount1.[LastModifiedByUserID]
		, BankAccount1.[LastModifiedDate]
		, BankAccount1.[Timestamp]
		, DebitAccount1.[DebitAccountNumber]
		, DebitAccount1.[IsDefaultDebitAccount]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_BankAccount] BankAccount1
	INNER JOIN [dbo].[tblAccounts_DebitAccount] DebitAccount1 ON DebitAccount1.[AccountID]=BankAccount1.[AccountID]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=DebitAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE BankAccount1.[AccountID] =  @AccountID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetOneBillPayAccount
	  @SqlErrorNumber int = 0 OUTPUT
	, @AccountID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single BillPayAccount by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  BillPayAccount1.[AccountID]
		, BillPayAccount1.[BusinessAccountNumber]
		, BillPayAccount1.[StartDate]
		, BillPayAccount1.[EndDate]
		, BillPayAccount1.[DefaultMinimumPayment]
		, BillPayAccount1.[DefaultMaximumPayment]
		, BillPayAccount1.[BusinessMetaPartnerID]
		, BillPayAccount1.[HourOfDay]
		, BillPayAccount1.[DayOfWeek]
		, BillPayAccount1.[WeekOfMonth]
		, BillPayAccount1.[MonthOfYear]
		, BillPayAccount1.[NumberOfReminders]
		, BillPayAccount1.[FrequencyCode]
		, BillPayAccount1.[CreatedByUserID]
		, BillPayAccount1.[CreatedDate]
		, BillPayAccount1.[LastModifiedByUserID]
		, BillPayAccount1.[LastModifiedDate]
		, BillPayAccount1.[Timestamp]
		, Frequency1.[FrequencyName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_BillPayAccount] BillPayAccount1
	INNER JOIN [dbo].[tlkpAccounts_Frequency] Frequency1 ON Frequency1.[FrequencyCode]=BillPayAccount1.[FrequencyCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=BillPayAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE BillPayAccount1.[AccountID] =  @AccountID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetOneCreditAccount
	  @SqlErrorNumber int = 0 OUTPUT
	, @AccountID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single CreditAccount by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  CreditAccount1.[AccountID]
		, CreditAccount1.[CreditCardNumber]
		, CreditAccount1.[CreditCardLastFour]
		, CreditAccount1.[CreditCardName]
		, CreditAccount1.[ExpirationDate]
		, CreditAccount1.[CreditCardTypeCode]
		, CreditAccount1.[CreatedByUserID]
		, CreditAccount1.[CreatedDate]
		, CreditAccount1.[LastModifiedByUserID]
		, CreditAccount1.[LastModifiedDate]
		, CreditAccount1.[Timestamp]
		, CreditCardType1.[CreditCardTypeName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_CreditAccount] CreditAccount1
	INNER JOIN [dbo].[tlkpAccounts_CreditCardType] CreditCardType1 ON CreditCardType1.[CreditCardTypeCode]=CreditAccount1.[CreditCardTypeCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=CreditAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE CreditAccount1.[AccountID] =  @AccountID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetOneCreditCardType
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreditCardTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single CreditCardType by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@CreditCardTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  CreditCardType1.[CreditCardTypeCode]
		, CreditCardType1.[CreditCardTypeName]
		, CreditCardType1.[Description]
		, CreditCardType1.[IsActive]
		, CreditCardType1.[CreatedByUserID]
		, CreditCardType1.[CreatedDate]
		, CreditCardType1.[LastModifiedByUserID]
		, CreditCardType1.[LastModifiedDate]
		, CreditCardType1.[Timestamp]
	FROM
	      [dbo].[tlkpAccounts_CreditCardType] CreditCardType1
	WHERE CreditCardType1.[CreditCardTypeCode] =  @CreditCardTypeCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetOneCurrency
	  @SqlErrorNumber int = 0 OUTPUT
	, @CurrencyCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single Currency by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@CurrencyCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  Currency1.[CurrencyCode]
		, Currency1.[CurrencyName]
		, Currency1.[IsPaymentCurrency]
		, Currency1.[Description]
		, Currency1.[IsActive]
		, Currency1.[CreatedByUserID]
		, Currency1.[CreatedDate]
		, Currency1.[LastModifiedByUserID]
		, Currency1.[LastModifiedDate]
		, Currency1.[Timestamp]
	FROM
	      [dbo].[tlkpAccounts_Currency] Currency1
	WHERE Currency1.[CurrencyCode] =  @CurrencyCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetOneCurrencyConversion
	  @SqlErrorNumber int = 0 OUTPUT
	, @CurrencyConversionID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single CurrencyConversion by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@CurrencyConversionID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  CurrencyConversion1.[CurrencyConversionID]
		, CurrencyConversion1.[ConvertFromCurrencyCode]
		, CurrencyConversion1.[ConvertToCurrencyCode]
		, CurrencyConversion1.[MetaPartnerID]
		, CurrencyConversion1.[ConversionRate]
		, CurrencyConversion1.[IsActive]
		, CurrencyConversion1.[CreatedByUserID]
		, CurrencyConversion1.[CreatedDate]
		, CurrencyConversion1.[LastModifiedByUserID]
		, CurrencyConversion1.[LastModifiedDate]
		, CurrencyConversion1.[Timestamp]
		, Currency1.[CurrencyName]
	FROM
	      [dbo].[tblAccounts_CurrencyConversion] CurrencyConversion1
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=CurrencyConversion1.[ConvertFromCurrencyCode]
	WHERE CurrencyConversion1.[CurrencyConversionID] =  @CurrencyConversionID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetOneDebitAccount
	  @SqlErrorNumber int = 0 OUTPUT
	, @AccountID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single DebitAccount by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  DebitAccount1.[AccountID]
		, DebitAccount1.[DebitAccountNumber]
		, DebitAccount1.[IsDefaultDebitAccount]
		, DebitAccount1.[CreatedByUserID]
		, DebitAccount1.[CreatedDate]
		, DebitAccount1.[LastModifiedByUserID]
		, DebitAccount1.[LastModifiedDate]
		, DebitAccount1.[Timestamp]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_DebitAccount] DebitAccount1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=DebitAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE DebitAccount1.[AccountID] =  @AccountID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetOneFrequency
	  @SqlErrorNumber int = 0 OUTPUT
	, @FrequencyCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single Frequency by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@FrequencyCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  Frequency1.[FrequencyCode]
		, Frequency1.[FrequencyName]
		, Frequency1.[Description]
		, Frequency1.[IsActive]
		, Frequency1.[CreatedByUserID]
		, Frequency1.[CreatedDate]
		, Frequency1.[LastModifiedByUserID]
		, Frequency1.[LastModifiedDate]
		, Frequency1.[Timestamp]
	FROM
	      [dbo].[tlkpAccounts_Frequency] Frequency1
	WHERE Frequency1.[FrequencyCode] =  @FrequencyCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetOneFundAccount
	  @SqlErrorNumber int = 0 OUTPUT
	, @AccountID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single FundAccount by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  FundAccount1.[AccountID]
		, FundAccount1.[StartDate]
		, FundAccount1.[EndDate]
		, FundAccount1.[FundCode]
		, FundAccount1.[TargetAmount]
		, FundAccount1.[MinimumDonationAmount]
		, FundAccount1.[MaximumDonationAmount]
		, FundAccount1.[DonatedAmount]
		, FundAccount1.[IsPublic]
		, FundAccount1.[FundAccountTypeCode]
		, FundAccount1.[FrequencyCode]
		, FundAccount1.[CreatedByUserID]
		, FundAccount1.[CreatedDate]
		, FundAccount1.[LastModifiedByUserID]
		, FundAccount1.[LastModifiedDate]
		, FundAccount1.[Timestamp]
		, FundAccountType1.[FundAccountTypeName]
		, Frequency1.[FrequencyName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_FundAccount] FundAccount1
	INNER JOIN [dbo].[tlkpAccounts_FundAccountType] FundAccountType1 ON FundAccountType1.[FundAccountTypeCode]=FundAccount1.[FundAccountTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Frequency] Frequency1 ON Frequency1.[FrequencyCode]=FundAccount1.[FrequencyCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=FundAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE FundAccount1.[AccountID] =  @AccountID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetOneFundAccountType
	  @SqlErrorNumber int = 0 OUTPUT
	, @FundAccountTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single FundAccountType by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@FundAccountTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  FundAccountType1.[FundAccountTypeCode]
		, FundAccountType1.[FundAccountTypeName]
		, FundAccountType1.[Description]
		, FundAccountType1.[IsActive]
		, FundAccountType1.[CreatedByUserID]
		, FundAccountType1.[CreatedDate]
		, FundAccountType1.[LastModifiedByUserID]
		, FundAccountType1.[LastModifiedDate]
		, FundAccountType1.[Timestamp]
	FROM
	      [dbo].[tlkpAccounts_FundAccountType] FundAccountType1
	WHERE FundAccountType1.[FundAccountTypeCode] =  @FundAccountTypeCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetOneLoanAccount
	  @SqlErrorNumber int = 0 OUTPUT
	, @AccountID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single LoanAccount by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  LoanAccount1.[AccountID]
		, LoanAccount1.[LoanAmount]
		, LoanAccount1.[OutstandingAmount]
		, LoanAccount1.[DueDate]
		, LoanAccount1.[LoanRate]
		, LoanAccount1.[CreatedByUserID]
		, LoanAccount1.[CreatedDate]
		, LoanAccount1.[LastModifiedByUserID]
		, LoanAccount1.[LastModifiedDate]
		, LoanAccount1.[Timestamp]
		, "LoaningMetaPartnerName" = MetaPartner1.[MetaPartnerName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_LoanAccount] LoanAccount1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=LoanAccount1.[AccountID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	WHERE LoanAccount1.[AccountID] =  @AccountID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetOneLoanToMetaPartner
	  @SqlErrorNumber int = 0 OUTPUT
	, @AccountID uniqueidentifier
	, @MetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single LoanToMetaPartner by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountID IS NULL OR @MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  LoanToMetaPartner1.[AccountID]
		, LoanToMetaPartner1.[MetaPartnerID]
		, LoanToMetaPartner1.[CreatedByUserID]
		, LoanToMetaPartner1.[CreatedDate]
		, LoanToMetaPartner1.[LastModifiedByUserID]
		, LoanToMetaPartner1.[LastModifiedDate]
		, LoanToMetaPartner1.[Timestamp]
		, LoanAccount1.[DueDate]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[MetaPartnerName]
	FROM
	      [dbo].[trelAccounts_LoanToMetaPartner] LoanToMetaPartner1
	INNER JOIN [dbo].[tblAccounts_LoanAccount] LoanAccount1 ON LoanAccount1.[AccountID]=LoanToMetaPartner1.[AccountID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=LoanToMetaPartner1.[MetaPartnerID]
	WHERE LoanToMetaPartner1.[AccountID] =  @AccountID AND LoanToMetaPartner1.[MetaPartnerID] =  @MetaPartnerID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetOneMetaTransferAccount
	  @SqlErrorNumber int = 0 OUTPUT
	, @AccountID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single MetaTransferAccount by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  MetaTransferAccount1.[AccountID]
		, MetaTransferAccount1.[MetaTransferAccountNumber]
		, MetaTransferAccount1.[PaymentInstitutionCode]
		, MetaTransferAccount1.[CreatedByUserID]
		, MetaTransferAccount1.[CreatedDate]
		, MetaTransferAccount1.[LastModifiedByUserID]
		, MetaTransferAccount1.[LastModifiedDate]
		, MetaTransferAccount1.[Timestamp]
		, PaymentInstitution1.[PaymentInstitutionName]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_MetaTransferAccount] MetaTransferAccount1
	INNER JOIN [dbo].[tlkpAccounts_PaymentInstitution] PaymentInstitution1 ON PaymentInstitution1.[PaymentInstitutionCode]=MetaTransferAccount1.[PaymentInstitutionCode]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=MetaTransferAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE MetaTransferAccount1.[AccountID] =  @AccountID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetOneParticipatingPartner
	  @SqlErrorNumber int = 0 OUTPUT
	, @AccountID uniqueidentifier
	, @MetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single ParticipatingPartner by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountID IS NULL OR @MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  ParticipatingPartner1.[AccountID]
		, ParticipatingPartner1.[MetaPartnerID]
		, ParticipatingPartner1.[CreatedByUserID]
		, ParticipatingPartner1.[CreatedDate]
		, ParticipatingPartner1.[LastModifiedByUserID]
		, ParticipatingPartner1.[LastModifiedDate]
		, ParticipatingPartner1.[Timestamp]
		, MetaPartner1.[MetaPartnerName]
		, FundAccount1.[StartDate]
		, FundAccount1.[EndDate]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[trelAccounts_ParticipatingPartner] ParticipatingPartner1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=ParticipatingPartner1.[MetaPartnerID]
	INNER JOIN [dbo].[tblAccounts_FundAccount] FundAccount1 ON FundAccount1.[AccountID]=ParticipatingPartner1.[AccountID]
	WHERE ParticipatingPartner1.[AccountID] =  @AccountID AND ParticipatingPartner1.[MetaPartnerID] =  @MetaPartnerID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetOnePaymentInstitution
	  @SqlErrorNumber int = 0 OUTPUT
	, @PaymentInstitutionCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single PaymentInstitution by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@PaymentInstitutionCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  PaymentInstitution1.[PaymentInstitutionCode]
		, PaymentInstitution1.[PaymentInstitutionName]
		, PaymentInstitution1.[Description]
		, PaymentInstitution1.[IsActive]
		, PaymentInstitution1.[CreatedByUserID]
		, PaymentInstitution1.[CreatedDate]
		, PaymentInstitution1.[LastModifiedByUserID]
		, PaymentInstitution1.[LastModifiedDate]
		, PaymentInstitution1.[Timestamp]
	FROM
	      [dbo].[tlkpAccounts_PaymentInstitution] PaymentInstitution1
	WHERE PaymentInstitution1.[PaymentInstitutionCode] =  @PaymentInstitutionCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetOneStoredValueAccount
	  @SqlErrorNumber int = 0 OUTPUT
	, @AccountID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single StoredValueAccount by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  StoredValueAccount1.[AccountID]
		, StoredValueAccount1.[PhoneMetaPartnerID]
		, StoredValueAccount1.[MetaPartnerPhoneID]
		, StoredValueAccount1.[Balance]
		, StoredValueAccount1.[CreatedByUserID]
		, StoredValueAccount1.[CreatedDate]
		, StoredValueAccount1.[LastModifiedByUserID]
		, StoredValueAccount1.[LastModifiedDate]
		, StoredValueAccount1.[Timestamp]
		, MetaPartnerPhone1.[PhoneNumber]
		, DebitAccount1.[DebitAccountNumber]
		, DebitAccount1.[IsDefaultDebitAccount]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_StoredValueAccount] StoredValueAccount1
	INNER JOIN [dbo].[tblCustomers_MetaPartnerPhone] MetaPartnerPhone1 ON MetaPartnerPhone1.[MetaPartnerPhoneID]=StoredValueAccount1.[MetaPartnerPhoneID] AND MetaPartnerPhone1.[MetaPartnerID]=StoredValueAccount1.[PhoneMetaPartnerID]
	INNER JOIN [dbo].[tblAccounts_DebitAccount] DebitAccount1 ON DebitAccount1.[AccountID]=StoredValueAccount1.[AccountID]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=DebitAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE StoredValueAccount1.[AccountID] =  @AccountID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_GetOneStoredValueAccountByAccountIDAndPhoneMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @AccountID uniqueidentifier
	, @PhoneMetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single StoredValueAccount by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountID IS NULL OR @PhoneMetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  StoredValueAccount1.[AccountID]
		, StoredValueAccount1.[PhoneMetaPartnerID]
		, StoredValueAccount1.[MetaPartnerPhoneID]
		, StoredValueAccount1.[Balance]
		, StoredValueAccount1.[CreatedByUserID]
		, StoredValueAccount1.[CreatedDate]
		, StoredValueAccount1.[LastModifiedByUserID]
		, StoredValueAccount1.[LastModifiedDate]
		, StoredValueAccount1.[Timestamp]
		, MetaPartnerPhone1.[PhoneNumber]
		, DebitAccount1.[DebitAccountNumber]
		, DebitAccount1.[IsDefaultDebitAccount]
		, Account1.[MetaPartnerID]
		, Account1.[AccountName]
		, Account1.[AccountSubTypeCode]
		, Account1.[CurrencyCode]
		, Account1.[Description]
		, Account1.[IsActive]
		, AccountSubType1.[AccountSubTypeName]
		, Currency1.[CurrencyName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblAccounts_StoredValueAccount] StoredValueAccount1
	INNER JOIN [dbo].[tblCustomers_MetaPartnerPhone] MetaPartnerPhone1 ON MetaPartnerPhone1.[MetaPartnerPhoneID]=StoredValueAccount1.[MetaPartnerPhoneID] AND MetaPartnerPhone1.[MetaPartnerID]=StoredValueAccount1.[PhoneMetaPartnerID]
	INNER JOIN [dbo].[tblAccounts_DebitAccount] DebitAccount1 ON DebitAccount1.[AccountID]=StoredValueAccount1.[AccountID]
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=DebitAccount1.[AccountID]
	INNER JOIN [dbo].[tlkpAccounts_AccountSubType] AccountSubType1 ON AccountSubType1.[AccountSubTypeCode]=Account1.[AccountSubTypeCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Account1.[CurrencyCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Account1.[MetaPartnerID]
	WHERE StoredValueAccount1.[AccountID] =  @AccountID AND StoredValueAccount1.[PhoneMetaPartnerID] =  @PhoneMetaPartnerID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_UpdateOneAccountAttribute
	  @SqlErrorNumber int = 0 OUTPUT
	, @LastModifiedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @BaseAttributeID uniqueidentifier
	, @AttributeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure updates AccountAttribute data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@BaseAttributeID IS NULL OR @AttributeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [BaseAttributeID] FROM [dbo].[tblAccounts_AccountAttribute] WHERE [BaseAttributeID] =  @BaseAttributeID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [BaseAttributeID] FROM [dbo].[tblAccounts_AccountAttribute] WHERE [BaseAttributeID] =  @BaseAttributeID AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	UPDATE
	      [dbo].[tblAccounts_AccountAttribute]
	SET
	     [LastModifiedByUserID] = @LastModifiedByUserID
	   , [LastModifiedDate] = getdate()
	   , [BaseAttributeID] = @BaseAttributeID
	   , [AttributeCode] = @AttributeCode
	WHERE [BaseAttributeID] =  @BaseAttributeID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

	SET  @Timestamp = @@DBTS

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_UpdateOneAccountSubType
	  @SqlErrorNumber int = 0 OUTPUT
	, @LastModifiedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @AccountSubTypeCode int
	, @AccountSubTypeName nvarchar(255)
	, @Description nvarchar(2000) = NULL
	, @IsActive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure updates AccountSubType data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountSubTypeCode IS NULL OR @AccountSubTypeName IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [AccountSubTypeCode] FROM [dbo].[tlkpAccounts_AccountSubType] WHERE [AccountSubTypeCode] =  @AccountSubTypeCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [AccountSubTypeCode] FROM [dbo].[tlkpAccounts_AccountSubType] WHERE [AccountSubTypeCode] =  @AccountSubTypeCode AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	UPDATE
	      [dbo].[tlkpAccounts_AccountSubType]
	SET
	     [LastModifiedByUserID] = @LastModifiedByUserID
	   , [LastModifiedDate] = getdate()
	   , [AccountSubTypeCode] = @AccountSubTypeCode
	   , [AccountSubTypeName] = @AccountSubTypeName
	   , [Description] = @Description
	   , [IsActive] = @IsActive
	WHERE [AccountSubTypeCode] =  @AccountSubTypeCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

	SET  @Timestamp = @@DBTS

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_UpdateOneBankAccount
	  @SqlErrorNumber int = 0 OUTPUT
	, @LastModifiedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @AccountID uniqueidentifier
	, @BankMetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure updates BankAccount data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountID IS NULL OR @BankMetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [AccountID] FROM [dbo].[tblAccounts_BankAccount] WHERE [AccountID] =  @AccountID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [AccountID] FROM [dbo].[tblAccounts_BankAccount] WHERE [AccountID] =  @AccountID AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	UPDATE
	      [dbo].[tblAccounts_BankAccount]
	SET
	     [LastModifiedByUserID] = @LastModifiedByUserID
	   , [LastModifiedDate] = getdate()
	   , [AccountID] = @AccountID
	   , [BankMetaPartnerID] = @BankMetaPartnerID
	WHERE [AccountID] =  @AccountID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

	SET  @Timestamp = @@DBTS

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_UpdateOneBillPayAccount
	  @SqlErrorNumber int = 0 OUTPUT
	, @LastModifiedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @AccountID uniqueidentifier
	, @BusinessAccountNumber nvarchar(100)
	, @StartDate datetime
	, @EndDate datetime
	, @DefaultMinimumPayment money
	, @DefaultMaximumPayment money
	, @BusinessMetaPartnerID uniqueidentifier
	, @HourOfDay int
	, @DayOfWeek int
	, @WeekOfMonth int
	, @MonthOfYear int
	, @NumberOfReminders int
	, @FrequencyCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure updates BillPayAccount data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountID IS NULL OR @BusinessAccountNumber IS NULL OR @StartDate IS NULL OR @EndDate IS NULL OR @DefaultMinimumPayment IS NULL OR @DefaultMaximumPayment IS NULL OR @BusinessMetaPartnerID IS NULL OR @HourOfDay IS NULL OR @DayOfWeek IS NULL OR @WeekOfMonth IS NULL OR @MonthOfYear IS NULL OR @NumberOfReminders IS NULL OR @FrequencyCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [AccountID] FROM [dbo].[tblAccounts_BillPayAccount] WHERE [AccountID] =  @AccountID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [AccountID] FROM [dbo].[tblAccounts_BillPayAccount] WHERE [AccountID] =  @AccountID AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	UPDATE
	      [dbo].[tblAccounts_BillPayAccount]
	SET
	     [LastModifiedByUserID] = @LastModifiedByUserID
	   , [LastModifiedDate] = getdate()
	   , [AccountID] = @AccountID
	   , [BusinessAccountNumber] = @BusinessAccountNumber
	   , [StartDate] = @StartDate
	   , [EndDate] = @EndDate
	   , [DefaultMinimumPayment] = @DefaultMinimumPayment
	   , [DefaultMaximumPayment] = @DefaultMaximumPayment
	   , [BusinessMetaPartnerID] = @BusinessMetaPartnerID
	   , [HourOfDay] = @HourOfDay
	   , [DayOfWeek] = @DayOfWeek
	   , [WeekOfMonth] = @WeekOfMonth
	   , [MonthOfYear] = @MonthOfYear
	   , [NumberOfReminders] = @NumberOfReminders
	   , [FrequencyCode] = @FrequencyCode
	WHERE [AccountID] =  @AccountID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

	SET  @Timestamp = @@DBTS

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_UpdateOneCreditAccount
	  @SqlErrorNumber int = 0 OUTPUT
	, @LastModifiedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @AccountID uniqueidentifier
	, @CreditCardNumber nvarchar(50) = NULL
	, @CreditCardLastFour nvarchar(4)
	, @CreditCardName nvarchar(255) = NULL
	, @ExpirationDate datetime = NULL
	, @CreditCardTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure updates CreditAccount data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountID IS NULL OR @CreditCardLastFour IS NULL OR @CreditCardTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [AccountID] FROM [dbo].[tblAccounts_CreditAccount] WHERE [AccountID] =  @AccountID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [AccountID] FROM [dbo].[tblAccounts_CreditAccount] WHERE [AccountID] =  @AccountID AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	UPDATE
	      [dbo].[tblAccounts_CreditAccount]
	SET
	     [LastModifiedByUserID] = @LastModifiedByUserID
	   , [LastModifiedDate] = getdate()
	   , [AccountID] = @AccountID
	   , [CreditCardNumber] = @CreditCardNumber
	   , [CreditCardLastFour] = @CreditCardLastFour
	   , [CreditCardName] = @CreditCardName
	   , [ExpirationDate] = @ExpirationDate
	   , [CreditCardTypeCode] = @CreditCardTypeCode
	WHERE [AccountID] =  @AccountID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

	SET  @Timestamp = @@DBTS

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_UpdateOneCreditCardType
	  @SqlErrorNumber int = 0 OUTPUT
	, @LastModifiedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @CreditCardTypeCode int
	, @CreditCardTypeName nvarchar(255)
	, @Description nvarchar(2000) = NULL
	, @IsActive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure updates CreditCardType data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@CreditCardTypeCode IS NULL OR @CreditCardTypeName IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [CreditCardTypeCode] FROM [dbo].[tlkpAccounts_CreditCardType] WHERE [CreditCardTypeCode] =  @CreditCardTypeCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [CreditCardTypeCode] FROM [dbo].[tlkpAccounts_CreditCardType] WHERE [CreditCardTypeCode] =  @CreditCardTypeCode AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	UPDATE
	      [dbo].[tlkpAccounts_CreditCardType]
	SET
	     [LastModifiedByUserID] = @LastModifiedByUserID
	   , [LastModifiedDate] = getdate()
	   , [CreditCardTypeCode] = @CreditCardTypeCode
	   , [CreditCardTypeName] = @CreditCardTypeName
	   , [Description] = @Description
	   , [IsActive] = @IsActive
	WHERE [CreditCardTypeCode] =  @CreditCardTypeCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

	SET  @Timestamp = @@DBTS

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_UpdateOneCurrency
	  @SqlErrorNumber int = 0 OUTPUT
	, @LastModifiedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @CurrencyCode int
	, @CurrencyName nvarchar(255)
	, @IsPaymentCurrency bit = 1
	, @Description nvarchar(2000) = NULL
	, @IsActive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure updates Currency data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@CurrencyCode IS NULL OR @CurrencyName IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [CurrencyCode] FROM [dbo].[tlkpAccounts_Currency] WHERE [CurrencyCode] =  @CurrencyCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [CurrencyCode] FROM [dbo].[tlkpAccounts_Currency] WHERE [CurrencyCode] =  @CurrencyCode AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	UPDATE
	      [dbo].[tlkpAccounts_Currency]
	SET
	     [LastModifiedByUserID] = @LastModifiedByUserID
	   , [LastModifiedDate] = getdate()
	   , [CurrencyCode] = @CurrencyCode
	   , [CurrencyName] = @CurrencyName
	   , [IsPaymentCurrency] = @IsPaymentCurrency
	   , [Description] = @Description
	   , [IsActive] = @IsActive
	WHERE [CurrencyCode] =  @CurrencyCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

	SET  @Timestamp = @@DBTS

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_UpdateOneDebitAccount
	  @SqlErrorNumber int = 0 OUTPUT
	, @LastModifiedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @AccountID uniqueidentifier
	, @DebitAccountNumber nvarchar(100)
	, @IsDefaultDebitAccount bit
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure updates DebitAccount data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountID IS NULL OR @DebitAccountNumber IS NULL OR @IsDefaultDebitAccount IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [AccountID] FROM [dbo].[tblAccounts_DebitAccount] WHERE [AccountID] =  @AccountID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [AccountID] FROM [dbo].[tblAccounts_DebitAccount] WHERE [AccountID] =  @AccountID AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	UPDATE
	      [dbo].[tblAccounts_DebitAccount]
	SET
	     [LastModifiedByUserID] = @LastModifiedByUserID
	   , [LastModifiedDate] = getdate()
	   , [AccountID] = @AccountID
	   , [DebitAccountNumber] = @DebitAccountNumber
	   , [IsDefaultDebitAccount] = @IsDefaultDebitAccount
	WHERE [AccountID] =  @AccountID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

	SET  @Timestamp = @@DBTS

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_UpdateOneFrequency
	  @SqlErrorNumber int = 0 OUTPUT
	, @LastModifiedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @FrequencyCode int
	, @FrequencyName nvarchar(255)
	, @Description nvarchar(2000) = NULL
	, @IsActive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure updates Frequency data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@FrequencyCode IS NULL OR @FrequencyName IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [FrequencyCode] FROM [dbo].[tlkpAccounts_Frequency] WHERE [FrequencyCode] =  @FrequencyCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [FrequencyCode] FROM [dbo].[tlkpAccounts_Frequency] WHERE [FrequencyCode] =  @FrequencyCode AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	UPDATE
	      [dbo].[tlkpAccounts_Frequency]
	SET
	     [LastModifiedByUserID] = @LastModifiedByUserID
	   , [LastModifiedDate] = getdate()
	   , [FrequencyCode] = @FrequencyCode
	   , [FrequencyName] = @FrequencyName
	   , [Description] = @Description
	   , [IsActive] = @IsActive
	WHERE [FrequencyCode] =  @FrequencyCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

	SET  @Timestamp = @@DBTS

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_UpdateOneFundAccount
	  @SqlErrorNumber int = 0 OUTPUT
	, @LastModifiedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @AccountID uniqueidentifier
	, @StartDate datetime
	, @EndDate datetime
	, @FundCode nvarchar(100) = NULL
	, @TargetAmount money
	, @MinimumDonationAmount money
	, @MaximumDonationAmount money
	, @DonatedAmount money
	, @IsPublic bit = 0
	, @FundAccountTypeCode int
	, @FrequencyCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure updates FundAccount data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountID IS NULL OR @StartDate IS NULL OR @EndDate IS NULL OR @TargetAmount IS NULL OR @MinimumDonationAmount IS NULL OR @MaximumDonationAmount IS NULL OR @DonatedAmount IS NULL OR @FundAccountTypeCode IS NULL OR @FrequencyCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [AccountID] FROM [dbo].[tblAccounts_FundAccount] WHERE [AccountID] =  @AccountID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [AccountID] FROM [dbo].[tblAccounts_FundAccount] WHERE [AccountID] =  @AccountID AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	UPDATE
	      [dbo].[tblAccounts_FundAccount]
	SET
	     [LastModifiedByUserID] = @LastModifiedByUserID
	   , [LastModifiedDate] = getdate()
	   , [AccountID] = @AccountID
	   , [StartDate] = @StartDate
	   , [EndDate] = @EndDate
	   , [FundCode] = @FundCode
	   , [TargetAmount] = @TargetAmount
	   , [MinimumDonationAmount] = @MinimumDonationAmount
	   , [MaximumDonationAmount] = @MaximumDonationAmount
	   , [DonatedAmount] = @DonatedAmount
	   , [IsPublic] = @IsPublic
	   , [FundAccountTypeCode] = @FundAccountTypeCode
	   , [FrequencyCode] = @FrequencyCode
	WHERE [AccountID] =  @AccountID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

	SET  @Timestamp = @@DBTS

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_UpdateOneFundAccountType
	  @SqlErrorNumber int = 0 OUTPUT
	, @LastModifiedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @FundAccountTypeCode int
	, @FundAccountTypeName nvarchar(255)
	, @Description nvarchar(2000) = NULL
	, @IsActive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure updates FundAccountType data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@FundAccountTypeCode IS NULL OR @FundAccountTypeName IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [FundAccountTypeCode] FROM [dbo].[tlkpAccounts_FundAccountType] WHERE [FundAccountTypeCode] =  @FundAccountTypeCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [FundAccountTypeCode] FROM [dbo].[tlkpAccounts_FundAccountType] WHERE [FundAccountTypeCode] =  @FundAccountTypeCode AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	UPDATE
	      [dbo].[tlkpAccounts_FundAccountType]
	SET
	     [LastModifiedByUserID] = @LastModifiedByUserID
	   , [LastModifiedDate] = getdate()
	   , [FundAccountTypeCode] = @FundAccountTypeCode
	   , [FundAccountTypeName] = @FundAccountTypeName
	   , [Description] = @Description
	   , [IsActive] = @IsActive
	WHERE [FundAccountTypeCode] =  @FundAccountTypeCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

	SET  @Timestamp = @@DBTS

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_UpdateOneLoanAccount
	  @SqlErrorNumber int = 0 OUTPUT
	, @LastModifiedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @AccountID uniqueidentifier
	, @LoanAmount money
	, @OutstandingAmount money
	, @DueDate datetime
	, @LoanRate float
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure updates LoanAccount data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountID IS NULL OR @LoanAmount IS NULL OR @OutstandingAmount IS NULL OR @DueDate IS NULL OR @LoanRate IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [AccountID] FROM [dbo].[tblAccounts_LoanAccount] WHERE [AccountID] =  @AccountID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [AccountID] FROM [dbo].[tblAccounts_LoanAccount] WHERE [AccountID] =  @AccountID AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	UPDATE
	      [dbo].[tblAccounts_LoanAccount]
	SET
	     [LastModifiedByUserID] = @LastModifiedByUserID
	   , [LastModifiedDate] = getdate()
	   , [AccountID] = @AccountID
	   , [LoanAmount] = @LoanAmount
	   , [OutstandingAmount] = @OutstandingAmount
	   , [DueDate] = @DueDate
	   , [LoanRate] = @LoanRate
	WHERE [AccountID] =  @AccountID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

	SET  @Timestamp = @@DBTS

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_UpdateOneLoanToMetaPartner
	  @SqlErrorNumber int = 0 OUTPUT
	, @LastModifiedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @AccountID uniqueidentifier
	, @MetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure updates LoanToMetaPartner data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountID IS NULL OR @MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [AccountID], [MetaPartnerID] FROM [dbo].[trelAccounts_LoanToMetaPartner] WHERE [AccountID] =  @AccountID AND [MetaPartnerID] =  @MetaPartnerID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [AccountID], [MetaPartnerID] FROM [dbo].[trelAccounts_LoanToMetaPartner] WHERE [AccountID] =  @AccountID AND [MetaPartnerID] =  @MetaPartnerID AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	UPDATE
	      [dbo].[trelAccounts_LoanToMetaPartner]
	SET
	     [LastModifiedByUserID] = @LastModifiedByUserID
	   , [LastModifiedDate] = getdate()
	   , [AccountID] = @AccountID
	   , [MetaPartnerID] = @MetaPartnerID
	WHERE [AccountID] =  @AccountID AND [MetaPartnerID] =  @MetaPartnerID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

	SET  @Timestamp = @@DBTS

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_UpdateOneMetaTransferAccount
	  @SqlErrorNumber int = 0 OUTPUT
	, @LastModifiedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @AccountID uniqueidentifier
	, @MetaTransferAccountNumber nvarchar(100)
	, @PaymentInstitutionCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure updates MetaTransferAccount data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountID IS NULL OR @MetaTransferAccountNumber IS NULL OR @PaymentInstitutionCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [AccountID] FROM [dbo].[tblAccounts_MetaTransferAccount] WHERE [AccountID] =  @AccountID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [AccountID] FROM [dbo].[tblAccounts_MetaTransferAccount] WHERE [AccountID] =  @AccountID AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	UPDATE
	      [dbo].[tblAccounts_MetaTransferAccount]
	SET
	     [LastModifiedByUserID] = @LastModifiedByUserID
	   , [LastModifiedDate] = getdate()
	   , [AccountID] = @AccountID
	   , [MetaTransferAccountNumber] = @MetaTransferAccountNumber
	   , [PaymentInstitutionCode] = @PaymentInstitutionCode
	WHERE [AccountID] =  @AccountID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

	SET  @Timestamp = @@DBTS

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_UpdateOneParticipatingPartner
	  @SqlErrorNumber int = 0 OUTPUT
	, @LastModifiedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @AccountID uniqueidentifier
	, @MetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure updates ParticipatingPartner data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountID IS NULL OR @MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [AccountID], [MetaPartnerID] FROM [dbo].[trelAccounts_ParticipatingPartner] WHERE [AccountID] =  @AccountID AND [MetaPartnerID] =  @MetaPartnerID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [AccountID], [MetaPartnerID] FROM [dbo].[trelAccounts_ParticipatingPartner] WHERE [AccountID] =  @AccountID AND [MetaPartnerID] =  @MetaPartnerID AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	UPDATE
	      [dbo].[trelAccounts_ParticipatingPartner]
	SET
	     [LastModifiedByUserID] = @LastModifiedByUserID
	   , [LastModifiedDate] = getdate()
	   , [AccountID] = @AccountID
	   , [MetaPartnerID] = @MetaPartnerID
	WHERE [AccountID] =  @AccountID AND [MetaPartnerID] =  @MetaPartnerID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

	SET  @Timestamp = @@DBTS

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_UpdateOnePaymentInstitution
	  @SqlErrorNumber int = 0 OUTPUT
	, @LastModifiedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @PaymentInstitutionCode int
	, @PaymentInstitutionName nvarchar(255)
	, @Description nvarchar(2000) = NULL
	, @IsActive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure updates PaymentInstitution data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@PaymentInstitutionCode IS NULL OR @PaymentInstitutionName IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [PaymentInstitutionCode] FROM [dbo].[tlkpAccounts_PaymentInstitution] WHERE [PaymentInstitutionCode] =  @PaymentInstitutionCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [PaymentInstitutionCode] FROM [dbo].[tlkpAccounts_PaymentInstitution] WHERE [PaymentInstitutionCode] =  @PaymentInstitutionCode AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	UPDATE
	      [dbo].[tlkpAccounts_PaymentInstitution]
	SET
	     [LastModifiedByUserID] = @LastModifiedByUserID
	   , [LastModifiedDate] = getdate()
	   , [PaymentInstitutionCode] = @PaymentInstitutionCode
	   , [PaymentInstitutionName] = @PaymentInstitutionName
	   , [Description] = @Description
	   , [IsActive] = @IsActive
	WHERE [PaymentInstitutionCode] =  @PaymentInstitutionCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

	SET  @Timestamp = @@DBTS

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_UpdateOneStoredValueAccount
	  @SqlErrorNumber int = 0 OUTPUT
	, @LastModifiedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @AccountID uniqueidentifier
	, @PhoneMetaPartnerID uniqueidentifier
	, @MetaPartnerPhoneID uniqueidentifier
	, @Balance money = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure updates StoredValueAccount data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountID IS NULL OR @PhoneMetaPartnerID IS NULL OR @MetaPartnerPhoneID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [AccountID] FROM [dbo].[tblAccounts_StoredValueAccount] WHERE [AccountID] =  @AccountID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [AccountID] FROM [dbo].[tblAccounts_StoredValueAccount] WHERE [AccountID] =  @AccountID AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	UPDATE
	      [dbo].[tblAccounts_StoredValueAccount]
	SET
	     [LastModifiedByUserID] = @LastModifiedByUserID
	   , [LastModifiedDate] = getdate()
	   , [AccountID] = @AccountID
	   , [PhoneMetaPartnerID] = @PhoneMetaPartnerID
	   , [MetaPartnerPhoneID] = @MetaPartnerPhoneID
	   , [Balance] = @Balance
	WHERE [AccountID] =  @AccountID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

	SET  @Timestamp = @@DBTS

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_UpsertOneAccount
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @LastModifiedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @AccountID uniqueidentifier = NULL OUTPUT
	, @MetaPartnerID uniqueidentifier
	, @AccountName nvarchar(255)
	, @AccountSubTypeCode int
	, @CurrencyCode int
	, @Description nvarchar(2000) = NULL
	, @IsActive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure inserts or updates Account data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@MetaPartnerID IS NULL OR @AccountName IS NULL OR @AccountSubTypeCode IS NULL OR @CurrencyCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [AccountID] FROM [dbo].[tblAccounts_Account] WHERE [AccountID] =  @AccountID AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
IF NOT EXISTS (SELECT [AccountID] FROM [dbo].[tblAccounts_Account] WHERE [AccountID] =  @AccountID)
BEGIN
	IF @AccountID  IS NULL
	BEGIN
		SET @AccountID  = NEWID ()
	END
	INSERT
	      [dbo].[tblAccounts_Account]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [AccountID]
	   , [MetaPartnerID]
	   , [AccountName]
	   , [AccountSubTypeCode]
	   , [CurrencyCode]
	   , [Description]
	   , [IsActive]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @AccountID
	   , @MetaPartnerID
	   , @AccountName
	   , @AccountSubTypeCode
	   , @CurrencyCode
	   , @Description
	   , @IsActive
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
	END
ELSE
BEGIN
	UPDATE
	      [dbo].[tblAccounts_Account]
	SET
	     [LastModifiedByUserID] = @LastModifiedByUserID
	   , [LastModifiedDate] = getdate()
	   , [AccountID] = @AccountID
	   , [MetaPartnerID] = @MetaPartnerID
	   , [AccountName] = @AccountName
	   , [AccountSubTypeCode] = @AccountSubTypeCode
	   , [CurrencyCode] = @CurrencyCode
	   , [Description] = @Description
	   , [IsActive] = @IsActive
	WHERE [AccountID] =  @AccountID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

	SET  @Timestamp = @@DBTS

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_UpsertOneAccountAttributeValue
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @LastModifiedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @AccountAttributeValueID uniqueidentifier = NULL OUTPUT
	, @AccountID uniqueidentifier
	, @BaseAttributeID uniqueidentifier
	, @ParameterValue nvarchar(255) = NULL
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure inserts or updates AccountAttributeValue data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccountID IS NULL OR @BaseAttributeID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [AccountAttributeValueID] FROM [dbo].[tblAccounts_AccountAttributeValue] WHERE [AccountAttributeValueID] =  @AccountAttributeValueID AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
IF NOT EXISTS (SELECT [AccountAttributeValueID] FROM [dbo].[tblAccounts_AccountAttributeValue] WHERE [AccountAttributeValueID] =  @AccountAttributeValueID)
BEGIN
	IF @AccountAttributeValueID  IS NULL
	BEGIN
		SET @AccountAttributeValueID  = NEWID ()
	END
	INSERT
	      [dbo].[tblAccounts_AccountAttributeValue]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [AccountAttributeValueID]
	   , [AccountID]
	   , [BaseAttributeID]
	   , [ParameterValue]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @AccountAttributeValueID
	   , @AccountID
	   , @BaseAttributeID
	   , @ParameterValue
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
	END
ELSE
BEGIN
	UPDATE
	      [dbo].[tblAccounts_AccountAttributeValue]
	SET
	     [LastModifiedByUserID] = @LastModifiedByUserID
	   , [LastModifiedDate] = getdate()
	   , [AccountAttributeValueID] = @AccountAttributeValueID
	   , [AccountID] = @AccountID
	   , [BaseAttributeID] = @BaseAttributeID
	   , [ParameterValue] = @ParameterValue
	WHERE [AccountAttributeValueID] =  @AccountAttributeValueID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

	SET  @Timestamp = @@DBTS

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spAccounts_UpsertOneCurrencyConversion
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @LastModifiedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @CurrencyConversionID uniqueidentifier = NULL OUTPUT
	, @ConvertFromCurrencyCode int
	, @ConvertToCurrencyCode int
	, @MetaPartnerID uniqueidentifier
	, @ConversionRate float
	, @IsActive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure inserts or updates CurrencyConversion data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@ConvertFromCurrencyCode IS NULL OR @ConvertToCurrencyCode IS NULL OR @MetaPartnerID IS NULL OR @ConversionRate IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [CurrencyConversionID] FROM [dbo].[tblAccounts_CurrencyConversion] WHERE [CurrencyConversionID] =  @CurrencyConversionID AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
IF NOT EXISTS (SELECT [CurrencyConversionID] FROM [dbo].[tblAccounts_CurrencyConversion] WHERE [CurrencyConversionID] =  @CurrencyConversionID)
BEGIN
	IF @CurrencyConversionID  IS NULL
	BEGIN
		SET @CurrencyConversionID  = NEWID ()
	END
	INSERT
	      [dbo].[tblAccounts_CurrencyConversion]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [CurrencyConversionID]
	   , [ConvertFromCurrencyCode]
	   , [ConvertToCurrencyCode]
	   , [MetaPartnerID]
	   , [ConversionRate]
	   , [IsActive]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @CurrencyConversionID
	   , @ConvertFromCurrencyCode
	   , @ConvertToCurrencyCode
	   , @MetaPartnerID
	   , @ConversionRate
	   , @IsActive
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
	END
ELSE
BEGIN
	UPDATE
	      [dbo].[tblAccounts_CurrencyConversion]
	SET
	     [LastModifiedByUserID] = @LastModifiedByUserID
	   , [LastModifiedDate] = getdate()
	   , [CurrencyConversionID] = @CurrencyConversionID
	   , [ConvertFromCurrencyCode] = @ConvertFromCurrencyCode
	   , [ConvertToCurrencyCode] = @ConvertToCurrencyCode
	   , [MetaPartnerID] = @MetaPartnerID
	   , [ConversionRate] = @ConversionRate
	   , [IsActive] = @IsActive
	WHERE [CurrencyConversionID] =  @CurrencyConversionID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

	SET  @Timestamp = @@DBTS

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCore_AddOneAttributeType
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @AttributeTypeCode int
	, @AttributeTypeName nvarchar(100)
	, @Description nvarchar(1000) = NULL
	, @IsActive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure inserts AttributeType data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AttributeTypeCode IS NULL OR @AttributeTypeName IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF EXISTS (SELECT [AttributeTypeCode] FROM [dbo].[tlkpCore_AttributeType] WHERE [AttributeTypeCode] =  @AttributeTypeCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	INSERT
	      [dbo].[tlkpCore_AttributeType]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [AttributeTypeCode]
	   , [AttributeTypeName]
	   , [Description]
	   , [IsActive]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @AttributeTypeCode
	   , @AttributeTypeName
	   , @Description
	   , @IsActive
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCore_AddOneDataType
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @DataTypeCode int
	, @DataTypeName nvarchar(100)
	, @Description nvarchar(1000) = NULL
	, @IsActive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure inserts DataType data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@DataTypeCode IS NULL OR @DataTypeName IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF EXISTS (SELECT [DataTypeCode] FROM [dbo].[tlkpCore_DataType] WHERE [DataTypeCode] =  @DataTypeCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	INSERT
	      [dbo].[tlkpCore_DataType]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [DataTypeCode]
	   , [DataTypeName]
	   , [Description]
	   , [IsActive]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @DataTypeCode
	   , @DataTypeName
	   , @Description
	   , @IsActive
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCore_AddOneDebugAttribute
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @BaseAttributeID uniqueidentifier
	, @AttributeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure inserts DebugAttribute data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@BaseAttributeID IS NULL OR @AttributeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF EXISTS (SELECT [BaseAttributeID] FROM [dbo].[tblCore_DebugAttribute] WHERE [BaseAttributeID] =  @BaseAttributeID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	INSERT
	      [dbo].[tblCore_DebugAttribute]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [BaseAttributeID]
	   , [AttributeCode]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @BaseAttributeID
	   , @AttributeCode
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCore_AddOneError
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @ErrorNumber int
	, @ErrorTitle nvarchar(100)
	, @ErrorMessage nvarchar(1000) = NULL
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure inserts Error data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@ErrorNumber IS NULL OR @ErrorTitle IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF EXISTS (SELECT [ErrorNumber] FROM [dbo].[tlkpCore_Error] WHERE [ErrorNumber] =  @ErrorNumber)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	INSERT
	      [dbo].[tlkpCore_Error]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [ErrorNumber]
	   , [ErrorTitle]
	   , [ErrorMessage]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @ErrorNumber
	   , @ErrorTitle
	   , @ErrorMessage
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCore_AddOneEventType
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @EventTypeCode int
	, @EventTypeName nvarchar(100)
	, @Description nvarchar(1000) = NULL
	, @IsActive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure inserts EventType data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@EventTypeCode IS NULL OR @EventTypeName IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF EXISTS (SELECT [EventTypeCode] FROM [dbo].[tlkpCore_EventType] WHERE [EventTypeCode] =  @EventTypeCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	INSERT
	      [dbo].[tlkpCore_EventType]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [EventTypeCode]
	   , [EventTypeName]
	   , [Description]
	   , [IsActive]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @EventTypeCode
	   , @EventTypeName
	   , @Description
	   , @IsActive
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCore_AddOneSeverityLevel
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @SeverityLevelCode int
	, @SeverityLevelName nvarchar(255)
	, @Description nvarchar(1000) = NULL
	, @IsActive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure inserts SeverityLevel data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@SeverityLevelCode IS NULL OR @SeverityLevelName IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF EXISTS (SELECT [SeverityLevelCode] FROM [dbo].[tlkpCore_SeverityLevel] WHERE [SeverityLevelCode] =  @SeverityLevelCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	INSERT
	      [dbo].[tlkpCore_SeverityLevel]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [SeverityLevelCode]
	   , [SeverityLevelName]
	   , [Description]
	   , [IsActive]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @SeverityLevelCode
	   , @SeverityLevelName
	   , @Description
	   , @IsActive
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCore_DeleteAllBaseAttributeDataByAttributeTypeCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @AttributeTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all BaseAttribute data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AttributeTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblCore_BaseAttribute]
	WHERE [AttributeTypeCode] =  @AttributeTypeCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCore_DeleteAllBaseAttributeDataByDataTypeCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @DataTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all BaseAttribute data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@DataTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblCore_BaseAttribute]
	WHERE [DataTypeCode] =  @DataTypeCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCore_DeleteAllDebugAttributeDataByAttributeTypeCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @AttributeTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all DebugAttribute data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AttributeTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblCore_DebugAttribute]
	WHERE [BaseAttributeID] IN (SELECT [BaseAttributeID] FROM [dbo].[tblCore_BaseAttribute] WHERE [AttributeTypeCode] =  @AttributeTypeCode)

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCore_DeleteAllDebugAttributeDataByBaseAttributeID
	  @SqlErrorNumber int = 0 OUTPUT
	, @BaseAttributeID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all DebugAttribute data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@BaseAttributeID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblCore_DebugAttribute]
	WHERE [BaseAttributeID] =  @BaseAttributeID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCore_DeleteAllDebugAttributeDataByDataTypeCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @DataTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all DebugAttribute data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@DataTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblCore_DebugAttribute]
	WHERE [BaseAttributeID] IN (SELECT [BaseAttributeID] FROM [dbo].[tblCore_BaseAttribute] WHERE [DataTypeCode] =  @DataTypeCode)

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCore_DeleteOneAttributeType
	  @SqlErrorNumber int = 0 OUTPUT
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @AttributeTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes AttributeType data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AttributeTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [AttributeTypeCode] FROM [dbo].[tlkpCore_AttributeType] WHERE [AttributeTypeCode] =  @AttributeTypeCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [AttributeTypeCode] FROM [dbo].[tlkpCore_AttributeType] WHERE [AttributeTypeCode] =  @AttributeTypeCode AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tlkpCore_AttributeType]
	WHERE [AttributeTypeCode] =  @AttributeTypeCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCore_DeleteOneBaseAttribute
	  @SqlErrorNumber int = 0 OUTPUT
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @BaseAttributeID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes BaseAttribute data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@BaseAttributeID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [BaseAttributeID] FROM [dbo].[tblCore_BaseAttribute] WHERE [BaseAttributeID] =  @BaseAttributeID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [BaseAttributeID] FROM [dbo].[tblCore_BaseAttribute] WHERE [BaseAttributeID] =  @BaseAttributeID AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblCore_BaseAttribute]
	WHERE [BaseAttributeID] =  @BaseAttributeID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCore_DeleteOneDataType
	  @SqlErrorNumber int = 0 OUTPUT
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @DataTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes DataType data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@DataTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [DataTypeCode] FROM [dbo].[tlkpCore_DataType] WHERE [DataTypeCode] =  @DataTypeCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [DataTypeCode] FROM [dbo].[tlkpCore_DataType] WHERE [DataTypeCode] =  @DataTypeCode AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tlkpCore_DataType]
	WHERE [DataTypeCode] =  @DataTypeCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCore_DeleteOneDebugAttribute
	  @SqlErrorNumber int = 0 OUTPUT
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @BaseAttributeID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes DebugAttribute data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@BaseAttributeID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [BaseAttributeID] FROM [dbo].[tblCore_DebugAttribute] WHERE [BaseAttributeID] =  @BaseAttributeID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [BaseAttributeID] FROM [dbo].[tblCore_DebugAttribute] WHERE [BaseAttributeID] =  @BaseAttributeID AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblCore_DebugAttribute]
	WHERE [BaseAttributeID] =  @BaseAttributeID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCore_DeleteOneError
	  @SqlErrorNumber int = 0 OUTPUT
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @ErrorNumber int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes Error data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@ErrorNumber IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [ErrorNumber] FROM [dbo].[tlkpCore_Error] WHERE [ErrorNumber] =  @ErrorNumber)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [ErrorNumber] FROM [dbo].[tlkpCore_Error] WHERE [ErrorNumber] =  @ErrorNumber AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tlkpCore_Error]
	WHERE [ErrorNumber] =  @ErrorNumber

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCore_DeleteOneEventType
	  @SqlErrorNumber int = 0 OUTPUT
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @EventTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes EventType data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@EventTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [EventTypeCode] FROM [dbo].[tlkpCore_EventType] WHERE [EventTypeCode] =  @EventTypeCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [EventTypeCode] FROM [dbo].[tlkpCore_EventType] WHERE [EventTypeCode] =  @EventTypeCode AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tlkpCore_EventType]
	WHERE [EventTypeCode] =  @EventTypeCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCore_DeleteOneSeverityLevel
	  @SqlErrorNumber int = 0 OUTPUT
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @SeverityLevelCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes SeverityLevel data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@SeverityLevelCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [SeverityLevelCode] FROM [dbo].[tlkpCore_SeverityLevel] WHERE [SeverityLevelCode] =  @SeverityLevelCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [SeverityLevelCode] FROM [dbo].[tlkpCore_SeverityLevel] WHERE [SeverityLevelCode] =  @SeverityLevelCode AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tlkpCore_SeverityLevel]
	WHERE [SeverityLevelCode] =  @SeverityLevelCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCore_GetAllAttributeTypeData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'AttributeTypeCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all AttributeType data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='AttributeTypeCode'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  AttributeType1.[AttributeTypeCode]
		, AttributeType1.[AttributeTypeName]
		, AttributeType1.[Description]
		, AttributeType1.[IsActive]
		, AttributeType1.[CreatedByUserID]
		, AttributeType1.[CreatedDate]
		, AttributeType1.[LastModifiedByUserID]
		, AttributeType1.[LastModifiedDate]
		, AttributeType1.[Timestamp]
	FROM
	      [dbo].[tlkpCore_AttributeType] AttributeType1
	WHERE 
		AttributeType1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN AttributeType1.[IsActive] ELSE 1 END

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  AttributeType1.[AttributeTypeCode]
		, AttributeType1.[AttributeTypeName]
		, AttributeType1.[Description]
		, AttributeType1.[IsActive]
		, AttributeType1.[CreatedByUserID]
		, AttributeType1.[CreatedDate]
		, AttributeType1.[LastModifiedByUserID]
		, AttributeType1.[LastModifiedDate]
		, AttributeType1.[Timestamp]
	FROM
	      [dbo].[tlkpCore_AttributeType] AttributeType1
	WHERE 
		AttributeType1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN AttributeType1.[IsActive] ELSE 1 END

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeTypeCode' THEN AttributeType1.[AttributeTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeTypeCode' THEN AttributeType1.[AttributeTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeTypeName' THEN AttributeType1.[AttributeTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeTypeName' THEN AttributeType1.[AttributeTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN AttributeType1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN AttributeType1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN AttributeType1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN AttributeType1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN AttributeType1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN AttributeType1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN AttributeType1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN AttributeType1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN AttributeType1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN AttributeType1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN AttributeType1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN AttributeType1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN AttributeType1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN AttributeType1.[Timestamp] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCore_GetAllBaseAttributeData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'BaseAttributeID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all BaseAttribute data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='BaseAttributeID'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  BaseAttribute1.[BaseAttributeID]
		, BaseAttribute1.[AttributeName]
		, BaseAttribute1.[AttributeTypeCode]
		, BaseAttribute1.[DataTypeCode]
		, BaseAttribute1.[Description]
		, BaseAttribute1.[IsActive]
		, BaseAttribute1.[CreatedByUserID]
		, BaseAttribute1.[CreatedDate]
		, BaseAttribute1.[LastModifiedByUserID]
		, BaseAttribute1.[LastModifiedDate]
		, BaseAttribute1.[Timestamp]
		, AttributeType1.[AttributeTypeName]
		, DataType1.[DataTypeName]
	FROM
	      [dbo].[tblCore_BaseAttribute] BaseAttribute1
	INNER JOIN [dbo].[tlkpCore_AttributeType] AttributeType1 ON AttributeType1.[AttributeTypeCode]=BaseAttribute1.[AttributeTypeCode]
	INNER JOIN [dbo].[tlkpCore_DataType] DataType1 ON DataType1.[DataTypeCode]=BaseAttribute1.[DataTypeCode]
	WHERE 
		BaseAttribute1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN BaseAttribute1.[IsActive] ELSE 1 END

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  BaseAttribute1.[BaseAttributeID]
		, BaseAttribute1.[AttributeName]
		, BaseAttribute1.[AttributeTypeCode]
		, BaseAttribute1.[DataTypeCode]
		, BaseAttribute1.[Description]
		, BaseAttribute1.[IsActive]
		, BaseAttribute1.[CreatedByUserID]
		, BaseAttribute1.[CreatedDate]
		, BaseAttribute1.[LastModifiedByUserID]
		, BaseAttribute1.[LastModifiedDate]
		, BaseAttribute1.[Timestamp]
		, AttributeType1.[AttributeTypeName]
		, DataType1.[DataTypeName]
	FROM
	      [dbo].[tblCore_BaseAttribute] BaseAttribute1
	INNER JOIN [dbo].[tlkpCore_AttributeType] AttributeType1 ON AttributeType1.[AttributeTypeCode]=BaseAttribute1.[AttributeTypeCode]
	INNER JOIN [dbo].[tlkpCore_DataType] DataType1 ON DataType1.[DataTypeCode]=BaseAttribute1.[DataTypeCode]
	WHERE 
		BaseAttribute1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN BaseAttribute1.[IsActive] ELSE 1 END

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BaseAttributeID' THEN BaseAttribute1.[BaseAttributeID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BaseAttributeID' THEN BaseAttribute1.[BaseAttributeID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeName' THEN BaseAttribute1.[AttributeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeName' THEN BaseAttribute1.[AttributeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeTypeCode' THEN BaseAttribute1.[AttributeTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeTypeCode' THEN BaseAttribute1.[AttributeTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DataTypeCode' THEN BaseAttribute1.[DataTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DataTypeCode' THEN BaseAttribute1.[DataTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN BaseAttribute1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN BaseAttribute1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN BaseAttribute1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN BaseAttribute1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN BaseAttribute1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN BaseAttribute1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN BaseAttribute1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN BaseAttribute1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN BaseAttribute1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN BaseAttribute1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN BaseAttribute1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN BaseAttribute1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN BaseAttribute1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN BaseAttribute1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeTypeName' THEN AttributeType1.[AttributeTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeTypeName' THEN AttributeType1.[AttributeTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DataTypeName' THEN DataType1.[DataTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DataTypeName' THEN DataType1.[DataTypeName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCore_GetAllBaseAttributeDataByAttributeTypeCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'AttributeTypeCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @AttributeTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all BaseAttribute data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='AttributeTypeCode'

/*
** parameter validation
*/
IF (@AttributeTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  BaseAttribute1.[BaseAttributeID]
		, BaseAttribute1.[AttributeName]
		, BaseAttribute1.[AttributeTypeCode]
		, BaseAttribute1.[DataTypeCode]
		, BaseAttribute1.[Description]
		, BaseAttribute1.[IsActive]
		, BaseAttribute1.[CreatedByUserID]
		, BaseAttribute1.[CreatedDate]
		, BaseAttribute1.[LastModifiedByUserID]
		, BaseAttribute1.[LastModifiedDate]
		, BaseAttribute1.[Timestamp]
		, AttributeType1.[AttributeTypeName]
		, DataType1.[DataTypeName]
	FROM
	      [dbo].[tblCore_BaseAttribute] BaseAttribute1
	INNER JOIN [dbo].[tlkpCore_AttributeType] AttributeType1 ON AttributeType1.[AttributeTypeCode]=BaseAttribute1.[AttributeTypeCode]
	INNER JOIN [dbo].[tlkpCore_DataType] DataType1 ON DataType1.[DataTypeCode]=BaseAttribute1.[DataTypeCode]
	WHERE 
		BaseAttribute1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN BaseAttribute1.[IsActive] ELSE 1 END
		AND BaseAttribute1.[AttributeTypeCode] = @AttributeTypeCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  BaseAttribute1.[BaseAttributeID]
		, BaseAttribute1.[AttributeName]
		, BaseAttribute1.[AttributeTypeCode]
		, BaseAttribute1.[DataTypeCode]
		, BaseAttribute1.[Description]
		, BaseAttribute1.[IsActive]
		, BaseAttribute1.[CreatedByUserID]
		, BaseAttribute1.[CreatedDate]
		, BaseAttribute1.[LastModifiedByUserID]
		, BaseAttribute1.[LastModifiedDate]
		, BaseAttribute1.[Timestamp]
		, AttributeType1.[AttributeTypeName]
		, DataType1.[DataTypeName]
	FROM
	      [dbo].[tblCore_BaseAttribute] BaseAttribute1
	INNER JOIN [dbo].[tlkpCore_AttributeType] AttributeType1 ON AttributeType1.[AttributeTypeCode]=BaseAttribute1.[AttributeTypeCode]
	INNER JOIN [dbo].[tlkpCore_DataType] DataType1 ON DataType1.[DataTypeCode]=BaseAttribute1.[DataTypeCode]
	WHERE 
		BaseAttribute1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN BaseAttribute1.[IsActive] ELSE 1 END
		AND BaseAttribute1.[AttributeTypeCode] = @AttributeTypeCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BaseAttributeID' THEN BaseAttribute1.[BaseAttributeID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BaseAttributeID' THEN BaseAttribute1.[BaseAttributeID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeName' THEN BaseAttribute1.[AttributeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeName' THEN BaseAttribute1.[AttributeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeTypeCode' THEN BaseAttribute1.[AttributeTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeTypeCode' THEN BaseAttribute1.[AttributeTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DataTypeCode' THEN BaseAttribute1.[DataTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DataTypeCode' THEN BaseAttribute1.[DataTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN BaseAttribute1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN BaseAttribute1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN BaseAttribute1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN BaseAttribute1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN BaseAttribute1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN BaseAttribute1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN BaseAttribute1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN BaseAttribute1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN BaseAttribute1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN BaseAttribute1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN BaseAttribute1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN BaseAttribute1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN BaseAttribute1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN BaseAttribute1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeTypeName' THEN AttributeType1.[AttributeTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeTypeName' THEN AttributeType1.[AttributeTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DataTypeName' THEN DataType1.[DataTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DataTypeName' THEN DataType1.[DataTypeName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCore_GetAllBaseAttributeDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'AttributeName'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @AttributeName nvarchar(100)
	, @AttributeTypeCode int
	, @DataTypeCode int
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all BaseAttribute data by criteria.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='AttributeName'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  BaseAttribute1.[BaseAttributeID]
		, BaseAttribute1.[AttributeName]
		, BaseAttribute1.[AttributeTypeCode]
		, BaseAttribute1.[DataTypeCode]
		, BaseAttribute1.[Description]
		, BaseAttribute1.[IsActive]
		, BaseAttribute1.[CreatedByUserID]
		, BaseAttribute1.[CreatedDate]
		, BaseAttribute1.[LastModifiedByUserID]
		, BaseAttribute1.[LastModifiedDate]
		, BaseAttribute1.[Timestamp]
		, AttributeType1.[AttributeTypeName]
		, DataType1.[DataTypeName]
	FROM
	      [dbo].[tblCore_BaseAttribute] BaseAttribute1
	INNER JOIN [dbo].[tlkpCore_AttributeType] AttributeType1 ON AttributeType1.[AttributeTypeCode]=BaseAttribute1.[AttributeTypeCode]
	INNER JOIN [dbo].[tlkpCore_DataType] DataType1 ON DataType1.[DataTypeCode]=BaseAttribute1.[DataTypeCode]
	WHERE 
		BaseAttribute1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN BaseAttribute1.[IsActive] ELSE 1 END
		AND (@AttributeName IS NULL OR BaseAttribute1.[AttributeName] like '%' + @AttributeName + '%')
		AND (@AttributeTypeCode IS NULL OR BaseAttribute1.[AttributeTypeCode] = @AttributeTypeCode)
		AND (@DataTypeCode IS NULL OR BaseAttribute1.[DataTypeCode] = @DataTypeCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (BaseAttribute1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (BaseAttribute1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  BaseAttribute1.[BaseAttributeID]
		, BaseAttribute1.[AttributeName]
		, BaseAttribute1.[AttributeTypeCode]
		, BaseAttribute1.[DataTypeCode]
		, BaseAttribute1.[Description]
		, BaseAttribute1.[IsActive]
		, BaseAttribute1.[CreatedByUserID]
		, BaseAttribute1.[CreatedDate]
		, BaseAttribute1.[LastModifiedByUserID]
		, BaseAttribute1.[LastModifiedDate]
		, BaseAttribute1.[Timestamp]
		, AttributeType1.[AttributeTypeName]
		, DataType1.[DataTypeName]
	FROM
	      [dbo].[tblCore_BaseAttribute] BaseAttribute1
	INNER JOIN [dbo].[tlkpCore_AttributeType] AttributeType1 ON AttributeType1.[AttributeTypeCode]=BaseAttribute1.[AttributeTypeCode]
	INNER JOIN [dbo].[tlkpCore_DataType] DataType1 ON DataType1.[DataTypeCode]=BaseAttribute1.[DataTypeCode]
	WHERE 
		BaseAttribute1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN BaseAttribute1.[IsActive] ELSE 1 END
		AND (@AttributeName IS NULL OR BaseAttribute1.[AttributeName] like '%' + @AttributeName + '%')
		AND (@AttributeTypeCode IS NULL OR BaseAttribute1.[AttributeTypeCode] = @AttributeTypeCode)
		AND (@DataTypeCode IS NULL OR BaseAttribute1.[DataTypeCode] = @DataTypeCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (BaseAttribute1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (BaseAttribute1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BaseAttributeID' THEN BaseAttribute1.[BaseAttributeID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BaseAttributeID' THEN BaseAttribute1.[BaseAttributeID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeName' THEN BaseAttribute1.[AttributeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeName' THEN BaseAttribute1.[AttributeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeTypeCode' THEN BaseAttribute1.[AttributeTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeTypeCode' THEN BaseAttribute1.[AttributeTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DataTypeCode' THEN BaseAttribute1.[DataTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DataTypeCode' THEN BaseAttribute1.[DataTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN BaseAttribute1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN BaseAttribute1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN BaseAttribute1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN BaseAttribute1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN BaseAttribute1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN BaseAttribute1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN BaseAttribute1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN BaseAttribute1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN BaseAttribute1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN BaseAttribute1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN BaseAttribute1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN BaseAttribute1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN BaseAttribute1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN BaseAttribute1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeTypeName' THEN AttributeType1.[AttributeTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeTypeName' THEN AttributeType1.[AttributeTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DataTypeName' THEN DataType1.[DataTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DataTypeName' THEN DataType1.[DataTypeName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCore_GetAllBaseAttributeDataByDataTypeCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'DataTypeCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @DataTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all BaseAttribute data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='DataTypeCode'

/*
** parameter validation
*/
IF (@DataTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  BaseAttribute1.[BaseAttributeID]
		, BaseAttribute1.[AttributeName]
		, BaseAttribute1.[AttributeTypeCode]
		, BaseAttribute1.[DataTypeCode]
		, BaseAttribute1.[Description]
		, BaseAttribute1.[IsActive]
		, BaseAttribute1.[CreatedByUserID]
		, BaseAttribute1.[CreatedDate]
		, BaseAttribute1.[LastModifiedByUserID]
		, BaseAttribute1.[LastModifiedDate]
		, BaseAttribute1.[Timestamp]
		, AttributeType1.[AttributeTypeName]
		, DataType1.[DataTypeName]
	FROM
	      [dbo].[tblCore_BaseAttribute] BaseAttribute1
	INNER JOIN [dbo].[tlkpCore_AttributeType] AttributeType1 ON AttributeType1.[AttributeTypeCode]=BaseAttribute1.[AttributeTypeCode]
	INNER JOIN [dbo].[tlkpCore_DataType] DataType1 ON DataType1.[DataTypeCode]=BaseAttribute1.[DataTypeCode]
	WHERE 
		BaseAttribute1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN BaseAttribute1.[IsActive] ELSE 1 END
		AND BaseAttribute1.[DataTypeCode] = @DataTypeCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  BaseAttribute1.[BaseAttributeID]
		, BaseAttribute1.[AttributeName]
		, BaseAttribute1.[AttributeTypeCode]
		, BaseAttribute1.[DataTypeCode]
		, BaseAttribute1.[Description]
		, BaseAttribute1.[IsActive]
		, BaseAttribute1.[CreatedByUserID]
		, BaseAttribute1.[CreatedDate]
		, BaseAttribute1.[LastModifiedByUserID]
		, BaseAttribute1.[LastModifiedDate]
		, BaseAttribute1.[Timestamp]
		, AttributeType1.[AttributeTypeName]
		, DataType1.[DataTypeName]
	FROM
	      [dbo].[tblCore_BaseAttribute] BaseAttribute1
	INNER JOIN [dbo].[tlkpCore_AttributeType] AttributeType1 ON AttributeType1.[AttributeTypeCode]=BaseAttribute1.[AttributeTypeCode]
	INNER JOIN [dbo].[tlkpCore_DataType] DataType1 ON DataType1.[DataTypeCode]=BaseAttribute1.[DataTypeCode]
	WHERE 
		BaseAttribute1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN BaseAttribute1.[IsActive] ELSE 1 END
		AND BaseAttribute1.[DataTypeCode] = @DataTypeCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BaseAttributeID' THEN BaseAttribute1.[BaseAttributeID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BaseAttributeID' THEN BaseAttribute1.[BaseAttributeID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeName' THEN BaseAttribute1.[AttributeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeName' THEN BaseAttribute1.[AttributeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeTypeCode' THEN BaseAttribute1.[AttributeTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeTypeCode' THEN BaseAttribute1.[AttributeTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DataTypeCode' THEN BaseAttribute1.[DataTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DataTypeCode' THEN BaseAttribute1.[DataTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN BaseAttribute1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN BaseAttribute1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN BaseAttribute1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN BaseAttribute1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN BaseAttribute1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN BaseAttribute1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN BaseAttribute1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN BaseAttribute1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN BaseAttribute1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN BaseAttribute1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN BaseAttribute1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN BaseAttribute1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN BaseAttribute1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN BaseAttribute1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeTypeName' THEN AttributeType1.[AttributeTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeTypeName' THEN AttributeType1.[AttributeTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DataTypeName' THEN DataType1.[DataTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DataTypeName' THEN DataType1.[DataTypeName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCore_GetAllDataTypeData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'DataTypeCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all DataType data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='DataTypeCode'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  DataType1.[DataTypeCode]
		, DataType1.[DataTypeName]
		, DataType1.[Description]
		, DataType1.[IsActive]
		, DataType1.[CreatedByUserID]
		, DataType1.[CreatedDate]
		, DataType1.[LastModifiedByUserID]
		, DataType1.[LastModifiedDate]
		, DataType1.[Timestamp]
	FROM
	      [dbo].[tlkpCore_DataType] DataType1
	WHERE 
		DataType1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN DataType1.[IsActive] ELSE 1 END

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  DataType1.[DataTypeCode]
		, DataType1.[DataTypeName]
		, DataType1.[Description]
		, DataType1.[IsActive]
		, DataType1.[CreatedByUserID]
		, DataType1.[CreatedDate]
		, DataType1.[LastModifiedByUserID]
		, DataType1.[LastModifiedDate]
		, DataType1.[Timestamp]
	FROM
	      [dbo].[tlkpCore_DataType] DataType1
	WHERE 
		DataType1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN DataType1.[IsActive] ELSE 1 END

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DataTypeCode' THEN DataType1.[DataTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DataTypeCode' THEN DataType1.[DataTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DataTypeName' THEN DataType1.[DataTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DataTypeName' THEN DataType1.[DataTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN DataType1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN DataType1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN DataType1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN DataType1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN DataType1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN DataType1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN DataType1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN DataType1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN DataType1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN DataType1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN DataType1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN DataType1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN DataType1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN DataType1.[Timestamp] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCore_GetAllDebugAttributeData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'BaseAttributeID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all DebugAttribute data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='BaseAttributeID'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  DebugAttribute1.[BaseAttributeID]
		, DebugAttribute1.[AttributeCode]
		, DebugAttribute1.[CreatedByUserID]
		, DebugAttribute1.[CreatedDate]
		, DebugAttribute1.[LastModifiedByUserID]
		, DebugAttribute1.[LastModifiedDate]
		, DebugAttribute1.[Timestamp]
		, BaseAttribute1.[AttributeName]
		, BaseAttribute1.[AttributeTypeCode]
		, BaseAttribute1.[DataTypeCode]
		, BaseAttribute1.[Description]
		, BaseAttribute1.[IsActive]
		, AttributeType1.[AttributeTypeName]
		, DataType1.[DataTypeName]
	FROM
	      [dbo].[tblCore_DebugAttribute] DebugAttribute1
	INNER JOIN [dbo].[tblCore_BaseAttribute] BaseAttribute1 ON BaseAttribute1.[BaseAttributeID]=DebugAttribute1.[BaseAttributeID]
	INNER JOIN [dbo].[tlkpCore_AttributeType] AttributeType1 ON AttributeType1.[AttributeTypeCode]=BaseAttribute1.[AttributeTypeCode]
	INNER JOIN [dbo].[tlkpCore_DataType] DataType1 ON DataType1.[DataTypeCode]=BaseAttribute1.[DataTypeCode]
	WHERE 
		BaseAttribute1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN BaseAttribute1.[IsActive] ELSE 1 END

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  DebugAttribute1.[BaseAttributeID]
		, DebugAttribute1.[AttributeCode]
		, DebugAttribute1.[CreatedByUserID]
		, DebugAttribute1.[CreatedDate]
		, DebugAttribute1.[LastModifiedByUserID]
		, DebugAttribute1.[LastModifiedDate]
		, DebugAttribute1.[Timestamp]
		, BaseAttribute1.[AttributeName]
		, BaseAttribute1.[AttributeTypeCode]
		, BaseAttribute1.[DataTypeCode]
		, BaseAttribute1.[Description]
		, BaseAttribute1.[IsActive]
		, AttributeType1.[AttributeTypeName]
		, DataType1.[DataTypeName]
	FROM
	      [dbo].[tblCore_DebugAttribute] DebugAttribute1
	INNER JOIN [dbo].[tblCore_BaseAttribute] BaseAttribute1 ON BaseAttribute1.[BaseAttributeID]=DebugAttribute1.[BaseAttributeID]
	INNER JOIN [dbo].[tlkpCore_AttributeType] AttributeType1 ON AttributeType1.[AttributeTypeCode]=BaseAttribute1.[AttributeTypeCode]
	INNER JOIN [dbo].[tlkpCore_DataType] DataType1 ON DataType1.[DataTypeCode]=BaseAttribute1.[DataTypeCode]
	WHERE 
		BaseAttribute1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN BaseAttribute1.[IsActive] ELSE 1 END

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BaseAttributeID' THEN DebugAttribute1.[BaseAttributeID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BaseAttributeID' THEN DebugAttribute1.[BaseAttributeID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeCode' THEN DebugAttribute1.[AttributeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeCode' THEN DebugAttribute1.[AttributeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN DebugAttribute1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN DebugAttribute1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN DebugAttribute1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN DebugAttribute1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN DebugAttribute1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN DebugAttribute1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN DebugAttribute1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN DebugAttribute1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN DebugAttribute1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN DebugAttribute1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeName' THEN BaseAttribute1.[AttributeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeName' THEN BaseAttribute1.[AttributeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeTypeCode' THEN BaseAttribute1.[AttributeTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeTypeCode' THEN BaseAttribute1.[AttributeTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DataTypeCode' THEN BaseAttribute1.[DataTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DataTypeCode' THEN BaseAttribute1.[DataTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN BaseAttribute1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN BaseAttribute1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN BaseAttribute1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN BaseAttribute1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeTypeName' THEN AttributeType1.[AttributeTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeTypeName' THEN AttributeType1.[AttributeTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DataTypeName' THEN DataType1.[DataTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DataTypeName' THEN DataType1.[DataTypeName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCore_GetAllDebugAttributeDataByAttributeTypeCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'AttributeTypeCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @AttributeTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all DebugAttribute data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='AttributeTypeCode'

/*
** parameter validation
*/
IF (@AttributeTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  DebugAttribute1.[BaseAttributeID]
		, DebugAttribute1.[AttributeCode]
		, DebugAttribute1.[CreatedByUserID]
		, DebugAttribute1.[CreatedDate]
		, DebugAttribute1.[LastModifiedByUserID]
		, DebugAttribute1.[LastModifiedDate]
		, DebugAttribute1.[Timestamp]
		, BaseAttribute1.[AttributeName]
		, BaseAttribute1.[AttributeTypeCode]
		, BaseAttribute1.[DataTypeCode]
		, BaseAttribute1.[Description]
		, BaseAttribute1.[IsActive]
		, AttributeType1.[AttributeTypeName]
		, DataType1.[DataTypeName]
	FROM
	      [dbo].[tblCore_DebugAttribute] DebugAttribute1
	INNER JOIN [dbo].[tblCore_BaseAttribute] BaseAttribute1 ON BaseAttribute1.[BaseAttributeID]=DebugAttribute1.[BaseAttributeID]
	INNER JOIN [dbo].[tlkpCore_AttributeType] AttributeType1 ON AttributeType1.[AttributeTypeCode]=BaseAttribute1.[AttributeTypeCode]
	INNER JOIN [dbo].[tlkpCore_DataType] DataType1 ON DataType1.[DataTypeCode]=BaseAttribute1.[DataTypeCode]
	WHERE 
		BaseAttribute1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN BaseAttribute1.[IsActive] ELSE 1 END
		AND BaseAttribute1.[AttributeTypeCode] = @AttributeTypeCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  DebugAttribute1.[BaseAttributeID]
		, DebugAttribute1.[AttributeCode]
		, DebugAttribute1.[CreatedByUserID]
		, DebugAttribute1.[CreatedDate]
		, DebugAttribute1.[LastModifiedByUserID]
		, DebugAttribute1.[LastModifiedDate]
		, DebugAttribute1.[Timestamp]
		, BaseAttribute1.[AttributeName]
		, BaseAttribute1.[AttributeTypeCode]
		, BaseAttribute1.[DataTypeCode]
		, BaseAttribute1.[Description]
		, BaseAttribute1.[IsActive]
		, AttributeType1.[AttributeTypeName]
		, DataType1.[DataTypeName]
	FROM
	      [dbo].[tblCore_DebugAttribute] DebugAttribute1
	INNER JOIN [dbo].[tblCore_BaseAttribute] BaseAttribute1 ON BaseAttribute1.[BaseAttributeID]=DebugAttribute1.[BaseAttributeID]
	INNER JOIN [dbo].[tlkpCore_AttributeType] AttributeType1 ON AttributeType1.[AttributeTypeCode]=BaseAttribute1.[AttributeTypeCode]
	INNER JOIN [dbo].[tlkpCore_DataType] DataType1 ON DataType1.[DataTypeCode]=BaseAttribute1.[DataTypeCode]
	WHERE 
		BaseAttribute1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN BaseAttribute1.[IsActive] ELSE 1 END
		AND BaseAttribute1.[AttributeTypeCode] = @AttributeTypeCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BaseAttributeID' THEN DebugAttribute1.[BaseAttributeID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BaseAttributeID' THEN DebugAttribute1.[BaseAttributeID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeCode' THEN DebugAttribute1.[AttributeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeCode' THEN DebugAttribute1.[AttributeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN DebugAttribute1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN DebugAttribute1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN DebugAttribute1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN DebugAttribute1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN DebugAttribute1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN DebugAttribute1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN DebugAttribute1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN DebugAttribute1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN DebugAttribute1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN DebugAttribute1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeName' THEN BaseAttribute1.[AttributeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeName' THEN BaseAttribute1.[AttributeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeTypeCode' THEN BaseAttribute1.[AttributeTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeTypeCode' THEN BaseAttribute1.[AttributeTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DataTypeCode' THEN BaseAttribute1.[DataTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DataTypeCode' THEN BaseAttribute1.[DataTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN BaseAttribute1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN BaseAttribute1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN BaseAttribute1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN BaseAttribute1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeTypeName' THEN AttributeType1.[AttributeTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeTypeName' THEN AttributeType1.[AttributeTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DataTypeName' THEN DataType1.[DataTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DataTypeName' THEN DataType1.[DataTypeName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCore_GetAllDebugAttributeDataByBaseAttributeID
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'BaseAttributeID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @BaseAttributeID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all DebugAttribute data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='BaseAttributeID'

/*
** parameter validation
*/
IF (@BaseAttributeID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  DebugAttribute1.[BaseAttributeID]
		, DebugAttribute1.[AttributeCode]
		, DebugAttribute1.[CreatedByUserID]
		, DebugAttribute1.[CreatedDate]
		, DebugAttribute1.[LastModifiedByUserID]
		, DebugAttribute1.[LastModifiedDate]
		, DebugAttribute1.[Timestamp]
		, BaseAttribute1.[AttributeName]
		, BaseAttribute1.[AttributeTypeCode]
		, BaseAttribute1.[DataTypeCode]
		, BaseAttribute1.[Description]
		, BaseAttribute1.[IsActive]
		, AttributeType1.[AttributeTypeName]
		, DataType1.[DataTypeName]
	FROM
	      [dbo].[tblCore_DebugAttribute] DebugAttribute1
	INNER JOIN [dbo].[tblCore_BaseAttribute] BaseAttribute1 ON BaseAttribute1.[BaseAttributeID]=DebugAttribute1.[BaseAttributeID]
	INNER JOIN [dbo].[tlkpCore_AttributeType] AttributeType1 ON AttributeType1.[AttributeTypeCode]=BaseAttribute1.[AttributeTypeCode]
	INNER JOIN [dbo].[tlkpCore_DataType] DataType1 ON DataType1.[DataTypeCode]=BaseAttribute1.[DataTypeCode]
	WHERE 
		BaseAttribute1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN BaseAttribute1.[IsActive] ELSE 1 END
		AND DebugAttribute1.[BaseAttributeID] = @BaseAttributeID

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  DebugAttribute1.[BaseAttributeID]
		, DebugAttribute1.[AttributeCode]
		, DebugAttribute1.[CreatedByUserID]
		, DebugAttribute1.[CreatedDate]
		, DebugAttribute1.[LastModifiedByUserID]
		, DebugAttribute1.[LastModifiedDate]
		, DebugAttribute1.[Timestamp]
		, BaseAttribute1.[AttributeName]
		, BaseAttribute1.[AttributeTypeCode]
		, BaseAttribute1.[DataTypeCode]
		, BaseAttribute1.[Description]
		, BaseAttribute1.[IsActive]
		, AttributeType1.[AttributeTypeName]
		, DataType1.[DataTypeName]
	FROM
	      [dbo].[tblCore_DebugAttribute] DebugAttribute1
	INNER JOIN [dbo].[tblCore_BaseAttribute] BaseAttribute1 ON BaseAttribute1.[BaseAttributeID]=DebugAttribute1.[BaseAttributeID]
	INNER JOIN [dbo].[tlkpCore_AttributeType] AttributeType1 ON AttributeType1.[AttributeTypeCode]=BaseAttribute1.[AttributeTypeCode]
	INNER JOIN [dbo].[tlkpCore_DataType] DataType1 ON DataType1.[DataTypeCode]=BaseAttribute1.[DataTypeCode]
	WHERE 
		BaseAttribute1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN BaseAttribute1.[IsActive] ELSE 1 END
		AND DebugAttribute1.[BaseAttributeID] = @BaseAttributeID

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BaseAttributeID' THEN DebugAttribute1.[BaseAttributeID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BaseAttributeID' THEN DebugAttribute1.[BaseAttributeID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeCode' THEN DebugAttribute1.[AttributeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeCode' THEN DebugAttribute1.[AttributeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN DebugAttribute1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN DebugAttribute1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN DebugAttribute1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN DebugAttribute1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN DebugAttribute1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN DebugAttribute1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN DebugAttribute1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN DebugAttribute1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN DebugAttribute1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN DebugAttribute1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeName' THEN BaseAttribute1.[AttributeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeName' THEN BaseAttribute1.[AttributeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeTypeCode' THEN BaseAttribute1.[AttributeTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeTypeCode' THEN BaseAttribute1.[AttributeTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DataTypeCode' THEN BaseAttribute1.[DataTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DataTypeCode' THEN BaseAttribute1.[DataTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN BaseAttribute1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN BaseAttribute1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN BaseAttribute1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN BaseAttribute1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeTypeName' THEN AttributeType1.[AttributeTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeTypeName' THEN AttributeType1.[AttributeTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DataTypeName' THEN DataType1.[DataTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DataTypeName' THEN DataType1.[DataTypeName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCore_GetAllDebugAttributeDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'AttributeName'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @AttributeName nvarchar(100)
	, @AttributeTypeCode int
	, @DataTypeCode int
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all DebugAttribute data by criteria.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='AttributeName'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  DebugAttribute1.[BaseAttributeID]
		, DebugAttribute1.[AttributeCode]
		, DebugAttribute1.[CreatedByUserID]
		, DebugAttribute1.[CreatedDate]
		, DebugAttribute1.[LastModifiedByUserID]
		, DebugAttribute1.[LastModifiedDate]
		, DebugAttribute1.[Timestamp]
		, BaseAttribute1.[AttributeName]
		, BaseAttribute1.[AttributeTypeCode]
		, BaseAttribute1.[DataTypeCode]
		, BaseAttribute1.[Description]
		, BaseAttribute1.[IsActive]
		, AttributeType1.[AttributeTypeName]
		, DataType1.[DataTypeName]
	FROM
	      [dbo].[tblCore_DebugAttribute] DebugAttribute1
	INNER JOIN [dbo].[tblCore_BaseAttribute] BaseAttribute1 ON BaseAttribute1.[BaseAttributeID]=DebugAttribute1.[BaseAttributeID]
	INNER JOIN [dbo].[tlkpCore_AttributeType] AttributeType1 ON AttributeType1.[AttributeTypeCode]=BaseAttribute1.[AttributeTypeCode]
	INNER JOIN [dbo].[tlkpCore_DataType] DataType1 ON DataType1.[DataTypeCode]=BaseAttribute1.[DataTypeCode]
	WHERE 
		BaseAttribute1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN BaseAttribute1.[IsActive] ELSE 1 END
		AND (@AttributeName IS NULL OR BaseAttribute1.[AttributeName] like '%' + @AttributeName + '%')
		AND (@AttributeTypeCode IS NULL OR BaseAttribute1.[AttributeTypeCode] = @AttributeTypeCode)
		AND (@DataTypeCode IS NULL OR BaseAttribute1.[DataTypeCode] = @DataTypeCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (BaseAttribute1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (BaseAttribute1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  DebugAttribute1.[BaseAttributeID]
		, DebugAttribute1.[AttributeCode]
		, DebugAttribute1.[CreatedByUserID]
		, DebugAttribute1.[CreatedDate]
		, DebugAttribute1.[LastModifiedByUserID]
		, DebugAttribute1.[LastModifiedDate]
		, DebugAttribute1.[Timestamp]
		, BaseAttribute1.[AttributeName]
		, BaseAttribute1.[AttributeTypeCode]
		, BaseAttribute1.[DataTypeCode]
		, BaseAttribute1.[Description]
		, BaseAttribute1.[IsActive]
		, AttributeType1.[AttributeTypeName]
		, DataType1.[DataTypeName]
	FROM
	      [dbo].[tblCore_DebugAttribute] DebugAttribute1
	INNER JOIN [dbo].[tblCore_BaseAttribute] BaseAttribute1 ON BaseAttribute1.[BaseAttributeID]=DebugAttribute1.[BaseAttributeID]
	INNER JOIN [dbo].[tlkpCore_AttributeType] AttributeType1 ON AttributeType1.[AttributeTypeCode]=BaseAttribute1.[AttributeTypeCode]
	INNER JOIN [dbo].[tlkpCore_DataType] DataType1 ON DataType1.[DataTypeCode]=BaseAttribute1.[DataTypeCode]
	WHERE 
		BaseAttribute1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN BaseAttribute1.[IsActive] ELSE 1 END
		AND (@AttributeName IS NULL OR BaseAttribute1.[AttributeName] like '%' + @AttributeName + '%')
		AND (@AttributeTypeCode IS NULL OR BaseAttribute1.[AttributeTypeCode] = @AttributeTypeCode)
		AND (@DataTypeCode IS NULL OR BaseAttribute1.[DataTypeCode] = @DataTypeCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (BaseAttribute1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (BaseAttribute1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BaseAttributeID' THEN DebugAttribute1.[BaseAttributeID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BaseAttributeID' THEN DebugAttribute1.[BaseAttributeID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeCode' THEN DebugAttribute1.[AttributeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeCode' THEN DebugAttribute1.[AttributeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN DebugAttribute1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN DebugAttribute1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN DebugAttribute1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN DebugAttribute1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN DebugAttribute1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN DebugAttribute1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN DebugAttribute1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN DebugAttribute1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN DebugAttribute1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN DebugAttribute1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeName' THEN BaseAttribute1.[AttributeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeName' THEN BaseAttribute1.[AttributeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeTypeCode' THEN BaseAttribute1.[AttributeTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeTypeCode' THEN BaseAttribute1.[AttributeTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DataTypeCode' THEN BaseAttribute1.[DataTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DataTypeCode' THEN BaseAttribute1.[DataTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN BaseAttribute1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN BaseAttribute1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN BaseAttribute1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN BaseAttribute1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeTypeName' THEN AttributeType1.[AttributeTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeTypeName' THEN AttributeType1.[AttributeTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DataTypeName' THEN DataType1.[DataTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DataTypeName' THEN DataType1.[DataTypeName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCore_GetAllDebugAttributeDataByDataTypeCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'DataTypeCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @DataTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all DebugAttribute data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='DataTypeCode'

/*
** parameter validation
*/
IF (@DataTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  DebugAttribute1.[BaseAttributeID]
		, DebugAttribute1.[AttributeCode]
		, DebugAttribute1.[CreatedByUserID]
		, DebugAttribute1.[CreatedDate]
		, DebugAttribute1.[LastModifiedByUserID]
		, DebugAttribute1.[LastModifiedDate]
		, DebugAttribute1.[Timestamp]
		, BaseAttribute1.[AttributeName]
		, BaseAttribute1.[AttributeTypeCode]
		, BaseAttribute1.[DataTypeCode]
		, BaseAttribute1.[Description]
		, BaseAttribute1.[IsActive]
		, AttributeType1.[AttributeTypeName]
		, DataType1.[DataTypeName]
	FROM
	      [dbo].[tblCore_DebugAttribute] DebugAttribute1
	INNER JOIN [dbo].[tblCore_BaseAttribute] BaseAttribute1 ON BaseAttribute1.[BaseAttributeID]=DebugAttribute1.[BaseAttributeID]
	INNER JOIN [dbo].[tlkpCore_AttributeType] AttributeType1 ON AttributeType1.[AttributeTypeCode]=BaseAttribute1.[AttributeTypeCode]
	INNER JOIN [dbo].[tlkpCore_DataType] DataType1 ON DataType1.[DataTypeCode]=BaseAttribute1.[DataTypeCode]
	WHERE 
		BaseAttribute1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN BaseAttribute1.[IsActive] ELSE 1 END
		AND BaseAttribute1.[DataTypeCode] = @DataTypeCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  DebugAttribute1.[BaseAttributeID]
		, DebugAttribute1.[AttributeCode]
		, DebugAttribute1.[CreatedByUserID]
		, DebugAttribute1.[CreatedDate]
		, DebugAttribute1.[LastModifiedByUserID]
		, DebugAttribute1.[LastModifiedDate]
		, DebugAttribute1.[Timestamp]
		, BaseAttribute1.[AttributeName]
		, BaseAttribute1.[AttributeTypeCode]
		, BaseAttribute1.[DataTypeCode]
		, BaseAttribute1.[Description]
		, BaseAttribute1.[IsActive]
		, AttributeType1.[AttributeTypeName]
		, DataType1.[DataTypeName]
	FROM
	      [dbo].[tblCore_DebugAttribute] DebugAttribute1
	INNER JOIN [dbo].[tblCore_BaseAttribute] BaseAttribute1 ON BaseAttribute1.[BaseAttributeID]=DebugAttribute1.[BaseAttributeID]
	INNER JOIN [dbo].[tlkpCore_AttributeType] AttributeType1 ON AttributeType1.[AttributeTypeCode]=BaseAttribute1.[AttributeTypeCode]
	INNER JOIN [dbo].[tlkpCore_DataType] DataType1 ON DataType1.[DataTypeCode]=BaseAttribute1.[DataTypeCode]
	WHERE 
		BaseAttribute1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN BaseAttribute1.[IsActive] ELSE 1 END
		AND BaseAttribute1.[DataTypeCode] = @DataTypeCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BaseAttributeID' THEN DebugAttribute1.[BaseAttributeID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BaseAttributeID' THEN DebugAttribute1.[BaseAttributeID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeCode' THEN DebugAttribute1.[AttributeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeCode' THEN DebugAttribute1.[AttributeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN DebugAttribute1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN DebugAttribute1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN DebugAttribute1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN DebugAttribute1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN DebugAttribute1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN DebugAttribute1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN DebugAttribute1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN DebugAttribute1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN DebugAttribute1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN DebugAttribute1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeName' THEN BaseAttribute1.[AttributeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeName' THEN BaseAttribute1.[AttributeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeTypeCode' THEN BaseAttribute1.[AttributeTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeTypeCode' THEN BaseAttribute1.[AttributeTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DataTypeCode' THEN BaseAttribute1.[DataTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DataTypeCode' THEN BaseAttribute1.[DataTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN BaseAttribute1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN BaseAttribute1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN BaseAttribute1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN BaseAttribute1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeTypeName' THEN AttributeType1.[AttributeTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeTypeName' THEN AttributeType1.[AttributeTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DataTypeName' THEN DataType1.[DataTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DataTypeName' THEN DataType1.[DataTypeName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCore_GetAllDebugAttributeValueLogData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'DebugAttributeValueLogID'
	, @SortDirection nvarchar(20) = 'Ascending'
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all DebugAttributeValueLog data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='DebugAttributeValueLogID'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  DebugAttributeValueLog1.[DebugAttributeValueLogID]
		, DebugAttributeValueLog1.[DebugLogID]
		, DebugAttributeValueLog1.[BaseAttributeID]
		, DebugAttributeValueLog1.[AttributeValue]
		, DebugAttributeValueLog1.[CreatedByUserID]
		, DebugAttributeValueLog1.[CreatedDate]
		, DebugAttributeValueLog1.[LastModifiedByUserID]
		, DebugAttributeValueLog1.[LastModifiedDate]
		, DebugAttributeValueLog1.[Timestamp]
		, DebugLog1.[EventName]
		, DebugLog1.[ErrorNumber]
	FROM
	      [dbo].[tblCore_DebugAttributeValueLog] DebugAttributeValueLog1
	INNER JOIN [dbo].[tblCore_DebugLog] DebugLog1 ON DebugLog1.[DebugLogID]=DebugAttributeValueLog1.[DebugLogID]

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  DebugAttributeValueLog1.[DebugAttributeValueLogID]
		, DebugAttributeValueLog1.[DebugLogID]
		, DebugAttributeValueLog1.[BaseAttributeID]
		, DebugAttributeValueLog1.[AttributeValue]
		, DebugAttributeValueLog1.[CreatedByUserID]
		, DebugAttributeValueLog1.[CreatedDate]
		, DebugAttributeValueLog1.[LastModifiedByUserID]
		, DebugAttributeValueLog1.[LastModifiedDate]
		, DebugAttributeValueLog1.[Timestamp]
		, DebugLog1.[EventName]
		, DebugLog1.[ErrorNumber]
	FROM
	      [dbo].[tblCore_DebugAttributeValueLog] DebugAttributeValueLog1
	INNER JOIN [dbo].[tblCore_DebugLog] DebugLog1 ON DebugLog1.[DebugLogID]=DebugAttributeValueLog1.[DebugLogID]

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DebugAttributeValueLogID' THEN DebugAttributeValueLog1.[DebugAttributeValueLogID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DebugAttributeValueLogID' THEN DebugAttributeValueLog1.[DebugAttributeValueLogID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DebugLogID' THEN DebugAttributeValueLog1.[DebugLogID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DebugLogID' THEN DebugAttributeValueLog1.[DebugLogID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BaseAttributeID' THEN DebugAttributeValueLog1.[BaseAttributeID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BaseAttributeID' THEN DebugAttributeValueLog1.[BaseAttributeID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeValue' THEN DebugAttributeValueLog1.[AttributeValue] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeValue' THEN DebugAttributeValueLog1.[AttributeValue] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN DebugAttributeValueLog1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN DebugAttributeValueLog1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN DebugAttributeValueLog1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN DebugAttributeValueLog1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN DebugAttributeValueLog1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN DebugAttributeValueLog1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN DebugAttributeValueLog1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN DebugAttributeValueLog1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN DebugAttributeValueLog1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN DebugAttributeValueLog1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EventName' THEN DebugLog1.[EventName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EventName' THEN DebugLog1.[EventName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ErrorNumber' THEN DebugLog1.[ErrorNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ErrorNumber' THEN DebugLog1.[ErrorNumber] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCore_GetAllDebugAttributeValueLogDataByBaseAttributeID
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'BaseAttributeID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @BaseAttributeID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all DebugAttributeValueLog data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='BaseAttributeID'

/*
** parameter validation
*/
IF (@BaseAttributeID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  DebugAttributeValueLog1.[DebugAttributeValueLogID]
		, DebugAttributeValueLog1.[DebugLogID]
		, DebugAttributeValueLog1.[BaseAttributeID]
		, DebugAttributeValueLog1.[AttributeValue]
		, DebugAttributeValueLog1.[CreatedByUserID]
		, DebugAttributeValueLog1.[CreatedDate]
		, DebugAttributeValueLog1.[LastModifiedByUserID]
		, DebugAttributeValueLog1.[LastModifiedDate]
		, DebugAttributeValueLog1.[Timestamp]
		, DebugLog1.[EventName]
		, DebugLog1.[ErrorNumber]
	FROM
	      [dbo].[tblCore_DebugAttributeValueLog] DebugAttributeValueLog1
	INNER JOIN [dbo].[tblCore_DebugLog] DebugLog1 ON DebugLog1.[DebugLogID]=DebugAttributeValueLog1.[DebugLogID]
	WHERE 
		DebugAttributeValueLog1.[BaseAttributeID] = @BaseAttributeID

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  DebugAttributeValueLog1.[DebugAttributeValueLogID]
		, DebugAttributeValueLog1.[DebugLogID]
		, DebugAttributeValueLog1.[BaseAttributeID]
		, DebugAttributeValueLog1.[AttributeValue]
		, DebugAttributeValueLog1.[CreatedByUserID]
		, DebugAttributeValueLog1.[CreatedDate]
		, DebugAttributeValueLog1.[LastModifiedByUserID]
		, DebugAttributeValueLog1.[LastModifiedDate]
		, DebugAttributeValueLog1.[Timestamp]
		, DebugLog1.[EventName]
		, DebugLog1.[ErrorNumber]
	FROM
	      [dbo].[tblCore_DebugAttributeValueLog] DebugAttributeValueLog1
	INNER JOIN [dbo].[tblCore_DebugLog] DebugLog1 ON DebugLog1.[DebugLogID]=DebugAttributeValueLog1.[DebugLogID]
	WHERE 
		DebugAttributeValueLog1.[BaseAttributeID] = @BaseAttributeID

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DebugAttributeValueLogID' THEN DebugAttributeValueLog1.[DebugAttributeValueLogID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DebugAttributeValueLogID' THEN DebugAttributeValueLog1.[DebugAttributeValueLogID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DebugLogID' THEN DebugAttributeValueLog1.[DebugLogID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DebugLogID' THEN DebugAttributeValueLog1.[DebugLogID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BaseAttributeID' THEN DebugAttributeValueLog1.[BaseAttributeID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BaseAttributeID' THEN DebugAttributeValueLog1.[BaseAttributeID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeValue' THEN DebugAttributeValueLog1.[AttributeValue] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeValue' THEN DebugAttributeValueLog1.[AttributeValue] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN DebugAttributeValueLog1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN DebugAttributeValueLog1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN DebugAttributeValueLog1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN DebugAttributeValueLog1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN DebugAttributeValueLog1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN DebugAttributeValueLog1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN DebugAttributeValueLog1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN DebugAttributeValueLog1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN DebugAttributeValueLog1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN DebugAttributeValueLog1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EventName' THEN DebugLog1.[EventName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EventName' THEN DebugLog1.[EventName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ErrorNumber' THEN DebugLog1.[ErrorNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ErrorNumber' THEN DebugLog1.[ErrorNumber] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCore_GetAllDebugAttributeValueLogDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'AttributeValue'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @AttributeValue nvarchar(1000)
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all DebugAttributeValueLog data by criteria.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='AttributeValue'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  DebugAttributeValueLog1.[DebugAttributeValueLogID]
		, DebugAttributeValueLog1.[DebugLogID]
		, DebugAttributeValueLog1.[BaseAttributeID]
		, DebugAttributeValueLog1.[AttributeValue]
		, DebugAttributeValueLog1.[CreatedByUserID]
		, DebugAttributeValueLog1.[CreatedDate]
		, DebugAttributeValueLog1.[LastModifiedByUserID]
		, DebugAttributeValueLog1.[LastModifiedDate]
		, DebugAttributeValueLog1.[Timestamp]
		, DebugLog1.[EventName]
		, DebugLog1.[ErrorNumber]
	FROM
	      [dbo].[tblCore_DebugAttributeValueLog] DebugAttributeValueLog1
	INNER JOIN [dbo].[tblCore_DebugLog] DebugLog1 ON DebugLog1.[DebugLogID]=DebugAttributeValueLog1.[DebugLogID]
	WHERE 
		(@AttributeValue IS NULL OR DebugAttributeValueLog1.[AttributeValue] like '%' + @AttributeValue + '%')
		AND ((@LastModifiedDateStart  IS NULL) OR (DebugAttributeValueLog1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (DebugAttributeValueLog1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  DebugAttributeValueLog1.[DebugAttributeValueLogID]
		, DebugAttributeValueLog1.[DebugLogID]
		, DebugAttributeValueLog1.[BaseAttributeID]
		, DebugAttributeValueLog1.[AttributeValue]
		, DebugAttributeValueLog1.[CreatedByUserID]
		, DebugAttributeValueLog1.[CreatedDate]
		, DebugAttributeValueLog1.[LastModifiedByUserID]
		, DebugAttributeValueLog1.[LastModifiedDate]
		, DebugAttributeValueLog1.[Timestamp]
		, DebugLog1.[EventName]
		, DebugLog1.[ErrorNumber]
	FROM
	      [dbo].[tblCore_DebugAttributeValueLog] DebugAttributeValueLog1
	INNER JOIN [dbo].[tblCore_DebugLog] DebugLog1 ON DebugLog1.[DebugLogID]=DebugAttributeValueLog1.[DebugLogID]
	WHERE 
		(@AttributeValue IS NULL OR DebugAttributeValueLog1.[AttributeValue] like '%' + @AttributeValue + '%')
		AND ((@LastModifiedDateStart  IS NULL) OR (DebugAttributeValueLog1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (DebugAttributeValueLog1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DebugAttributeValueLogID' THEN DebugAttributeValueLog1.[DebugAttributeValueLogID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DebugAttributeValueLogID' THEN DebugAttributeValueLog1.[DebugAttributeValueLogID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DebugLogID' THEN DebugAttributeValueLog1.[DebugLogID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DebugLogID' THEN DebugAttributeValueLog1.[DebugLogID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BaseAttributeID' THEN DebugAttributeValueLog1.[BaseAttributeID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BaseAttributeID' THEN DebugAttributeValueLog1.[BaseAttributeID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeValue' THEN DebugAttributeValueLog1.[AttributeValue] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeValue' THEN DebugAttributeValueLog1.[AttributeValue] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN DebugAttributeValueLog1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN DebugAttributeValueLog1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN DebugAttributeValueLog1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN DebugAttributeValueLog1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN DebugAttributeValueLog1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN DebugAttributeValueLog1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN DebugAttributeValueLog1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN DebugAttributeValueLog1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN DebugAttributeValueLog1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN DebugAttributeValueLog1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EventName' THEN DebugLog1.[EventName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EventName' THEN DebugLog1.[EventName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ErrorNumber' THEN DebugLog1.[ErrorNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ErrorNumber' THEN DebugLog1.[ErrorNumber] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCore_GetAllDebugAttributeValueLogDataByDebugLogID
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'DebugLogID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @DebugLogID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all DebugAttributeValueLog data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='DebugLogID'

/*
** parameter validation
*/
IF (@DebugLogID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  DebugAttributeValueLog1.[DebugAttributeValueLogID]
		, DebugAttributeValueLog1.[DebugLogID]
		, DebugAttributeValueLog1.[BaseAttributeID]
		, DebugAttributeValueLog1.[AttributeValue]
		, DebugAttributeValueLog1.[CreatedByUserID]
		, DebugAttributeValueLog1.[CreatedDate]
		, DebugAttributeValueLog1.[LastModifiedByUserID]
		, DebugAttributeValueLog1.[LastModifiedDate]
		, DebugAttributeValueLog1.[Timestamp]
		, DebugLog1.[EventName]
		, DebugLog1.[ErrorNumber]
	FROM
	      [dbo].[tblCore_DebugAttributeValueLog] DebugAttributeValueLog1
	INNER JOIN [dbo].[tblCore_DebugLog] DebugLog1 ON DebugLog1.[DebugLogID]=DebugAttributeValueLog1.[DebugLogID]
	WHERE 
		DebugAttributeValueLog1.[DebugLogID] = @DebugLogID

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  DebugAttributeValueLog1.[DebugAttributeValueLogID]
		, DebugAttributeValueLog1.[DebugLogID]
		, DebugAttributeValueLog1.[BaseAttributeID]
		, DebugAttributeValueLog1.[AttributeValue]
		, DebugAttributeValueLog1.[CreatedByUserID]
		, DebugAttributeValueLog1.[CreatedDate]
		, DebugAttributeValueLog1.[LastModifiedByUserID]
		, DebugAttributeValueLog1.[LastModifiedDate]
		, DebugAttributeValueLog1.[Timestamp]
		, DebugLog1.[EventName]
		, DebugLog1.[ErrorNumber]
	FROM
	      [dbo].[tblCore_DebugAttributeValueLog] DebugAttributeValueLog1
	INNER JOIN [dbo].[tblCore_DebugLog] DebugLog1 ON DebugLog1.[DebugLogID]=DebugAttributeValueLog1.[DebugLogID]
	WHERE 
		DebugAttributeValueLog1.[DebugLogID] = @DebugLogID

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DebugAttributeValueLogID' THEN DebugAttributeValueLog1.[DebugAttributeValueLogID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DebugAttributeValueLogID' THEN DebugAttributeValueLog1.[DebugAttributeValueLogID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DebugLogID' THEN DebugAttributeValueLog1.[DebugLogID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DebugLogID' THEN DebugAttributeValueLog1.[DebugLogID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BaseAttributeID' THEN DebugAttributeValueLog1.[BaseAttributeID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BaseAttributeID' THEN DebugAttributeValueLog1.[BaseAttributeID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeValue' THEN DebugAttributeValueLog1.[AttributeValue] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeValue' THEN DebugAttributeValueLog1.[AttributeValue] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN DebugAttributeValueLog1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN DebugAttributeValueLog1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN DebugAttributeValueLog1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN DebugAttributeValueLog1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN DebugAttributeValueLog1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN DebugAttributeValueLog1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN DebugAttributeValueLog1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN DebugAttributeValueLog1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN DebugAttributeValueLog1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN DebugAttributeValueLog1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EventName' THEN DebugLog1.[EventName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EventName' THEN DebugLog1.[EventName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ErrorNumber' THEN DebugLog1.[ErrorNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ErrorNumber' THEN DebugLog1.[ErrorNumber] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCore_GetAllDebugLogData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'DebugLogID'
	, @SortDirection nvarchar(20) = 'Ascending'
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all DebugLog data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='DebugLogID'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  DebugLog1.[DebugLogID]
		, DebugLog1.[EventName]
		, DebugLog1.[Message]
		, DebugLog1.[ErrorNumber]
		, DebugLog1.[EventTypeCode]
		, DebugLog1.[SeverityLevelCode]
		, DebugLog1.[CreatedByUserID]
		, DebugLog1.[CreatedDate]
		, DebugLog1.[LastModifiedByUserID]
		, DebugLog1.[LastModifiedDate]
		, DebugLog1.[Timestamp]
		, EventType1.[EventTypeName]
		, SeverityLevel1.[SeverityLevelName]
	FROM
	      [dbo].[tblCore_DebugLog] DebugLog1
	INNER JOIN [dbo].[tlkpCore_EventType] EventType1 ON EventType1.[EventTypeCode]=DebugLog1.[EventTypeCode]
	INNER JOIN [dbo].[tlkpCore_SeverityLevel] SeverityLevel1 ON SeverityLevel1.[SeverityLevelCode]=DebugLog1.[SeverityLevelCode]

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  DebugLog1.[DebugLogID]
		, DebugLog1.[EventName]
		, DebugLog1.[Message]
		, DebugLog1.[ErrorNumber]
		, DebugLog1.[EventTypeCode]
		, DebugLog1.[SeverityLevelCode]
		, DebugLog1.[CreatedByUserID]
		, DebugLog1.[CreatedDate]
		, DebugLog1.[LastModifiedByUserID]
		, DebugLog1.[LastModifiedDate]
		, DebugLog1.[Timestamp]
		, EventType1.[EventTypeName]
		, SeverityLevel1.[SeverityLevelName]
	FROM
	      [dbo].[tblCore_DebugLog] DebugLog1
	INNER JOIN [dbo].[tlkpCore_EventType] EventType1 ON EventType1.[EventTypeCode]=DebugLog1.[EventTypeCode]
	INNER JOIN [dbo].[tlkpCore_SeverityLevel] SeverityLevel1 ON SeverityLevel1.[SeverityLevelCode]=DebugLog1.[SeverityLevelCode]

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DebugLogID' THEN DebugLog1.[DebugLogID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DebugLogID' THEN DebugLog1.[DebugLogID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EventName' THEN DebugLog1.[EventName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EventName' THEN DebugLog1.[EventName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Message' THEN DebugLog1.[Message] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Message' THEN DebugLog1.[Message] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ErrorNumber' THEN DebugLog1.[ErrorNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ErrorNumber' THEN DebugLog1.[ErrorNumber] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EventTypeCode' THEN DebugLog1.[EventTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EventTypeCode' THEN DebugLog1.[EventTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'SeverityLevelCode' THEN DebugLog1.[SeverityLevelCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'SeverityLevelCode' THEN DebugLog1.[SeverityLevelCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN DebugLog1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN DebugLog1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN DebugLog1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN DebugLog1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN DebugLog1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN DebugLog1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN DebugLog1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN DebugLog1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN DebugLog1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN DebugLog1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EventTypeName' THEN EventType1.[EventTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EventTypeName' THEN EventType1.[EventTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'SeverityLevelName' THEN SeverityLevel1.[SeverityLevelName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'SeverityLevelName' THEN SeverityLevel1.[SeverityLevelName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCore_GetAllDebugLogDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'EventName'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @EventName nvarchar(255) = NULL
	, @ErrorNumber int = NULL
	, @EventTypeCode int
	, @SeverityLevelCode int
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all DebugLog data by criteria.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='EventName'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  DebugLog1.[DebugLogID]
		, DebugLog1.[EventName]
		, DebugLog1.[Message]
		, DebugLog1.[ErrorNumber]
		, DebugLog1.[EventTypeCode]
		, DebugLog1.[SeverityLevelCode]
		, DebugLog1.[CreatedByUserID]
		, DebugLog1.[CreatedDate]
		, DebugLog1.[LastModifiedByUserID]
		, DebugLog1.[LastModifiedDate]
		, DebugLog1.[Timestamp]
		, EventType1.[EventTypeName]
		, SeverityLevel1.[SeverityLevelName]
	FROM
	      [dbo].[tblCore_DebugLog] DebugLog1
	INNER JOIN [dbo].[tlkpCore_EventType] EventType1 ON EventType1.[EventTypeCode]=DebugLog1.[EventTypeCode]
	INNER JOIN [dbo].[tlkpCore_SeverityLevel] SeverityLevel1 ON SeverityLevel1.[SeverityLevelCode]=DebugLog1.[SeverityLevelCode]
	WHERE 
		(@EventName IS NULL OR DebugLog1.[EventName] like '%' + @EventName + '%')
		AND (@ErrorNumber IS NULL OR DebugLog1.[ErrorNumber] = @ErrorNumber)
		AND (@EventTypeCode IS NULL OR DebugLog1.[EventTypeCode] = @EventTypeCode)
		AND (@SeverityLevelCode IS NULL OR DebugLog1.[SeverityLevelCode] = @SeverityLevelCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (DebugLog1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (DebugLog1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  DebugLog1.[DebugLogID]
		, DebugLog1.[EventName]
		, DebugLog1.[Message]
		, DebugLog1.[ErrorNumber]
		, DebugLog1.[EventTypeCode]
		, DebugLog1.[SeverityLevelCode]
		, DebugLog1.[CreatedByUserID]
		, DebugLog1.[CreatedDate]
		, DebugLog1.[LastModifiedByUserID]
		, DebugLog1.[LastModifiedDate]
		, DebugLog1.[Timestamp]
		, EventType1.[EventTypeName]
		, SeverityLevel1.[SeverityLevelName]
	FROM
	      [dbo].[tblCore_DebugLog] DebugLog1
	INNER JOIN [dbo].[tlkpCore_EventType] EventType1 ON EventType1.[EventTypeCode]=DebugLog1.[EventTypeCode]
	INNER JOIN [dbo].[tlkpCore_SeverityLevel] SeverityLevel1 ON SeverityLevel1.[SeverityLevelCode]=DebugLog1.[SeverityLevelCode]
	WHERE 
		(@EventName IS NULL OR DebugLog1.[EventName] like '%' + @EventName + '%')
		AND (@ErrorNumber IS NULL OR DebugLog1.[ErrorNumber] = @ErrorNumber)
		AND (@EventTypeCode IS NULL OR DebugLog1.[EventTypeCode] = @EventTypeCode)
		AND (@SeverityLevelCode IS NULL OR DebugLog1.[SeverityLevelCode] = @SeverityLevelCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (DebugLog1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (DebugLog1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DebugLogID' THEN DebugLog1.[DebugLogID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DebugLogID' THEN DebugLog1.[DebugLogID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EventName' THEN DebugLog1.[EventName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EventName' THEN DebugLog1.[EventName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Message' THEN DebugLog1.[Message] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Message' THEN DebugLog1.[Message] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ErrorNumber' THEN DebugLog1.[ErrorNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ErrorNumber' THEN DebugLog1.[ErrorNumber] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EventTypeCode' THEN DebugLog1.[EventTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EventTypeCode' THEN DebugLog1.[EventTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'SeverityLevelCode' THEN DebugLog1.[SeverityLevelCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'SeverityLevelCode' THEN DebugLog1.[SeverityLevelCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN DebugLog1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN DebugLog1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN DebugLog1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN DebugLog1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN DebugLog1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN DebugLog1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN DebugLog1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN DebugLog1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN DebugLog1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN DebugLog1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EventTypeName' THEN EventType1.[EventTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EventTypeName' THEN EventType1.[EventTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'SeverityLevelName' THEN SeverityLevel1.[SeverityLevelName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'SeverityLevelName' THEN SeverityLevel1.[SeverityLevelName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCore_GetAllDebugLogDataByEventTypeCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'EventTypeCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @EventTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all DebugLog data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='EventTypeCode'

/*
** parameter validation
*/
IF (@EventTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  DebugLog1.[DebugLogID]
		, DebugLog1.[EventName]
		, DebugLog1.[Message]
		, DebugLog1.[ErrorNumber]
		, DebugLog1.[EventTypeCode]
		, DebugLog1.[SeverityLevelCode]
		, DebugLog1.[CreatedByUserID]
		, DebugLog1.[CreatedDate]
		, DebugLog1.[LastModifiedByUserID]
		, DebugLog1.[LastModifiedDate]
		, DebugLog1.[Timestamp]
		, EventType1.[EventTypeName]
		, SeverityLevel1.[SeverityLevelName]
	FROM
	      [dbo].[tblCore_DebugLog] DebugLog1
	INNER JOIN [dbo].[tlkpCore_EventType] EventType1 ON EventType1.[EventTypeCode]=DebugLog1.[EventTypeCode]
	INNER JOIN [dbo].[tlkpCore_SeverityLevel] SeverityLevel1 ON SeverityLevel1.[SeverityLevelCode]=DebugLog1.[SeverityLevelCode]
	WHERE 
		DebugLog1.[EventTypeCode] = @EventTypeCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  DebugLog1.[DebugLogID]
		, DebugLog1.[EventName]
		, DebugLog1.[Message]
		, DebugLog1.[ErrorNumber]
		, DebugLog1.[EventTypeCode]
		, DebugLog1.[SeverityLevelCode]
		, DebugLog1.[CreatedByUserID]
		, DebugLog1.[CreatedDate]
		, DebugLog1.[LastModifiedByUserID]
		, DebugLog1.[LastModifiedDate]
		, DebugLog1.[Timestamp]
		, EventType1.[EventTypeName]
		, SeverityLevel1.[SeverityLevelName]
	FROM
	      [dbo].[tblCore_DebugLog] DebugLog1
	INNER JOIN [dbo].[tlkpCore_EventType] EventType1 ON EventType1.[EventTypeCode]=DebugLog1.[EventTypeCode]
	INNER JOIN [dbo].[tlkpCore_SeverityLevel] SeverityLevel1 ON SeverityLevel1.[SeverityLevelCode]=DebugLog1.[SeverityLevelCode]
	WHERE 
		DebugLog1.[EventTypeCode] = @EventTypeCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DebugLogID' THEN DebugLog1.[DebugLogID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DebugLogID' THEN DebugLog1.[DebugLogID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EventName' THEN DebugLog1.[EventName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EventName' THEN DebugLog1.[EventName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Message' THEN DebugLog1.[Message] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Message' THEN DebugLog1.[Message] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ErrorNumber' THEN DebugLog1.[ErrorNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ErrorNumber' THEN DebugLog1.[ErrorNumber] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EventTypeCode' THEN DebugLog1.[EventTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EventTypeCode' THEN DebugLog1.[EventTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'SeverityLevelCode' THEN DebugLog1.[SeverityLevelCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'SeverityLevelCode' THEN DebugLog1.[SeverityLevelCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN DebugLog1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN DebugLog1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN DebugLog1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN DebugLog1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN DebugLog1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN DebugLog1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN DebugLog1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN DebugLog1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN DebugLog1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN DebugLog1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EventTypeName' THEN EventType1.[EventTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EventTypeName' THEN EventType1.[EventTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'SeverityLevelName' THEN SeverityLevel1.[SeverityLevelName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'SeverityLevelName' THEN SeverityLevel1.[SeverityLevelName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCore_GetAllDebugLogDataBySeverityLevelCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'SeverityLevelCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @SeverityLevelCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all DebugLog data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='SeverityLevelCode'

/*
** parameter validation
*/
IF (@SeverityLevelCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  DebugLog1.[DebugLogID]
		, DebugLog1.[EventName]
		, DebugLog1.[Message]
		, DebugLog1.[ErrorNumber]
		, DebugLog1.[EventTypeCode]
		, DebugLog1.[SeverityLevelCode]
		, DebugLog1.[CreatedByUserID]
		, DebugLog1.[CreatedDate]
		, DebugLog1.[LastModifiedByUserID]
		, DebugLog1.[LastModifiedDate]
		, DebugLog1.[Timestamp]
		, EventType1.[EventTypeName]
		, SeverityLevel1.[SeverityLevelName]
	FROM
	      [dbo].[tblCore_DebugLog] DebugLog1
	INNER JOIN [dbo].[tlkpCore_EventType] EventType1 ON EventType1.[EventTypeCode]=DebugLog1.[EventTypeCode]
	INNER JOIN [dbo].[tlkpCore_SeverityLevel] SeverityLevel1 ON SeverityLevel1.[SeverityLevelCode]=DebugLog1.[SeverityLevelCode]
	WHERE 
		DebugLog1.[SeverityLevelCode] = @SeverityLevelCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  DebugLog1.[DebugLogID]
		, DebugLog1.[EventName]
		, DebugLog1.[Message]
		, DebugLog1.[ErrorNumber]
		, DebugLog1.[EventTypeCode]
		, DebugLog1.[SeverityLevelCode]
		, DebugLog1.[CreatedByUserID]
		, DebugLog1.[CreatedDate]
		, DebugLog1.[LastModifiedByUserID]
		, DebugLog1.[LastModifiedDate]
		, DebugLog1.[Timestamp]
		, EventType1.[EventTypeName]
		, SeverityLevel1.[SeverityLevelName]
	FROM
	      [dbo].[tblCore_DebugLog] DebugLog1
	INNER JOIN [dbo].[tlkpCore_EventType] EventType1 ON EventType1.[EventTypeCode]=DebugLog1.[EventTypeCode]
	INNER JOIN [dbo].[tlkpCore_SeverityLevel] SeverityLevel1 ON SeverityLevel1.[SeverityLevelCode]=DebugLog1.[SeverityLevelCode]
	WHERE 
		DebugLog1.[SeverityLevelCode] = @SeverityLevelCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DebugLogID' THEN DebugLog1.[DebugLogID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DebugLogID' THEN DebugLog1.[DebugLogID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EventName' THEN DebugLog1.[EventName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EventName' THEN DebugLog1.[EventName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Message' THEN DebugLog1.[Message] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Message' THEN DebugLog1.[Message] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ErrorNumber' THEN DebugLog1.[ErrorNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ErrorNumber' THEN DebugLog1.[ErrorNumber] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EventTypeCode' THEN DebugLog1.[EventTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EventTypeCode' THEN DebugLog1.[EventTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'SeverityLevelCode' THEN DebugLog1.[SeverityLevelCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'SeverityLevelCode' THEN DebugLog1.[SeverityLevelCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN DebugLog1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN DebugLog1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN DebugLog1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN DebugLog1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN DebugLog1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN DebugLog1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN DebugLog1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN DebugLog1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN DebugLog1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN DebugLog1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EventTypeName' THEN EventType1.[EventTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EventTypeName' THEN EventType1.[EventTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'SeverityLevelName' THEN SeverityLevel1.[SeverityLevelName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'SeverityLevelName' THEN SeverityLevel1.[SeverityLevelName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCore_GetAllErrorData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'ErrorNumber'
	, @SortDirection nvarchar(20) = 'Ascending'
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all Error data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='ErrorNumber'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  Error1.[ErrorNumber]
		, Error1.[ErrorTitle]
		, Error1.[ErrorMessage]
		, Error1.[CreatedByUserID]
		, Error1.[CreatedDate]
		, Error1.[LastModifiedByUserID]
		, Error1.[LastModifiedDate]
		, Error1.[Timestamp]
	FROM
	      [dbo].[tlkpCore_Error] Error1

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  Error1.[ErrorNumber]
		, Error1.[ErrorTitle]
		, Error1.[ErrorMessage]
		, Error1.[CreatedByUserID]
		, Error1.[CreatedDate]
		, Error1.[LastModifiedByUserID]
		, Error1.[LastModifiedDate]
		, Error1.[Timestamp]
	FROM
	      [dbo].[tlkpCore_Error] Error1

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ErrorNumber' THEN Error1.[ErrorNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ErrorNumber' THEN Error1.[ErrorNumber] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ErrorTitle' THEN Error1.[ErrorTitle] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ErrorTitle' THEN Error1.[ErrorTitle] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ErrorMessage' THEN Error1.[ErrorMessage] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ErrorMessage' THEN Error1.[ErrorMessage] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Error1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Error1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Error1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Error1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Error1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Error1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Error1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Error1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Error1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Error1.[Timestamp] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCore_GetAllEventTypeData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'EventTypeCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all EventType data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='EventTypeCode'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  EventType1.[EventTypeCode]
		, EventType1.[EventTypeName]
		, EventType1.[Description]
		, EventType1.[IsActive]
		, EventType1.[CreatedByUserID]
		, EventType1.[CreatedDate]
		, EventType1.[LastModifiedByUserID]
		, EventType1.[LastModifiedDate]
		, EventType1.[Timestamp]
	FROM
	      [dbo].[tlkpCore_EventType] EventType1
	WHERE 
		EventType1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN EventType1.[IsActive] ELSE 1 END

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  EventType1.[EventTypeCode]
		, EventType1.[EventTypeName]
		, EventType1.[Description]
		, EventType1.[IsActive]
		, EventType1.[CreatedByUserID]
		, EventType1.[CreatedDate]
		, EventType1.[LastModifiedByUserID]
		, EventType1.[LastModifiedDate]
		, EventType1.[Timestamp]
	FROM
	      [dbo].[tlkpCore_EventType] EventType1
	WHERE 
		EventType1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN EventType1.[IsActive] ELSE 1 END

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EventTypeCode' THEN EventType1.[EventTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EventTypeCode' THEN EventType1.[EventTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EventTypeName' THEN EventType1.[EventTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EventTypeName' THEN EventType1.[EventTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN EventType1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN EventType1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN EventType1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN EventType1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN EventType1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN EventType1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN EventType1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN EventType1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN EventType1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN EventType1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN EventType1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN EventType1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN EventType1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN EventType1.[Timestamp] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCore_GetAllSeverityLevelData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'SeverityLevelCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all SeverityLevel data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='SeverityLevelCode'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  SeverityLevel1.[SeverityLevelCode]
		, SeverityLevel1.[SeverityLevelName]
		, SeverityLevel1.[Description]
		, SeverityLevel1.[IsActive]
		, SeverityLevel1.[CreatedByUserID]
		, SeverityLevel1.[CreatedDate]
		, SeverityLevel1.[LastModifiedByUserID]
		, SeverityLevel1.[LastModifiedDate]
		, SeverityLevel1.[Timestamp]
	FROM
	      [dbo].[tlkpCore_SeverityLevel] SeverityLevel1
	WHERE 
		SeverityLevel1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN SeverityLevel1.[IsActive] ELSE 1 END

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  SeverityLevel1.[SeverityLevelCode]
		, SeverityLevel1.[SeverityLevelName]
		, SeverityLevel1.[Description]
		, SeverityLevel1.[IsActive]
		, SeverityLevel1.[CreatedByUserID]
		, SeverityLevel1.[CreatedDate]
		, SeverityLevel1.[LastModifiedByUserID]
		, SeverityLevel1.[LastModifiedDate]
		, SeverityLevel1.[Timestamp]
	FROM
	      [dbo].[tlkpCore_SeverityLevel] SeverityLevel1
	WHERE 
		SeverityLevel1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN SeverityLevel1.[IsActive] ELSE 1 END

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'SeverityLevelCode' THEN SeverityLevel1.[SeverityLevelCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'SeverityLevelCode' THEN SeverityLevel1.[SeverityLevelCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'SeverityLevelName' THEN SeverityLevel1.[SeverityLevelName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'SeverityLevelName' THEN SeverityLevel1.[SeverityLevelName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN SeverityLevel1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN SeverityLevel1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN SeverityLevel1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN SeverityLevel1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN SeverityLevel1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN SeverityLevel1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN SeverityLevel1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN SeverityLevel1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN SeverityLevel1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN SeverityLevel1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN SeverityLevel1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN SeverityLevel1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN SeverityLevel1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN SeverityLevel1.[Timestamp] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCore_GetManyBaseAttributeDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @StartIndex int = 1
	, @PageSize int = 50
	, @MaximumListSize int = 0
	, @MaximumListSizeExceeded bit = 0 OUTPUT
	, @TotalRecords int = 0 OUTPUT
	, @SortColumn sysname = 'AttributeName'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @AttributeName nvarchar(100)
	, @AttributeTypeCode int
	, @DataTypeCode int
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets many BaseAttribute data by criteria.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

DECLARE @vEndIndex int
IF (@StartIndex < 1) SET @StartIndex=1
IF (@PageSize < 1) SET @PageSize=1
SET @vEndIndex = @StartIndex + @Pagesize
IF (@SortColumn = '') SET @SortColumn='AttributeName'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

DECLARE @OrderedRecords TABLE
(
     SearchOrderID int IDENTITY (1, 1) NOT NULL
    , BaseAttributeID uniqueidentifier
)
IF (@SortDirection = 'Random')
BEGIN
	INSERT INTO @OrderedRecords (BaseAttributeID)
	SELECT
		  BaseAttribute1.[BaseAttributeID]
	FROM
	      [dbo].[tblCore_BaseAttribute] BaseAttribute1
	INNER JOIN [dbo].[tlkpCore_AttributeType] AttributeType1 ON AttributeType1.[AttributeTypeCode]=BaseAttribute1.[AttributeTypeCode]
	INNER JOIN [dbo].[tlkpCore_DataType] DataType1 ON DataType1.[DataTypeCode]=BaseAttribute1.[DataTypeCode]
	WHERE 
		BaseAttribute1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN BaseAttribute1.[IsActive] ELSE 1 END
		AND (@AttributeName IS NULL OR BaseAttribute1.[AttributeName] like '%' + @AttributeName + '%')
		AND (@AttributeTypeCode IS NULL OR BaseAttribute1.[AttributeTypeCode] = @AttributeTypeCode)
		AND (@DataTypeCode IS NULL OR BaseAttribute1.[DataTypeCode] = @DataTypeCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (BaseAttribute1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (BaseAttribute1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY NewID()
END
ELSE
BEGIN
	INSERT INTO @OrderedRecords (BaseAttributeID)
	SELECT
		  BaseAttribute1.[BaseAttributeID]
	FROM
	      [dbo].[tblCore_BaseAttribute] BaseAttribute1
	INNER JOIN [dbo].[tlkpCore_AttributeType] AttributeType1 ON AttributeType1.[AttributeTypeCode]=BaseAttribute1.[AttributeTypeCode]
	INNER JOIN [dbo].[tlkpCore_DataType] DataType1 ON DataType1.[DataTypeCode]=BaseAttribute1.[DataTypeCode]
	WHERE 
		BaseAttribute1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN BaseAttribute1.[IsActive] ELSE 1 END
		AND (@AttributeName IS NULL OR BaseAttribute1.[AttributeName] like '%' + @AttributeName + '%')
		AND (@AttributeTypeCode IS NULL OR BaseAttribute1.[AttributeTypeCode] = @AttributeTypeCode)
		AND (@DataTypeCode IS NULL OR BaseAttribute1.[DataTypeCode] = @DataTypeCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (BaseAttribute1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (BaseAttribute1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BaseAttributeID' THEN BaseAttribute1.[BaseAttributeID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BaseAttributeID' THEN BaseAttribute1.[BaseAttributeID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeName' THEN BaseAttribute1.[AttributeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeName' THEN BaseAttribute1.[AttributeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeTypeCode' THEN BaseAttribute1.[AttributeTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeTypeCode' THEN BaseAttribute1.[AttributeTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DataTypeCode' THEN BaseAttribute1.[DataTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DataTypeCode' THEN BaseAttribute1.[DataTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN BaseAttribute1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN BaseAttribute1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN BaseAttribute1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN BaseAttribute1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN BaseAttribute1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN BaseAttribute1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN BaseAttribute1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN BaseAttribute1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN BaseAttribute1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN BaseAttribute1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN BaseAttribute1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN BaseAttribute1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN BaseAttribute1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN BaseAttribute1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeTypeName' THEN AttributeType1.[AttributeTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeTypeName' THEN AttributeType1.[AttributeTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DataTypeName' THEN DataType1.[DataTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DataTypeName' THEN DataType1.[DataTypeName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END

BEGIN
	SET @TotalRecords = (SELECT Count (*) FROM @OrderedRecords)
	IF @MaximumListSize > 0
	BEGIN
		IF @TotalRecords > @MaximumListSize
		BEGIN
			SET @MaximumListSizeExceeded = 1
			SET @TotalRecords = @MaximumListSize
		END
	END

	/* get search results */
	SELECT
		  BaseAttribute1.[BaseAttributeID]
		, BaseAttribute1.[AttributeName]
		, BaseAttribute1.[AttributeTypeCode]
		, BaseAttribute1.[DataTypeCode]
		, BaseAttribute1.[Description]
		, BaseAttribute1.[IsActive]
		, BaseAttribute1.[CreatedByUserID]
		, BaseAttribute1.[CreatedDate]
		, BaseAttribute1.[LastModifiedByUserID]
		, BaseAttribute1.[LastModifiedDate]
		, BaseAttribute1.[Timestamp]
		, AttributeType1.[AttributeTypeName]
		, DataType1.[DataTypeName]
	FROM
	      [dbo].[tblCore_BaseAttribute] BaseAttribute1
	INNER JOIN [dbo].[tlkpCore_AttributeType] AttributeType1 ON AttributeType1.[AttributeTypeCode]=BaseAttribute1.[AttributeTypeCode]
	INNER JOIN [dbo].[tlkpCore_DataType] DataType1 ON DataType1.[DataTypeCode]=BaseAttribute1.[DataTypeCode]
	INNER JOIN @OrderedRecords search ON search.[BaseAttributeID] = BaseAttribute1.[BaseAttributeID]
	WHERE
		search.SearchOrderID  >= @StartIndex AND
		search.SearchOrderID  < @vEndIndex
	ORDER BY
		search.SearchOrderID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCore_GetManyDebugAttributeDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @StartIndex int = 1
	, @PageSize int = 50
	, @MaximumListSize int = 0
	, @MaximumListSizeExceeded bit = 0 OUTPUT
	, @TotalRecords int = 0 OUTPUT
	, @SortColumn sysname = 'AttributeName'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @AttributeName nvarchar(100)
	, @AttributeTypeCode int
	, @DataTypeCode int
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets many DebugAttribute data by criteria.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

DECLARE @vEndIndex int
IF (@StartIndex < 1) SET @StartIndex=1
IF (@PageSize < 1) SET @PageSize=1
SET @vEndIndex = @StartIndex + @Pagesize
IF (@SortColumn = '') SET @SortColumn='AttributeName'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

DECLARE @OrderedRecords TABLE
(
     SearchOrderID int IDENTITY (1, 1) NOT NULL
    , BaseAttributeID uniqueidentifier
)
IF (@SortDirection = 'Random')
BEGIN
	INSERT INTO @OrderedRecords (BaseAttributeID)
	SELECT
		  DebugAttribute1.[BaseAttributeID]
	FROM
	      [dbo].[tblCore_DebugAttribute] DebugAttribute1
	INNER JOIN [dbo].[tblCore_BaseAttribute] BaseAttribute1 ON BaseAttribute1.[BaseAttributeID]=DebugAttribute1.[BaseAttributeID]
	INNER JOIN [dbo].[tlkpCore_AttributeType] AttributeType1 ON AttributeType1.[AttributeTypeCode]=BaseAttribute1.[AttributeTypeCode]
	INNER JOIN [dbo].[tlkpCore_DataType] DataType1 ON DataType1.[DataTypeCode]=BaseAttribute1.[DataTypeCode]
	WHERE 
		BaseAttribute1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN BaseAttribute1.[IsActive] ELSE 1 END
		AND (@AttributeName IS NULL OR BaseAttribute1.[AttributeName] like '%' + @AttributeName + '%')
		AND (@AttributeTypeCode IS NULL OR BaseAttribute1.[AttributeTypeCode] = @AttributeTypeCode)
		AND (@DataTypeCode IS NULL OR BaseAttribute1.[DataTypeCode] = @DataTypeCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (BaseAttribute1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (BaseAttribute1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY NewID()
END
ELSE
BEGIN
	INSERT INTO @OrderedRecords (BaseAttributeID)
	SELECT
		  DebugAttribute1.[BaseAttributeID]
	FROM
	      [dbo].[tblCore_DebugAttribute] DebugAttribute1
	INNER JOIN [dbo].[tblCore_BaseAttribute] BaseAttribute1 ON BaseAttribute1.[BaseAttributeID]=DebugAttribute1.[BaseAttributeID]
	INNER JOIN [dbo].[tlkpCore_AttributeType] AttributeType1 ON AttributeType1.[AttributeTypeCode]=BaseAttribute1.[AttributeTypeCode]
	INNER JOIN [dbo].[tlkpCore_DataType] DataType1 ON DataType1.[DataTypeCode]=BaseAttribute1.[DataTypeCode]
	WHERE 
		BaseAttribute1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN BaseAttribute1.[IsActive] ELSE 1 END
		AND (@AttributeName IS NULL OR BaseAttribute1.[AttributeName] like '%' + @AttributeName + '%')
		AND (@AttributeTypeCode IS NULL OR BaseAttribute1.[AttributeTypeCode] = @AttributeTypeCode)
		AND (@DataTypeCode IS NULL OR BaseAttribute1.[DataTypeCode] = @DataTypeCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (BaseAttribute1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (BaseAttribute1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BaseAttributeID' THEN DebugAttribute1.[BaseAttributeID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BaseAttributeID' THEN DebugAttribute1.[BaseAttributeID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeCode' THEN DebugAttribute1.[AttributeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeCode' THEN DebugAttribute1.[AttributeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN DebugAttribute1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN DebugAttribute1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN DebugAttribute1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN DebugAttribute1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN DebugAttribute1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN DebugAttribute1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN DebugAttribute1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN DebugAttribute1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN DebugAttribute1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN DebugAttribute1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeName' THEN BaseAttribute1.[AttributeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeName' THEN BaseAttribute1.[AttributeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeTypeCode' THEN BaseAttribute1.[AttributeTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeTypeCode' THEN BaseAttribute1.[AttributeTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DataTypeCode' THEN BaseAttribute1.[DataTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DataTypeCode' THEN BaseAttribute1.[DataTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN BaseAttribute1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN BaseAttribute1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN BaseAttribute1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN BaseAttribute1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeTypeName' THEN AttributeType1.[AttributeTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeTypeName' THEN AttributeType1.[AttributeTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DataTypeName' THEN DataType1.[DataTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DataTypeName' THEN DataType1.[DataTypeName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END

BEGIN
	SET @TotalRecords = (SELECT Count (*) FROM @OrderedRecords)
	IF @MaximumListSize > 0
	BEGIN
		IF @TotalRecords > @MaximumListSize
		BEGIN
			SET @MaximumListSizeExceeded = 1
			SET @TotalRecords = @MaximumListSize
		END
	END

	/* get search results */
	SELECT
		  DebugAttribute1.[BaseAttributeID]
		, DebugAttribute1.[AttributeCode]
		, DebugAttribute1.[CreatedByUserID]
		, DebugAttribute1.[CreatedDate]
		, DebugAttribute1.[LastModifiedByUserID]
		, DebugAttribute1.[LastModifiedDate]
		, DebugAttribute1.[Timestamp]
		, BaseAttribute1.[AttributeName]
		, BaseAttribute1.[AttributeTypeCode]
		, BaseAttribute1.[DataTypeCode]
		, BaseAttribute1.[Description]
		, BaseAttribute1.[IsActive]
		, AttributeType1.[AttributeTypeName]
		, DataType1.[DataTypeName]
	FROM
	      [dbo].[tblCore_DebugAttribute] DebugAttribute1
	INNER JOIN [dbo].[tblCore_BaseAttribute] BaseAttribute1 ON BaseAttribute1.[BaseAttributeID]=DebugAttribute1.[BaseAttributeID]
	INNER JOIN [dbo].[tlkpCore_AttributeType] AttributeType1 ON AttributeType1.[AttributeTypeCode]=BaseAttribute1.[AttributeTypeCode]
	INNER JOIN [dbo].[tlkpCore_DataType] DataType1 ON DataType1.[DataTypeCode]=BaseAttribute1.[DataTypeCode]
	INNER JOIN @OrderedRecords search ON search.[BaseAttributeID] = DebugAttribute1.[BaseAttributeID]
	WHERE
		search.SearchOrderID  >= @StartIndex AND
		search.SearchOrderID  < @vEndIndex
	ORDER BY
		search.SearchOrderID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCore_GetManyDebugAttributeValueLogDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @StartIndex int = 1
	, @PageSize int = 50
	, @MaximumListSize int = 0
	, @MaximumListSizeExceeded bit = 0 OUTPUT
	, @TotalRecords int = 0 OUTPUT
	, @SortColumn sysname = 'AttributeValue'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @AttributeValue nvarchar(1000)
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets many DebugAttributeValueLog data by criteria.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

DECLARE @vEndIndex int
IF (@StartIndex < 1) SET @StartIndex=1
IF (@PageSize < 1) SET @PageSize=1
SET @vEndIndex = @StartIndex + @Pagesize
IF (@SortColumn = '') SET @SortColumn='AttributeValue'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

DECLARE @OrderedRecords TABLE
(
     SearchOrderID int IDENTITY (1, 1) NOT NULL
    , DebugAttributeValueLogID uniqueidentifier
)
IF (@SortDirection = 'Random')
BEGIN
	INSERT INTO @OrderedRecords (DebugAttributeValueLogID)
	SELECT
		  DebugAttributeValueLog1.[DebugAttributeValueLogID]
	FROM
	      [dbo].[tblCore_DebugAttributeValueLog] DebugAttributeValueLog1
	INNER JOIN [dbo].[tblCore_DebugLog] DebugLog1 ON DebugLog1.[DebugLogID]=DebugAttributeValueLog1.[DebugLogID]
	WHERE 
		(@AttributeValue IS NULL OR DebugAttributeValueLog1.[AttributeValue] like '%' + @AttributeValue + '%')
		AND ((@LastModifiedDateStart  IS NULL) OR (DebugAttributeValueLog1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (DebugAttributeValueLog1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY NewID()
END
ELSE
BEGIN
	INSERT INTO @OrderedRecords (DebugAttributeValueLogID)
	SELECT
		  DebugAttributeValueLog1.[DebugAttributeValueLogID]
	FROM
	      [dbo].[tblCore_DebugAttributeValueLog] DebugAttributeValueLog1
	INNER JOIN [dbo].[tblCore_DebugLog] DebugLog1 ON DebugLog1.[DebugLogID]=DebugAttributeValueLog1.[DebugLogID]
	WHERE 
		(@AttributeValue IS NULL OR DebugAttributeValueLog1.[AttributeValue] like '%' + @AttributeValue + '%')
		AND ((@LastModifiedDateStart  IS NULL) OR (DebugAttributeValueLog1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (DebugAttributeValueLog1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DebugAttributeValueLogID' THEN DebugAttributeValueLog1.[DebugAttributeValueLogID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DebugAttributeValueLogID' THEN DebugAttributeValueLog1.[DebugAttributeValueLogID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DebugLogID' THEN DebugAttributeValueLog1.[DebugLogID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DebugLogID' THEN DebugAttributeValueLog1.[DebugLogID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BaseAttributeID' THEN DebugAttributeValueLog1.[BaseAttributeID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BaseAttributeID' THEN DebugAttributeValueLog1.[BaseAttributeID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeValue' THEN DebugAttributeValueLog1.[AttributeValue] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeValue' THEN DebugAttributeValueLog1.[AttributeValue] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN DebugAttributeValueLog1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN DebugAttributeValueLog1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN DebugAttributeValueLog1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN DebugAttributeValueLog1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN DebugAttributeValueLog1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN DebugAttributeValueLog1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN DebugAttributeValueLog1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN DebugAttributeValueLog1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN DebugAttributeValueLog1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN DebugAttributeValueLog1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EventName' THEN DebugLog1.[EventName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EventName' THEN DebugLog1.[EventName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ErrorNumber' THEN DebugLog1.[ErrorNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ErrorNumber' THEN DebugLog1.[ErrorNumber] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END

BEGIN
	SET @TotalRecords = (SELECT Count (*) FROM @OrderedRecords)
	IF @MaximumListSize > 0
	BEGIN
		IF @TotalRecords > @MaximumListSize
		BEGIN
			SET @MaximumListSizeExceeded = 1
			SET @TotalRecords = @MaximumListSize
		END
	END

	/* get search results */
	SELECT
		  DebugAttributeValueLog1.[DebugAttributeValueLogID]
		, DebugAttributeValueLog1.[DebugLogID]
		, DebugAttributeValueLog1.[BaseAttributeID]
		, DebugAttributeValueLog1.[AttributeValue]
		, DebugAttributeValueLog1.[CreatedByUserID]
		, DebugAttributeValueLog1.[CreatedDate]
		, DebugAttributeValueLog1.[LastModifiedByUserID]
		, DebugAttributeValueLog1.[LastModifiedDate]
		, DebugAttributeValueLog1.[Timestamp]
		, DebugLog1.[EventName]
		, DebugLog1.[ErrorNumber]
	FROM
	      [dbo].[tblCore_DebugAttributeValueLog] DebugAttributeValueLog1
	INNER JOIN [dbo].[tblCore_DebugLog] DebugLog1 ON DebugLog1.[DebugLogID]=DebugAttributeValueLog1.[DebugLogID]
	INNER JOIN @OrderedRecords search ON search.[DebugAttributeValueLogID] = DebugAttributeValueLog1.[DebugAttributeValueLogID]
	WHERE
		search.SearchOrderID  >= @StartIndex AND
		search.SearchOrderID  < @vEndIndex
	ORDER BY
		search.SearchOrderID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCore_GetManyDebugLogDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @StartIndex int = 1
	, @PageSize int = 50
	, @MaximumListSize int = 0
	, @MaximumListSizeExceeded bit = 0 OUTPUT
	, @TotalRecords int = 0 OUTPUT
	, @SortColumn sysname = 'EventName'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @EventName nvarchar(255) = NULL
	, @ErrorNumber int = NULL
	, @EventTypeCode int
	, @SeverityLevelCode int
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets many DebugLog data by criteria.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

DECLARE @vEndIndex int
IF (@StartIndex < 1) SET @StartIndex=1
IF (@PageSize < 1) SET @PageSize=1
SET @vEndIndex = @StartIndex + @Pagesize
IF (@SortColumn = '') SET @SortColumn='EventName'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

DECLARE @OrderedRecords TABLE
(
     SearchOrderID int IDENTITY (1, 1) NOT NULL
    , DebugLogID uniqueidentifier
)
IF (@SortDirection = 'Random')
BEGIN
	INSERT INTO @OrderedRecords (DebugLogID)
	SELECT
		  DebugLog1.[DebugLogID]
	FROM
	      [dbo].[tblCore_DebugLog] DebugLog1
	INNER JOIN [dbo].[tlkpCore_EventType] EventType1 ON EventType1.[EventTypeCode]=DebugLog1.[EventTypeCode]
	INNER JOIN [dbo].[tlkpCore_SeverityLevel] SeverityLevel1 ON SeverityLevel1.[SeverityLevelCode]=DebugLog1.[SeverityLevelCode]
	WHERE 
		(@EventName IS NULL OR DebugLog1.[EventName] like '%' + @EventName + '%')
		AND (@ErrorNumber IS NULL OR DebugLog1.[ErrorNumber] = @ErrorNumber)
		AND (@EventTypeCode IS NULL OR DebugLog1.[EventTypeCode] = @EventTypeCode)
		AND (@SeverityLevelCode IS NULL OR DebugLog1.[SeverityLevelCode] = @SeverityLevelCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (DebugLog1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (DebugLog1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY NewID()
END
ELSE
BEGIN
	INSERT INTO @OrderedRecords (DebugLogID)
	SELECT
		  DebugLog1.[DebugLogID]
	FROM
	      [dbo].[tblCore_DebugLog] DebugLog1
	INNER JOIN [dbo].[tlkpCore_EventType] EventType1 ON EventType1.[EventTypeCode]=DebugLog1.[EventTypeCode]
	INNER JOIN [dbo].[tlkpCore_SeverityLevel] SeverityLevel1 ON SeverityLevel1.[SeverityLevelCode]=DebugLog1.[SeverityLevelCode]
	WHERE 
		(@EventName IS NULL OR DebugLog1.[EventName] like '%' + @EventName + '%')
		AND (@ErrorNumber IS NULL OR DebugLog1.[ErrorNumber] = @ErrorNumber)
		AND (@EventTypeCode IS NULL OR DebugLog1.[EventTypeCode] = @EventTypeCode)
		AND (@SeverityLevelCode IS NULL OR DebugLog1.[SeverityLevelCode] = @SeverityLevelCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (DebugLog1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (DebugLog1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DebugLogID' THEN DebugLog1.[DebugLogID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DebugLogID' THEN DebugLog1.[DebugLogID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EventName' THEN DebugLog1.[EventName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EventName' THEN DebugLog1.[EventName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Message' THEN DebugLog1.[Message] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Message' THEN DebugLog1.[Message] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ErrorNumber' THEN DebugLog1.[ErrorNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ErrorNumber' THEN DebugLog1.[ErrorNumber] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EventTypeCode' THEN DebugLog1.[EventTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EventTypeCode' THEN DebugLog1.[EventTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'SeverityLevelCode' THEN DebugLog1.[SeverityLevelCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'SeverityLevelCode' THEN DebugLog1.[SeverityLevelCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN DebugLog1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN DebugLog1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN DebugLog1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN DebugLog1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN DebugLog1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN DebugLog1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN DebugLog1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN DebugLog1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN DebugLog1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN DebugLog1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EventTypeName' THEN EventType1.[EventTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EventTypeName' THEN EventType1.[EventTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'SeverityLevelName' THEN SeverityLevel1.[SeverityLevelName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'SeverityLevelName' THEN SeverityLevel1.[SeverityLevelName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END

BEGIN
	SET @TotalRecords = (SELECT Count (*) FROM @OrderedRecords)
	IF @MaximumListSize > 0
	BEGIN
		IF @TotalRecords > @MaximumListSize
		BEGIN
			SET @MaximumListSizeExceeded = 1
			SET @TotalRecords = @MaximumListSize
		END
	END

	/* get search results */
	SELECT
		  DebugLog1.[DebugLogID]
		, DebugLog1.[EventName]
		, DebugLog1.[Message]
		, DebugLog1.[ErrorNumber]
		, DebugLog1.[EventTypeCode]
		, DebugLog1.[SeverityLevelCode]
		, DebugLog1.[CreatedByUserID]
		, DebugLog1.[CreatedDate]
		, DebugLog1.[LastModifiedByUserID]
		, DebugLog1.[LastModifiedDate]
		, DebugLog1.[Timestamp]
		, EventType1.[EventTypeName]
		, SeverityLevel1.[SeverityLevelName]
	FROM
	      [dbo].[tblCore_DebugLog] DebugLog1
	INNER JOIN [dbo].[tlkpCore_EventType] EventType1 ON EventType1.[EventTypeCode]=DebugLog1.[EventTypeCode]
	INNER JOIN [dbo].[tlkpCore_SeverityLevel] SeverityLevel1 ON SeverityLevel1.[SeverityLevelCode]=DebugLog1.[SeverityLevelCode]
	INNER JOIN @OrderedRecords search ON search.[DebugLogID] = DebugLog1.[DebugLogID]
	WHERE
		search.SearchOrderID  >= @StartIndex AND
		search.SearchOrderID  < @vEndIndex
	ORDER BY
		search.SearchOrderID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCore_GetOneAttributeType
	  @SqlErrorNumber int = 0 OUTPUT
	, @AttributeTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single AttributeType by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AttributeTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  AttributeType1.[AttributeTypeCode]
		, AttributeType1.[AttributeTypeName]
		, AttributeType1.[Description]
		, AttributeType1.[IsActive]
		, AttributeType1.[CreatedByUserID]
		, AttributeType1.[CreatedDate]
		, AttributeType1.[LastModifiedByUserID]
		, AttributeType1.[LastModifiedDate]
		, AttributeType1.[Timestamp]
	FROM
	      [dbo].[tlkpCore_AttributeType] AttributeType1
	WHERE AttributeType1.[AttributeTypeCode] =  @AttributeTypeCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCore_GetOneBaseAttribute
	  @SqlErrorNumber int = 0 OUTPUT
	, @BaseAttributeID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single BaseAttribute by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@BaseAttributeID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  BaseAttribute1.[BaseAttributeID]
		, BaseAttribute1.[AttributeName]
		, BaseAttribute1.[AttributeTypeCode]
		, BaseAttribute1.[DataTypeCode]
		, BaseAttribute1.[Description]
		, BaseAttribute1.[IsActive]
		, BaseAttribute1.[CreatedByUserID]
		, BaseAttribute1.[CreatedDate]
		, BaseAttribute1.[LastModifiedByUserID]
		, BaseAttribute1.[LastModifiedDate]
		, BaseAttribute1.[Timestamp]
		, AttributeType1.[AttributeTypeName]
		, DataType1.[DataTypeName]
	FROM
	      [dbo].[tblCore_BaseAttribute] BaseAttribute1
	INNER JOIN [dbo].[tlkpCore_AttributeType] AttributeType1 ON AttributeType1.[AttributeTypeCode]=BaseAttribute1.[AttributeTypeCode]
	INNER JOIN [dbo].[tlkpCore_DataType] DataType1 ON DataType1.[DataTypeCode]=BaseAttribute1.[DataTypeCode]
	WHERE BaseAttribute1.[BaseAttributeID] =  @BaseAttributeID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCore_GetOneDataType
	  @SqlErrorNumber int = 0 OUTPUT
	, @DataTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single DataType by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@DataTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  DataType1.[DataTypeCode]
		, DataType1.[DataTypeName]
		, DataType1.[Description]
		, DataType1.[IsActive]
		, DataType1.[CreatedByUserID]
		, DataType1.[CreatedDate]
		, DataType1.[LastModifiedByUserID]
		, DataType1.[LastModifiedDate]
		, DataType1.[Timestamp]
	FROM
	      [dbo].[tlkpCore_DataType] DataType1
	WHERE DataType1.[DataTypeCode] =  @DataTypeCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCore_GetOneDebugAttribute
	  @SqlErrorNumber int = 0 OUTPUT
	, @BaseAttributeID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single DebugAttribute by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@BaseAttributeID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  DebugAttribute1.[BaseAttributeID]
		, DebugAttribute1.[AttributeCode]
		, DebugAttribute1.[CreatedByUserID]
		, DebugAttribute1.[CreatedDate]
		, DebugAttribute1.[LastModifiedByUserID]
		, DebugAttribute1.[LastModifiedDate]
		, DebugAttribute1.[Timestamp]
		, BaseAttribute1.[AttributeName]
		, BaseAttribute1.[AttributeTypeCode]
		, BaseAttribute1.[DataTypeCode]
		, BaseAttribute1.[Description]
		, BaseAttribute1.[IsActive]
		, AttributeType1.[AttributeTypeName]
		, DataType1.[DataTypeName]
	FROM
	      [dbo].[tblCore_DebugAttribute] DebugAttribute1
	INNER JOIN [dbo].[tblCore_BaseAttribute] BaseAttribute1 ON BaseAttribute1.[BaseAttributeID]=DebugAttribute1.[BaseAttributeID]
	INNER JOIN [dbo].[tlkpCore_AttributeType] AttributeType1 ON AttributeType1.[AttributeTypeCode]=BaseAttribute1.[AttributeTypeCode]
	INNER JOIN [dbo].[tlkpCore_DataType] DataType1 ON DataType1.[DataTypeCode]=BaseAttribute1.[DataTypeCode]
	WHERE DebugAttribute1.[BaseAttributeID] =  @BaseAttributeID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCore_GetOneDebugAttributeByAttributeCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @AttributeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single DebugAttribute by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AttributeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  DebugAttribute1.[BaseAttributeID]
		, DebugAttribute1.[AttributeCode]
		, DebugAttribute1.[CreatedByUserID]
		, DebugAttribute1.[CreatedDate]
		, DebugAttribute1.[LastModifiedByUserID]
		, DebugAttribute1.[LastModifiedDate]
		, DebugAttribute1.[Timestamp]
		, BaseAttribute1.[AttributeName]
		, BaseAttribute1.[AttributeTypeCode]
		, BaseAttribute1.[DataTypeCode]
		, BaseAttribute1.[Description]
		, BaseAttribute1.[IsActive]
		, AttributeType1.[AttributeTypeName]
		, DataType1.[DataTypeName]
	FROM
	      [dbo].[tblCore_DebugAttribute] DebugAttribute1
	INNER JOIN [dbo].[tblCore_BaseAttribute] BaseAttribute1 ON BaseAttribute1.[BaseAttributeID]=DebugAttribute1.[BaseAttributeID]
	INNER JOIN [dbo].[tlkpCore_AttributeType] AttributeType1 ON AttributeType1.[AttributeTypeCode]=BaseAttribute1.[AttributeTypeCode]
	INNER JOIN [dbo].[tlkpCore_DataType] DataType1 ON DataType1.[DataTypeCode]=BaseAttribute1.[DataTypeCode]
	WHERE DebugAttribute1.[AttributeCode] =  @AttributeCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCore_GetOneDebugAttributeValueLog
	  @SqlErrorNumber int = 0 OUTPUT
	, @DebugAttributeValueLogID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single DebugAttributeValueLog by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@DebugAttributeValueLogID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  DebugAttributeValueLog1.[DebugAttributeValueLogID]
		, DebugAttributeValueLog1.[DebugLogID]
		, DebugAttributeValueLog1.[BaseAttributeID]
		, DebugAttributeValueLog1.[AttributeValue]
		, DebugAttributeValueLog1.[CreatedByUserID]
		, DebugAttributeValueLog1.[CreatedDate]
		, DebugAttributeValueLog1.[LastModifiedByUserID]
		, DebugAttributeValueLog1.[LastModifiedDate]
		, DebugAttributeValueLog1.[Timestamp]
		, DebugLog1.[EventName]
		, DebugLog1.[ErrorNumber]
	FROM
	      [dbo].[tblCore_DebugAttributeValueLog] DebugAttributeValueLog1
	INNER JOIN [dbo].[tblCore_DebugLog] DebugLog1 ON DebugLog1.[DebugLogID]=DebugAttributeValueLog1.[DebugLogID]
	WHERE DebugAttributeValueLog1.[DebugAttributeValueLogID] =  @DebugAttributeValueLogID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCore_GetOneDebugAttributeValueLogByDebugAttributeValueLogID
	  @SqlErrorNumber int = 0 OUTPUT
	, @DebugAttributeValueLogID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single DebugAttributeValueLog by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@DebugAttributeValueLogID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  DebugAttributeValueLog1.[DebugAttributeValueLogID]
		, DebugAttributeValueLog1.[DebugLogID]
		, DebugAttributeValueLog1.[BaseAttributeID]
		, DebugAttributeValueLog1.[AttributeValue]
		, DebugAttributeValueLog1.[CreatedByUserID]
		, DebugAttributeValueLog1.[CreatedDate]
		, DebugAttributeValueLog1.[LastModifiedByUserID]
		, DebugAttributeValueLog1.[LastModifiedDate]
		, DebugAttributeValueLog1.[Timestamp]
		, DebugLog1.[EventName]
		, DebugLog1.[ErrorNumber]
	FROM
	      [dbo].[tblCore_DebugAttributeValueLog] DebugAttributeValueLog1
	INNER JOIN [dbo].[tblCore_DebugLog] DebugLog1 ON DebugLog1.[DebugLogID]=DebugAttributeValueLog1.[DebugLogID]
	WHERE DebugAttributeValueLog1.[DebugAttributeValueLogID] =  @DebugAttributeValueLogID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCore_GetOneDebugLog
	  @SqlErrorNumber int = 0 OUTPUT
	, @DebugLogID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single DebugLog by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@DebugLogID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  DebugLog1.[DebugLogID]
		, DebugLog1.[EventName]
		, DebugLog1.[Message]
		, DebugLog1.[ErrorNumber]
		, DebugLog1.[EventTypeCode]
		, DebugLog1.[SeverityLevelCode]
		, DebugLog1.[CreatedByUserID]
		, DebugLog1.[CreatedDate]
		, DebugLog1.[LastModifiedByUserID]
		, DebugLog1.[LastModifiedDate]
		, DebugLog1.[Timestamp]
		, EventType1.[EventTypeName]
		, SeverityLevel1.[SeverityLevelName]
	FROM
	      [dbo].[tblCore_DebugLog] DebugLog1
	INNER JOIN [dbo].[tlkpCore_EventType] EventType1 ON EventType1.[EventTypeCode]=DebugLog1.[EventTypeCode]
	INNER JOIN [dbo].[tlkpCore_SeverityLevel] SeverityLevel1 ON SeverityLevel1.[SeverityLevelCode]=DebugLog1.[SeverityLevelCode]
	WHERE DebugLog1.[DebugLogID] =  @DebugLogID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCore_GetOneError
	  @SqlErrorNumber int = 0 OUTPUT
	, @ErrorNumber int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single Error by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@ErrorNumber IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  Error1.[ErrorNumber]
		, Error1.[ErrorTitle]
		, Error1.[ErrorMessage]
		, Error1.[CreatedByUserID]
		, Error1.[CreatedDate]
		, Error1.[LastModifiedByUserID]
		, Error1.[LastModifiedDate]
		, Error1.[Timestamp]
	FROM
	      [dbo].[tlkpCore_Error] Error1
	WHERE Error1.[ErrorNumber] =  @ErrorNumber

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCore_GetOneEventType
	  @SqlErrorNumber int = 0 OUTPUT
	, @EventTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single EventType by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@EventTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  EventType1.[EventTypeCode]
		, EventType1.[EventTypeName]
		, EventType1.[Description]
		, EventType1.[IsActive]
		, EventType1.[CreatedByUserID]
		, EventType1.[CreatedDate]
		, EventType1.[LastModifiedByUserID]
		, EventType1.[LastModifiedDate]
		, EventType1.[Timestamp]
	FROM
	      [dbo].[tlkpCore_EventType] EventType1
	WHERE EventType1.[EventTypeCode] =  @EventTypeCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCore_GetOneSeverityLevel
	  @SqlErrorNumber int = 0 OUTPUT
	, @SeverityLevelCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single SeverityLevel by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@SeverityLevelCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  SeverityLevel1.[SeverityLevelCode]
		, SeverityLevel1.[SeverityLevelName]
		, SeverityLevel1.[Description]
		, SeverityLevel1.[IsActive]
		, SeverityLevel1.[CreatedByUserID]
		, SeverityLevel1.[CreatedDate]
		, SeverityLevel1.[LastModifiedByUserID]
		, SeverityLevel1.[LastModifiedDate]
		, SeverityLevel1.[Timestamp]
	FROM
	      [dbo].[tlkpCore_SeverityLevel] SeverityLevel1
	WHERE SeverityLevel1.[SeverityLevelCode] =  @SeverityLevelCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCore_LogOneDebugAttributeValueLog
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @DebugAttributeValueLogID uniqueidentifier = NULL OUTPUT
	, @DebugLogID uniqueidentifier
	, @BaseAttributeID uniqueidentifier
	, @AttributeValue nvarchar(1000)
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure logs DebugAttributeValueLog data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@DebugLogID IS NULL OR @BaseAttributeID IS NULL OR @AttributeValue IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF EXISTS (SELECT [DebugAttributeValueLogID] FROM [dbo].[tblCore_DebugAttributeValueLog] WHERE [DebugAttributeValueLogID] =  @DebugAttributeValueLogID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	IF @DebugAttributeValueLogID  IS NULL
	BEGIN
		SET @DebugAttributeValueLogID  = NEWID ()
	END
	INSERT
	      [dbo].[tblCore_DebugAttributeValueLog]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [DebugAttributeValueLogID]
	   , [DebugLogID]
	   , [BaseAttributeID]
	   , [AttributeValue]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @DebugAttributeValueLogID
	   , @DebugLogID
	   , @BaseAttributeID
	   , @AttributeValue
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCore_LogOneDebugLog
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @DebugLogID uniqueidentifier = NULL OUTPUT
	, @EventName nvarchar(255) = NULL
	, @Message nvarchar(1000) = NULL
	, @ErrorNumber int = NULL
	, @EventTypeCode int
	, @SeverityLevelCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure logs DebugLog data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@EventTypeCode IS NULL OR @SeverityLevelCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF EXISTS (SELECT [DebugLogID] FROM [dbo].[tblCore_DebugLog] WHERE [DebugLogID] =  @DebugLogID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	IF @DebugLogID  IS NULL
	BEGIN
		SET @DebugLogID  = NEWID ()
	END
	INSERT
	      [dbo].[tblCore_DebugLog]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [DebugLogID]
	   , [EventName]
	   , [Message]
	   , [ErrorNumber]
	   , [EventTypeCode]
	   , [SeverityLevelCode]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @DebugLogID
	   , @EventName
	   , @Message
	   , @ErrorNumber
	   , @EventTypeCode
	   , @SeverityLevelCode
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCore_UpdateOneAttributeType
	  @SqlErrorNumber int = 0 OUTPUT
	, @LastModifiedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @AttributeTypeCode int
	, @AttributeTypeName nvarchar(100)
	, @Description nvarchar(1000) = NULL
	, @IsActive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure updates AttributeType data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AttributeTypeCode IS NULL OR @AttributeTypeName IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [AttributeTypeCode] FROM [dbo].[tlkpCore_AttributeType] WHERE [AttributeTypeCode] =  @AttributeTypeCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [AttributeTypeCode] FROM [dbo].[tlkpCore_AttributeType] WHERE [AttributeTypeCode] =  @AttributeTypeCode AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	UPDATE
	      [dbo].[tlkpCore_AttributeType]
	SET
	     [LastModifiedByUserID] = @LastModifiedByUserID
	   , [LastModifiedDate] = getdate()
	   , [AttributeTypeCode] = @AttributeTypeCode
	   , [AttributeTypeName] = @AttributeTypeName
	   , [Description] = @Description
	   , [IsActive] = @IsActive
	WHERE [AttributeTypeCode] =  @AttributeTypeCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

	SET  @Timestamp = @@DBTS

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCore_UpdateOneDataType
	  @SqlErrorNumber int = 0 OUTPUT
	, @LastModifiedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @DataTypeCode int
	, @DataTypeName nvarchar(100)
	, @Description nvarchar(1000) = NULL
	, @IsActive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure updates DataType data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@DataTypeCode IS NULL OR @DataTypeName IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [DataTypeCode] FROM [dbo].[tlkpCore_DataType] WHERE [DataTypeCode] =  @DataTypeCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [DataTypeCode] FROM [dbo].[tlkpCore_DataType] WHERE [DataTypeCode] =  @DataTypeCode AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	UPDATE
	      [dbo].[tlkpCore_DataType]
	SET
	     [LastModifiedByUserID] = @LastModifiedByUserID
	   , [LastModifiedDate] = getdate()
	   , [DataTypeCode] = @DataTypeCode
	   , [DataTypeName] = @DataTypeName
	   , [Description] = @Description
	   , [IsActive] = @IsActive
	WHERE [DataTypeCode] =  @DataTypeCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

	SET  @Timestamp = @@DBTS

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCore_UpdateOneDebugAttribute
	  @SqlErrorNumber int = 0 OUTPUT
	, @LastModifiedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @BaseAttributeID uniqueidentifier
	, @AttributeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure updates DebugAttribute data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@BaseAttributeID IS NULL OR @AttributeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [BaseAttributeID] FROM [dbo].[tblCore_DebugAttribute] WHERE [BaseAttributeID] =  @BaseAttributeID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [BaseAttributeID] FROM [dbo].[tblCore_DebugAttribute] WHERE [BaseAttributeID] =  @BaseAttributeID AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	UPDATE
	      [dbo].[tblCore_DebugAttribute]
	SET
	     [LastModifiedByUserID] = @LastModifiedByUserID
	   , [LastModifiedDate] = getdate()
	   , [BaseAttributeID] = @BaseAttributeID
	   , [AttributeCode] = @AttributeCode
	WHERE [BaseAttributeID] =  @BaseAttributeID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

	SET  @Timestamp = @@DBTS

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCore_UpdateOneError
	  @SqlErrorNumber int = 0 OUTPUT
	, @LastModifiedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @ErrorNumber int
	, @ErrorTitle nvarchar(100)
	, @ErrorMessage nvarchar(1000) = NULL
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure updates Error data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@ErrorNumber IS NULL OR @ErrorTitle IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [ErrorNumber] FROM [dbo].[tlkpCore_Error] WHERE [ErrorNumber] =  @ErrorNumber)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [ErrorNumber] FROM [dbo].[tlkpCore_Error] WHERE [ErrorNumber] =  @ErrorNumber AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	UPDATE
	      [dbo].[tlkpCore_Error]
	SET
	     [LastModifiedByUserID] = @LastModifiedByUserID
	   , [LastModifiedDate] = getdate()
	   , [ErrorNumber] = @ErrorNumber
	   , [ErrorTitle] = @ErrorTitle
	   , [ErrorMessage] = @ErrorMessage
	WHERE [ErrorNumber] =  @ErrorNumber

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

	SET  @Timestamp = @@DBTS

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCore_UpdateOneEventType
	  @SqlErrorNumber int = 0 OUTPUT
	, @LastModifiedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @EventTypeCode int
	, @EventTypeName nvarchar(100)
	, @Description nvarchar(1000) = NULL
	, @IsActive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure updates EventType data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@EventTypeCode IS NULL OR @EventTypeName IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [EventTypeCode] FROM [dbo].[tlkpCore_EventType] WHERE [EventTypeCode] =  @EventTypeCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [EventTypeCode] FROM [dbo].[tlkpCore_EventType] WHERE [EventTypeCode] =  @EventTypeCode AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	UPDATE
	      [dbo].[tlkpCore_EventType]
	SET
	     [LastModifiedByUserID] = @LastModifiedByUserID
	   , [LastModifiedDate] = getdate()
	   , [EventTypeCode] = @EventTypeCode
	   , [EventTypeName] = @EventTypeName
	   , [Description] = @Description
	   , [IsActive] = @IsActive
	WHERE [EventTypeCode] =  @EventTypeCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

	SET  @Timestamp = @@DBTS

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCore_UpdateOneSeverityLevel
	  @SqlErrorNumber int = 0 OUTPUT
	, @LastModifiedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @SeverityLevelCode int
	, @SeverityLevelName nvarchar(255)
	, @Description nvarchar(1000) = NULL
	, @IsActive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure updates SeverityLevel data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@SeverityLevelCode IS NULL OR @SeverityLevelName IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [SeverityLevelCode] FROM [dbo].[tlkpCore_SeverityLevel] WHERE [SeverityLevelCode] =  @SeverityLevelCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [SeverityLevelCode] FROM [dbo].[tlkpCore_SeverityLevel] WHERE [SeverityLevelCode] =  @SeverityLevelCode AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	UPDATE
	      [dbo].[tlkpCore_SeverityLevel]
	SET
	     [LastModifiedByUserID] = @LastModifiedByUserID
	   , [LastModifiedDate] = getdate()
	   , [SeverityLevelCode] = @SeverityLevelCode
	   , [SeverityLevelName] = @SeverityLevelName
	   , [Description] = @Description
	   , [IsActive] = @IsActive
	WHERE [SeverityLevelCode] =  @SeverityLevelCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

	SET  @Timestamp = @@DBTS

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCore_UpsertOneBaseAttribute
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @LastModifiedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @BaseAttributeID uniqueidentifier = NULL OUTPUT
	, @AttributeName nvarchar(100)
	, @AttributeTypeCode int
	, @DataTypeCode int
	, @Description nvarchar(1000) = NULL
	, @IsActive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure inserts or updates BaseAttribute data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AttributeName IS NULL OR @AttributeTypeCode IS NULL OR @DataTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [BaseAttributeID] FROM [dbo].[tblCore_BaseAttribute] WHERE [BaseAttributeID] =  @BaseAttributeID AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
IF NOT EXISTS (SELECT [BaseAttributeID] FROM [dbo].[tblCore_BaseAttribute] WHERE [BaseAttributeID] =  @BaseAttributeID)
BEGIN
	IF @BaseAttributeID  IS NULL
	BEGIN
		SET @BaseAttributeID  = NEWID ()
	END
	INSERT
	      [dbo].[tblCore_BaseAttribute]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [BaseAttributeID]
	   , [AttributeName]
	   , [AttributeTypeCode]
	   , [DataTypeCode]
	   , [Description]
	   , [IsActive]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @BaseAttributeID
	   , @AttributeName
	   , @AttributeTypeCode
	   , @DataTypeCode
	   , @Description
	   , @IsActive
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
	END
ELSE
BEGIN
	UPDATE
	      [dbo].[tblCore_BaseAttribute]
	SET
	     [LastModifiedByUserID] = @LastModifiedByUserID
	   , [LastModifiedDate] = getdate()
	   , [BaseAttributeID] = @BaseAttributeID
	   , [AttributeName] = @AttributeName
	   , [AttributeTypeCode] = @AttributeTypeCode
	   , [DataTypeCode] = @DataTypeCode
	   , [Description] = @Description
	   , [IsActive] = @IsActive
	WHERE [BaseAttributeID] =  @BaseAttributeID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

	SET  @Timestamp = @@DBTS

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_AddOneBank
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @MetaPartnerID uniqueidentifier
	, @BankCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure inserts Bank data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@MetaPartnerID IS NULL OR @BankCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF EXISTS (SELECT [MetaPartnerID] FROM [dbo].[tblCustomers_Bank] WHERE [MetaPartnerID] =  @MetaPartnerID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	INSERT
	      [dbo].[tblCustomers_Bank]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [MetaPartnerID]
	   , [BankCode]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @MetaPartnerID
	   , @BankCode
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_AddOneBusiness
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @MetaPartnerID uniqueidentifier
	, @ServiceCharges nvarchar(255) = NULL
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure inserts Business data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF EXISTS (SELECT [MetaPartnerID] FROM [dbo].[tblCustomers_Business] WHERE [MetaPartnerID] =  @MetaPartnerID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	INSERT
	      [dbo].[tblCustomers_Business]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [MetaPartnerID]
	   , [ServiceCharges]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @MetaPartnerID
	   , @ServiceCharges
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_AddOneBusinessCustomer
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @BusinessMetaPartnerID uniqueidentifier
	, @CustomerMetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure inserts BusinessCustomer data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@BusinessMetaPartnerID IS NULL OR @CustomerMetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF EXISTS (SELECT [BusinessMetaPartnerID], [CustomerMetaPartnerID] FROM [dbo].[trelCustomers_BusinessCustomer] WHERE [BusinessMetaPartnerID] =  @BusinessMetaPartnerID AND [CustomerMetaPartnerID] =  @CustomerMetaPartnerID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	INSERT
	      [dbo].[trelCustomers_BusinessCustomer]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [BusinessMetaPartnerID]
	   , [CustomerMetaPartnerID]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @BusinessMetaPartnerID
	   , @CustomerMetaPartnerID
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_AddOneCarrier
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @MetaPartnerID uniqueidentifier
	, @CarrierCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure inserts Carrier data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@MetaPartnerID IS NULL OR @CarrierCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF EXISTS (SELECT [MetaPartnerID] FROM [dbo].[tblCustomers_Carrier] WHERE [MetaPartnerID] =  @MetaPartnerID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	INSERT
	      [dbo].[tblCustomers_Carrier]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [MetaPartnerID]
	   , [CarrierCode]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @MetaPartnerID
	   , @CarrierCode
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_AddOneCustomer
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @MetaPartnerID uniqueidentifier
	, @FirstName nvarchar(255) = NULL
	, @LastName nvarchar(255) = NULL
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure inserts Customer data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF EXISTS (SELECT [MetaPartnerID] FROM [dbo].[tblCustomers_Customer] WHERE [MetaPartnerID] =  @MetaPartnerID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	INSERT
	      [dbo].[tblCustomers_Customer]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [MetaPartnerID]
	   , [FirstName]
	   , [LastName]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @MetaPartnerID
	   , @FirstName
	   , @LastName
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_AddOneLocationType
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @LocationTypeCode int
	, @LocationTypeName nvarchar(255)
	, @Description nvarchar(2000) = NULL
	, @IsActive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure inserts LocationType data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@LocationTypeCode IS NULL OR @LocationTypeName IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF EXISTS (SELECT [LocationTypeCode] FROM [dbo].[tlkpCustomers_LocationType] WHERE [LocationTypeCode] =  @LocationTypeCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	INSERT
	      [dbo].[tlkpCustomers_LocationType]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [LocationTypeCode]
	   , [LocationTypeName]
	   , [Description]
	   , [IsActive]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @LocationTypeCode
	   , @LocationTypeName
	   , @Description
	   , @IsActive
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_AddOneMerchant
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @MetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure inserts Merchant data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF EXISTS (SELECT [MetaPartnerID] FROM [dbo].[tblCustomers_Merchant] WHERE [MetaPartnerID] =  @MetaPartnerID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	INSERT
	      [dbo].[tblCustomers_Merchant]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [MetaPartnerID]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @MetaPartnerID
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_AddOneMetaPartnerContact
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @MetaPartnerID uniqueidentifier
	, @ContactMetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure inserts MetaPartnerContact data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@MetaPartnerID IS NULL OR @ContactMetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF EXISTS (SELECT [MetaPartnerID], [ContactMetaPartnerID] FROM [dbo].[trelCustomers_MetaPartnerContact] WHERE [MetaPartnerID] =  @MetaPartnerID AND [ContactMetaPartnerID] =  @ContactMetaPartnerID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	INSERT
	      [dbo].[trelCustomers_MetaPartnerContact]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [MetaPartnerID]
	   , [ContactMetaPartnerID]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @MetaPartnerID
	   , @ContactMetaPartnerID
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_AddOneMetaPartnerSubType
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @MetaPartnerSubTypeCode int
	, @MetaPartnerSubTypeName nvarchar(255)
	, @Description nvarchar(2000) = NULL
	, @IsActive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure inserts MetaPartnerSubType data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@MetaPartnerSubTypeCode IS NULL OR @MetaPartnerSubTypeName IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF EXISTS (SELECT [MetaPartnerSubTypeCode] FROM [dbo].[tlkpCustomers_MetaPartnerSubType] WHERE [MetaPartnerSubTypeCode] =  @MetaPartnerSubTypeCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	INSERT
	      [dbo].[tlkpCustomers_MetaPartnerSubType]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [MetaPartnerSubTypeCode]
	   , [MetaPartnerSubTypeName]
	   , [Description]
	   , [IsActive]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @MetaPartnerSubTypeCode
	   , @MetaPartnerSubTypeName
	   , @Description
	   , @IsActive
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_DeleteAllBankDataByCurrencyCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @CurrencyCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all Bank data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@CurrencyCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblCustomers_Bank]
	WHERE [MetaPartnerID] IN (SELECT [MetaPartnerID] FROM [dbo].[tblCustomers_MetaPartner] WHERE [CurrencyCode] =  @CurrencyCode)

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_DeleteAllBankDataByDateFormatCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @DateFormatCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all Bank data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@DateFormatCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblCustomers_Bank]
	WHERE [MetaPartnerID] IN (SELECT [MetaPartnerID] FROM [dbo].[tblCustomers_MetaPartner] WHERE [DateFormatCode] =  @DateFormatCode)

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_DeleteAllBankDataByLocaleCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @LocaleCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all Bank data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@LocaleCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblCustomers_Bank]
	WHERE [MetaPartnerID] IN (SELECT [MetaPartnerID] FROM [dbo].[tblCustomers_MetaPartner] WHERE [LocaleCode] =  @LocaleCode)

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_DeleteAllBankDataByMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @MetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all Bank data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblCustomers_Bank]
	WHERE [MetaPartnerID] =  @MetaPartnerID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_DeleteAllBankDataByMetaPartnerSubTypeCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @MetaPartnerSubTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all Bank data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@MetaPartnerSubTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblCustomers_Bank]
	WHERE [MetaPartnerID] IN (SELECT [MetaPartnerID] FROM [dbo].[tblCustomers_MetaPartner] WHERE [MetaPartnerSubTypeCode] =  @MetaPartnerSubTypeCode)

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_DeleteAllBusinessCustomerDataByBusinessMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @BusinessMetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all BusinessCustomer data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@BusinessMetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[trelCustomers_BusinessCustomer]
	WHERE [BusinessMetaPartnerID] =  @BusinessMetaPartnerID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_DeleteAllBusinessCustomerDataByCustomerMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @CustomerMetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all BusinessCustomer data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@CustomerMetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[trelCustomers_BusinessCustomer]
	WHERE [CustomerMetaPartnerID] =  @CustomerMetaPartnerID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_DeleteAllBusinessDataByCurrencyCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @CurrencyCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all Business data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@CurrencyCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblCustomers_Business]
	WHERE [MetaPartnerID] IN (SELECT [MetaPartnerID] FROM [dbo].[tblCustomers_MetaPartner] WHERE [CurrencyCode] =  @CurrencyCode)

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_DeleteAllBusinessDataByDateFormatCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @DateFormatCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all Business data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@DateFormatCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblCustomers_Business]
	WHERE [MetaPartnerID] IN (SELECT [MetaPartnerID] FROM [dbo].[tblCustomers_MetaPartner] WHERE [DateFormatCode] =  @DateFormatCode)

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_DeleteAllBusinessDataByLocaleCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @LocaleCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all Business data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@LocaleCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblCustomers_Business]
	WHERE [MetaPartnerID] IN (SELECT [MetaPartnerID] FROM [dbo].[tblCustomers_MetaPartner] WHERE [LocaleCode] =  @LocaleCode)

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_DeleteAllBusinessDataByMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @MetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all Business data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblCustomers_Business]
	WHERE [MetaPartnerID] =  @MetaPartnerID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_DeleteAllBusinessDataByMetaPartnerSubTypeCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @MetaPartnerSubTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all Business data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@MetaPartnerSubTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblCustomers_Business]
	WHERE [MetaPartnerID] IN (SELECT [MetaPartnerID] FROM [dbo].[tblCustomers_MetaPartner] WHERE [MetaPartnerSubTypeCode] =  @MetaPartnerSubTypeCode)

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_DeleteAllCarrierDataByCurrencyCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @CurrencyCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all Carrier data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@CurrencyCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblCustomers_Carrier]
	WHERE [MetaPartnerID] IN (SELECT [MetaPartnerID] FROM [dbo].[tblCustomers_MetaPartner] WHERE [CurrencyCode] =  @CurrencyCode)

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_DeleteAllCarrierDataByDateFormatCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @DateFormatCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all Carrier data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@DateFormatCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblCustomers_Carrier]
	WHERE [MetaPartnerID] IN (SELECT [MetaPartnerID] FROM [dbo].[tblCustomers_MetaPartner] WHERE [DateFormatCode] =  @DateFormatCode)

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_DeleteAllCarrierDataByLocaleCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @LocaleCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all Carrier data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@LocaleCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblCustomers_Carrier]
	WHERE [MetaPartnerID] IN (SELECT [MetaPartnerID] FROM [dbo].[tblCustomers_MetaPartner] WHERE [LocaleCode] =  @LocaleCode)

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_DeleteAllCarrierDataByMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @MetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all Carrier data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblCustomers_Carrier]
	WHERE [MetaPartnerID] =  @MetaPartnerID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_DeleteAllCarrierDataByMetaPartnerSubTypeCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @MetaPartnerSubTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all Carrier data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@MetaPartnerSubTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblCustomers_Carrier]
	WHERE [MetaPartnerID] IN (SELECT [MetaPartnerID] FROM [dbo].[tblCustomers_MetaPartner] WHERE [MetaPartnerSubTypeCode] =  @MetaPartnerSubTypeCode)

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_DeleteAllCustomerDataByCurrencyCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @CurrencyCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all Customer data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@CurrencyCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblCustomers_Customer]
	WHERE [MetaPartnerID] IN (SELECT [MetaPartnerID] FROM [dbo].[tblCustomers_MetaPartner] WHERE [CurrencyCode] =  @CurrencyCode)

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_DeleteAllCustomerDataByDateFormatCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @DateFormatCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all Customer data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@DateFormatCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblCustomers_Customer]
	WHERE [MetaPartnerID] IN (SELECT [MetaPartnerID] FROM [dbo].[tblCustomers_MetaPartner] WHERE [DateFormatCode] =  @DateFormatCode)

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_DeleteAllCustomerDataByLocaleCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @LocaleCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all Customer data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@LocaleCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblCustomers_Customer]
	WHERE [MetaPartnerID] IN (SELECT [MetaPartnerID] FROM [dbo].[tblCustomers_MetaPartner] WHERE [LocaleCode] =  @LocaleCode)

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_DeleteAllCustomerDataByMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @MetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all Customer data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblCustomers_Customer]
	WHERE [MetaPartnerID] =  @MetaPartnerID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_DeleteAllCustomerDataByMetaPartnerSubTypeCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @MetaPartnerSubTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all Customer data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@MetaPartnerSubTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblCustomers_Customer]
	WHERE [MetaPartnerID] IN (SELECT [MetaPartnerID] FROM [dbo].[tblCustomers_MetaPartner] WHERE [MetaPartnerSubTypeCode] =  @MetaPartnerSubTypeCode)

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_DeleteAllLocationDataByCountryCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @CountryCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all Location data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@CountryCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblCustomers_Location]
	WHERE [CountryCode] =  @CountryCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_DeleteAllLocationDataByLocationTypeCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @LocationTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all Location data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@LocationTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblCustomers_Location]
	WHERE [LocationTypeCode] =  @LocationTypeCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_DeleteAllLocationDataByMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @MetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all Location data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblCustomers_Location]
	WHERE [MetaPartnerID] =  @MetaPartnerID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_DeleteAllMerchantDataByCurrencyCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @CurrencyCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all Merchant data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@CurrencyCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblCustomers_Merchant]
	WHERE [MetaPartnerID] IN (SELECT [MetaPartnerID] FROM [dbo].[tblCustomers_MetaPartner] WHERE [CurrencyCode] =  @CurrencyCode)

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_DeleteAllMerchantDataByDateFormatCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @DateFormatCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all Merchant data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@DateFormatCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblCustomers_Merchant]
	WHERE [MetaPartnerID] IN (SELECT [MetaPartnerID] FROM [dbo].[tblCustomers_MetaPartner] WHERE [DateFormatCode] =  @DateFormatCode)

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_DeleteAllMerchantDataByLocaleCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @LocaleCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all Merchant data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@LocaleCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblCustomers_Merchant]
	WHERE [MetaPartnerID] IN (SELECT [MetaPartnerID] FROM [dbo].[tblCustomers_MetaPartner] WHERE [LocaleCode] =  @LocaleCode)

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_DeleteAllMerchantDataByMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @MetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all Merchant data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblCustomers_Merchant]
	WHERE [MetaPartnerID] =  @MetaPartnerID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_DeleteAllMerchantDataByMetaPartnerSubTypeCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @MetaPartnerSubTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all Merchant data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@MetaPartnerSubTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblCustomers_Merchant]
	WHERE [MetaPartnerID] IN (SELECT [MetaPartnerID] FROM [dbo].[tblCustomers_MetaPartner] WHERE [MetaPartnerSubTypeCode] =  @MetaPartnerSubTypeCode)

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_DeleteAllMetaPartnerContactDataByContactMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @ContactMetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all MetaPartnerContact data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@ContactMetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[trelCustomers_MetaPartnerContact]
	WHERE [ContactMetaPartnerID] =  @ContactMetaPartnerID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_DeleteAllMetaPartnerContactDataByMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @MetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all MetaPartnerContact data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[trelCustomers_MetaPartnerContact]
	WHERE [MetaPartnerID] =  @MetaPartnerID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_DeleteAllMetaPartnerDataByCurrencyCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @CurrencyCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all MetaPartner data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@CurrencyCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblCustomers_MetaPartner]
	WHERE [CurrencyCode] =  @CurrencyCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_DeleteAllMetaPartnerDataByDateFormatCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @DateFormatCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all MetaPartner data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@DateFormatCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblCustomers_MetaPartner]
	WHERE [DateFormatCode] =  @DateFormatCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_DeleteAllMetaPartnerDataByLocaleCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @LocaleCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all MetaPartner data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@LocaleCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblCustomers_MetaPartner]
	WHERE [LocaleCode] =  @LocaleCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_DeleteAllMetaPartnerDataByMetaPartnerSubTypeCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @MetaPartnerSubTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all MetaPartner data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@MetaPartnerSubTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblCustomers_MetaPartner]
	WHERE [MetaPartnerSubTypeCode] =  @MetaPartnerSubTypeCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_DeleteAllMetaPartnerEmailDataByMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @MetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all MetaPartnerEmail data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblCustomers_MetaPartnerEmail]
	WHERE [MetaPartnerID] =  @MetaPartnerID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_DeleteAllMetaPartnerPhoneDataByCarrierMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @CarrierMetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all MetaPartnerPhone data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@CarrierMetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblCustomers_MetaPartnerPhone]
	WHERE [CarrierMetaPartnerID] =  @CarrierMetaPartnerID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_DeleteAllMetaPartnerPhoneDataByMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @MetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all MetaPartnerPhone data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblCustomers_MetaPartnerPhone]
	WHERE [MetaPartnerID] =  @MetaPartnerID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_DeleteOneBank
	  @SqlErrorNumber int = 0 OUTPUT
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @MetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes Bank data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [MetaPartnerID] FROM [dbo].[tblCustomers_Bank] WHERE [MetaPartnerID] =  @MetaPartnerID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [MetaPartnerID] FROM [dbo].[tblCustomers_Bank] WHERE [MetaPartnerID] =  @MetaPartnerID AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblCustomers_Bank]
	WHERE [MetaPartnerID] =  @MetaPartnerID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_DeleteOneBusiness
	  @SqlErrorNumber int = 0 OUTPUT
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @MetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes Business data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [MetaPartnerID] FROM [dbo].[tblCustomers_Business] WHERE [MetaPartnerID] =  @MetaPartnerID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [MetaPartnerID] FROM [dbo].[tblCustomers_Business] WHERE [MetaPartnerID] =  @MetaPartnerID AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblCustomers_Business]
	WHERE [MetaPartnerID] =  @MetaPartnerID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_DeleteOneBusinessCustomer
	  @SqlErrorNumber int = 0 OUTPUT
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @BusinessMetaPartnerID uniqueidentifier
	, @CustomerMetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes BusinessCustomer data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@BusinessMetaPartnerID IS NULL OR @CustomerMetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [BusinessMetaPartnerID], [CustomerMetaPartnerID] FROM [dbo].[trelCustomers_BusinessCustomer] WHERE [BusinessMetaPartnerID] =  @BusinessMetaPartnerID AND [CustomerMetaPartnerID] =  @CustomerMetaPartnerID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [BusinessMetaPartnerID], [CustomerMetaPartnerID] FROM [dbo].[trelCustomers_BusinessCustomer] WHERE [BusinessMetaPartnerID] =  @BusinessMetaPartnerID AND [CustomerMetaPartnerID] =  @CustomerMetaPartnerID AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[trelCustomers_BusinessCustomer]
	WHERE [BusinessMetaPartnerID] =  @BusinessMetaPartnerID AND [CustomerMetaPartnerID] =  @CustomerMetaPartnerID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_DeleteOneCarrier
	  @SqlErrorNumber int = 0 OUTPUT
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @MetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes Carrier data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [MetaPartnerID] FROM [dbo].[tblCustomers_Carrier] WHERE [MetaPartnerID] =  @MetaPartnerID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [MetaPartnerID] FROM [dbo].[tblCustomers_Carrier] WHERE [MetaPartnerID] =  @MetaPartnerID AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblCustomers_Carrier]
	WHERE [MetaPartnerID] =  @MetaPartnerID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_DeleteOneCustomer
	  @SqlErrorNumber int = 0 OUTPUT
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @MetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes Customer data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [MetaPartnerID] FROM [dbo].[tblCustomers_Customer] WHERE [MetaPartnerID] =  @MetaPartnerID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [MetaPartnerID] FROM [dbo].[tblCustomers_Customer] WHERE [MetaPartnerID] =  @MetaPartnerID AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblCustomers_Customer]
	WHERE [MetaPartnerID] =  @MetaPartnerID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_DeleteOneLocation
	  @SqlErrorNumber int = 0 OUTPUT
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @LocationID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes Location data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@LocationID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [LocationID] FROM [dbo].[tblCustomers_Location] WHERE [LocationID] =  @LocationID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [LocationID] FROM [dbo].[tblCustomers_Location] WHERE [LocationID] =  @LocationID AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblCustomers_Location]
	WHERE [LocationID] =  @LocationID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_DeleteOneLocationType
	  @SqlErrorNumber int = 0 OUTPUT
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @LocationTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes LocationType data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@LocationTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [LocationTypeCode] FROM [dbo].[tlkpCustomers_LocationType] WHERE [LocationTypeCode] =  @LocationTypeCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [LocationTypeCode] FROM [dbo].[tlkpCustomers_LocationType] WHERE [LocationTypeCode] =  @LocationTypeCode AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tlkpCustomers_LocationType]
	WHERE [LocationTypeCode] =  @LocationTypeCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_DeleteOneMerchant
	  @SqlErrorNumber int = 0 OUTPUT
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @MetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes Merchant data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [MetaPartnerID] FROM [dbo].[tblCustomers_Merchant] WHERE [MetaPartnerID] =  @MetaPartnerID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [MetaPartnerID] FROM [dbo].[tblCustomers_Merchant] WHERE [MetaPartnerID] =  @MetaPartnerID AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblCustomers_Merchant]
	WHERE [MetaPartnerID] =  @MetaPartnerID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_DeleteOneMetaPartner
	  @SqlErrorNumber int = 0 OUTPUT
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @MetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes MetaPartner data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [MetaPartnerID] FROM [dbo].[tblCustomers_MetaPartner] WHERE [MetaPartnerID] =  @MetaPartnerID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [MetaPartnerID] FROM [dbo].[tblCustomers_MetaPartner] WHERE [MetaPartnerID] =  @MetaPartnerID AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblCustomers_MetaPartner]
	WHERE [MetaPartnerID] =  @MetaPartnerID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_DeleteOneMetaPartnerContact
	  @SqlErrorNumber int = 0 OUTPUT
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @MetaPartnerID uniqueidentifier
	, @ContactMetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes MetaPartnerContact data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@MetaPartnerID IS NULL OR @ContactMetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [MetaPartnerID], [ContactMetaPartnerID] FROM [dbo].[trelCustomers_MetaPartnerContact] WHERE [MetaPartnerID] =  @MetaPartnerID AND [ContactMetaPartnerID] =  @ContactMetaPartnerID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [MetaPartnerID], [ContactMetaPartnerID] FROM [dbo].[trelCustomers_MetaPartnerContact] WHERE [MetaPartnerID] =  @MetaPartnerID AND [ContactMetaPartnerID] =  @ContactMetaPartnerID AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[trelCustomers_MetaPartnerContact]
	WHERE [MetaPartnerID] =  @MetaPartnerID AND [ContactMetaPartnerID] =  @ContactMetaPartnerID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_DeleteOneMetaPartnerEmail
	  @SqlErrorNumber int = 0 OUTPUT
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @MetaPartnerEmailID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes MetaPartnerEmail data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@MetaPartnerEmailID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [MetaPartnerEmailID] FROM [dbo].[tblCustomers_MetaPartnerEmail] WHERE [MetaPartnerEmailID] =  @MetaPartnerEmailID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [MetaPartnerEmailID] FROM [dbo].[tblCustomers_MetaPartnerEmail] WHERE [MetaPartnerEmailID] =  @MetaPartnerEmailID AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblCustomers_MetaPartnerEmail]
	WHERE [MetaPartnerEmailID] =  @MetaPartnerEmailID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_DeleteOneMetaPartnerPhone
	  @SqlErrorNumber int = 0 OUTPUT
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @MetaPartnerPhoneID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes MetaPartnerPhone data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@MetaPartnerPhoneID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [MetaPartnerPhoneID] FROM [dbo].[tblCustomers_MetaPartnerPhone] WHERE [MetaPartnerPhoneID] =  @MetaPartnerPhoneID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [MetaPartnerPhoneID] FROM [dbo].[tblCustomers_MetaPartnerPhone] WHERE [MetaPartnerPhoneID] =  @MetaPartnerPhoneID AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblCustomers_MetaPartnerPhone]
	WHERE [MetaPartnerPhoneID] =  @MetaPartnerPhoneID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_DeleteOneMetaPartnerSubType
	  @SqlErrorNumber int = 0 OUTPUT
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @MetaPartnerSubTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes MetaPartnerSubType data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@MetaPartnerSubTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [MetaPartnerSubTypeCode] FROM [dbo].[tlkpCustomers_MetaPartnerSubType] WHERE [MetaPartnerSubTypeCode] =  @MetaPartnerSubTypeCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [MetaPartnerSubTypeCode] FROM [dbo].[tlkpCustomers_MetaPartnerSubType] WHERE [MetaPartnerSubTypeCode] =  @MetaPartnerSubTypeCode AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tlkpCustomers_MetaPartnerSubType]
	WHERE [MetaPartnerSubTypeCode] =  @MetaPartnerSubTypeCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetAllBankData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'MetaPartnerID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all Bank data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='MetaPartnerID'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  Bank1.[MetaPartnerID]
		, Bank1.[BankCode]
		, Bank1.[CreatedByUserID]
		, Bank1.[CreatedDate]
		, Bank1.[LastModifiedByUserID]
		, Bank1.[LastModifiedDate]
		, Bank1.[Timestamp]
		, Business1.[ServiceCharges]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Bank] Bank1
	INNER JOIN [dbo].[tblCustomers_Business] Business1 ON Business1.[MetaPartnerID]=Bank1.[MetaPartnerID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  Bank1.[MetaPartnerID]
		, Bank1.[BankCode]
		, Bank1.[CreatedByUserID]
		, Bank1.[CreatedDate]
		, Bank1.[LastModifiedByUserID]
		, Bank1.[LastModifiedDate]
		, Bank1.[Timestamp]
		, Business1.[ServiceCharges]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Bank] Bank1
	INNER JOIN [dbo].[tblCustomers_Business] Business1 ON Business1.[MetaPartnerID]=Bank1.[MetaPartnerID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Bank1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Bank1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BankCode' THEN Bank1.[BankCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BankCode' THEN Bank1.[BankCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Bank1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Bank1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Bank1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Bank1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Bank1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Bank1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Bank1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Bank1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Bank1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Bank1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ServiceCharges' THEN Business1.[ServiceCharges] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ServiceCharges' THEN Business1.[ServiceCharges] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetAllBankDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'LocaleCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @LocaleCode int
	, @CurrencyCode int
	, @DateFormatCode int
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
	, @MetaPartnerName nvarchar(255)
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all Bank data by criteria.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='LocaleCode'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  Bank1.[MetaPartnerID]
		, Bank1.[BankCode]
		, Bank1.[CreatedByUserID]
		, Bank1.[CreatedDate]
		, Bank1.[LastModifiedByUserID]
		, Bank1.[LastModifiedDate]
		, Bank1.[Timestamp]
		, Business1.[ServiceCharges]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Bank] Bank1
	INNER JOIN [dbo].[tblCustomers_Business] Business1 ON Business1.[MetaPartnerID]=Bank1.[MetaPartnerID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND (@LocaleCode IS NULL OR MetaPartner1.[LocaleCode] = @LocaleCode)
		AND (@CurrencyCode IS NULL OR MetaPartner1.[CurrencyCode] = @CurrencyCode)
		AND (@DateFormatCode IS NULL OR MetaPartner1.[DateFormatCode] = @DateFormatCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (MetaPartner1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (MetaPartner1.[LastModifiedDate] <=  @LastModifiedDateEnd))
		AND (@MetaPartnerName IS NULL OR MetaPartner1.[MetaPartnerName] like '%' + @MetaPartnerName + '%')

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  Bank1.[MetaPartnerID]
		, Bank1.[BankCode]
		, Bank1.[CreatedByUserID]
		, Bank1.[CreatedDate]
		, Bank1.[LastModifiedByUserID]
		, Bank1.[LastModifiedDate]
		, Bank1.[Timestamp]
		, Business1.[ServiceCharges]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Bank] Bank1
	INNER JOIN [dbo].[tblCustomers_Business] Business1 ON Business1.[MetaPartnerID]=Bank1.[MetaPartnerID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND (@LocaleCode IS NULL OR MetaPartner1.[LocaleCode] = @LocaleCode)
		AND (@CurrencyCode IS NULL OR MetaPartner1.[CurrencyCode] = @CurrencyCode)
		AND (@DateFormatCode IS NULL OR MetaPartner1.[DateFormatCode] = @DateFormatCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (MetaPartner1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (MetaPartner1.[LastModifiedDate] <=  @LastModifiedDateEnd))
		AND (@MetaPartnerName IS NULL OR MetaPartner1.[MetaPartnerName] like '%' + @MetaPartnerName + '%')

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Bank1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Bank1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BankCode' THEN Bank1.[BankCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BankCode' THEN Bank1.[BankCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Bank1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Bank1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Bank1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Bank1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Bank1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Bank1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Bank1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Bank1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Bank1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Bank1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ServiceCharges' THEN Business1.[ServiceCharges] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ServiceCharges' THEN Business1.[ServiceCharges] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetAllBankDataByCurrencyCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'CurrencyCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @CurrencyCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all Bank data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='CurrencyCode'

/*
** parameter validation
*/
IF (@CurrencyCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  Bank1.[MetaPartnerID]
		, Bank1.[BankCode]
		, Bank1.[CreatedByUserID]
		, Bank1.[CreatedDate]
		, Bank1.[LastModifiedByUserID]
		, Bank1.[LastModifiedDate]
		, Bank1.[Timestamp]
		, Business1.[ServiceCharges]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Bank] Bank1
	INNER JOIN [dbo].[tblCustomers_Business] Business1 ON Business1.[MetaPartnerID]=Bank1.[MetaPartnerID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND MetaPartner1.[CurrencyCode] = @CurrencyCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  Bank1.[MetaPartnerID]
		, Bank1.[BankCode]
		, Bank1.[CreatedByUserID]
		, Bank1.[CreatedDate]
		, Bank1.[LastModifiedByUserID]
		, Bank1.[LastModifiedDate]
		, Bank1.[Timestamp]
		, Business1.[ServiceCharges]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Bank] Bank1
	INNER JOIN [dbo].[tblCustomers_Business] Business1 ON Business1.[MetaPartnerID]=Bank1.[MetaPartnerID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND MetaPartner1.[CurrencyCode] = @CurrencyCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Bank1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Bank1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BankCode' THEN Bank1.[BankCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BankCode' THEN Bank1.[BankCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Bank1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Bank1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Bank1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Bank1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Bank1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Bank1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Bank1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Bank1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Bank1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Bank1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ServiceCharges' THEN Business1.[ServiceCharges] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ServiceCharges' THEN Business1.[ServiceCharges] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetAllBankDataByDateFormatCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'DateFormatCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @DateFormatCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all Bank data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='DateFormatCode'

/*
** parameter validation
*/
IF (@DateFormatCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  Bank1.[MetaPartnerID]
		, Bank1.[BankCode]
		, Bank1.[CreatedByUserID]
		, Bank1.[CreatedDate]
		, Bank1.[LastModifiedByUserID]
		, Bank1.[LastModifiedDate]
		, Bank1.[Timestamp]
		, Business1.[ServiceCharges]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Bank] Bank1
	INNER JOIN [dbo].[tblCustomers_Business] Business1 ON Business1.[MetaPartnerID]=Bank1.[MetaPartnerID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND MetaPartner1.[DateFormatCode] = @DateFormatCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  Bank1.[MetaPartnerID]
		, Bank1.[BankCode]
		, Bank1.[CreatedByUserID]
		, Bank1.[CreatedDate]
		, Bank1.[LastModifiedByUserID]
		, Bank1.[LastModifiedDate]
		, Bank1.[Timestamp]
		, Business1.[ServiceCharges]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Bank] Bank1
	INNER JOIN [dbo].[tblCustomers_Business] Business1 ON Business1.[MetaPartnerID]=Bank1.[MetaPartnerID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND MetaPartner1.[DateFormatCode] = @DateFormatCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Bank1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Bank1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BankCode' THEN Bank1.[BankCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BankCode' THEN Bank1.[BankCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Bank1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Bank1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Bank1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Bank1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Bank1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Bank1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Bank1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Bank1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Bank1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Bank1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ServiceCharges' THEN Business1.[ServiceCharges] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ServiceCharges' THEN Business1.[ServiceCharges] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetAllBankDataByLocaleCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'LocaleCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @LocaleCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all Bank data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='LocaleCode'

/*
** parameter validation
*/
IF (@LocaleCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  Bank1.[MetaPartnerID]
		, Bank1.[BankCode]
		, Bank1.[CreatedByUserID]
		, Bank1.[CreatedDate]
		, Bank1.[LastModifiedByUserID]
		, Bank1.[LastModifiedDate]
		, Bank1.[Timestamp]
		, Business1.[ServiceCharges]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Bank] Bank1
	INNER JOIN [dbo].[tblCustomers_Business] Business1 ON Business1.[MetaPartnerID]=Bank1.[MetaPartnerID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND MetaPartner1.[LocaleCode] = @LocaleCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  Bank1.[MetaPartnerID]
		, Bank1.[BankCode]
		, Bank1.[CreatedByUserID]
		, Bank1.[CreatedDate]
		, Bank1.[LastModifiedByUserID]
		, Bank1.[LastModifiedDate]
		, Bank1.[Timestamp]
		, Business1.[ServiceCharges]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Bank] Bank1
	INNER JOIN [dbo].[tblCustomers_Business] Business1 ON Business1.[MetaPartnerID]=Bank1.[MetaPartnerID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND MetaPartner1.[LocaleCode] = @LocaleCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Bank1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Bank1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BankCode' THEN Bank1.[BankCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BankCode' THEN Bank1.[BankCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Bank1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Bank1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Bank1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Bank1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Bank1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Bank1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Bank1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Bank1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Bank1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Bank1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ServiceCharges' THEN Business1.[ServiceCharges] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ServiceCharges' THEN Business1.[ServiceCharges] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetAllBankDataByMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'MetaPartnerID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @MetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all Bank data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='MetaPartnerID'

/*
** parameter validation
*/
IF (@MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  Bank1.[MetaPartnerID]
		, Bank1.[BankCode]
		, Bank1.[CreatedByUserID]
		, Bank1.[CreatedDate]
		, Bank1.[LastModifiedByUserID]
		, Bank1.[LastModifiedDate]
		, Bank1.[Timestamp]
		, Business1.[ServiceCharges]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Bank] Bank1
	INNER JOIN [dbo].[tblCustomers_Business] Business1 ON Business1.[MetaPartnerID]=Bank1.[MetaPartnerID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND Bank1.[MetaPartnerID] = @MetaPartnerID

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  Bank1.[MetaPartnerID]
		, Bank1.[BankCode]
		, Bank1.[CreatedByUserID]
		, Bank1.[CreatedDate]
		, Bank1.[LastModifiedByUserID]
		, Bank1.[LastModifiedDate]
		, Bank1.[Timestamp]
		, Business1.[ServiceCharges]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Bank] Bank1
	INNER JOIN [dbo].[tblCustomers_Business] Business1 ON Business1.[MetaPartnerID]=Bank1.[MetaPartnerID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND Bank1.[MetaPartnerID] = @MetaPartnerID

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Bank1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Bank1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BankCode' THEN Bank1.[BankCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BankCode' THEN Bank1.[BankCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Bank1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Bank1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Bank1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Bank1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Bank1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Bank1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Bank1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Bank1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Bank1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Bank1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ServiceCharges' THEN Business1.[ServiceCharges] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ServiceCharges' THEN Business1.[ServiceCharges] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetAllBankDataByMetaPartnerSubTypeCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'MetaPartnerSubTypeCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @MetaPartnerSubTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all Bank data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='MetaPartnerSubTypeCode'

/*
** parameter validation
*/
IF (@MetaPartnerSubTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  Bank1.[MetaPartnerID]
		, Bank1.[BankCode]
		, Bank1.[CreatedByUserID]
		, Bank1.[CreatedDate]
		, Bank1.[LastModifiedByUserID]
		, Bank1.[LastModifiedDate]
		, Bank1.[Timestamp]
		, Business1.[ServiceCharges]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Bank] Bank1
	INNER JOIN [dbo].[tblCustomers_Business] Business1 ON Business1.[MetaPartnerID]=Bank1.[MetaPartnerID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND MetaPartner1.[MetaPartnerSubTypeCode] = @MetaPartnerSubTypeCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  Bank1.[MetaPartnerID]
		, Bank1.[BankCode]
		, Bank1.[CreatedByUserID]
		, Bank1.[CreatedDate]
		, Bank1.[LastModifiedByUserID]
		, Bank1.[LastModifiedDate]
		, Bank1.[Timestamp]
		, Business1.[ServiceCharges]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Bank] Bank1
	INNER JOIN [dbo].[tblCustomers_Business] Business1 ON Business1.[MetaPartnerID]=Bank1.[MetaPartnerID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND MetaPartner1.[MetaPartnerSubTypeCode] = @MetaPartnerSubTypeCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Bank1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Bank1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BankCode' THEN Bank1.[BankCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BankCode' THEN Bank1.[BankCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Bank1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Bank1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Bank1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Bank1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Bank1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Bank1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Bank1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Bank1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Bank1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Bank1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ServiceCharges' THEN Business1.[ServiceCharges] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ServiceCharges' THEN Business1.[ServiceCharges] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetAllBusinessCustomerData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'BusinessMetaPartnerID'
	, @SortDirection nvarchar(20) = 'Ascending'
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all BusinessCustomer data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='BusinessMetaPartnerID'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  BusinessCustomer1.[BusinessMetaPartnerID]
		, BusinessCustomer1.[CustomerMetaPartnerID]
		, BusinessCustomer1.[CreatedByUserID]
		, BusinessCustomer1.[CreatedDate]
		, BusinessCustomer1.[LastModifiedByUserID]
		, BusinessCustomer1.[LastModifiedDate]
		, BusinessCustomer1.[Timestamp]
		, Customer1.[FirstName]
		, Customer1.[LastName]
	FROM
	      [dbo].[trelCustomers_BusinessCustomer] BusinessCustomer1
	INNER JOIN [dbo].[tblCustomers_Customer] Customer1 ON Customer1.[MetaPartnerID]=BusinessCustomer1.[CustomerMetaPartnerID]

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  BusinessCustomer1.[BusinessMetaPartnerID]
		, BusinessCustomer1.[CustomerMetaPartnerID]
		, BusinessCustomer1.[CreatedByUserID]
		, BusinessCustomer1.[CreatedDate]
		, BusinessCustomer1.[LastModifiedByUserID]
		, BusinessCustomer1.[LastModifiedDate]
		, BusinessCustomer1.[Timestamp]
		, Customer1.[FirstName]
		, Customer1.[LastName]
	FROM
	      [dbo].[trelCustomers_BusinessCustomer] BusinessCustomer1
	INNER JOIN [dbo].[tblCustomers_Customer] Customer1 ON Customer1.[MetaPartnerID]=BusinessCustomer1.[CustomerMetaPartnerID]

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BusinessMetaPartnerID' THEN BusinessCustomer1.[BusinessMetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BusinessMetaPartnerID' THEN BusinessCustomer1.[BusinessMetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CustomerMetaPartnerID' THEN BusinessCustomer1.[CustomerMetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CustomerMetaPartnerID' THEN BusinessCustomer1.[CustomerMetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN BusinessCustomer1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN BusinessCustomer1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN BusinessCustomer1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN BusinessCustomer1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN BusinessCustomer1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN BusinessCustomer1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN BusinessCustomer1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN BusinessCustomer1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN BusinessCustomer1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN BusinessCustomer1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FirstName' THEN Customer1.[FirstName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FirstName' THEN Customer1.[FirstName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastName' THEN Customer1.[LastName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastName' THEN Customer1.[LastName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetAllBusinessCustomerDataByBusinessMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'BusinessMetaPartnerID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @BusinessMetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all BusinessCustomer data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='BusinessMetaPartnerID'

/*
** parameter validation
*/
IF (@BusinessMetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  BusinessCustomer1.[BusinessMetaPartnerID]
		, BusinessCustomer1.[CustomerMetaPartnerID]
		, BusinessCustomer1.[CreatedByUserID]
		, BusinessCustomer1.[CreatedDate]
		, BusinessCustomer1.[LastModifiedByUserID]
		, BusinessCustomer1.[LastModifiedDate]
		, BusinessCustomer1.[Timestamp]
		, Customer1.[FirstName]
		, Customer1.[LastName]
	FROM
	      [dbo].[trelCustomers_BusinessCustomer] BusinessCustomer1
	INNER JOIN [dbo].[tblCustomers_Customer] Customer1 ON Customer1.[MetaPartnerID]=BusinessCustomer1.[CustomerMetaPartnerID]
	WHERE 
		BusinessCustomer1.[BusinessMetaPartnerID] = @BusinessMetaPartnerID

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  BusinessCustomer1.[BusinessMetaPartnerID]
		, BusinessCustomer1.[CustomerMetaPartnerID]
		, BusinessCustomer1.[CreatedByUserID]
		, BusinessCustomer1.[CreatedDate]
		, BusinessCustomer1.[LastModifiedByUserID]
		, BusinessCustomer1.[LastModifiedDate]
		, BusinessCustomer1.[Timestamp]
		, Customer1.[FirstName]
		, Customer1.[LastName]
	FROM
	      [dbo].[trelCustomers_BusinessCustomer] BusinessCustomer1
	INNER JOIN [dbo].[tblCustomers_Customer] Customer1 ON Customer1.[MetaPartnerID]=BusinessCustomer1.[CustomerMetaPartnerID]
	WHERE 
		BusinessCustomer1.[BusinessMetaPartnerID] = @BusinessMetaPartnerID

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BusinessMetaPartnerID' THEN BusinessCustomer1.[BusinessMetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BusinessMetaPartnerID' THEN BusinessCustomer1.[BusinessMetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CustomerMetaPartnerID' THEN BusinessCustomer1.[CustomerMetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CustomerMetaPartnerID' THEN BusinessCustomer1.[CustomerMetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN BusinessCustomer1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN BusinessCustomer1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN BusinessCustomer1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN BusinessCustomer1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN BusinessCustomer1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN BusinessCustomer1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN BusinessCustomer1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN BusinessCustomer1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN BusinessCustomer1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN BusinessCustomer1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FirstName' THEN Customer1.[FirstName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FirstName' THEN Customer1.[FirstName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastName' THEN Customer1.[LastName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastName' THEN Customer1.[LastName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetAllBusinessCustomerDataByCustomerMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'CustomerMetaPartnerID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @CustomerMetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all BusinessCustomer data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='CustomerMetaPartnerID'

/*
** parameter validation
*/
IF (@CustomerMetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  BusinessCustomer1.[BusinessMetaPartnerID]
		, BusinessCustomer1.[CustomerMetaPartnerID]
		, BusinessCustomer1.[CreatedByUserID]
		, BusinessCustomer1.[CreatedDate]
		, BusinessCustomer1.[LastModifiedByUserID]
		, BusinessCustomer1.[LastModifiedDate]
		, BusinessCustomer1.[Timestamp]
		, Customer1.[FirstName]
		, Customer1.[LastName]
	FROM
	      [dbo].[trelCustomers_BusinessCustomer] BusinessCustomer1
	INNER JOIN [dbo].[tblCustomers_Customer] Customer1 ON Customer1.[MetaPartnerID]=BusinessCustomer1.[CustomerMetaPartnerID]
	WHERE 
		BusinessCustomer1.[CustomerMetaPartnerID] = @CustomerMetaPartnerID

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  BusinessCustomer1.[BusinessMetaPartnerID]
		, BusinessCustomer1.[CustomerMetaPartnerID]
		, BusinessCustomer1.[CreatedByUserID]
		, BusinessCustomer1.[CreatedDate]
		, BusinessCustomer1.[LastModifiedByUserID]
		, BusinessCustomer1.[LastModifiedDate]
		, BusinessCustomer1.[Timestamp]
		, Customer1.[FirstName]
		, Customer1.[LastName]
	FROM
	      [dbo].[trelCustomers_BusinessCustomer] BusinessCustomer1
	INNER JOIN [dbo].[tblCustomers_Customer] Customer1 ON Customer1.[MetaPartnerID]=BusinessCustomer1.[CustomerMetaPartnerID]
	WHERE 
		BusinessCustomer1.[CustomerMetaPartnerID] = @CustomerMetaPartnerID

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BusinessMetaPartnerID' THEN BusinessCustomer1.[BusinessMetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BusinessMetaPartnerID' THEN BusinessCustomer1.[BusinessMetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CustomerMetaPartnerID' THEN BusinessCustomer1.[CustomerMetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CustomerMetaPartnerID' THEN BusinessCustomer1.[CustomerMetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN BusinessCustomer1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN BusinessCustomer1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN BusinessCustomer1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN BusinessCustomer1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN BusinessCustomer1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN BusinessCustomer1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN BusinessCustomer1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN BusinessCustomer1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN BusinessCustomer1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN BusinessCustomer1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FirstName' THEN Customer1.[FirstName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FirstName' THEN Customer1.[FirstName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastName' THEN Customer1.[LastName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastName' THEN Customer1.[LastName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetAllBusinessData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'MetaPartnerID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all Business data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='MetaPartnerID'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  Business1.[MetaPartnerID]
		, Business1.[ServiceCharges]
		, Business1.[CreatedByUserID]
		, Business1.[CreatedDate]
		, Business1.[LastModifiedByUserID]
		, Business1.[LastModifiedDate]
		, Business1.[Timestamp]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Business] Business1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  Business1.[MetaPartnerID]
		, Business1.[ServiceCharges]
		, Business1.[CreatedByUserID]
		, Business1.[CreatedDate]
		, Business1.[LastModifiedByUserID]
		, Business1.[LastModifiedDate]
		, Business1.[Timestamp]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Business] Business1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Business1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Business1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ServiceCharges' THEN Business1.[ServiceCharges] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ServiceCharges' THEN Business1.[ServiceCharges] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Business1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Business1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Business1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Business1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Business1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Business1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Business1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Business1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Business1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Business1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetAllBusinessDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'LocaleCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @LocaleCode int
	, @CurrencyCode int
	, @DateFormatCode int
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
	, @MetaPartnerName nvarchar(255)
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all Business data by criteria.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='LocaleCode'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  Business1.[MetaPartnerID]
		, Business1.[ServiceCharges]
		, Business1.[CreatedByUserID]
		, Business1.[CreatedDate]
		, Business1.[LastModifiedByUserID]
		, Business1.[LastModifiedDate]
		, Business1.[Timestamp]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Business] Business1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND (@LocaleCode IS NULL OR MetaPartner1.[LocaleCode] = @LocaleCode)
		AND (@CurrencyCode IS NULL OR MetaPartner1.[CurrencyCode] = @CurrencyCode)
		AND (@DateFormatCode IS NULL OR MetaPartner1.[DateFormatCode] = @DateFormatCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (MetaPartner1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (MetaPartner1.[LastModifiedDate] <=  @LastModifiedDateEnd))
		AND (@MetaPartnerName IS NULL OR MetaPartner1.[MetaPartnerName] like '%' + @MetaPartnerName + '%')

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  Business1.[MetaPartnerID]
		, Business1.[ServiceCharges]
		, Business1.[CreatedByUserID]
		, Business1.[CreatedDate]
		, Business1.[LastModifiedByUserID]
		, Business1.[LastModifiedDate]
		, Business1.[Timestamp]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Business] Business1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND (@LocaleCode IS NULL OR MetaPartner1.[LocaleCode] = @LocaleCode)
		AND (@CurrencyCode IS NULL OR MetaPartner1.[CurrencyCode] = @CurrencyCode)
		AND (@DateFormatCode IS NULL OR MetaPartner1.[DateFormatCode] = @DateFormatCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (MetaPartner1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (MetaPartner1.[LastModifiedDate] <=  @LastModifiedDateEnd))
		AND (@MetaPartnerName IS NULL OR MetaPartner1.[MetaPartnerName] like '%' + @MetaPartnerName + '%')

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Business1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Business1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ServiceCharges' THEN Business1.[ServiceCharges] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ServiceCharges' THEN Business1.[ServiceCharges] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Business1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Business1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Business1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Business1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Business1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Business1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Business1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Business1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Business1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Business1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetAllBusinessDataByCurrencyCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'CurrencyCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @CurrencyCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all Business data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='CurrencyCode'

/*
** parameter validation
*/
IF (@CurrencyCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  Business1.[MetaPartnerID]
		, Business1.[ServiceCharges]
		, Business1.[CreatedByUserID]
		, Business1.[CreatedDate]
		, Business1.[LastModifiedByUserID]
		, Business1.[LastModifiedDate]
		, Business1.[Timestamp]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Business] Business1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND MetaPartner1.[CurrencyCode] = @CurrencyCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  Business1.[MetaPartnerID]
		, Business1.[ServiceCharges]
		, Business1.[CreatedByUserID]
		, Business1.[CreatedDate]
		, Business1.[LastModifiedByUserID]
		, Business1.[LastModifiedDate]
		, Business1.[Timestamp]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Business] Business1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND MetaPartner1.[CurrencyCode] = @CurrencyCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Business1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Business1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ServiceCharges' THEN Business1.[ServiceCharges] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ServiceCharges' THEN Business1.[ServiceCharges] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Business1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Business1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Business1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Business1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Business1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Business1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Business1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Business1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Business1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Business1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetAllBusinessDataByDateFormatCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'DateFormatCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @DateFormatCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all Business data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='DateFormatCode'

/*
** parameter validation
*/
IF (@DateFormatCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  Business1.[MetaPartnerID]
		, Business1.[ServiceCharges]
		, Business1.[CreatedByUserID]
		, Business1.[CreatedDate]
		, Business1.[LastModifiedByUserID]
		, Business1.[LastModifiedDate]
		, Business1.[Timestamp]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Business] Business1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND MetaPartner1.[DateFormatCode] = @DateFormatCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  Business1.[MetaPartnerID]
		, Business1.[ServiceCharges]
		, Business1.[CreatedByUserID]
		, Business1.[CreatedDate]
		, Business1.[LastModifiedByUserID]
		, Business1.[LastModifiedDate]
		, Business1.[Timestamp]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Business] Business1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND MetaPartner1.[DateFormatCode] = @DateFormatCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Business1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Business1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ServiceCharges' THEN Business1.[ServiceCharges] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ServiceCharges' THEN Business1.[ServiceCharges] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Business1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Business1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Business1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Business1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Business1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Business1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Business1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Business1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Business1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Business1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetAllBusinessDataByLocaleCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'LocaleCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @LocaleCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all Business data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='LocaleCode'

/*
** parameter validation
*/
IF (@LocaleCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  Business1.[MetaPartnerID]
		, Business1.[ServiceCharges]
		, Business1.[CreatedByUserID]
		, Business1.[CreatedDate]
		, Business1.[LastModifiedByUserID]
		, Business1.[LastModifiedDate]
		, Business1.[Timestamp]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Business] Business1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND MetaPartner1.[LocaleCode] = @LocaleCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  Business1.[MetaPartnerID]
		, Business1.[ServiceCharges]
		, Business1.[CreatedByUserID]
		, Business1.[CreatedDate]
		, Business1.[LastModifiedByUserID]
		, Business1.[LastModifiedDate]
		, Business1.[Timestamp]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Business] Business1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND MetaPartner1.[LocaleCode] = @LocaleCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Business1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Business1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ServiceCharges' THEN Business1.[ServiceCharges] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ServiceCharges' THEN Business1.[ServiceCharges] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Business1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Business1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Business1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Business1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Business1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Business1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Business1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Business1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Business1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Business1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetAllBusinessDataByMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'MetaPartnerID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @MetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all Business data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='MetaPartnerID'

/*
** parameter validation
*/
IF (@MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  Business1.[MetaPartnerID]
		, Business1.[ServiceCharges]
		, Business1.[CreatedByUserID]
		, Business1.[CreatedDate]
		, Business1.[LastModifiedByUserID]
		, Business1.[LastModifiedDate]
		, Business1.[Timestamp]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Business] Business1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND Business1.[MetaPartnerID] = @MetaPartnerID

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  Business1.[MetaPartnerID]
		, Business1.[ServiceCharges]
		, Business1.[CreatedByUserID]
		, Business1.[CreatedDate]
		, Business1.[LastModifiedByUserID]
		, Business1.[LastModifiedDate]
		, Business1.[Timestamp]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Business] Business1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND Business1.[MetaPartnerID] = @MetaPartnerID

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Business1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Business1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ServiceCharges' THEN Business1.[ServiceCharges] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ServiceCharges' THEN Business1.[ServiceCharges] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Business1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Business1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Business1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Business1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Business1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Business1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Business1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Business1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Business1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Business1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetAllBusinessDataByMetaPartnerSubTypeCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'MetaPartnerSubTypeCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @MetaPartnerSubTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all Business data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='MetaPartnerSubTypeCode'

/*
** parameter validation
*/
IF (@MetaPartnerSubTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  Business1.[MetaPartnerID]
		, Business1.[ServiceCharges]
		, Business1.[CreatedByUserID]
		, Business1.[CreatedDate]
		, Business1.[LastModifiedByUserID]
		, Business1.[LastModifiedDate]
		, Business1.[Timestamp]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Business] Business1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND MetaPartner1.[MetaPartnerSubTypeCode] = @MetaPartnerSubTypeCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  Business1.[MetaPartnerID]
		, Business1.[ServiceCharges]
		, Business1.[CreatedByUserID]
		, Business1.[CreatedDate]
		, Business1.[LastModifiedByUserID]
		, Business1.[LastModifiedDate]
		, Business1.[Timestamp]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Business] Business1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND MetaPartner1.[MetaPartnerSubTypeCode] = @MetaPartnerSubTypeCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Business1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Business1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ServiceCharges' THEN Business1.[ServiceCharges] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ServiceCharges' THEN Business1.[ServiceCharges] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Business1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Business1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Business1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Business1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Business1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Business1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Business1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Business1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Business1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Business1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetAllCarrierData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'MetaPartnerID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all Carrier data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='MetaPartnerID'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  Carrier1.[MetaPartnerID]
		, Carrier1.[CarrierCode]
		, Carrier1.[CreatedByUserID]
		, Carrier1.[CreatedDate]
		, Carrier1.[LastModifiedByUserID]
		, Carrier1.[LastModifiedDate]
		, Carrier1.[Timestamp]
		, Business1.[ServiceCharges]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Carrier] Carrier1
	INNER JOIN [dbo].[tblCustomers_Business] Business1 ON Business1.[MetaPartnerID]=Carrier1.[MetaPartnerID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  Carrier1.[MetaPartnerID]
		, Carrier1.[CarrierCode]
		, Carrier1.[CreatedByUserID]
		, Carrier1.[CreatedDate]
		, Carrier1.[LastModifiedByUserID]
		, Carrier1.[LastModifiedDate]
		, Carrier1.[Timestamp]
		, Business1.[ServiceCharges]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Carrier] Carrier1
	INNER JOIN [dbo].[tblCustomers_Business] Business1 ON Business1.[MetaPartnerID]=Carrier1.[MetaPartnerID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Carrier1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Carrier1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CarrierCode' THEN Carrier1.[CarrierCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CarrierCode' THEN Carrier1.[CarrierCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Carrier1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Carrier1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Carrier1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Carrier1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Carrier1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Carrier1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Carrier1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Carrier1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Carrier1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Carrier1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ServiceCharges' THEN Business1.[ServiceCharges] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ServiceCharges' THEN Business1.[ServiceCharges] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetAllCarrierDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'LocaleCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @LocaleCode int
	, @CurrencyCode int
	, @DateFormatCode int
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
	, @MetaPartnerName nvarchar(255)
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all Carrier data by criteria.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='LocaleCode'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  Carrier1.[MetaPartnerID]
		, Carrier1.[CarrierCode]
		, Carrier1.[CreatedByUserID]
		, Carrier1.[CreatedDate]
		, Carrier1.[LastModifiedByUserID]
		, Carrier1.[LastModifiedDate]
		, Carrier1.[Timestamp]
		, Business1.[ServiceCharges]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Carrier] Carrier1
	INNER JOIN [dbo].[tblCustomers_Business] Business1 ON Business1.[MetaPartnerID]=Carrier1.[MetaPartnerID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND (@LocaleCode IS NULL OR MetaPartner1.[LocaleCode] = @LocaleCode)
		AND (@CurrencyCode IS NULL OR MetaPartner1.[CurrencyCode] = @CurrencyCode)
		AND (@DateFormatCode IS NULL OR MetaPartner1.[DateFormatCode] = @DateFormatCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (MetaPartner1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (MetaPartner1.[LastModifiedDate] <=  @LastModifiedDateEnd))
		AND (@MetaPartnerName IS NULL OR MetaPartner1.[MetaPartnerName] like '%' + @MetaPartnerName + '%')

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  Carrier1.[MetaPartnerID]
		, Carrier1.[CarrierCode]
		, Carrier1.[CreatedByUserID]
		, Carrier1.[CreatedDate]
		, Carrier1.[LastModifiedByUserID]
		, Carrier1.[LastModifiedDate]
		, Carrier1.[Timestamp]
		, Business1.[ServiceCharges]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Carrier] Carrier1
	INNER JOIN [dbo].[tblCustomers_Business] Business1 ON Business1.[MetaPartnerID]=Carrier1.[MetaPartnerID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND (@LocaleCode IS NULL OR MetaPartner1.[LocaleCode] = @LocaleCode)
		AND (@CurrencyCode IS NULL OR MetaPartner1.[CurrencyCode] = @CurrencyCode)
		AND (@DateFormatCode IS NULL OR MetaPartner1.[DateFormatCode] = @DateFormatCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (MetaPartner1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (MetaPartner1.[LastModifiedDate] <=  @LastModifiedDateEnd))
		AND (@MetaPartnerName IS NULL OR MetaPartner1.[MetaPartnerName] like '%' + @MetaPartnerName + '%')

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Carrier1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Carrier1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CarrierCode' THEN Carrier1.[CarrierCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CarrierCode' THEN Carrier1.[CarrierCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Carrier1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Carrier1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Carrier1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Carrier1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Carrier1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Carrier1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Carrier1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Carrier1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Carrier1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Carrier1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ServiceCharges' THEN Business1.[ServiceCharges] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ServiceCharges' THEN Business1.[ServiceCharges] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetAllCarrierDataByCurrencyCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'CurrencyCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @CurrencyCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all Carrier data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='CurrencyCode'

/*
** parameter validation
*/
IF (@CurrencyCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  Carrier1.[MetaPartnerID]
		, Carrier1.[CarrierCode]
		, Carrier1.[CreatedByUserID]
		, Carrier1.[CreatedDate]
		, Carrier1.[LastModifiedByUserID]
		, Carrier1.[LastModifiedDate]
		, Carrier1.[Timestamp]
		, Business1.[ServiceCharges]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Carrier] Carrier1
	INNER JOIN [dbo].[tblCustomers_Business] Business1 ON Business1.[MetaPartnerID]=Carrier1.[MetaPartnerID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND MetaPartner1.[CurrencyCode] = @CurrencyCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  Carrier1.[MetaPartnerID]
		, Carrier1.[CarrierCode]
		, Carrier1.[CreatedByUserID]
		, Carrier1.[CreatedDate]
		, Carrier1.[LastModifiedByUserID]
		, Carrier1.[LastModifiedDate]
		, Carrier1.[Timestamp]
		, Business1.[ServiceCharges]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Carrier] Carrier1
	INNER JOIN [dbo].[tblCustomers_Business] Business1 ON Business1.[MetaPartnerID]=Carrier1.[MetaPartnerID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND MetaPartner1.[CurrencyCode] = @CurrencyCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Carrier1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Carrier1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CarrierCode' THEN Carrier1.[CarrierCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CarrierCode' THEN Carrier1.[CarrierCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Carrier1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Carrier1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Carrier1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Carrier1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Carrier1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Carrier1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Carrier1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Carrier1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Carrier1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Carrier1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ServiceCharges' THEN Business1.[ServiceCharges] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ServiceCharges' THEN Business1.[ServiceCharges] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetAllCarrierDataByDateFormatCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'DateFormatCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @DateFormatCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all Carrier data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='DateFormatCode'

/*
** parameter validation
*/
IF (@DateFormatCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  Carrier1.[MetaPartnerID]
		, Carrier1.[CarrierCode]
		, Carrier1.[CreatedByUserID]
		, Carrier1.[CreatedDate]
		, Carrier1.[LastModifiedByUserID]
		, Carrier1.[LastModifiedDate]
		, Carrier1.[Timestamp]
		, Business1.[ServiceCharges]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Carrier] Carrier1
	INNER JOIN [dbo].[tblCustomers_Business] Business1 ON Business1.[MetaPartnerID]=Carrier1.[MetaPartnerID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND MetaPartner1.[DateFormatCode] = @DateFormatCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  Carrier1.[MetaPartnerID]
		, Carrier1.[CarrierCode]
		, Carrier1.[CreatedByUserID]
		, Carrier1.[CreatedDate]
		, Carrier1.[LastModifiedByUserID]
		, Carrier1.[LastModifiedDate]
		, Carrier1.[Timestamp]
		, Business1.[ServiceCharges]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Carrier] Carrier1
	INNER JOIN [dbo].[tblCustomers_Business] Business1 ON Business1.[MetaPartnerID]=Carrier1.[MetaPartnerID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND MetaPartner1.[DateFormatCode] = @DateFormatCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Carrier1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Carrier1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CarrierCode' THEN Carrier1.[CarrierCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CarrierCode' THEN Carrier1.[CarrierCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Carrier1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Carrier1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Carrier1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Carrier1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Carrier1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Carrier1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Carrier1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Carrier1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Carrier1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Carrier1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ServiceCharges' THEN Business1.[ServiceCharges] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ServiceCharges' THEN Business1.[ServiceCharges] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetAllCarrierDataByLocaleCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'LocaleCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @LocaleCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all Carrier data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='LocaleCode'

/*
** parameter validation
*/
IF (@LocaleCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  Carrier1.[MetaPartnerID]
		, Carrier1.[CarrierCode]
		, Carrier1.[CreatedByUserID]
		, Carrier1.[CreatedDate]
		, Carrier1.[LastModifiedByUserID]
		, Carrier1.[LastModifiedDate]
		, Carrier1.[Timestamp]
		, Business1.[ServiceCharges]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Carrier] Carrier1
	INNER JOIN [dbo].[tblCustomers_Business] Business1 ON Business1.[MetaPartnerID]=Carrier1.[MetaPartnerID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND MetaPartner1.[LocaleCode] = @LocaleCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  Carrier1.[MetaPartnerID]
		, Carrier1.[CarrierCode]
		, Carrier1.[CreatedByUserID]
		, Carrier1.[CreatedDate]
		, Carrier1.[LastModifiedByUserID]
		, Carrier1.[LastModifiedDate]
		, Carrier1.[Timestamp]
		, Business1.[ServiceCharges]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Carrier] Carrier1
	INNER JOIN [dbo].[tblCustomers_Business] Business1 ON Business1.[MetaPartnerID]=Carrier1.[MetaPartnerID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND MetaPartner1.[LocaleCode] = @LocaleCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Carrier1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Carrier1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CarrierCode' THEN Carrier1.[CarrierCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CarrierCode' THEN Carrier1.[CarrierCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Carrier1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Carrier1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Carrier1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Carrier1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Carrier1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Carrier1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Carrier1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Carrier1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Carrier1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Carrier1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ServiceCharges' THEN Business1.[ServiceCharges] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ServiceCharges' THEN Business1.[ServiceCharges] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetAllCarrierDataByMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'MetaPartnerID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @MetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all Carrier data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='MetaPartnerID'

/*
** parameter validation
*/
IF (@MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  Carrier1.[MetaPartnerID]
		, Carrier1.[CarrierCode]
		, Carrier1.[CreatedByUserID]
		, Carrier1.[CreatedDate]
		, Carrier1.[LastModifiedByUserID]
		, Carrier1.[LastModifiedDate]
		, Carrier1.[Timestamp]
		, Business1.[ServiceCharges]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Carrier] Carrier1
	INNER JOIN [dbo].[tblCustomers_Business] Business1 ON Business1.[MetaPartnerID]=Carrier1.[MetaPartnerID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND Carrier1.[MetaPartnerID] = @MetaPartnerID

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  Carrier1.[MetaPartnerID]
		, Carrier1.[CarrierCode]
		, Carrier1.[CreatedByUserID]
		, Carrier1.[CreatedDate]
		, Carrier1.[LastModifiedByUserID]
		, Carrier1.[LastModifiedDate]
		, Carrier1.[Timestamp]
		, Business1.[ServiceCharges]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Carrier] Carrier1
	INNER JOIN [dbo].[tblCustomers_Business] Business1 ON Business1.[MetaPartnerID]=Carrier1.[MetaPartnerID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND Carrier1.[MetaPartnerID] = @MetaPartnerID

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Carrier1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Carrier1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CarrierCode' THEN Carrier1.[CarrierCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CarrierCode' THEN Carrier1.[CarrierCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Carrier1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Carrier1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Carrier1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Carrier1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Carrier1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Carrier1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Carrier1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Carrier1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Carrier1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Carrier1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ServiceCharges' THEN Business1.[ServiceCharges] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ServiceCharges' THEN Business1.[ServiceCharges] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetAllCarrierDataByMetaPartnerSubTypeCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'MetaPartnerSubTypeCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @MetaPartnerSubTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all Carrier data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='MetaPartnerSubTypeCode'

/*
** parameter validation
*/
IF (@MetaPartnerSubTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  Carrier1.[MetaPartnerID]
		, Carrier1.[CarrierCode]
		, Carrier1.[CreatedByUserID]
		, Carrier1.[CreatedDate]
		, Carrier1.[LastModifiedByUserID]
		, Carrier1.[LastModifiedDate]
		, Carrier1.[Timestamp]
		, Business1.[ServiceCharges]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Carrier] Carrier1
	INNER JOIN [dbo].[tblCustomers_Business] Business1 ON Business1.[MetaPartnerID]=Carrier1.[MetaPartnerID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND MetaPartner1.[MetaPartnerSubTypeCode] = @MetaPartnerSubTypeCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  Carrier1.[MetaPartnerID]
		, Carrier1.[CarrierCode]
		, Carrier1.[CreatedByUserID]
		, Carrier1.[CreatedDate]
		, Carrier1.[LastModifiedByUserID]
		, Carrier1.[LastModifiedDate]
		, Carrier1.[Timestamp]
		, Business1.[ServiceCharges]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Carrier] Carrier1
	INNER JOIN [dbo].[tblCustomers_Business] Business1 ON Business1.[MetaPartnerID]=Carrier1.[MetaPartnerID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND MetaPartner1.[MetaPartnerSubTypeCode] = @MetaPartnerSubTypeCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Carrier1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Carrier1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CarrierCode' THEN Carrier1.[CarrierCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CarrierCode' THEN Carrier1.[CarrierCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Carrier1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Carrier1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Carrier1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Carrier1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Carrier1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Carrier1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Carrier1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Carrier1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Carrier1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Carrier1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ServiceCharges' THEN Business1.[ServiceCharges] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ServiceCharges' THEN Business1.[ServiceCharges] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetAllCustomerData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'MetaPartnerID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all Customer data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='MetaPartnerID'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  Customer1.[MetaPartnerID]
		, Customer1.[FirstName]
		, Customer1.[LastName]
		, Customer1.[CreatedByUserID]
		, Customer1.[CreatedDate]
		, Customer1.[LastModifiedByUserID]
		, Customer1.[LastModifiedDate]
		, Customer1.[Timestamp]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Customer] Customer1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Customer1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  Customer1.[MetaPartnerID]
		, Customer1.[FirstName]
		, Customer1.[LastName]
		, Customer1.[CreatedByUserID]
		, Customer1.[CreatedDate]
		, Customer1.[LastModifiedByUserID]
		, Customer1.[LastModifiedDate]
		, Customer1.[Timestamp]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Customer] Customer1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Customer1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Customer1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Customer1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FirstName' THEN Customer1.[FirstName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FirstName' THEN Customer1.[FirstName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastName' THEN Customer1.[LastName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastName' THEN Customer1.[LastName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Customer1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Customer1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Customer1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Customer1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Customer1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Customer1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Customer1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Customer1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Customer1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Customer1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetAllCustomerDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'FirstName'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @FirstName nvarchar(255) = NULL
	, @LastName nvarchar(255) = NULL
	, @LocaleCode int
	, @CurrencyCode int
	, @DateFormatCode int
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
	, @MetaPartnerName nvarchar(255)
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all Customer data by criteria.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='FirstName'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  Customer1.[MetaPartnerID]
		, Customer1.[FirstName]
		, Customer1.[LastName]
		, Customer1.[CreatedByUserID]
		, Customer1.[CreatedDate]
		, Customer1.[LastModifiedByUserID]
		, Customer1.[LastModifiedDate]
		, Customer1.[Timestamp]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Customer] Customer1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Customer1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND (@FirstName IS NULL OR Customer1.[FirstName] like '%' + @FirstName + '%')
		AND (@LastName IS NULL OR Customer1.[LastName] like '%' + @LastName + '%')
		AND (@LocaleCode IS NULL OR MetaPartner1.[LocaleCode] = @LocaleCode)
		AND (@CurrencyCode IS NULL OR MetaPartner1.[CurrencyCode] = @CurrencyCode)
		AND (@DateFormatCode IS NULL OR MetaPartner1.[DateFormatCode] = @DateFormatCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (MetaPartner1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (MetaPartner1.[LastModifiedDate] <=  @LastModifiedDateEnd))
		AND (@MetaPartnerName IS NULL OR MetaPartner1.[MetaPartnerName] like '%' + @MetaPartnerName + '%')

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  Customer1.[MetaPartnerID]
		, Customer1.[FirstName]
		, Customer1.[LastName]
		, Customer1.[CreatedByUserID]
		, Customer1.[CreatedDate]
		, Customer1.[LastModifiedByUserID]
		, Customer1.[LastModifiedDate]
		, Customer1.[Timestamp]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Customer] Customer1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Customer1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND (@FirstName IS NULL OR Customer1.[FirstName] like '%' + @FirstName + '%')
		AND (@LastName IS NULL OR Customer1.[LastName] like '%' + @LastName + '%')
		AND (@LocaleCode IS NULL OR MetaPartner1.[LocaleCode] = @LocaleCode)
		AND (@CurrencyCode IS NULL OR MetaPartner1.[CurrencyCode] = @CurrencyCode)
		AND (@DateFormatCode IS NULL OR MetaPartner1.[DateFormatCode] = @DateFormatCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (MetaPartner1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (MetaPartner1.[LastModifiedDate] <=  @LastModifiedDateEnd))
		AND (@MetaPartnerName IS NULL OR MetaPartner1.[MetaPartnerName] like '%' + @MetaPartnerName + '%')

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Customer1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Customer1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FirstName' THEN Customer1.[FirstName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FirstName' THEN Customer1.[FirstName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastName' THEN Customer1.[LastName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastName' THEN Customer1.[LastName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Customer1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Customer1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Customer1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Customer1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Customer1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Customer1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Customer1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Customer1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Customer1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Customer1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetAllCustomerDataByCurrencyCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'CurrencyCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @CurrencyCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all Customer data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='CurrencyCode'

/*
** parameter validation
*/
IF (@CurrencyCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  Customer1.[MetaPartnerID]
		, Customer1.[FirstName]
		, Customer1.[LastName]
		, Customer1.[CreatedByUserID]
		, Customer1.[CreatedDate]
		, Customer1.[LastModifiedByUserID]
		, Customer1.[LastModifiedDate]
		, Customer1.[Timestamp]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Customer] Customer1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Customer1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND MetaPartner1.[CurrencyCode] = @CurrencyCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  Customer1.[MetaPartnerID]
		, Customer1.[FirstName]
		, Customer1.[LastName]
		, Customer1.[CreatedByUserID]
		, Customer1.[CreatedDate]
		, Customer1.[LastModifiedByUserID]
		, Customer1.[LastModifiedDate]
		, Customer1.[Timestamp]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Customer] Customer1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Customer1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND MetaPartner1.[CurrencyCode] = @CurrencyCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Customer1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Customer1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FirstName' THEN Customer1.[FirstName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FirstName' THEN Customer1.[FirstName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastName' THEN Customer1.[LastName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastName' THEN Customer1.[LastName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Customer1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Customer1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Customer1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Customer1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Customer1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Customer1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Customer1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Customer1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Customer1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Customer1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetAllCustomerDataByDateFormatCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'DateFormatCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @DateFormatCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all Customer data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='DateFormatCode'

/*
** parameter validation
*/
IF (@DateFormatCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  Customer1.[MetaPartnerID]
		, Customer1.[FirstName]
		, Customer1.[LastName]
		, Customer1.[CreatedByUserID]
		, Customer1.[CreatedDate]
		, Customer1.[LastModifiedByUserID]
		, Customer1.[LastModifiedDate]
		, Customer1.[Timestamp]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Customer] Customer1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Customer1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND MetaPartner1.[DateFormatCode] = @DateFormatCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  Customer1.[MetaPartnerID]
		, Customer1.[FirstName]
		, Customer1.[LastName]
		, Customer1.[CreatedByUserID]
		, Customer1.[CreatedDate]
		, Customer1.[LastModifiedByUserID]
		, Customer1.[LastModifiedDate]
		, Customer1.[Timestamp]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Customer] Customer1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Customer1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND MetaPartner1.[DateFormatCode] = @DateFormatCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Customer1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Customer1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FirstName' THEN Customer1.[FirstName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FirstName' THEN Customer1.[FirstName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastName' THEN Customer1.[LastName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastName' THEN Customer1.[LastName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Customer1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Customer1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Customer1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Customer1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Customer1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Customer1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Customer1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Customer1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Customer1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Customer1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetAllCustomerDataByLocaleCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'LocaleCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @LocaleCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all Customer data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='LocaleCode'

/*
** parameter validation
*/
IF (@LocaleCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  Customer1.[MetaPartnerID]
		, Customer1.[FirstName]
		, Customer1.[LastName]
		, Customer1.[CreatedByUserID]
		, Customer1.[CreatedDate]
		, Customer1.[LastModifiedByUserID]
		, Customer1.[LastModifiedDate]
		, Customer1.[Timestamp]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Customer] Customer1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Customer1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND MetaPartner1.[LocaleCode] = @LocaleCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  Customer1.[MetaPartnerID]
		, Customer1.[FirstName]
		, Customer1.[LastName]
		, Customer1.[CreatedByUserID]
		, Customer1.[CreatedDate]
		, Customer1.[LastModifiedByUserID]
		, Customer1.[LastModifiedDate]
		, Customer1.[Timestamp]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Customer] Customer1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Customer1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND MetaPartner1.[LocaleCode] = @LocaleCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Customer1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Customer1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FirstName' THEN Customer1.[FirstName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FirstName' THEN Customer1.[FirstName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastName' THEN Customer1.[LastName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastName' THEN Customer1.[LastName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Customer1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Customer1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Customer1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Customer1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Customer1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Customer1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Customer1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Customer1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Customer1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Customer1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetAllCustomerDataByMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'MetaPartnerID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @MetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all Customer data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='MetaPartnerID'

/*
** parameter validation
*/
IF (@MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  Customer1.[MetaPartnerID]
		, Customer1.[FirstName]
		, Customer1.[LastName]
		, Customer1.[CreatedByUserID]
		, Customer1.[CreatedDate]
		, Customer1.[LastModifiedByUserID]
		, Customer1.[LastModifiedDate]
		, Customer1.[Timestamp]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Customer] Customer1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Customer1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND Customer1.[MetaPartnerID] = @MetaPartnerID

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  Customer1.[MetaPartnerID]
		, Customer1.[FirstName]
		, Customer1.[LastName]
		, Customer1.[CreatedByUserID]
		, Customer1.[CreatedDate]
		, Customer1.[LastModifiedByUserID]
		, Customer1.[LastModifiedDate]
		, Customer1.[Timestamp]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Customer] Customer1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Customer1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND Customer1.[MetaPartnerID] = @MetaPartnerID

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Customer1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Customer1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FirstName' THEN Customer1.[FirstName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FirstName' THEN Customer1.[FirstName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastName' THEN Customer1.[LastName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastName' THEN Customer1.[LastName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Customer1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Customer1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Customer1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Customer1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Customer1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Customer1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Customer1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Customer1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Customer1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Customer1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetAllCustomerDataByMetaPartnerSubTypeCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'MetaPartnerSubTypeCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @MetaPartnerSubTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all Customer data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='MetaPartnerSubTypeCode'

/*
** parameter validation
*/
IF (@MetaPartnerSubTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  Customer1.[MetaPartnerID]
		, Customer1.[FirstName]
		, Customer1.[LastName]
		, Customer1.[CreatedByUserID]
		, Customer1.[CreatedDate]
		, Customer1.[LastModifiedByUserID]
		, Customer1.[LastModifiedDate]
		, Customer1.[Timestamp]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Customer] Customer1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Customer1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND MetaPartner1.[MetaPartnerSubTypeCode] = @MetaPartnerSubTypeCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  Customer1.[MetaPartnerID]
		, Customer1.[FirstName]
		, Customer1.[LastName]
		, Customer1.[CreatedByUserID]
		, Customer1.[CreatedDate]
		, Customer1.[LastModifiedByUserID]
		, Customer1.[LastModifiedDate]
		, Customer1.[Timestamp]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Customer] Customer1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Customer1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND MetaPartner1.[MetaPartnerSubTypeCode] = @MetaPartnerSubTypeCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Customer1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Customer1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FirstName' THEN Customer1.[FirstName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FirstName' THEN Customer1.[FirstName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastName' THEN Customer1.[LastName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastName' THEN Customer1.[LastName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Customer1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Customer1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Customer1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Customer1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Customer1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Customer1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Customer1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Customer1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Customer1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Customer1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetAllLocationData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'LocationID'
	, @SortDirection nvarchar(20) = 'Ascending'
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all Location data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='LocationID'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  Location1.[LocationID]
		, Location1.[LocationTypeCode]
		, Location1.[AddressLine1]
		, Location1.[AddressLine2]
		, Location1.[City]
		, Location1.[StateProvince]
		, Location1.[CountryCode]
		, Location1.[PostalCode]
		, Location1.[MetaPartnerID]
		, Location1.[CreatedByUserID]
		, Location1.[CreatedDate]
		, Location1.[LastModifiedByUserID]
		, Location1.[LastModifiedDate]
		, Location1.[Timestamp]
		, LocationType1.[LocationTypeName]
		, Country1.[CountryName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblCustomers_Location] Location1
	INNER JOIN [dbo].[tlkpCustomers_LocationType] LocationType1 ON LocationType1.[LocationTypeCode]=Location1.[LocationTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Country] Country1 ON Country1.[CountryCode]=Location1.[CountryCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Location1.[MetaPartnerID]

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  Location1.[LocationID]
		, Location1.[LocationTypeCode]
		, Location1.[AddressLine1]
		, Location1.[AddressLine2]
		, Location1.[City]
		, Location1.[StateProvince]
		, Location1.[CountryCode]
		, Location1.[PostalCode]
		, Location1.[MetaPartnerID]
		, Location1.[CreatedByUserID]
		, Location1.[CreatedDate]
		, Location1.[LastModifiedByUserID]
		, Location1.[LastModifiedDate]
		, Location1.[Timestamp]
		, LocationType1.[LocationTypeName]
		, Country1.[CountryName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblCustomers_Location] Location1
	INNER JOIN [dbo].[tlkpCustomers_LocationType] LocationType1 ON LocationType1.[LocationTypeCode]=Location1.[LocationTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Country] Country1 ON Country1.[CountryCode]=Location1.[CountryCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Location1.[MetaPartnerID]

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocationID' THEN Location1.[LocationID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocationID' THEN Location1.[LocationID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocationTypeCode' THEN Location1.[LocationTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocationTypeCode' THEN Location1.[LocationTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AddressLine1' THEN Location1.[AddressLine1] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AddressLine1' THEN Location1.[AddressLine1] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AddressLine2' THEN Location1.[AddressLine2] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AddressLine2' THEN Location1.[AddressLine2] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'City' THEN Location1.[City] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'City' THEN Location1.[City] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'StateProvince' THEN Location1.[StateProvince] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'StateProvince' THEN Location1.[StateProvince] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CountryCode' THEN Location1.[CountryCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CountryCode' THEN Location1.[CountryCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PostalCode' THEN Location1.[PostalCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PostalCode' THEN Location1.[PostalCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Location1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Location1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Location1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Location1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Location1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Location1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Location1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Location1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Location1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Location1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Location1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Location1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocationTypeName' THEN LocationType1.[LocationTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocationTypeName' THEN LocationType1.[LocationTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CountryName' THEN Country1.[CountryName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CountryName' THEN Country1.[CountryName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetAllLocationDataByCountryCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'CountryCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @CountryCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all Location data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='CountryCode'

/*
** parameter validation
*/
IF (@CountryCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  Location1.[LocationID]
		, Location1.[LocationTypeCode]
		, Location1.[AddressLine1]
		, Location1.[AddressLine2]
		, Location1.[City]
		, Location1.[StateProvince]
		, Location1.[CountryCode]
		, Location1.[PostalCode]
		, Location1.[MetaPartnerID]
		, Location1.[CreatedByUserID]
		, Location1.[CreatedDate]
		, Location1.[LastModifiedByUserID]
		, Location1.[LastModifiedDate]
		, Location1.[Timestamp]
		, LocationType1.[LocationTypeName]
		, Country1.[CountryName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblCustomers_Location] Location1
	INNER JOIN [dbo].[tlkpCustomers_LocationType] LocationType1 ON LocationType1.[LocationTypeCode]=Location1.[LocationTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Country] Country1 ON Country1.[CountryCode]=Location1.[CountryCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Location1.[MetaPartnerID]
	WHERE 
		Location1.[CountryCode] = @CountryCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  Location1.[LocationID]
		, Location1.[LocationTypeCode]
		, Location1.[AddressLine1]
		, Location1.[AddressLine2]
		, Location1.[City]
		, Location1.[StateProvince]
		, Location1.[CountryCode]
		, Location1.[PostalCode]
		, Location1.[MetaPartnerID]
		, Location1.[CreatedByUserID]
		, Location1.[CreatedDate]
		, Location1.[LastModifiedByUserID]
		, Location1.[LastModifiedDate]
		, Location1.[Timestamp]
		, LocationType1.[LocationTypeName]
		, Country1.[CountryName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblCustomers_Location] Location1
	INNER JOIN [dbo].[tlkpCustomers_LocationType] LocationType1 ON LocationType1.[LocationTypeCode]=Location1.[LocationTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Country] Country1 ON Country1.[CountryCode]=Location1.[CountryCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Location1.[MetaPartnerID]
	WHERE 
		Location1.[CountryCode] = @CountryCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocationID' THEN Location1.[LocationID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocationID' THEN Location1.[LocationID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocationTypeCode' THEN Location1.[LocationTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocationTypeCode' THEN Location1.[LocationTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AddressLine1' THEN Location1.[AddressLine1] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AddressLine1' THEN Location1.[AddressLine1] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AddressLine2' THEN Location1.[AddressLine2] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AddressLine2' THEN Location1.[AddressLine2] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'City' THEN Location1.[City] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'City' THEN Location1.[City] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'StateProvince' THEN Location1.[StateProvince] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'StateProvince' THEN Location1.[StateProvince] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CountryCode' THEN Location1.[CountryCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CountryCode' THEN Location1.[CountryCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PostalCode' THEN Location1.[PostalCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PostalCode' THEN Location1.[PostalCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Location1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Location1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Location1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Location1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Location1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Location1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Location1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Location1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Location1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Location1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Location1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Location1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocationTypeName' THEN LocationType1.[LocationTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocationTypeName' THEN LocationType1.[LocationTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CountryName' THEN Country1.[CountryName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CountryName' THEN Country1.[CountryName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetAllLocationDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'LocationTypeCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @LocationTypeCode int
	, @CountryCode int
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all Location data by criteria.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='LocationTypeCode'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  Location1.[LocationID]
		, Location1.[LocationTypeCode]
		, Location1.[AddressLine1]
		, Location1.[AddressLine2]
		, Location1.[City]
		, Location1.[StateProvince]
		, Location1.[CountryCode]
		, Location1.[PostalCode]
		, Location1.[MetaPartnerID]
		, Location1.[CreatedByUserID]
		, Location1.[CreatedDate]
		, Location1.[LastModifiedByUserID]
		, Location1.[LastModifiedDate]
		, Location1.[Timestamp]
		, LocationType1.[LocationTypeName]
		, Country1.[CountryName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblCustomers_Location] Location1
	INNER JOIN [dbo].[tlkpCustomers_LocationType] LocationType1 ON LocationType1.[LocationTypeCode]=Location1.[LocationTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Country] Country1 ON Country1.[CountryCode]=Location1.[CountryCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Location1.[MetaPartnerID]
	WHERE 
		(@LocationTypeCode IS NULL OR Location1.[LocationTypeCode] = @LocationTypeCode)
		AND (@CountryCode IS NULL OR Location1.[CountryCode] = @CountryCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (Location1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (Location1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  Location1.[LocationID]
		, Location1.[LocationTypeCode]
		, Location1.[AddressLine1]
		, Location1.[AddressLine2]
		, Location1.[City]
		, Location1.[StateProvince]
		, Location1.[CountryCode]
		, Location1.[PostalCode]
		, Location1.[MetaPartnerID]
		, Location1.[CreatedByUserID]
		, Location1.[CreatedDate]
		, Location1.[LastModifiedByUserID]
		, Location1.[LastModifiedDate]
		, Location1.[Timestamp]
		, LocationType1.[LocationTypeName]
		, Country1.[CountryName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblCustomers_Location] Location1
	INNER JOIN [dbo].[tlkpCustomers_LocationType] LocationType1 ON LocationType1.[LocationTypeCode]=Location1.[LocationTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Country] Country1 ON Country1.[CountryCode]=Location1.[CountryCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Location1.[MetaPartnerID]
	WHERE 
		(@LocationTypeCode IS NULL OR Location1.[LocationTypeCode] = @LocationTypeCode)
		AND (@CountryCode IS NULL OR Location1.[CountryCode] = @CountryCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (Location1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (Location1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocationID' THEN Location1.[LocationID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocationID' THEN Location1.[LocationID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocationTypeCode' THEN Location1.[LocationTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocationTypeCode' THEN Location1.[LocationTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AddressLine1' THEN Location1.[AddressLine1] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AddressLine1' THEN Location1.[AddressLine1] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AddressLine2' THEN Location1.[AddressLine2] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AddressLine2' THEN Location1.[AddressLine2] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'City' THEN Location1.[City] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'City' THEN Location1.[City] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'StateProvince' THEN Location1.[StateProvince] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'StateProvince' THEN Location1.[StateProvince] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CountryCode' THEN Location1.[CountryCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CountryCode' THEN Location1.[CountryCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PostalCode' THEN Location1.[PostalCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PostalCode' THEN Location1.[PostalCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Location1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Location1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Location1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Location1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Location1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Location1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Location1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Location1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Location1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Location1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Location1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Location1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocationTypeName' THEN LocationType1.[LocationTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocationTypeName' THEN LocationType1.[LocationTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CountryName' THEN Country1.[CountryName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CountryName' THEN Country1.[CountryName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetAllLocationDataByLocationTypeCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'LocationTypeCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @LocationTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all Location data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='LocationTypeCode'

/*
** parameter validation
*/
IF (@LocationTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  Location1.[LocationID]
		, Location1.[LocationTypeCode]
		, Location1.[AddressLine1]
		, Location1.[AddressLine2]
		, Location1.[City]
		, Location1.[StateProvince]
		, Location1.[CountryCode]
		, Location1.[PostalCode]
		, Location1.[MetaPartnerID]
		, Location1.[CreatedByUserID]
		, Location1.[CreatedDate]
		, Location1.[LastModifiedByUserID]
		, Location1.[LastModifiedDate]
		, Location1.[Timestamp]
		, LocationType1.[LocationTypeName]
		, Country1.[CountryName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblCustomers_Location] Location1
	INNER JOIN [dbo].[tlkpCustomers_LocationType] LocationType1 ON LocationType1.[LocationTypeCode]=Location1.[LocationTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Country] Country1 ON Country1.[CountryCode]=Location1.[CountryCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Location1.[MetaPartnerID]
	WHERE 
		Location1.[LocationTypeCode] = @LocationTypeCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  Location1.[LocationID]
		, Location1.[LocationTypeCode]
		, Location1.[AddressLine1]
		, Location1.[AddressLine2]
		, Location1.[City]
		, Location1.[StateProvince]
		, Location1.[CountryCode]
		, Location1.[PostalCode]
		, Location1.[MetaPartnerID]
		, Location1.[CreatedByUserID]
		, Location1.[CreatedDate]
		, Location1.[LastModifiedByUserID]
		, Location1.[LastModifiedDate]
		, Location1.[Timestamp]
		, LocationType1.[LocationTypeName]
		, Country1.[CountryName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblCustomers_Location] Location1
	INNER JOIN [dbo].[tlkpCustomers_LocationType] LocationType1 ON LocationType1.[LocationTypeCode]=Location1.[LocationTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Country] Country1 ON Country1.[CountryCode]=Location1.[CountryCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Location1.[MetaPartnerID]
	WHERE 
		Location1.[LocationTypeCode] = @LocationTypeCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocationID' THEN Location1.[LocationID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocationID' THEN Location1.[LocationID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocationTypeCode' THEN Location1.[LocationTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocationTypeCode' THEN Location1.[LocationTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AddressLine1' THEN Location1.[AddressLine1] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AddressLine1' THEN Location1.[AddressLine1] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AddressLine2' THEN Location1.[AddressLine2] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AddressLine2' THEN Location1.[AddressLine2] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'City' THEN Location1.[City] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'City' THEN Location1.[City] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'StateProvince' THEN Location1.[StateProvince] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'StateProvince' THEN Location1.[StateProvince] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CountryCode' THEN Location1.[CountryCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CountryCode' THEN Location1.[CountryCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PostalCode' THEN Location1.[PostalCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PostalCode' THEN Location1.[PostalCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Location1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Location1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Location1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Location1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Location1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Location1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Location1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Location1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Location1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Location1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Location1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Location1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocationTypeName' THEN LocationType1.[LocationTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocationTypeName' THEN LocationType1.[LocationTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CountryName' THEN Country1.[CountryName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CountryName' THEN Country1.[CountryName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetAllLocationDataByMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'MetaPartnerID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @MetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all Location data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='MetaPartnerID'

/*
** parameter validation
*/
IF (@MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  Location1.[LocationID]
		, Location1.[LocationTypeCode]
		, Location1.[AddressLine1]
		, Location1.[AddressLine2]
		, Location1.[City]
		, Location1.[StateProvince]
		, Location1.[CountryCode]
		, Location1.[PostalCode]
		, Location1.[MetaPartnerID]
		, Location1.[CreatedByUserID]
		, Location1.[CreatedDate]
		, Location1.[LastModifiedByUserID]
		, Location1.[LastModifiedDate]
		, Location1.[Timestamp]
		, LocationType1.[LocationTypeName]
		, Country1.[CountryName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblCustomers_Location] Location1
	INNER JOIN [dbo].[tlkpCustomers_LocationType] LocationType1 ON LocationType1.[LocationTypeCode]=Location1.[LocationTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Country] Country1 ON Country1.[CountryCode]=Location1.[CountryCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Location1.[MetaPartnerID]
	WHERE 
		Location1.[MetaPartnerID] = @MetaPartnerID

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  Location1.[LocationID]
		, Location1.[LocationTypeCode]
		, Location1.[AddressLine1]
		, Location1.[AddressLine2]
		, Location1.[City]
		, Location1.[StateProvince]
		, Location1.[CountryCode]
		, Location1.[PostalCode]
		, Location1.[MetaPartnerID]
		, Location1.[CreatedByUserID]
		, Location1.[CreatedDate]
		, Location1.[LastModifiedByUserID]
		, Location1.[LastModifiedDate]
		, Location1.[Timestamp]
		, LocationType1.[LocationTypeName]
		, Country1.[CountryName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblCustomers_Location] Location1
	INNER JOIN [dbo].[tlkpCustomers_LocationType] LocationType1 ON LocationType1.[LocationTypeCode]=Location1.[LocationTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Country] Country1 ON Country1.[CountryCode]=Location1.[CountryCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Location1.[MetaPartnerID]
	WHERE 
		Location1.[MetaPartnerID] = @MetaPartnerID

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocationID' THEN Location1.[LocationID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocationID' THEN Location1.[LocationID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocationTypeCode' THEN Location1.[LocationTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocationTypeCode' THEN Location1.[LocationTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AddressLine1' THEN Location1.[AddressLine1] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AddressLine1' THEN Location1.[AddressLine1] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AddressLine2' THEN Location1.[AddressLine2] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AddressLine2' THEN Location1.[AddressLine2] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'City' THEN Location1.[City] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'City' THEN Location1.[City] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'StateProvince' THEN Location1.[StateProvince] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'StateProvince' THEN Location1.[StateProvince] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CountryCode' THEN Location1.[CountryCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CountryCode' THEN Location1.[CountryCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PostalCode' THEN Location1.[PostalCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PostalCode' THEN Location1.[PostalCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Location1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Location1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Location1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Location1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Location1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Location1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Location1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Location1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Location1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Location1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Location1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Location1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocationTypeName' THEN LocationType1.[LocationTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocationTypeName' THEN LocationType1.[LocationTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CountryName' THEN Country1.[CountryName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CountryName' THEN Country1.[CountryName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetAllLocationTypeData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'LocationTypeCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all LocationType data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='LocationTypeCode'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  LocationType1.[LocationTypeCode]
		, LocationType1.[LocationTypeName]
		, LocationType1.[Description]
		, LocationType1.[IsActive]
		, LocationType1.[CreatedByUserID]
		, LocationType1.[CreatedDate]
		, LocationType1.[LastModifiedByUserID]
		, LocationType1.[LastModifiedDate]
		, LocationType1.[Timestamp]
	FROM
	      [dbo].[tlkpCustomers_LocationType] LocationType1
	WHERE 
		LocationType1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN LocationType1.[IsActive] ELSE 1 END

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  LocationType1.[LocationTypeCode]
		, LocationType1.[LocationTypeName]
		, LocationType1.[Description]
		, LocationType1.[IsActive]
		, LocationType1.[CreatedByUserID]
		, LocationType1.[CreatedDate]
		, LocationType1.[LastModifiedByUserID]
		, LocationType1.[LastModifiedDate]
		, LocationType1.[Timestamp]
	FROM
	      [dbo].[tlkpCustomers_LocationType] LocationType1
	WHERE 
		LocationType1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN LocationType1.[IsActive] ELSE 1 END

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocationTypeCode' THEN LocationType1.[LocationTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocationTypeCode' THEN LocationType1.[LocationTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocationTypeName' THEN LocationType1.[LocationTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocationTypeName' THEN LocationType1.[LocationTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN LocationType1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN LocationType1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN LocationType1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN LocationType1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN LocationType1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN LocationType1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN LocationType1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN LocationType1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN LocationType1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN LocationType1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN LocationType1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN LocationType1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN LocationType1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN LocationType1.[Timestamp] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetAllMerchantData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'MetaPartnerID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all Merchant data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='MetaPartnerID'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  Merchant1.[MetaPartnerID]
		, Merchant1.[CreatedByUserID]
		, Merchant1.[CreatedDate]
		, Merchant1.[LastModifiedByUserID]
		, Merchant1.[LastModifiedDate]
		, Merchant1.[Timestamp]
		, Business1.[ServiceCharges]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Merchant] Merchant1
	INNER JOIN [dbo].[tblCustomers_Business] Business1 ON Business1.[MetaPartnerID]=Merchant1.[MetaPartnerID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  Merchant1.[MetaPartnerID]
		, Merchant1.[CreatedByUserID]
		, Merchant1.[CreatedDate]
		, Merchant1.[LastModifiedByUserID]
		, Merchant1.[LastModifiedDate]
		, Merchant1.[Timestamp]
		, Business1.[ServiceCharges]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Merchant] Merchant1
	INNER JOIN [dbo].[tblCustomers_Business] Business1 ON Business1.[MetaPartnerID]=Merchant1.[MetaPartnerID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Merchant1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Merchant1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Merchant1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Merchant1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Merchant1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Merchant1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Merchant1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Merchant1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Merchant1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Merchant1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Merchant1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Merchant1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ServiceCharges' THEN Business1.[ServiceCharges] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ServiceCharges' THEN Business1.[ServiceCharges] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetAllMerchantDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'LocaleCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @LocaleCode int
	, @CurrencyCode int
	, @DateFormatCode int
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
	, @MetaPartnerName nvarchar(255)
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all Merchant data by criteria.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='LocaleCode'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  Merchant1.[MetaPartnerID]
		, Merchant1.[CreatedByUserID]
		, Merchant1.[CreatedDate]
		, Merchant1.[LastModifiedByUserID]
		, Merchant1.[LastModifiedDate]
		, Merchant1.[Timestamp]
		, Business1.[ServiceCharges]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Merchant] Merchant1
	INNER JOIN [dbo].[tblCustomers_Business] Business1 ON Business1.[MetaPartnerID]=Merchant1.[MetaPartnerID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND (@LocaleCode IS NULL OR MetaPartner1.[LocaleCode] = @LocaleCode)
		AND (@CurrencyCode IS NULL OR MetaPartner1.[CurrencyCode] = @CurrencyCode)
		AND (@DateFormatCode IS NULL OR MetaPartner1.[DateFormatCode] = @DateFormatCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (MetaPartner1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (MetaPartner1.[LastModifiedDate] <=  @LastModifiedDateEnd))
		AND (@MetaPartnerName IS NULL OR MetaPartner1.[MetaPartnerName] like '%' + @MetaPartnerName + '%')

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  Merchant1.[MetaPartnerID]
		, Merchant1.[CreatedByUserID]
		, Merchant1.[CreatedDate]
		, Merchant1.[LastModifiedByUserID]
		, Merchant1.[LastModifiedDate]
		, Merchant1.[Timestamp]
		, Business1.[ServiceCharges]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Merchant] Merchant1
	INNER JOIN [dbo].[tblCustomers_Business] Business1 ON Business1.[MetaPartnerID]=Merchant1.[MetaPartnerID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND (@LocaleCode IS NULL OR MetaPartner1.[LocaleCode] = @LocaleCode)
		AND (@CurrencyCode IS NULL OR MetaPartner1.[CurrencyCode] = @CurrencyCode)
		AND (@DateFormatCode IS NULL OR MetaPartner1.[DateFormatCode] = @DateFormatCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (MetaPartner1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (MetaPartner1.[LastModifiedDate] <=  @LastModifiedDateEnd))
		AND (@MetaPartnerName IS NULL OR MetaPartner1.[MetaPartnerName] like '%' + @MetaPartnerName + '%')

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Merchant1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Merchant1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Merchant1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Merchant1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Merchant1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Merchant1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Merchant1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Merchant1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Merchant1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Merchant1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Merchant1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Merchant1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ServiceCharges' THEN Business1.[ServiceCharges] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ServiceCharges' THEN Business1.[ServiceCharges] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetAllMerchantDataByCurrencyCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'CurrencyCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @CurrencyCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all Merchant data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='CurrencyCode'

/*
** parameter validation
*/
IF (@CurrencyCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  Merchant1.[MetaPartnerID]
		, Merchant1.[CreatedByUserID]
		, Merchant1.[CreatedDate]
		, Merchant1.[LastModifiedByUserID]
		, Merchant1.[LastModifiedDate]
		, Merchant1.[Timestamp]
		, Business1.[ServiceCharges]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Merchant] Merchant1
	INNER JOIN [dbo].[tblCustomers_Business] Business1 ON Business1.[MetaPartnerID]=Merchant1.[MetaPartnerID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND MetaPartner1.[CurrencyCode] = @CurrencyCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  Merchant1.[MetaPartnerID]
		, Merchant1.[CreatedByUserID]
		, Merchant1.[CreatedDate]
		, Merchant1.[LastModifiedByUserID]
		, Merchant1.[LastModifiedDate]
		, Merchant1.[Timestamp]
		, Business1.[ServiceCharges]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Merchant] Merchant1
	INNER JOIN [dbo].[tblCustomers_Business] Business1 ON Business1.[MetaPartnerID]=Merchant1.[MetaPartnerID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND MetaPartner1.[CurrencyCode] = @CurrencyCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Merchant1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Merchant1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Merchant1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Merchant1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Merchant1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Merchant1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Merchant1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Merchant1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Merchant1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Merchant1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Merchant1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Merchant1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ServiceCharges' THEN Business1.[ServiceCharges] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ServiceCharges' THEN Business1.[ServiceCharges] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetAllMerchantDataByDateFormatCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'DateFormatCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @DateFormatCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all Merchant data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='DateFormatCode'

/*
** parameter validation
*/
IF (@DateFormatCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  Merchant1.[MetaPartnerID]
		, Merchant1.[CreatedByUserID]
		, Merchant1.[CreatedDate]
		, Merchant1.[LastModifiedByUserID]
		, Merchant1.[LastModifiedDate]
		, Merchant1.[Timestamp]
		, Business1.[ServiceCharges]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Merchant] Merchant1
	INNER JOIN [dbo].[tblCustomers_Business] Business1 ON Business1.[MetaPartnerID]=Merchant1.[MetaPartnerID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND MetaPartner1.[DateFormatCode] = @DateFormatCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  Merchant1.[MetaPartnerID]
		, Merchant1.[CreatedByUserID]
		, Merchant1.[CreatedDate]
		, Merchant1.[LastModifiedByUserID]
		, Merchant1.[LastModifiedDate]
		, Merchant1.[Timestamp]
		, Business1.[ServiceCharges]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Merchant] Merchant1
	INNER JOIN [dbo].[tblCustomers_Business] Business1 ON Business1.[MetaPartnerID]=Merchant1.[MetaPartnerID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND MetaPartner1.[DateFormatCode] = @DateFormatCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Merchant1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Merchant1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Merchant1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Merchant1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Merchant1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Merchant1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Merchant1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Merchant1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Merchant1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Merchant1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Merchant1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Merchant1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ServiceCharges' THEN Business1.[ServiceCharges] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ServiceCharges' THEN Business1.[ServiceCharges] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetAllMerchantDataByLocaleCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'LocaleCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @LocaleCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all Merchant data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='LocaleCode'

/*
** parameter validation
*/
IF (@LocaleCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  Merchant1.[MetaPartnerID]
		, Merchant1.[CreatedByUserID]
		, Merchant1.[CreatedDate]
		, Merchant1.[LastModifiedByUserID]
		, Merchant1.[LastModifiedDate]
		, Merchant1.[Timestamp]
		, Business1.[ServiceCharges]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Merchant] Merchant1
	INNER JOIN [dbo].[tblCustomers_Business] Business1 ON Business1.[MetaPartnerID]=Merchant1.[MetaPartnerID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND MetaPartner1.[LocaleCode] = @LocaleCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  Merchant1.[MetaPartnerID]
		, Merchant1.[CreatedByUserID]
		, Merchant1.[CreatedDate]
		, Merchant1.[LastModifiedByUserID]
		, Merchant1.[LastModifiedDate]
		, Merchant1.[Timestamp]
		, Business1.[ServiceCharges]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Merchant] Merchant1
	INNER JOIN [dbo].[tblCustomers_Business] Business1 ON Business1.[MetaPartnerID]=Merchant1.[MetaPartnerID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND MetaPartner1.[LocaleCode] = @LocaleCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Merchant1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Merchant1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Merchant1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Merchant1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Merchant1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Merchant1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Merchant1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Merchant1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Merchant1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Merchant1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Merchant1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Merchant1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ServiceCharges' THEN Business1.[ServiceCharges] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ServiceCharges' THEN Business1.[ServiceCharges] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetAllMerchantDataByMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'MetaPartnerID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @MetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all Merchant data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='MetaPartnerID'

/*
** parameter validation
*/
IF (@MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  Merchant1.[MetaPartnerID]
		, Merchant1.[CreatedByUserID]
		, Merchant1.[CreatedDate]
		, Merchant1.[LastModifiedByUserID]
		, Merchant1.[LastModifiedDate]
		, Merchant1.[Timestamp]
		, Business1.[ServiceCharges]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Merchant] Merchant1
	INNER JOIN [dbo].[tblCustomers_Business] Business1 ON Business1.[MetaPartnerID]=Merchant1.[MetaPartnerID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND Merchant1.[MetaPartnerID] = @MetaPartnerID

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  Merchant1.[MetaPartnerID]
		, Merchant1.[CreatedByUserID]
		, Merchant1.[CreatedDate]
		, Merchant1.[LastModifiedByUserID]
		, Merchant1.[LastModifiedDate]
		, Merchant1.[Timestamp]
		, Business1.[ServiceCharges]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Merchant] Merchant1
	INNER JOIN [dbo].[tblCustomers_Business] Business1 ON Business1.[MetaPartnerID]=Merchant1.[MetaPartnerID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND Merchant1.[MetaPartnerID] = @MetaPartnerID

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Merchant1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Merchant1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Merchant1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Merchant1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Merchant1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Merchant1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Merchant1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Merchant1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Merchant1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Merchant1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Merchant1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Merchant1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ServiceCharges' THEN Business1.[ServiceCharges] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ServiceCharges' THEN Business1.[ServiceCharges] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetAllMerchantDataByMetaPartnerSubTypeCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'MetaPartnerSubTypeCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @MetaPartnerSubTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all Merchant data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='MetaPartnerSubTypeCode'

/*
** parameter validation
*/
IF (@MetaPartnerSubTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  Merchant1.[MetaPartnerID]
		, Merchant1.[CreatedByUserID]
		, Merchant1.[CreatedDate]
		, Merchant1.[LastModifiedByUserID]
		, Merchant1.[LastModifiedDate]
		, Merchant1.[Timestamp]
		, Business1.[ServiceCharges]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Merchant] Merchant1
	INNER JOIN [dbo].[tblCustomers_Business] Business1 ON Business1.[MetaPartnerID]=Merchant1.[MetaPartnerID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND MetaPartner1.[MetaPartnerSubTypeCode] = @MetaPartnerSubTypeCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  Merchant1.[MetaPartnerID]
		, Merchant1.[CreatedByUserID]
		, Merchant1.[CreatedDate]
		, Merchant1.[LastModifiedByUserID]
		, Merchant1.[LastModifiedDate]
		, Merchant1.[Timestamp]
		, Business1.[ServiceCharges]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Merchant] Merchant1
	INNER JOIN [dbo].[tblCustomers_Business] Business1 ON Business1.[MetaPartnerID]=Merchant1.[MetaPartnerID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND MetaPartner1.[MetaPartnerSubTypeCode] = @MetaPartnerSubTypeCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Merchant1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Merchant1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Merchant1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Merchant1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Merchant1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Merchant1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Merchant1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Merchant1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Merchant1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Merchant1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Merchant1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Merchant1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ServiceCharges' THEN Business1.[ServiceCharges] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ServiceCharges' THEN Business1.[ServiceCharges] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetAllMetaPartnerContactData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'MetaPartnerID'
	, @SortDirection nvarchar(20) = 'Ascending'
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all MetaPartnerContact data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='MetaPartnerID'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  MetaPartnerContact1.[MetaPartnerID]
		, MetaPartnerContact1.[ContactMetaPartnerID]
		, MetaPartnerContact1.[CreatedByUserID]
		, MetaPartnerContact1.[CreatedDate]
		, MetaPartnerContact1.[LastModifiedByUserID]
		, MetaPartnerContact1.[LastModifiedDate]
		, MetaPartnerContact1.[Timestamp]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[trelCustomers_MetaPartnerContact] MetaPartnerContact1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=MetaPartnerContact1.[MetaPartnerID]

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  MetaPartnerContact1.[MetaPartnerID]
		, MetaPartnerContact1.[ContactMetaPartnerID]
		, MetaPartnerContact1.[CreatedByUserID]
		, MetaPartnerContact1.[CreatedDate]
		, MetaPartnerContact1.[LastModifiedByUserID]
		, MetaPartnerContact1.[LastModifiedDate]
		, MetaPartnerContact1.[Timestamp]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[trelCustomers_MetaPartnerContact] MetaPartnerContact1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=MetaPartnerContact1.[MetaPartnerID]

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN MetaPartnerContact1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN MetaPartnerContact1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ContactMetaPartnerID' THEN MetaPartnerContact1.[ContactMetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ContactMetaPartnerID' THEN MetaPartnerContact1.[ContactMetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN MetaPartnerContact1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN MetaPartnerContact1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN MetaPartnerContact1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN MetaPartnerContact1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN MetaPartnerContact1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN MetaPartnerContact1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN MetaPartnerContact1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN MetaPartnerContact1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN MetaPartnerContact1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN MetaPartnerContact1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetAllMetaPartnerContactDataByContactMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'ContactMetaPartnerID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @ContactMetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all MetaPartnerContact data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='ContactMetaPartnerID'

/*
** parameter validation
*/
IF (@ContactMetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  MetaPartnerContact1.[MetaPartnerID]
		, MetaPartnerContact1.[ContactMetaPartnerID]
		, MetaPartnerContact1.[CreatedByUserID]
		, MetaPartnerContact1.[CreatedDate]
		, MetaPartnerContact1.[LastModifiedByUserID]
		, MetaPartnerContact1.[LastModifiedDate]
		, MetaPartnerContact1.[Timestamp]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[trelCustomers_MetaPartnerContact] MetaPartnerContact1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=MetaPartnerContact1.[MetaPartnerID]
	WHERE 
		MetaPartnerContact1.[ContactMetaPartnerID] = @ContactMetaPartnerID

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  MetaPartnerContact1.[MetaPartnerID]
		, MetaPartnerContact1.[ContactMetaPartnerID]
		, MetaPartnerContact1.[CreatedByUserID]
		, MetaPartnerContact1.[CreatedDate]
		, MetaPartnerContact1.[LastModifiedByUserID]
		, MetaPartnerContact1.[LastModifiedDate]
		, MetaPartnerContact1.[Timestamp]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[trelCustomers_MetaPartnerContact] MetaPartnerContact1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=MetaPartnerContact1.[MetaPartnerID]
	WHERE 
		MetaPartnerContact1.[ContactMetaPartnerID] = @ContactMetaPartnerID

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN MetaPartnerContact1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN MetaPartnerContact1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ContactMetaPartnerID' THEN MetaPartnerContact1.[ContactMetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ContactMetaPartnerID' THEN MetaPartnerContact1.[ContactMetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN MetaPartnerContact1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN MetaPartnerContact1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN MetaPartnerContact1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN MetaPartnerContact1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN MetaPartnerContact1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN MetaPartnerContact1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN MetaPartnerContact1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN MetaPartnerContact1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN MetaPartnerContact1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN MetaPartnerContact1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetAllMetaPartnerContactDataByMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'MetaPartnerID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @MetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all MetaPartnerContact data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='MetaPartnerID'

/*
** parameter validation
*/
IF (@MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  MetaPartnerContact1.[MetaPartnerID]
		, MetaPartnerContact1.[ContactMetaPartnerID]
		, MetaPartnerContact1.[CreatedByUserID]
		, MetaPartnerContact1.[CreatedDate]
		, MetaPartnerContact1.[LastModifiedByUserID]
		, MetaPartnerContact1.[LastModifiedDate]
		, MetaPartnerContact1.[Timestamp]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[trelCustomers_MetaPartnerContact] MetaPartnerContact1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=MetaPartnerContact1.[MetaPartnerID]
	WHERE 
		MetaPartnerContact1.[MetaPartnerID] = @MetaPartnerID

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  MetaPartnerContact1.[MetaPartnerID]
		, MetaPartnerContact1.[ContactMetaPartnerID]
		, MetaPartnerContact1.[CreatedByUserID]
		, MetaPartnerContact1.[CreatedDate]
		, MetaPartnerContact1.[LastModifiedByUserID]
		, MetaPartnerContact1.[LastModifiedDate]
		, MetaPartnerContact1.[Timestamp]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[trelCustomers_MetaPartnerContact] MetaPartnerContact1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=MetaPartnerContact1.[MetaPartnerID]
	WHERE 
		MetaPartnerContact1.[MetaPartnerID] = @MetaPartnerID

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN MetaPartnerContact1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN MetaPartnerContact1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ContactMetaPartnerID' THEN MetaPartnerContact1.[ContactMetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ContactMetaPartnerID' THEN MetaPartnerContact1.[ContactMetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN MetaPartnerContact1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN MetaPartnerContact1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN MetaPartnerContact1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN MetaPartnerContact1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN MetaPartnerContact1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN MetaPartnerContact1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN MetaPartnerContact1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN MetaPartnerContact1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN MetaPartnerContact1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN MetaPartnerContact1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetAllMetaPartnerData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'MetaPartnerID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all MetaPartner data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='MetaPartnerID'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  MetaPartner1.[MetaPartnerID]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartner1.[CreatedByUserID]
		, MetaPartner1.[CreatedDate]
		, MetaPartner1.[LastModifiedByUserID]
		, MetaPartner1.[LastModifiedDate]
		, MetaPartner1.[Timestamp]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_MetaPartner] MetaPartner1
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  MetaPartner1.[MetaPartnerID]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartner1.[CreatedByUserID]
		, MetaPartner1.[CreatedDate]
		, MetaPartner1.[LastModifiedByUserID]
		, MetaPartner1.[LastModifiedDate]
		, MetaPartner1.[Timestamp]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_MetaPartner] MetaPartner1
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN MetaPartner1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN MetaPartner1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN MetaPartner1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN MetaPartner1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN MetaPartner1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN MetaPartner1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN MetaPartner1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN MetaPartner1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN MetaPartner1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN MetaPartner1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN MetaPartner1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN MetaPartner1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetAllMetaPartnerDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'MetaPartnerSubTypeCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @MetaPartnerSubTypeCode int
	, @LocaleCode int
	, @CurrencyCode int
	, @DateFormatCode int
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
	, @MetaPartnerName nvarchar(255)
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all MetaPartner data by criteria.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='MetaPartnerSubTypeCode'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  MetaPartner1.[MetaPartnerID]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartner1.[CreatedByUserID]
		, MetaPartner1.[CreatedDate]
		, MetaPartner1.[LastModifiedByUserID]
		, MetaPartner1.[LastModifiedDate]
		, MetaPartner1.[Timestamp]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_MetaPartner] MetaPartner1
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND (@MetaPartnerSubTypeCode IS NULL OR MetaPartner1.[MetaPartnerSubTypeCode] = @MetaPartnerSubTypeCode)
		AND (@LocaleCode IS NULL OR MetaPartner1.[LocaleCode] = @LocaleCode)
		AND (@CurrencyCode IS NULL OR MetaPartner1.[CurrencyCode] = @CurrencyCode)
		AND (@DateFormatCode IS NULL OR MetaPartner1.[DateFormatCode] = @DateFormatCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (MetaPartner1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (MetaPartner1.[LastModifiedDate] <=  @LastModifiedDateEnd))
		AND (@MetaPartnerName IS NULL OR MetaPartner1.[MetaPartnerName] like '%' + @MetaPartnerName + '%')

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  MetaPartner1.[MetaPartnerID]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartner1.[CreatedByUserID]
		, MetaPartner1.[CreatedDate]
		, MetaPartner1.[LastModifiedByUserID]
		, MetaPartner1.[LastModifiedDate]
		, MetaPartner1.[Timestamp]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_MetaPartner] MetaPartner1
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND (@MetaPartnerSubTypeCode IS NULL OR MetaPartner1.[MetaPartnerSubTypeCode] = @MetaPartnerSubTypeCode)
		AND (@LocaleCode IS NULL OR MetaPartner1.[LocaleCode] = @LocaleCode)
		AND (@CurrencyCode IS NULL OR MetaPartner1.[CurrencyCode] = @CurrencyCode)
		AND (@DateFormatCode IS NULL OR MetaPartner1.[DateFormatCode] = @DateFormatCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (MetaPartner1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (MetaPartner1.[LastModifiedDate] <=  @LastModifiedDateEnd))
		AND (@MetaPartnerName IS NULL OR MetaPartner1.[MetaPartnerName] like '%' + @MetaPartnerName + '%')

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN MetaPartner1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN MetaPartner1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN MetaPartner1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN MetaPartner1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN MetaPartner1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN MetaPartner1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN MetaPartner1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN MetaPartner1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN MetaPartner1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN MetaPartner1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN MetaPartner1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN MetaPartner1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetAllMetaPartnerDataByCurrencyCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'CurrencyCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @CurrencyCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all MetaPartner data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='CurrencyCode'

/*
** parameter validation
*/
IF (@CurrencyCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  MetaPartner1.[MetaPartnerID]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartner1.[CreatedByUserID]
		, MetaPartner1.[CreatedDate]
		, MetaPartner1.[LastModifiedByUserID]
		, MetaPartner1.[LastModifiedDate]
		, MetaPartner1.[Timestamp]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_MetaPartner] MetaPartner1
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND MetaPartner1.[CurrencyCode] = @CurrencyCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  MetaPartner1.[MetaPartnerID]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartner1.[CreatedByUserID]
		, MetaPartner1.[CreatedDate]
		, MetaPartner1.[LastModifiedByUserID]
		, MetaPartner1.[LastModifiedDate]
		, MetaPartner1.[Timestamp]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_MetaPartner] MetaPartner1
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND MetaPartner1.[CurrencyCode] = @CurrencyCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN MetaPartner1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN MetaPartner1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN MetaPartner1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN MetaPartner1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN MetaPartner1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN MetaPartner1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN MetaPartner1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN MetaPartner1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN MetaPartner1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN MetaPartner1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN MetaPartner1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN MetaPartner1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetAllMetaPartnerDataByDateFormatCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'DateFormatCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @DateFormatCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all MetaPartner data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='DateFormatCode'

/*
** parameter validation
*/
IF (@DateFormatCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  MetaPartner1.[MetaPartnerID]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartner1.[CreatedByUserID]
		, MetaPartner1.[CreatedDate]
		, MetaPartner1.[LastModifiedByUserID]
		, MetaPartner1.[LastModifiedDate]
		, MetaPartner1.[Timestamp]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_MetaPartner] MetaPartner1
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND MetaPartner1.[DateFormatCode] = @DateFormatCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  MetaPartner1.[MetaPartnerID]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartner1.[CreatedByUserID]
		, MetaPartner1.[CreatedDate]
		, MetaPartner1.[LastModifiedByUserID]
		, MetaPartner1.[LastModifiedDate]
		, MetaPartner1.[Timestamp]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_MetaPartner] MetaPartner1
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND MetaPartner1.[DateFormatCode] = @DateFormatCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN MetaPartner1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN MetaPartner1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN MetaPartner1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN MetaPartner1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN MetaPartner1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN MetaPartner1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN MetaPartner1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN MetaPartner1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN MetaPartner1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN MetaPartner1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN MetaPartner1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN MetaPartner1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetAllMetaPartnerDataByLocaleCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'LocaleCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @LocaleCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all MetaPartner data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='LocaleCode'

/*
** parameter validation
*/
IF (@LocaleCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  MetaPartner1.[MetaPartnerID]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartner1.[CreatedByUserID]
		, MetaPartner1.[CreatedDate]
		, MetaPartner1.[LastModifiedByUserID]
		, MetaPartner1.[LastModifiedDate]
		, MetaPartner1.[Timestamp]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_MetaPartner] MetaPartner1
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND MetaPartner1.[LocaleCode] = @LocaleCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  MetaPartner1.[MetaPartnerID]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartner1.[CreatedByUserID]
		, MetaPartner1.[CreatedDate]
		, MetaPartner1.[LastModifiedByUserID]
		, MetaPartner1.[LastModifiedDate]
		, MetaPartner1.[Timestamp]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_MetaPartner] MetaPartner1
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND MetaPartner1.[LocaleCode] = @LocaleCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN MetaPartner1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN MetaPartner1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN MetaPartner1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN MetaPartner1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN MetaPartner1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN MetaPartner1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN MetaPartner1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN MetaPartner1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN MetaPartner1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN MetaPartner1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN MetaPartner1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN MetaPartner1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetAllMetaPartnerDataByMetaPartnerSubTypeCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'MetaPartnerSubTypeCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @MetaPartnerSubTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all MetaPartner data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='MetaPartnerSubTypeCode'

/*
** parameter validation
*/
IF (@MetaPartnerSubTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  MetaPartner1.[MetaPartnerID]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartner1.[CreatedByUserID]
		, MetaPartner1.[CreatedDate]
		, MetaPartner1.[LastModifiedByUserID]
		, MetaPartner1.[LastModifiedDate]
		, MetaPartner1.[Timestamp]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_MetaPartner] MetaPartner1
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND MetaPartner1.[MetaPartnerSubTypeCode] = @MetaPartnerSubTypeCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  MetaPartner1.[MetaPartnerID]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartner1.[CreatedByUserID]
		, MetaPartner1.[CreatedDate]
		, MetaPartner1.[LastModifiedByUserID]
		, MetaPartner1.[LastModifiedDate]
		, MetaPartner1.[Timestamp]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_MetaPartner] MetaPartner1
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND MetaPartner1.[MetaPartnerSubTypeCode] = @MetaPartnerSubTypeCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN MetaPartner1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN MetaPartner1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN MetaPartner1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN MetaPartner1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN MetaPartner1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN MetaPartner1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN MetaPartner1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN MetaPartner1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN MetaPartner1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN MetaPartner1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN MetaPartner1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN MetaPartner1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetAllMetaPartnerEmailData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'MetaPartnerEmailID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all MetaPartnerEmail data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='MetaPartnerEmailID'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  MetaPartnerEmail1.[MetaPartnerEmailID]
		, MetaPartnerEmail1.[EmailAddress]
		, MetaPartnerEmail1.[Password]
		, MetaPartnerEmail1.[MetaPartnerID]
		, MetaPartnerEmail1.[Rank]
		, MetaPartnerEmail1.[IsActive]
		, "DisplayName" = MetaPartnerEmail1.[EmailAddress] + ' (' + MetaPartner1.[MetaPartnerName] + ')'
		, MetaPartnerEmail1.[CreatedByUserID]
		, MetaPartnerEmail1.[CreatedDate]
		, MetaPartnerEmail1.[LastModifiedByUserID]
		, MetaPartnerEmail1.[LastModifiedDate]
		, MetaPartnerEmail1.[Timestamp]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblCustomers_MetaPartnerEmail] MetaPartnerEmail1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=MetaPartnerEmail1.[MetaPartnerID]
	WHERE 
		MetaPartnerEmail1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartnerEmail1.[IsActive] ELSE 1 END

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  MetaPartnerEmail1.[MetaPartnerEmailID]
		, MetaPartnerEmail1.[EmailAddress]
		, MetaPartnerEmail1.[Password]
		, MetaPartnerEmail1.[MetaPartnerID]
		, MetaPartnerEmail1.[Rank]
		, MetaPartnerEmail1.[IsActive]
		, "DisplayName" = MetaPartnerEmail1.[EmailAddress] + ' (' + MetaPartner1.[MetaPartnerName] + ')'
		, MetaPartnerEmail1.[CreatedByUserID]
		, MetaPartnerEmail1.[CreatedDate]
		, MetaPartnerEmail1.[LastModifiedByUserID]
		, MetaPartnerEmail1.[LastModifiedDate]
		, MetaPartnerEmail1.[Timestamp]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblCustomers_MetaPartnerEmail] MetaPartnerEmail1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=MetaPartnerEmail1.[MetaPartnerID]
	WHERE 
		MetaPartnerEmail1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartnerEmail1.[IsActive] ELSE 1 END

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerEmailID' THEN MetaPartnerEmail1.[MetaPartnerEmailID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerEmailID' THEN MetaPartnerEmail1.[MetaPartnerEmailID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EmailAddress' THEN MetaPartnerEmail1.[EmailAddress] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EmailAddress' THEN MetaPartnerEmail1.[EmailAddress] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Password' THEN MetaPartnerEmail1.[Password] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Password' THEN MetaPartnerEmail1.[Password] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN MetaPartnerEmail1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN MetaPartnerEmail1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Rank' THEN MetaPartnerEmail1.[Rank] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Rank' THEN MetaPartnerEmail1.[Rank] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN MetaPartnerEmail1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN MetaPartnerEmail1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DisplayName' THEN MetaPartnerEmail1.[EmailAddress] + ' (' + MetaPartner1.[MetaPartnerName] + ')' END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DisplayName' THEN MetaPartnerEmail1.[EmailAddress] + ' (' + MetaPartner1.[MetaPartnerName] + ')' END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN MetaPartnerEmail1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN MetaPartnerEmail1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN MetaPartnerEmail1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN MetaPartnerEmail1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN MetaPartnerEmail1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN MetaPartnerEmail1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN MetaPartnerEmail1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN MetaPartnerEmail1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN MetaPartnerEmail1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN MetaPartnerEmail1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetAllMetaPartnerEmailDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'LastModifiedDate'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all MetaPartnerEmail data by criteria.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='LastModifiedDate'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  MetaPartnerEmail1.[MetaPartnerEmailID]
		, MetaPartnerEmail1.[EmailAddress]
		, MetaPartnerEmail1.[Password]
		, MetaPartnerEmail1.[MetaPartnerID]
		, MetaPartnerEmail1.[Rank]
		, MetaPartnerEmail1.[IsActive]
		, "DisplayName" = MetaPartnerEmail1.[EmailAddress] + ' (' + MetaPartner1.[MetaPartnerName] + ')'
		, MetaPartnerEmail1.[CreatedByUserID]
		, MetaPartnerEmail1.[CreatedDate]
		, MetaPartnerEmail1.[LastModifiedByUserID]
		, MetaPartnerEmail1.[LastModifiedDate]
		, MetaPartnerEmail1.[Timestamp]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblCustomers_MetaPartnerEmail] MetaPartnerEmail1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=MetaPartnerEmail1.[MetaPartnerID]
	WHERE 
		MetaPartnerEmail1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartnerEmail1.[IsActive] ELSE 1 END
		AND ((@LastModifiedDateStart  IS NULL) OR (MetaPartnerEmail1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (MetaPartnerEmail1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  MetaPartnerEmail1.[MetaPartnerEmailID]
		, MetaPartnerEmail1.[EmailAddress]
		, MetaPartnerEmail1.[Password]
		, MetaPartnerEmail1.[MetaPartnerID]
		, MetaPartnerEmail1.[Rank]
		, MetaPartnerEmail1.[IsActive]
		, "DisplayName" = MetaPartnerEmail1.[EmailAddress] + ' (' + MetaPartner1.[MetaPartnerName] + ')'
		, MetaPartnerEmail1.[CreatedByUserID]
		, MetaPartnerEmail1.[CreatedDate]
		, MetaPartnerEmail1.[LastModifiedByUserID]
		, MetaPartnerEmail1.[LastModifiedDate]
		, MetaPartnerEmail1.[Timestamp]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblCustomers_MetaPartnerEmail] MetaPartnerEmail1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=MetaPartnerEmail1.[MetaPartnerID]
	WHERE 
		MetaPartnerEmail1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartnerEmail1.[IsActive] ELSE 1 END
		AND ((@LastModifiedDateStart  IS NULL) OR (MetaPartnerEmail1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (MetaPartnerEmail1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerEmailID' THEN MetaPartnerEmail1.[MetaPartnerEmailID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerEmailID' THEN MetaPartnerEmail1.[MetaPartnerEmailID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EmailAddress' THEN MetaPartnerEmail1.[EmailAddress] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EmailAddress' THEN MetaPartnerEmail1.[EmailAddress] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Password' THEN MetaPartnerEmail1.[Password] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Password' THEN MetaPartnerEmail1.[Password] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN MetaPartnerEmail1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN MetaPartnerEmail1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Rank' THEN MetaPartnerEmail1.[Rank] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Rank' THEN MetaPartnerEmail1.[Rank] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN MetaPartnerEmail1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN MetaPartnerEmail1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DisplayName' THEN MetaPartnerEmail1.[EmailAddress] + ' (' + MetaPartner1.[MetaPartnerName] + ')' END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DisplayName' THEN MetaPartnerEmail1.[EmailAddress] + ' (' + MetaPartner1.[MetaPartnerName] + ')' END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN MetaPartnerEmail1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN MetaPartnerEmail1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN MetaPartnerEmail1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN MetaPartnerEmail1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN MetaPartnerEmail1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN MetaPartnerEmail1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN MetaPartnerEmail1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN MetaPartnerEmail1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN MetaPartnerEmail1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN MetaPartnerEmail1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetAllMetaPartnerEmailDataByMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'MetaPartnerID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @MetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all MetaPartnerEmail data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='MetaPartnerID'

/*
** parameter validation
*/
IF (@MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  MetaPartnerEmail1.[MetaPartnerEmailID]
		, MetaPartnerEmail1.[EmailAddress]
		, MetaPartnerEmail1.[Password]
		, MetaPartnerEmail1.[MetaPartnerID]
		, MetaPartnerEmail1.[Rank]
		, MetaPartnerEmail1.[IsActive]
		, "DisplayName" = MetaPartnerEmail1.[EmailAddress] + ' (' + MetaPartner1.[MetaPartnerName] + ')'
		, MetaPartnerEmail1.[CreatedByUserID]
		, MetaPartnerEmail1.[CreatedDate]
		, MetaPartnerEmail1.[LastModifiedByUserID]
		, MetaPartnerEmail1.[LastModifiedDate]
		, MetaPartnerEmail1.[Timestamp]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblCustomers_MetaPartnerEmail] MetaPartnerEmail1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=MetaPartnerEmail1.[MetaPartnerID]
	WHERE 
		MetaPartnerEmail1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartnerEmail1.[IsActive] ELSE 1 END
		AND MetaPartnerEmail1.[MetaPartnerID] = @MetaPartnerID

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  MetaPartnerEmail1.[MetaPartnerEmailID]
		, MetaPartnerEmail1.[EmailAddress]
		, MetaPartnerEmail1.[Password]
		, MetaPartnerEmail1.[MetaPartnerID]
		, MetaPartnerEmail1.[Rank]
		, MetaPartnerEmail1.[IsActive]
		, "DisplayName" = MetaPartnerEmail1.[EmailAddress] + ' (' + MetaPartner1.[MetaPartnerName] + ')'
		, MetaPartnerEmail1.[CreatedByUserID]
		, MetaPartnerEmail1.[CreatedDate]
		, MetaPartnerEmail1.[LastModifiedByUserID]
		, MetaPartnerEmail1.[LastModifiedDate]
		, MetaPartnerEmail1.[Timestamp]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblCustomers_MetaPartnerEmail] MetaPartnerEmail1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=MetaPartnerEmail1.[MetaPartnerID]
	WHERE 
		MetaPartnerEmail1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartnerEmail1.[IsActive] ELSE 1 END
		AND MetaPartnerEmail1.[MetaPartnerID] = @MetaPartnerID

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerEmailID' THEN MetaPartnerEmail1.[MetaPartnerEmailID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerEmailID' THEN MetaPartnerEmail1.[MetaPartnerEmailID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EmailAddress' THEN MetaPartnerEmail1.[EmailAddress] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EmailAddress' THEN MetaPartnerEmail1.[EmailAddress] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Password' THEN MetaPartnerEmail1.[Password] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Password' THEN MetaPartnerEmail1.[Password] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN MetaPartnerEmail1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN MetaPartnerEmail1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Rank' THEN MetaPartnerEmail1.[Rank] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Rank' THEN MetaPartnerEmail1.[Rank] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN MetaPartnerEmail1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN MetaPartnerEmail1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DisplayName' THEN MetaPartnerEmail1.[EmailAddress] + ' (' + MetaPartner1.[MetaPartnerName] + ')' END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DisplayName' THEN MetaPartnerEmail1.[EmailAddress] + ' (' + MetaPartner1.[MetaPartnerName] + ')' END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN MetaPartnerEmail1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN MetaPartnerEmail1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN MetaPartnerEmail1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN MetaPartnerEmail1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN MetaPartnerEmail1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN MetaPartnerEmail1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN MetaPartnerEmail1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN MetaPartnerEmail1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN MetaPartnerEmail1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN MetaPartnerEmail1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetAllMetaPartnerPhoneData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'MetaPartnerPhoneID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all MetaPartnerPhone data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='MetaPartnerPhoneID'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  MetaPartnerPhone1.[MetaPartnerPhoneID]
		, MetaPartnerPhone1.[PhoneNumber]
		, MetaPartnerPhone1.[MetaPartnerID]
		, MetaPartnerPhone1.[PIN]
		, MetaPartnerPhone1.[CarrierMetaPartnerID]
		, MetaPartnerPhone1.[Rank]
		, MetaPartnerPhone1.[IsActive]
		, "DisplayName" = MetaPartnerPhone1.[PhoneNumber] + ' (' + MetaPartner1.[MetaPartnerName] + ')'
		, MetaPartnerPhone1.[CreatedByUserID]
		, MetaPartnerPhone1.[CreatedDate]
		, MetaPartnerPhone1.[LastModifiedByUserID]
		, MetaPartnerPhone1.[LastModifiedDate]
		, MetaPartnerPhone1.[Timestamp]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblCustomers_MetaPartnerPhone] MetaPartnerPhone1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=MetaPartnerPhone1.[MetaPartnerID]
	WHERE 
		MetaPartnerPhone1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartnerPhone1.[IsActive] ELSE 1 END

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  MetaPartnerPhone1.[MetaPartnerPhoneID]
		, MetaPartnerPhone1.[PhoneNumber]
		, MetaPartnerPhone1.[MetaPartnerID]
		, MetaPartnerPhone1.[PIN]
		, MetaPartnerPhone1.[CarrierMetaPartnerID]
		, MetaPartnerPhone1.[Rank]
		, MetaPartnerPhone1.[IsActive]
		, "DisplayName" = MetaPartnerPhone1.[PhoneNumber] + ' (' + MetaPartner1.[MetaPartnerName] + ')'
		, MetaPartnerPhone1.[CreatedByUserID]
		, MetaPartnerPhone1.[CreatedDate]
		, MetaPartnerPhone1.[LastModifiedByUserID]
		, MetaPartnerPhone1.[LastModifiedDate]
		, MetaPartnerPhone1.[Timestamp]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblCustomers_MetaPartnerPhone] MetaPartnerPhone1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=MetaPartnerPhone1.[MetaPartnerID]
	WHERE 
		MetaPartnerPhone1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartnerPhone1.[IsActive] ELSE 1 END

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerPhoneID' THEN MetaPartnerPhone1.[MetaPartnerPhoneID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerPhoneID' THEN MetaPartnerPhone1.[MetaPartnerPhoneID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PhoneNumber' THEN MetaPartnerPhone1.[PhoneNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PhoneNumber' THEN MetaPartnerPhone1.[PhoneNumber] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN MetaPartnerPhone1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN MetaPartnerPhone1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PIN' THEN MetaPartnerPhone1.[PIN] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PIN' THEN MetaPartnerPhone1.[PIN] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CarrierMetaPartnerID' THEN MetaPartnerPhone1.[CarrierMetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CarrierMetaPartnerID' THEN MetaPartnerPhone1.[CarrierMetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Rank' THEN MetaPartnerPhone1.[Rank] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Rank' THEN MetaPartnerPhone1.[Rank] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN MetaPartnerPhone1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN MetaPartnerPhone1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DisplayName' THEN MetaPartnerPhone1.[PhoneNumber] + ' (' + MetaPartner1.[MetaPartnerName] + ')' END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DisplayName' THEN MetaPartnerPhone1.[PhoneNumber] + ' (' + MetaPartner1.[MetaPartnerName] + ')' END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN MetaPartnerPhone1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN MetaPartnerPhone1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN MetaPartnerPhone1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN MetaPartnerPhone1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN MetaPartnerPhone1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN MetaPartnerPhone1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN MetaPartnerPhone1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN MetaPartnerPhone1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN MetaPartnerPhone1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN MetaPartnerPhone1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetAllMetaPartnerPhoneDataByCarrierMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'CarrierMetaPartnerID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @CarrierMetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all MetaPartnerPhone data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='CarrierMetaPartnerID'

/*
** parameter validation
*/
IF (@CarrierMetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  MetaPartnerPhone1.[MetaPartnerPhoneID]
		, MetaPartnerPhone1.[PhoneNumber]
		, MetaPartnerPhone1.[MetaPartnerID]
		, MetaPartnerPhone1.[PIN]
		, MetaPartnerPhone1.[CarrierMetaPartnerID]
		, MetaPartnerPhone1.[Rank]
		, MetaPartnerPhone1.[IsActive]
		, "DisplayName" = MetaPartnerPhone1.[PhoneNumber] + ' (' + MetaPartner1.[MetaPartnerName] + ')'
		, MetaPartnerPhone1.[CreatedByUserID]
		, MetaPartnerPhone1.[CreatedDate]
		, MetaPartnerPhone1.[LastModifiedByUserID]
		, MetaPartnerPhone1.[LastModifiedDate]
		, MetaPartnerPhone1.[Timestamp]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblCustomers_MetaPartnerPhone] MetaPartnerPhone1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=MetaPartnerPhone1.[MetaPartnerID]
	WHERE 
		MetaPartnerPhone1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartnerPhone1.[IsActive] ELSE 1 END
		AND MetaPartnerPhone1.[CarrierMetaPartnerID] = @CarrierMetaPartnerID

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  MetaPartnerPhone1.[MetaPartnerPhoneID]
		, MetaPartnerPhone1.[PhoneNumber]
		, MetaPartnerPhone1.[MetaPartnerID]
		, MetaPartnerPhone1.[PIN]
		, MetaPartnerPhone1.[CarrierMetaPartnerID]
		, MetaPartnerPhone1.[Rank]
		, MetaPartnerPhone1.[IsActive]
		, "DisplayName" = MetaPartnerPhone1.[PhoneNumber] + ' (' + MetaPartner1.[MetaPartnerName] + ')'
		, MetaPartnerPhone1.[CreatedByUserID]
		, MetaPartnerPhone1.[CreatedDate]
		, MetaPartnerPhone1.[LastModifiedByUserID]
		, MetaPartnerPhone1.[LastModifiedDate]
		, MetaPartnerPhone1.[Timestamp]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblCustomers_MetaPartnerPhone] MetaPartnerPhone1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=MetaPartnerPhone1.[MetaPartnerID]
	WHERE 
		MetaPartnerPhone1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartnerPhone1.[IsActive] ELSE 1 END
		AND MetaPartnerPhone1.[CarrierMetaPartnerID] = @CarrierMetaPartnerID

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerPhoneID' THEN MetaPartnerPhone1.[MetaPartnerPhoneID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerPhoneID' THEN MetaPartnerPhone1.[MetaPartnerPhoneID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PhoneNumber' THEN MetaPartnerPhone1.[PhoneNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PhoneNumber' THEN MetaPartnerPhone1.[PhoneNumber] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN MetaPartnerPhone1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN MetaPartnerPhone1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PIN' THEN MetaPartnerPhone1.[PIN] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PIN' THEN MetaPartnerPhone1.[PIN] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CarrierMetaPartnerID' THEN MetaPartnerPhone1.[CarrierMetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CarrierMetaPartnerID' THEN MetaPartnerPhone1.[CarrierMetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Rank' THEN MetaPartnerPhone1.[Rank] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Rank' THEN MetaPartnerPhone1.[Rank] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN MetaPartnerPhone1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN MetaPartnerPhone1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DisplayName' THEN MetaPartnerPhone1.[PhoneNumber] + ' (' + MetaPartner1.[MetaPartnerName] + ')' END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DisplayName' THEN MetaPartnerPhone1.[PhoneNumber] + ' (' + MetaPartner1.[MetaPartnerName] + ')' END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN MetaPartnerPhone1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN MetaPartnerPhone1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN MetaPartnerPhone1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN MetaPartnerPhone1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN MetaPartnerPhone1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN MetaPartnerPhone1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN MetaPartnerPhone1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN MetaPartnerPhone1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN MetaPartnerPhone1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN MetaPartnerPhone1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetAllMetaPartnerPhoneDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'PhoneNumber'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @PhoneNumber nvarchar(50)
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all MetaPartnerPhone data by criteria.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='PhoneNumber'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  MetaPartnerPhone1.[MetaPartnerPhoneID]
		, MetaPartnerPhone1.[PhoneNumber]
		, MetaPartnerPhone1.[MetaPartnerID]
		, MetaPartnerPhone1.[PIN]
		, MetaPartnerPhone1.[CarrierMetaPartnerID]
		, MetaPartnerPhone1.[Rank]
		, MetaPartnerPhone1.[IsActive]
		, "DisplayName" = MetaPartnerPhone1.[PhoneNumber] + ' (' + MetaPartner1.[MetaPartnerName] + ')'
		, MetaPartnerPhone1.[CreatedByUserID]
		, MetaPartnerPhone1.[CreatedDate]
		, MetaPartnerPhone1.[LastModifiedByUserID]
		, MetaPartnerPhone1.[LastModifiedDate]
		, MetaPartnerPhone1.[Timestamp]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblCustomers_MetaPartnerPhone] MetaPartnerPhone1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=MetaPartnerPhone1.[MetaPartnerID]
	WHERE 
		MetaPartnerPhone1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartnerPhone1.[IsActive] ELSE 1 END
		AND (@PhoneNumber IS NULL OR MetaPartnerPhone1.[PhoneNumber] like '%' + @PhoneNumber + '%')
		AND ((@LastModifiedDateStart  IS NULL) OR (MetaPartnerPhone1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (MetaPartnerPhone1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  MetaPartnerPhone1.[MetaPartnerPhoneID]
		, MetaPartnerPhone1.[PhoneNumber]
		, MetaPartnerPhone1.[MetaPartnerID]
		, MetaPartnerPhone1.[PIN]
		, MetaPartnerPhone1.[CarrierMetaPartnerID]
		, MetaPartnerPhone1.[Rank]
		, MetaPartnerPhone1.[IsActive]
		, "DisplayName" = MetaPartnerPhone1.[PhoneNumber] + ' (' + MetaPartner1.[MetaPartnerName] + ')'
		, MetaPartnerPhone1.[CreatedByUserID]
		, MetaPartnerPhone1.[CreatedDate]
		, MetaPartnerPhone1.[LastModifiedByUserID]
		, MetaPartnerPhone1.[LastModifiedDate]
		, MetaPartnerPhone1.[Timestamp]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblCustomers_MetaPartnerPhone] MetaPartnerPhone1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=MetaPartnerPhone1.[MetaPartnerID]
	WHERE 
		MetaPartnerPhone1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartnerPhone1.[IsActive] ELSE 1 END
		AND (@PhoneNumber IS NULL OR MetaPartnerPhone1.[PhoneNumber] like '%' + @PhoneNumber + '%')
		AND ((@LastModifiedDateStart  IS NULL) OR (MetaPartnerPhone1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (MetaPartnerPhone1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerPhoneID' THEN MetaPartnerPhone1.[MetaPartnerPhoneID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerPhoneID' THEN MetaPartnerPhone1.[MetaPartnerPhoneID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PhoneNumber' THEN MetaPartnerPhone1.[PhoneNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PhoneNumber' THEN MetaPartnerPhone1.[PhoneNumber] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN MetaPartnerPhone1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN MetaPartnerPhone1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PIN' THEN MetaPartnerPhone1.[PIN] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PIN' THEN MetaPartnerPhone1.[PIN] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CarrierMetaPartnerID' THEN MetaPartnerPhone1.[CarrierMetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CarrierMetaPartnerID' THEN MetaPartnerPhone1.[CarrierMetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Rank' THEN MetaPartnerPhone1.[Rank] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Rank' THEN MetaPartnerPhone1.[Rank] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN MetaPartnerPhone1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN MetaPartnerPhone1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DisplayName' THEN MetaPartnerPhone1.[PhoneNumber] + ' (' + MetaPartner1.[MetaPartnerName] + ')' END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DisplayName' THEN MetaPartnerPhone1.[PhoneNumber] + ' (' + MetaPartner1.[MetaPartnerName] + ')' END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN MetaPartnerPhone1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN MetaPartnerPhone1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN MetaPartnerPhone1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN MetaPartnerPhone1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN MetaPartnerPhone1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN MetaPartnerPhone1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN MetaPartnerPhone1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN MetaPartnerPhone1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN MetaPartnerPhone1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN MetaPartnerPhone1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetAllMetaPartnerPhoneDataByMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'MetaPartnerID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @MetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all MetaPartnerPhone data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='MetaPartnerID'

/*
** parameter validation
*/
IF (@MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  MetaPartnerPhone1.[MetaPartnerPhoneID]
		, MetaPartnerPhone1.[PhoneNumber]
		, MetaPartnerPhone1.[MetaPartnerID]
		, MetaPartnerPhone1.[PIN]
		, MetaPartnerPhone1.[CarrierMetaPartnerID]
		, MetaPartnerPhone1.[Rank]
		, MetaPartnerPhone1.[IsActive]
		, "DisplayName" = MetaPartnerPhone1.[PhoneNumber] + ' (' + MetaPartner1.[MetaPartnerName] + ')'
		, MetaPartnerPhone1.[CreatedByUserID]
		, MetaPartnerPhone1.[CreatedDate]
		, MetaPartnerPhone1.[LastModifiedByUserID]
		, MetaPartnerPhone1.[LastModifiedDate]
		, MetaPartnerPhone1.[Timestamp]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblCustomers_MetaPartnerPhone] MetaPartnerPhone1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=MetaPartnerPhone1.[MetaPartnerID]
	WHERE 
		MetaPartnerPhone1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartnerPhone1.[IsActive] ELSE 1 END
		AND MetaPartnerPhone1.[MetaPartnerID] = @MetaPartnerID

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  MetaPartnerPhone1.[MetaPartnerPhoneID]
		, MetaPartnerPhone1.[PhoneNumber]
		, MetaPartnerPhone1.[MetaPartnerID]
		, MetaPartnerPhone1.[PIN]
		, MetaPartnerPhone1.[CarrierMetaPartnerID]
		, MetaPartnerPhone1.[Rank]
		, MetaPartnerPhone1.[IsActive]
		, "DisplayName" = MetaPartnerPhone1.[PhoneNumber] + ' (' + MetaPartner1.[MetaPartnerName] + ')'
		, MetaPartnerPhone1.[CreatedByUserID]
		, MetaPartnerPhone1.[CreatedDate]
		, MetaPartnerPhone1.[LastModifiedByUserID]
		, MetaPartnerPhone1.[LastModifiedDate]
		, MetaPartnerPhone1.[Timestamp]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblCustomers_MetaPartnerPhone] MetaPartnerPhone1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=MetaPartnerPhone1.[MetaPartnerID]
	WHERE 
		MetaPartnerPhone1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartnerPhone1.[IsActive] ELSE 1 END
		AND MetaPartnerPhone1.[MetaPartnerID] = @MetaPartnerID

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerPhoneID' THEN MetaPartnerPhone1.[MetaPartnerPhoneID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerPhoneID' THEN MetaPartnerPhone1.[MetaPartnerPhoneID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PhoneNumber' THEN MetaPartnerPhone1.[PhoneNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PhoneNumber' THEN MetaPartnerPhone1.[PhoneNumber] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN MetaPartnerPhone1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN MetaPartnerPhone1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PIN' THEN MetaPartnerPhone1.[PIN] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PIN' THEN MetaPartnerPhone1.[PIN] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CarrierMetaPartnerID' THEN MetaPartnerPhone1.[CarrierMetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CarrierMetaPartnerID' THEN MetaPartnerPhone1.[CarrierMetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Rank' THEN MetaPartnerPhone1.[Rank] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Rank' THEN MetaPartnerPhone1.[Rank] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN MetaPartnerPhone1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN MetaPartnerPhone1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DisplayName' THEN MetaPartnerPhone1.[PhoneNumber] + ' (' + MetaPartner1.[MetaPartnerName] + ')' END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DisplayName' THEN MetaPartnerPhone1.[PhoneNumber] + ' (' + MetaPartner1.[MetaPartnerName] + ')' END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN MetaPartnerPhone1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN MetaPartnerPhone1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN MetaPartnerPhone1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN MetaPartnerPhone1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN MetaPartnerPhone1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN MetaPartnerPhone1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN MetaPartnerPhone1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN MetaPartnerPhone1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN MetaPartnerPhone1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN MetaPartnerPhone1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetAllMetaPartnerSubTypeData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'MetaPartnerSubTypeCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all MetaPartnerSubType data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='MetaPartnerSubTypeCode'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  MetaPartnerSubType1.[MetaPartnerSubTypeCode]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, MetaPartnerSubType1.[Description]
		, MetaPartnerSubType1.[IsActive]
		, MetaPartnerSubType1.[CreatedByUserID]
		, MetaPartnerSubType1.[CreatedDate]
		, MetaPartnerSubType1.[LastModifiedByUserID]
		, MetaPartnerSubType1.[LastModifiedDate]
		, MetaPartnerSubType1.[Timestamp]
	FROM
	      [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1
	WHERE 
		MetaPartnerSubType1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartnerSubType1.[IsActive] ELSE 1 END

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  MetaPartnerSubType1.[MetaPartnerSubTypeCode]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, MetaPartnerSubType1.[Description]
		, MetaPartnerSubType1.[IsActive]
		, MetaPartnerSubType1.[CreatedByUserID]
		, MetaPartnerSubType1.[CreatedDate]
		, MetaPartnerSubType1.[LastModifiedByUserID]
		, MetaPartnerSubType1.[LastModifiedDate]
		, MetaPartnerSubType1.[Timestamp]
	FROM
	      [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1
	WHERE 
		MetaPartnerSubType1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartnerSubType1.[IsActive] ELSE 1 END

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartnerSubType1.[MetaPartnerSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartnerSubType1.[MetaPartnerSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN MetaPartnerSubType1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN MetaPartnerSubType1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN MetaPartnerSubType1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN MetaPartnerSubType1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN MetaPartnerSubType1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN MetaPartnerSubType1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN MetaPartnerSubType1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN MetaPartnerSubType1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN MetaPartnerSubType1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN MetaPartnerSubType1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN MetaPartnerSubType1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN MetaPartnerSubType1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN MetaPartnerSubType1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN MetaPartnerSubType1.[Timestamp] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetManyBankDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @StartIndex int = 1
	, @PageSize int = 50
	, @MaximumListSize int = 0
	, @MaximumListSizeExceeded bit = 0 OUTPUT
	, @TotalRecords int = 0 OUTPUT
	, @SortColumn sysname = 'LocaleCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @LocaleCode int
	, @CurrencyCode int
	, @DateFormatCode int
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
	, @MetaPartnerName nvarchar(255)
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets many Bank data by criteria.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

DECLARE @vEndIndex int
IF (@StartIndex < 1) SET @StartIndex=1
IF (@PageSize < 1) SET @PageSize=1
SET @vEndIndex = @StartIndex + @Pagesize
IF (@SortColumn = '') SET @SortColumn='LocaleCode'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

DECLARE @OrderedRecords TABLE
(
     SearchOrderID int IDENTITY (1, 1) NOT NULL
    , MetaPartnerID uniqueidentifier
)
IF (@SortDirection = 'Random')
BEGIN
	INSERT INTO @OrderedRecords (MetaPartnerID)
	SELECT
		  Bank1.[MetaPartnerID]
	FROM
	      [dbo].[tblCustomers_Bank] Bank1
	INNER JOIN [dbo].[tblCustomers_Business] Business1 ON Business1.[MetaPartnerID]=Bank1.[MetaPartnerID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND (@LocaleCode IS NULL OR MetaPartner1.[LocaleCode] = @LocaleCode)
		AND (@CurrencyCode IS NULL OR MetaPartner1.[CurrencyCode] = @CurrencyCode)
		AND (@DateFormatCode IS NULL OR MetaPartner1.[DateFormatCode] = @DateFormatCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (MetaPartner1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (MetaPartner1.[LastModifiedDate] <=  @LastModifiedDateEnd))
		AND (@MetaPartnerName IS NULL OR MetaPartner1.[MetaPartnerName] like '%' + @MetaPartnerName + '%')

	ORDER BY NewID()
END
ELSE
BEGIN
	INSERT INTO @OrderedRecords (MetaPartnerID)
	SELECT
		  Bank1.[MetaPartnerID]
	FROM
	      [dbo].[tblCustomers_Bank] Bank1
	INNER JOIN [dbo].[tblCustomers_Business] Business1 ON Business1.[MetaPartnerID]=Bank1.[MetaPartnerID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND (@LocaleCode IS NULL OR MetaPartner1.[LocaleCode] = @LocaleCode)
		AND (@CurrencyCode IS NULL OR MetaPartner1.[CurrencyCode] = @CurrencyCode)
		AND (@DateFormatCode IS NULL OR MetaPartner1.[DateFormatCode] = @DateFormatCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (MetaPartner1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (MetaPartner1.[LastModifiedDate] <=  @LastModifiedDateEnd))
		AND (@MetaPartnerName IS NULL OR MetaPartner1.[MetaPartnerName] like '%' + @MetaPartnerName + '%')

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Bank1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Bank1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BankCode' THEN Bank1.[BankCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BankCode' THEN Bank1.[BankCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Bank1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Bank1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Bank1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Bank1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Bank1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Bank1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Bank1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Bank1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Bank1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Bank1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ServiceCharges' THEN Business1.[ServiceCharges] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ServiceCharges' THEN Business1.[ServiceCharges] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END

BEGIN
	SET @TotalRecords = (SELECT Count (*) FROM @OrderedRecords)
	IF @MaximumListSize > 0
	BEGIN
		IF @TotalRecords > @MaximumListSize
		BEGIN
			SET @MaximumListSizeExceeded = 1
			SET @TotalRecords = @MaximumListSize
		END
	END

	/* get search results */
	SELECT
		  Bank1.[MetaPartnerID]
		, Bank1.[BankCode]
		, Bank1.[CreatedByUserID]
		, Bank1.[CreatedDate]
		, Bank1.[LastModifiedByUserID]
		, Bank1.[LastModifiedDate]
		, Bank1.[Timestamp]
		, Business1.[ServiceCharges]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Bank] Bank1
	INNER JOIN [dbo].[tblCustomers_Business] Business1 ON Business1.[MetaPartnerID]=Bank1.[MetaPartnerID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	INNER JOIN @OrderedRecords search ON search.[MetaPartnerID] = Bank1.[MetaPartnerID]
	WHERE
		search.SearchOrderID  >= @StartIndex AND
		search.SearchOrderID  < @vEndIndex
	ORDER BY
		search.SearchOrderID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetManyBusinessDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @StartIndex int = 1
	, @PageSize int = 50
	, @MaximumListSize int = 0
	, @MaximumListSizeExceeded bit = 0 OUTPUT
	, @TotalRecords int = 0 OUTPUT
	, @SortColumn sysname = 'LocaleCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @LocaleCode int
	, @CurrencyCode int
	, @DateFormatCode int
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
	, @MetaPartnerName nvarchar(255)
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets many Business data by criteria.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

DECLARE @vEndIndex int
IF (@StartIndex < 1) SET @StartIndex=1
IF (@PageSize < 1) SET @PageSize=1
SET @vEndIndex = @StartIndex + @Pagesize
IF (@SortColumn = '') SET @SortColumn='LocaleCode'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

DECLARE @OrderedRecords TABLE
(
     SearchOrderID int IDENTITY (1, 1) NOT NULL
    , MetaPartnerID uniqueidentifier
)
IF (@SortDirection = 'Random')
BEGIN
	INSERT INTO @OrderedRecords (MetaPartnerID)
	SELECT
		  Business1.[MetaPartnerID]
	FROM
	      [dbo].[tblCustomers_Business] Business1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND (@LocaleCode IS NULL OR MetaPartner1.[LocaleCode] = @LocaleCode)
		AND (@CurrencyCode IS NULL OR MetaPartner1.[CurrencyCode] = @CurrencyCode)
		AND (@DateFormatCode IS NULL OR MetaPartner1.[DateFormatCode] = @DateFormatCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (MetaPartner1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (MetaPartner1.[LastModifiedDate] <=  @LastModifiedDateEnd))
		AND (@MetaPartnerName IS NULL OR MetaPartner1.[MetaPartnerName] like '%' + @MetaPartnerName + '%')

	ORDER BY NewID()
END
ELSE
BEGIN
	INSERT INTO @OrderedRecords (MetaPartnerID)
	SELECT
		  Business1.[MetaPartnerID]
	FROM
	      [dbo].[tblCustomers_Business] Business1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND (@LocaleCode IS NULL OR MetaPartner1.[LocaleCode] = @LocaleCode)
		AND (@CurrencyCode IS NULL OR MetaPartner1.[CurrencyCode] = @CurrencyCode)
		AND (@DateFormatCode IS NULL OR MetaPartner1.[DateFormatCode] = @DateFormatCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (MetaPartner1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (MetaPartner1.[LastModifiedDate] <=  @LastModifiedDateEnd))
		AND (@MetaPartnerName IS NULL OR MetaPartner1.[MetaPartnerName] like '%' + @MetaPartnerName + '%')

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Business1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Business1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ServiceCharges' THEN Business1.[ServiceCharges] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ServiceCharges' THEN Business1.[ServiceCharges] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Business1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Business1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Business1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Business1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Business1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Business1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Business1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Business1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Business1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Business1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END

BEGIN
	SET @TotalRecords = (SELECT Count (*) FROM @OrderedRecords)
	IF @MaximumListSize > 0
	BEGIN
		IF @TotalRecords > @MaximumListSize
		BEGIN
			SET @MaximumListSizeExceeded = 1
			SET @TotalRecords = @MaximumListSize
		END
	END

	/* get search results */
	SELECT
		  Business1.[MetaPartnerID]
		, Business1.[ServiceCharges]
		, Business1.[CreatedByUserID]
		, Business1.[CreatedDate]
		, Business1.[LastModifiedByUserID]
		, Business1.[LastModifiedDate]
		, Business1.[Timestamp]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Business] Business1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	INNER JOIN @OrderedRecords search ON search.[MetaPartnerID] = Business1.[MetaPartnerID]
	WHERE
		search.SearchOrderID  >= @StartIndex AND
		search.SearchOrderID  < @vEndIndex
	ORDER BY
		search.SearchOrderID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetManyCarrierDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @StartIndex int = 1
	, @PageSize int = 50
	, @MaximumListSize int = 0
	, @MaximumListSizeExceeded bit = 0 OUTPUT
	, @TotalRecords int = 0 OUTPUT
	, @SortColumn sysname = 'LocaleCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @LocaleCode int
	, @CurrencyCode int
	, @DateFormatCode int
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
	, @MetaPartnerName nvarchar(255)
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets many Carrier data by criteria.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

DECLARE @vEndIndex int
IF (@StartIndex < 1) SET @StartIndex=1
IF (@PageSize < 1) SET @PageSize=1
SET @vEndIndex = @StartIndex + @Pagesize
IF (@SortColumn = '') SET @SortColumn='LocaleCode'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

DECLARE @OrderedRecords TABLE
(
     SearchOrderID int IDENTITY (1, 1) NOT NULL
    , MetaPartnerID uniqueidentifier
)
IF (@SortDirection = 'Random')
BEGIN
	INSERT INTO @OrderedRecords (MetaPartnerID)
	SELECT
		  Carrier1.[MetaPartnerID]
	FROM
	      [dbo].[tblCustomers_Carrier] Carrier1
	INNER JOIN [dbo].[tblCustomers_Business] Business1 ON Business1.[MetaPartnerID]=Carrier1.[MetaPartnerID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND (@LocaleCode IS NULL OR MetaPartner1.[LocaleCode] = @LocaleCode)
		AND (@CurrencyCode IS NULL OR MetaPartner1.[CurrencyCode] = @CurrencyCode)
		AND (@DateFormatCode IS NULL OR MetaPartner1.[DateFormatCode] = @DateFormatCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (MetaPartner1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (MetaPartner1.[LastModifiedDate] <=  @LastModifiedDateEnd))
		AND (@MetaPartnerName IS NULL OR MetaPartner1.[MetaPartnerName] like '%' + @MetaPartnerName + '%')

	ORDER BY NewID()
END
ELSE
BEGIN
	INSERT INTO @OrderedRecords (MetaPartnerID)
	SELECT
		  Carrier1.[MetaPartnerID]
	FROM
	      [dbo].[tblCustomers_Carrier] Carrier1
	INNER JOIN [dbo].[tblCustomers_Business] Business1 ON Business1.[MetaPartnerID]=Carrier1.[MetaPartnerID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND (@LocaleCode IS NULL OR MetaPartner1.[LocaleCode] = @LocaleCode)
		AND (@CurrencyCode IS NULL OR MetaPartner1.[CurrencyCode] = @CurrencyCode)
		AND (@DateFormatCode IS NULL OR MetaPartner1.[DateFormatCode] = @DateFormatCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (MetaPartner1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (MetaPartner1.[LastModifiedDate] <=  @LastModifiedDateEnd))
		AND (@MetaPartnerName IS NULL OR MetaPartner1.[MetaPartnerName] like '%' + @MetaPartnerName + '%')

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Carrier1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Carrier1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CarrierCode' THEN Carrier1.[CarrierCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CarrierCode' THEN Carrier1.[CarrierCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Carrier1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Carrier1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Carrier1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Carrier1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Carrier1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Carrier1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Carrier1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Carrier1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Carrier1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Carrier1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ServiceCharges' THEN Business1.[ServiceCharges] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ServiceCharges' THEN Business1.[ServiceCharges] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END

BEGIN
	SET @TotalRecords = (SELECT Count (*) FROM @OrderedRecords)
	IF @MaximumListSize > 0
	BEGIN
		IF @TotalRecords > @MaximumListSize
		BEGIN
			SET @MaximumListSizeExceeded = 1
			SET @TotalRecords = @MaximumListSize
		END
	END

	/* get search results */
	SELECT
		  Carrier1.[MetaPartnerID]
		, Carrier1.[CarrierCode]
		, Carrier1.[CreatedByUserID]
		, Carrier1.[CreatedDate]
		, Carrier1.[LastModifiedByUserID]
		, Carrier1.[LastModifiedDate]
		, Carrier1.[Timestamp]
		, Business1.[ServiceCharges]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Carrier] Carrier1
	INNER JOIN [dbo].[tblCustomers_Business] Business1 ON Business1.[MetaPartnerID]=Carrier1.[MetaPartnerID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	INNER JOIN @OrderedRecords search ON search.[MetaPartnerID] = Carrier1.[MetaPartnerID]
	WHERE
		search.SearchOrderID  >= @StartIndex AND
		search.SearchOrderID  < @vEndIndex
	ORDER BY
		search.SearchOrderID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetManyCustomerDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @StartIndex int = 1
	, @PageSize int = 50
	, @MaximumListSize int = 0
	, @MaximumListSizeExceeded bit = 0 OUTPUT
	, @TotalRecords int = 0 OUTPUT
	, @SortColumn sysname = 'FirstName'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @FirstName nvarchar(255) = NULL
	, @LastName nvarchar(255) = NULL
	, @LocaleCode int
	, @CurrencyCode int
	, @DateFormatCode int
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
	, @MetaPartnerName nvarchar(255)
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets many Customer data by criteria.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

DECLARE @vEndIndex int
IF (@StartIndex < 1) SET @StartIndex=1
IF (@PageSize < 1) SET @PageSize=1
SET @vEndIndex = @StartIndex + @Pagesize
IF (@SortColumn = '') SET @SortColumn='FirstName'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

DECLARE @OrderedRecords TABLE
(
     SearchOrderID int IDENTITY (1, 1) NOT NULL
    , MetaPartnerID uniqueidentifier
)
IF (@SortDirection = 'Random')
BEGIN
	INSERT INTO @OrderedRecords (MetaPartnerID)
	SELECT
		  Customer1.[MetaPartnerID]
	FROM
	      [dbo].[tblCustomers_Customer] Customer1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Customer1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND (@FirstName IS NULL OR Customer1.[FirstName] like '%' + @FirstName + '%')
		AND (@LastName IS NULL OR Customer1.[LastName] like '%' + @LastName + '%')
		AND (@LocaleCode IS NULL OR MetaPartner1.[LocaleCode] = @LocaleCode)
		AND (@CurrencyCode IS NULL OR MetaPartner1.[CurrencyCode] = @CurrencyCode)
		AND (@DateFormatCode IS NULL OR MetaPartner1.[DateFormatCode] = @DateFormatCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (MetaPartner1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (MetaPartner1.[LastModifiedDate] <=  @LastModifiedDateEnd))
		AND (@MetaPartnerName IS NULL OR MetaPartner1.[MetaPartnerName] like '%' + @MetaPartnerName + '%')

	ORDER BY NewID()
END
ELSE
BEGIN
	INSERT INTO @OrderedRecords (MetaPartnerID)
	SELECT
		  Customer1.[MetaPartnerID]
	FROM
	      [dbo].[tblCustomers_Customer] Customer1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Customer1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND (@FirstName IS NULL OR Customer1.[FirstName] like '%' + @FirstName + '%')
		AND (@LastName IS NULL OR Customer1.[LastName] like '%' + @LastName + '%')
		AND (@LocaleCode IS NULL OR MetaPartner1.[LocaleCode] = @LocaleCode)
		AND (@CurrencyCode IS NULL OR MetaPartner1.[CurrencyCode] = @CurrencyCode)
		AND (@DateFormatCode IS NULL OR MetaPartner1.[DateFormatCode] = @DateFormatCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (MetaPartner1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (MetaPartner1.[LastModifiedDate] <=  @LastModifiedDateEnd))
		AND (@MetaPartnerName IS NULL OR MetaPartner1.[MetaPartnerName] like '%' + @MetaPartnerName + '%')

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Customer1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Customer1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FirstName' THEN Customer1.[FirstName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FirstName' THEN Customer1.[FirstName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastName' THEN Customer1.[LastName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastName' THEN Customer1.[LastName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Customer1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Customer1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Customer1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Customer1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Customer1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Customer1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Customer1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Customer1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Customer1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Customer1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END

BEGIN
	SET @TotalRecords = (SELECT Count (*) FROM @OrderedRecords)
	IF @MaximumListSize > 0
	BEGIN
		IF @TotalRecords > @MaximumListSize
		BEGIN
			SET @MaximumListSizeExceeded = 1
			SET @TotalRecords = @MaximumListSize
		END
	END

	/* get search results */
	SELECT
		  Customer1.[MetaPartnerID]
		, Customer1.[FirstName]
		, Customer1.[LastName]
		, Customer1.[CreatedByUserID]
		, Customer1.[CreatedDate]
		, Customer1.[LastModifiedByUserID]
		, Customer1.[LastModifiedDate]
		, Customer1.[Timestamp]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Customer] Customer1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Customer1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	INNER JOIN @OrderedRecords search ON search.[MetaPartnerID] = Customer1.[MetaPartnerID]
	WHERE
		search.SearchOrderID  >= @StartIndex AND
		search.SearchOrderID  < @vEndIndex
	ORDER BY
		search.SearchOrderID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetManyLocationDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @StartIndex int = 1
	, @PageSize int = 50
	, @MaximumListSize int = 0
	, @MaximumListSizeExceeded bit = 0 OUTPUT
	, @TotalRecords int = 0 OUTPUT
	, @SortColumn sysname = 'LocationTypeCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @LocationTypeCode int
	, @CountryCode int
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets many Location data by criteria.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

DECLARE @vEndIndex int
IF (@StartIndex < 1) SET @StartIndex=1
IF (@PageSize < 1) SET @PageSize=1
SET @vEndIndex = @StartIndex + @Pagesize
IF (@SortColumn = '') SET @SortColumn='LocationTypeCode'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

DECLARE @OrderedRecords TABLE
(
     SearchOrderID int IDENTITY (1, 1) NOT NULL
    , LocationID uniqueidentifier
)
IF (@SortDirection = 'Random')
BEGIN
	INSERT INTO @OrderedRecords (LocationID)
	SELECT
		  Location1.[LocationID]
	FROM
	      [dbo].[tblCustomers_Location] Location1
	INNER JOIN [dbo].[tlkpCustomers_LocationType] LocationType1 ON LocationType1.[LocationTypeCode]=Location1.[LocationTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Country] Country1 ON Country1.[CountryCode]=Location1.[CountryCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Location1.[MetaPartnerID]
	WHERE 
		(@LocationTypeCode IS NULL OR Location1.[LocationTypeCode] = @LocationTypeCode)
		AND (@CountryCode IS NULL OR Location1.[CountryCode] = @CountryCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (Location1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (Location1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY NewID()
END
ELSE
BEGIN
	INSERT INTO @OrderedRecords (LocationID)
	SELECT
		  Location1.[LocationID]
	FROM
	      [dbo].[tblCustomers_Location] Location1
	INNER JOIN [dbo].[tlkpCustomers_LocationType] LocationType1 ON LocationType1.[LocationTypeCode]=Location1.[LocationTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Country] Country1 ON Country1.[CountryCode]=Location1.[CountryCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Location1.[MetaPartnerID]
	WHERE 
		(@LocationTypeCode IS NULL OR Location1.[LocationTypeCode] = @LocationTypeCode)
		AND (@CountryCode IS NULL OR Location1.[CountryCode] = @CountryCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (Location1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (Location1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocationID' THEN Location1.[LocationID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocationID' THEN Location1.[LocationID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocationTypeCode' THEN Location1.[LocationTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocationTypeCode' THEN Location1.[LocationTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AddressLine1' THEN Location1.[AddressLine1] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AddressLine1' THEN Location1.[AddressLine1] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AddressLine2' THEN Location1.[AddressLine2] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AddressLine2' THEN Location1.[AddressLine2] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'City' THEN Location1.[City] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'City' THEN Location1.[City] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'StateProvince' THEN Location1.[StateProvince] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'StateProvince' THEN Location1.[StateProvince] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CountryCode' THEN Location1.[CountryCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CountryCode' THEN Location1.[CountryCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PostalCode' THEN Location1.[PostalCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PostalCode' THEN Location1.[PostalCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Location1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Location1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Location1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Location1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Location1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Location1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Location1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Location1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Location1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Location1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Location1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Location1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocationTypeName' THEN LocationType1.[LocationTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocationTypeName' THEN LocationType1.[LocationTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CountryName' THEN Country1.[CountryName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CountryName' THEN Country1.[CountryName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END

BEGIN
	SET @TotalRecords = (SELECT Count (*) FROM @OrderedRecords)
	IF @MaximumListSize > 0
	BEGIN
		IF @TotalRecords > @MaximumListSize
		BEGIN
			SET @MaximumListSizeExceeded = 1
			SET @TotalRecords = @MaximumListSize
		END
	END

	/* get search results */
	SELECT
		  Location1.[LocationID]
		, Location1.[LocationTypeCode]
		, Location1.[AddressLine1]
		, Location1.[AddressLine2]
		, Location1.[City]
		, Location1.[StateProvince]
		, Location1.[CountryCode]
		, Location1.[PostalCode]
		, Location1.[MetaPartnerID]
		, Location1.[CreatedByUserID]
		, Location1.[CreatedDate]
		, Location1.[LastModifiedByUserID]
		, Location1.[LastModifiedDate]
		, Location1.[Timestamp]
		, LocationType1.[LocationTypeName]
		, Country1.[CountryName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblCustomers_Location] Location1
	INNER JOIN [dbo].[tlkpCustomers_LocationType] LocationType1 ON LocationType1.[LocationTypeCode]=Location1.[LocationTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Country] Country1 ON Country1.[CountryCode]=Location1.[CountryCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Location1.[MetaPartnerID]
	INNER JOIN @OrderedRecords search ON search.[LocationID] = Location1.[LocationID]
	WHERE
		search.SearchOrderID  >= @StartIndex AND
		search.SearchOrderID  < @vEndIndex
	ORDER BY
		search.SearchOrderID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetManyMerchantDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @StartIndex int = 1
	, @PageSize int = 50
	, @MaximumListSize int = 0
	, @MaximumListSizeExceeded bit = 0 OUTPUT
	, @TotalRecords int = 0 OUTPUT
	, @SortColumn sysname = 'LocaleCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @LocaleCode int
	, @CurrencyCode int
	, @DateFormatCode int
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
	, @MetaPartnerName nvarchar(255)
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets many Merchant data by criteria.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

DECLARE @vEndIndex int
IF (@StartIndex < 1) SET @StartIndex=1
IF (@PageSize < 1) SET @PageSize=1
SET @vEndIndex = @StartIndex + @Pagesize
IF (@SortColumn = '') SET @SortColumn='LocaleCode'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

DECLARE @OrderedRecords TABLE
(
     SearchOrderID int IDENTITY (1, 1) NOT NULL
    , MetaPartnerID uniqueidentifier
)
IF (@SortDirection = 'Random')
BEGIN
	INSERT INTO @OrderedRecords (MetaPartnerID)
	SELECT
		  Merchant1.[MetaPartnerID]
	FROM
	      [dbo].[tblCustomers_Merchant] Merchant1
	INNER JOIN [dbo].[tblCustomers_Business] Business1 ON Business1.[MetaPartnerID]=Merchant1.[MetaPartnerID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND (@LocaleCode IS NULL OR MetaPartner1.[LocaleCode] = @LocaleCode)
		AND (@CurrencyCode IS NULL OR MetaPartner1.[CurrencyCode] = @CurrencyCode)
		AND (@DateFormatCode IS NULL OR MetaPartner1.[DateFormatCode] = @DateFormatCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (MetaPartner1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (MetaPartner1.[LastModifiedDate] <=  @LastModifiedDateEnd))
		AND (@MetaPartnerName IS NULL OR MetaPartner1.[MetaPartnerName] like '%' + @MetaPartnerName + '%')

	ORDER BY NewID()
END
ELSE
BEGIN
	INSERT INTO @OrderedRecords (MetaPartnerID)
	SELECT
		  Merchant1.[MetaPartnerID]
	FROM
	      [dbo].[tblCustomers_Merchant] Merchant1
	INNER JOIN [dbo].[tblCustomers_Business] Business1 ON Business1.[MetaPartnerID]=Merchant1.[MetaPartnerID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND (@LocaleCode IS NULL OR MetaPartner1.[LocaleCode] = @LocaleCode)
		AND (@CurrencyCode IS NULL OR MetaPartner1.[CurrencyCode] = @CurrencyCode)
		AND (@DateFormatCode IS NULL OR MetaPartner1.[DateFormatCode] = @DateFormatCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (MetaPartner1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (MetaPartner1.[LastModifiedDate] <=  @LastModifiedDateEnd))
		AND (@MetaPartnerName IS NULL OR MetaPartner1.[MetaPartnerName] like '%' + @MetaPartnerName + '%')

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN Merchant1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN Merchant1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Merchant1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Merchant1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Merchant1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Merchant1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Merchant1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Merchant1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Merchant1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Merchant1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Merchant1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Merchant1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ServiceCharges' THEN Business1.[ServiceCharges] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ServiceCharges' THEN Business1.[ServiceCharges] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END

BEGIN
	SET @TotalRecords = (SELECT Count (*) FROM @OrderedRecords)
	IF @MaximumListSize > 0
	BEGIN
		IF @TotalRecords > @MaximumListSize
		BEGIN
			SET @MaximumListSizeExceeded = 1
			SET @TotalRecords = @MaximumListSize
		END
	END

	/* get search results */
	SELECT
		  Merchant1.[MetaPartnerID]
		, Merchant1.[CreatedByUserID]
		, Merchant1.[CreatedDate]
		, Merchant1.[LastModifiedByUserID]
		, Merchant1.[LastModifiedDate]
		, Merchant1.[Timestamp]
		, Business1.[ServiceCharges]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Merchant] Merchant1
	INNER JOIN [dbo].[tblCustomers_Business] Business1 ON Business1.[MetaPartnerID]=Merchant1.[MetaPartnerID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	INNER JOIN @OrderedRecords search ON search.[MetaPartnerID] = Merchant1.[MetaPartnerID]
	WHERE
		search.SearchOrderID  >= @StartIndex AND
		search.SearchOrderID  < @vEndIndex
	ORDER BY
		search.SearchOrderID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetManyMetaPartnerDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @StartIndex int = 1
	, @PageSize int = 50
	, @MaximumListSize int = 0
	, @MaximumListSizeExceeded bit = 0 OUTPUT
	, @TotalRecords int = 0 OUTPUT
	, @SortColumn sysname = 'MetaPartnerSubTypeCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @MetaPartnerSubTypeCode int
	, @LocaleCode int
	, @CurrencyCode int
	, @DateFormatCode int
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
	, @MetaPartnerName nvarchar(255)
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets many MetaPartner data by criteria.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

DECLARE @vEndIndex int
IF (@StartIndex < 1) SET @StartIndex=1
IF (@PageSize < 1) SET @PageSize=1
SET @vEndIndex = @StartIndex + @Pagesize
IF (@SortColumn = '') SET @SortColumn='MetaPartnerSubTypeCode'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

DECLARE @OrderedRecords TABLE
(
     SearchOrderID int IDENTITY (1, 1) NOT NULL
    , MetaPartnerID uniqueidentifier
)
IF (@SortDirection = 'Random')
BEGIN
	INSERT INTO @OrderedRecords (MetaPartnerID)
	SELECT
		  MetaPartner1.[MetaPartnerID]
	FROM
	      [dbo].[tblCustomers_MetaPartner] MetaPartner1
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND (@MetaPartnerSubTypeCode IS NULL OR MetaPartner1.[MetaPartnerSubTypeCode] = @MetaPartnerSubTypeCode)
		AND (@LocaleCode IS NULL OR MetaPartner1.[LocaleCode] = @LocaleCode)
		AND (@CurrencyCode IS NULL OR MetaPartner1.[CurrencyCode] = @CurrencyCode)
		AND (@DateFormatCode IS NULL OR MetaPartner1.[DateFormatCode] = @DateFormatCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (MetaPartner1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (MetaPartner1.[LastModifiedDate] <=  @LastModifiedDateEnd))
		AND (@MetaPartnerName IS NULL OR MetaPartner1.[MetaPartnerName] like '%' + @MetaPartnerName + '%')

	ORDER BY NewID()
END
ELSE
BEGIN
	INSERT INTO @OrderedRecords (MetaPartnerID)
	SELECT
		  MetaPartner1.[MetaPartnerID]
	FROM
	      [dbo].[tblCustomers_MetaPartner] MetaPartner1
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE 
		MetaPartner1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartner1.[IsActive] ELSE 1 END
		AND (@MetaPartnerSubTypeCode IS NULL OR MetaPartner1.[MetaPartnerSubTypeCode] = @MetaPartnerSubTypeCode)
		AND (@LocaleCode IS NULL OR MetaPartner1.[LocaleCode] = @LocaleCode)
		AND (@CurrencyCode IS NULL OR MetaPartner1.[CurrencyCode] = @CurrencyCode)
		AND (@DateFormatCode IS NULL OR MetaPartner1.[DateFormatCode] = @DateFormatCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (MetaPartner1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (MetaPartner1.[LastModifiedDate] <=  @LastModifiedDateEnd))
		AND (@MetaPartnerName IS NULL OR MetaPartner1.[MetaPartnerName] like '%' + @MetaPartnerName + '%')

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN MetaPartner1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN MetaPartner1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeCode' THEN MetaPartner1.[MetaPartnerSubTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN MetaPartner1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN MetaPartner1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TaxCode' THEN MetaPartner1.[TaxCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN MetaPartner1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PictureImageURL' THEN MetaPartner1.[PictureImageURL] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN MetaPartner1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN MetaPartner1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN MetaPartner1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN MetaPartner1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN MetaPartner1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN MetaPartner1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN MetaPartner1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN MetaPartner1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN MetaPartner1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN MetaPartner1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerSubTypeName' THEN MetaPartnerSubType1.[MetaPartnerSubTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END

BEGIN
	SET @TotalRecords = (SELECT Count (*) FROM @OrderedRecords)
	IF @MaximumListSize > 0
	BEGIN
		IF @TotalRecords > @MaximumListSize
		BEGIN
			SET @MaximumListSizeExceeded = 1
			SET @TotalRecords = @MaximumListSize
		END
	END

	/* get search results */
	SELECT
		  MetaPartner1.[MetaPartnerID]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartner1.[CreatedByUserID]
		, MetaPartner1.[CreatedDate]
		, MetaPartner1.[LastModifiedByUserID]
		, MetaPartner1.[LastModifiedDate]
		, MetaPartner1.[Timestamp]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_MetaPartner] MetaPartner1
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	INNER JOIN @OrderedRecords search ON search.[MetaPartnerID] = MetaPartner1.[MetaPartnerID]
	WHERE
		search.SearchOrderID  >= @StartIndex AND
		search.SearchOrderID  < @vEndIndex
	ORDER BY
		search.SearchOrderID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetManyMetaPartnerEmailDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @StartIndex int = 1
	, @PageSize int = 50
	, @MaximumListSize int = 0
	, @MaximumListSizeExceeded bit = 0 OUTPUT
	, @TotalRecords int = 0 OUTPUT
	, @SortColumn sysname = 'LastModifiedDate'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets many MetaPartnerEmail data by criteria.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

DECLARE @vEndIndex int
IF (@StartIndex < 1) SET @StartIndex=1
IF (@PageSize < 1) SET @PageSize=1
SET @vEndIndex = @StartIndex + @Pagesize
IF (@SortColumn = '') SET @SortColumn='LastModifiedDate'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

DECLARE @OrderedRecords TABLE
(
     SearchOrderID int IDENTITY (1, 1) NOT NULL
    , MetaPartnerEmailID uniqueidentifier
)
IF (@SortDirection = 'Random')
BEGIN
	INSERT INTO @OrderedRecords (MetaPartnerEmailID)
	SELECT
		  MetaPartnerEmail1.[MetaPartnerEmailID]
	FROM
	      [dbo].[tblCustomers_MetaPartnerEmail] MetaPartnerEmail1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=MetaPartnerEmail1.[MetaPartnerID]
	WHERE 
		MetaPartnerEmail1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartnerEmail1.[IsActive] ELSE 1 END
		AND ((@LastModifiedDateStart  IS NULL) OR (MetaPartnerEmail1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (MetaPartnerEmail1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY NewID()
END
ELSE
BEGIN
	INSERT INTO @OrderedRecords (MetaPartnerEmailID)
	SELECT
		  MetaPartnerEmail1.[MetaPartnerEmailID]
	FROM
	      [dbo].[tblCustomers_MetaPartnerEmail] MetaPartnerEmail1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=MetaPartnerEmail1.[MetaPartnerID]
	WHERE 
		MetaPartnerEmail1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartnerEmail1.[IsActive] ELSE 1 END
		AND ((@LastModifiedDateStart  IS NULL) OR (MetaPartnerEmail1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (MetaPartnerEmail1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerEmailID' THEN MetaPartnerEmail1.[MetaPartnerEmailID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerEmailID' THEN MetaPartnerEmail1.[MetaPartnerEmailID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EmailAddress' THEN MetaPartnerEmail1.[EmailAddress] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EmailAddress' THEN MetaPartnerEmail1.[EmailAddress] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Password' THEN MetaPartnerEmail1.[Password] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Password' THEN MetaPartnerEmail1.[Password] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN MetaPartnerEmail1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN MetaPartnerEmail1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Rank' THEN MetaPartnerEmail1.[Rank] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Rank' THEN MetaPartnerEmail1.[Rank] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN MetaPartnerEmail1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN MetaPartnerEmail1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DisplayName' THEN MetaPartnerEmail1.[EmailAddress] + ' (' + MetaPartner1.[MetaPartnerName] + ')' END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DisplayName' THEN MetaPartnerEmail1.[EmailAddress] + ' (' + MetaPartner1.[MetaPartnerName] + ')' END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN MetaPartnerEmail1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN MetaPartnerEmail1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN MetaPartnerEmail1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN MetaPartnerEmail1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN MetaPartnerEmail1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN MetaPartnerEmail1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN MetaPartnerEmail1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN MetaPartnerEmail1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN MetaPartnerEmail1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN MetaPartnerEmail1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END

BEGIN
	SET @TotalRecords = (SELECT Count (*) FROM @OrderedRecords)
	IF @MaximumListSize > 0
	BEGIN
		IF @TotalRecords > @MaximumListSize
		BEGIN
			SET @MaximumListSizeExceeded = 1
			SET @TotalRecords = @MaximumListSize
		END
	END

	/* get search results */
	SELECT
		  MetaPartnerEmail1.[MetaPartnerEmailID]
		, MetaPartnerEmail1.[EmailAddress]
		, MetaPartnerEmail1.[Password]
		, MetaPartnerEmail1.[MetaPartnerID]
		, MetaPartnerEmail1.[Rank]
		, MetaPartnerEmail1.[IsActive]
		, "DisplayName" = MetaPartnerEmail1.[EmailAddress] + ' (' + MetaPartner1.[MetaPartnerName] + ')'
		, MetaPartnerEmail1.[CreatedByUserID]
		, MetaPartnerEmail1.[CreatedDate]
		, MetaPartnerEmail1.[LastModifiedByUserID]
		, MetaPartnerEmail1.[LastModifiedDate]
		, MetaPartnerEmail1.[Timestamp]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblCustomers_MetaPartnerEmail] MetaPartnerEmail1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=MetaPartnerEmail1.[MetaPartnerID]
	INNER JOIN @OrderedRecords search ON search.[MetaPartnerEmailID] = MetaPartnerEmail1.[MetaPartnerEmailID]
	WHERE
		search.SearchOrderID  >= @StartIndex AND
		search.SearchOrderID  < @vEndIndex
	ORDER BY
		search.SearchOrderID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetManyMetaPartnerPhoneDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @StartIndex int = 1
	, @PageSize int = 50
	, @MaximumListSize int = 0
	, @MaximumListSizeExceeded bit = 0 OUTPUT
	, @TotalRecords int = 0 OUTPUT
	, @SortColumn sysname = 'PhoneNumber'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @PhoneNumber nvarchar(50)
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets many MetaPartnerPhone data by criteria.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

DECLARE @vEndIndex int
IF (@StartIndex < 1) SET @StartIndex=1
IF (@PageSize < 1) SET @PageSize=1
SET @vEndIndex = @StartIndex + @Pagesize
IF (@SortColumn = '') SET @SortColumn='PhoneNumber'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

DECLARE @OrderedRecords TABLE
(
     SearchOrderID int IDENTITY (1, 1) NOT NULL
    , MetaPartnerPhoneID uniqueidentifier
)
IF (@SortDirection = 'Random')
BEGIN
	INSERT INTO @OrderedRecords (MetaPartnerPhoneID)
	SELECT
		  MetaPartnerPhone1.[MetaPartnerPhoneID]
	FROM
	      [dbo].[tblCustomers_MetaPartnerPhone] MetaPartnerPhone1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=MetaPartnerPhone1.[MetaPartnerID]
	WHERE 
		MetaPartnerPhone1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartnerPhone1.[IsActive] ELSE 1 END
		AND (@PhoneNumber IS NULL OR MetaPartnerPhone1.[PhoneNumber] like '%' + @PhoneNumber + '%')
		AND ((@LastModifiedDateStart  IS NULL) OR (MetaPartnerPhone1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (MetaPartnerPhone1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY NewID()
END
ELSE
BEGIN
	INSERT INTO @OrderedRecords (MetaPartnerPhoneID)
	SELECT
		  MetaPartnerPhone1.[MetaPartnerPhoneID]
	FROM
	      [dbo].[tblCustomers_MetaPartnerPhone] MetaPartnerPhone1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=MetaPartnerPhone1.[MetaPartnerID]
	WHERE 
		MetaPartnerPhone1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN MetaPartnerPhone1.[IsActive] ELSE 1 END
		AND (@PhoneNumber IS NULL OR MetaPartnerPhone1.[PhoneNumber] like '%' + @PhoneNumber + '%')
		AND ((@LastModifiedDateStart  IS NULL) OR (MetaPartnerPhone1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (MetaPartnerPhone1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerPhoneID' THEN MetaPartnerPhone1.[MetaPartnerPhoneID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerPhoneID' THEN MetaPartnerPhone1.[MetaPartnerPhoneID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PhoneNumber' THEN MetaPartnerPhone1.[PhoneNumber] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PhoneNumber' THEN MetaPartnerPhone1.[PhoneNumber] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN MetaPartnerPhone1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN MetaPartnerPhone1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PIN' THEN MetaPartnerPhone1.[PIN] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PIN' THEN MetaPartnerPhone1.[PIN] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CarrierMetaPartnerID' THEN MetaPartnerPhone1.[CarrierMetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CarrierMetaPartnerID' THEN MetaPartnerPhone1.[CarrierMetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Rank' THEN MetaPartnerPhone1.[Rank] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Rank' THEN MetaPartnerPhone1.[Rank] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN MetaPartnerPhone1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN MetaPartnerPhone1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DisplayName' THEN MetaPartnerPhone1.[PhoneNumber] + ' (' + MetaPartner1.[MetaPartnerName] + ')' END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DisplayName' THEN MetaPartnerPhone1.[PhoneNumber] + ' (' + MetaPartner1.[MetaPartnerName] + ')' END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN MetaPartnerPhone1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN MetaPartnerPhone1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN MetaPartnerPhone1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN MetaPartnerPhone1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN MetaPartnerPhone1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN MetaPartnerPhone1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN MetaPartnerPhone1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN MetaPartnerPhone1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN MetaPartnerPhone1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN MetaPartnerPhone1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END

BEGIN
	SET @TotalRecords = (SELECT Count (*) FROM @OrderedRecords)
	IF @MaximumListSize > 0
	BEGIN
		IF @TotalRecords > @MaximumListSize
		BEGIN
			SET @MaximumListSizeExceeded = 1
			SET @TotalRecords = @MaximumListSize
		END
	END

	/* get search results */
	SELECT
		  MetaPartnerPhone1.[MetaPartnerPhoneID]
		, MetaPartnerPhone1.[PhoneNumber]
		, MetaPartnerPhone1.[MetaPartnerID]
		, MetaPartnerPhone1.[PIN]
		, MetaPartnerPhone1.[CarrierMetaPartnerID]
		, MetaPartnerPhone1.[Rank]
		, MetaPartnerPhone1.[IsActive]
		, "DisplayName" = MetaPartnerPhone1.[PhoneNumber] + ' (' + MetaPartner1.[MetaPartnerName] + ')'
		, MetaPartnerPhone1.[CreatedByUserID]
		, MetaPartnerPhone1.[CreatedDate]
		, MetaPartnerPhone1.[LastModifiedByUserID]
		, MetaPartnerPhone1.[LastModifiedDate]
		, MetaPartnerPhone1.[Timestamp]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblCustomers_MetaPartnerPhone] MetaPartnerPhone1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=MetaPartnerPhone1.[MetaPartnerID]
	INNER JOIN @OrderedRecords search ON search.[MetaPartnerPhoneID] = MetaPartnerPhone1.[MetaPartnerPhoneID]
	WHERE
		search.SearchOrderID  >= @StartIndex AND
		search.SearchOrderID  < @vEndIndex
	ORDER BY
		search.SearchOrderID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetOneBank
	  @SqlErrorNumber int = 0 OUTPUT
	, @MetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single Bank by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  Bank1.[MetaPartnerID]
		, Bank1.[BankCode]
		, Bank1.[CreatedByUserID]
		, Bank1.[CreatedDate]
		, Bank1.[LastModifiedByUserID]
		, Bank1.[LastModifiedDate]
		, Bank1.[Timestamp]
		, Business1.[ServiceCharges]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Bank] Bank1
	INNER JOIN [dbo].[tblCustomers_Business] Business1 ON Business1.[MetaPartnerID]=Bank1.[MetaPartnerID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE Bank1.[MetaPartnerID] =  @MetaPartnerID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetOneBankByBankCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @BankCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single Bank by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@BankCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  Bank1.[MetaPartnerID]
		, Bank1.[BankCode]
		, Bank1.[CreatedByUserID]
		, Bank1.[CreatedDate]
		, Bank1.[LastModifiedByUserID]
		, Bank1.[LastModifiedDate]
		, Bank1.[Timestamp]
		, Business1.[ServiceCharges]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Bank] Bank1
	INNER JOIN [dbo].[tblCustomers_Business] Business1 ON Business1.[MetaPartnerID]=Bank1.[MetaPartnerID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE Bank1.[BankCode] =  @BankCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetOneBusiness
	  @SqlErrorNumber int = 0 OUTPUT
	, @MetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single Business by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  Business1.[MetaPartnerID]
		, Business1.[ServiceCharges]
		, Business1.[CreatedByUserID]
		, Business1.[CreatedDate]
		, Business1.[LastModifiedByUserID]
		, Business1.[LastModifiedDate]
		, Business1.[Timestamp]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Business] Business1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE Business1.[MetaPartnerID] =  @MetaPartnerID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetOneBusinessCustomer
	  @SqlErrorNumber int = 0 OUTPUT
	, @BusinessMetaPartnerID uniqueidentifier
	, @CustomerMetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single BusinessCustomer by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@BusinessMetaPartnerID IS NULL OR @CustomerMetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  BusinessCustomer1.[BusinessMetaPartnerID]
		, BusinessCustomer1.[CustomerMetaPartnerID]
		, BusinessCustomer1.[CreatedByUserID]
		, BusinessCustomer1.[CreatedDate]
		, BusinessCustomer1.[LastModifiedByUserID]
		, BusinessCustomer1.[LastModifiedDate]
		, BusinessCustomer1.[Timestamp]
		, Customer1.[FirstName]
		, Customer1.[LastName]
	FROM
	      [dbo].[trelCustomers_BusinessCustomer] BusinessCustomer1
	INNER JOIN [dbo].[tblCustomers_Customer] Customer1 ON Customer1.[MetaPartnerID]=BusinessCustomer1.[CustomerMetaPartnerID]
	WHERE BusinessCustomer1.[BusinessMetaPartnerID] =  @BusinessMetaPartnerID AND BusinessCustomer1.[CustomerMetaPartnerID] =  @CustomerMetaPartnerID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetOneCarrier
	  @SqlErrorNumber int = 0 OUTPUT
	, @MetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single Carrier by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  Carrier1.[MetaPartnerID]
		, Carrier1.[CarrierCode]
		, Carrier1.[CreatedByUserID]
		, Carrier1.[CreatedDate]
		, Carrier1.[LastModifiedByUserID]
		, Carrier1.[LastModifiedDate]
		, Carrier1.[Timestamp]
		, Business1.[ServiceCharges]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Carrier] Carrier1
	INNER JOIN [dbo].[tblCustomers_Business] Business1 ON Business1.[MetaPartnerID]=Carrier1.[MetaPartnerID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE Carrier1.[MetaPartnerID] =  @MetaPartnerID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetOneCarrierByCarrierCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @CarrierCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single Carrier by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@CarrierCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  Carrier1.[MetaPartnerID]
		, Carrier1.[CarrierCode]
		, Carrier1.[CreatedByUserID]
		, Carrier1.[CreatedDate]
		, Carrier1.[LastModifiedByUserID]
		, Carrier1.[LastModifiedDate]
		, Carrier1.[Timestamp]
		, Business1.[ServiceCharges]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Carrier] Carrier1
	INNER JOIN [dbo].[tblCustomers_Business] Business1 ON Business1.[MetaPartnerID]=Carrier1.[MetaPartnerID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE Carrier1.[CarrierCode] =  @CarrierCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetOneCustomer
	  @SqlErrorNumber int = 0 OUTPUT
	, @MetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single Customer by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  Customer1.[MetaPartnerID]
		, Customer1.[FirstName]
		, Customer1.[LastName]
		, Customer1.[CreatedByUserID]
		, Customer1.[CreatedDate]
		, Customer1.[LastModifiedByUserID]
		, Customer1.[LastModifiedDate]
		, Customer1.[Timestamp]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Customer] Customer1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Customer1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE Customer1.[MetaPartnerID] =  @MetaPartnerID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetOneLocation
	  @SqlErrorNumber int = 0 OUTPUT
	, @LocationID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single Location by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@LocationID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  Location1.[LocationID]
		, Location1.[LocationTypeCode]
		, Location1.[AddressLine1]
		, Location1.[AddressLine2]
		, Location1.[City]
		, Location1.[StateProvince]
		, Location1.[CountryCode]
		, Location1.[PostalCode]
		, Location1.[MetaPartnerID]
		, Location1.[CreatedByUserID]
		, Location1.[CreatedDate]
		, Location1.[LastModifiedByUserID]
		, Location1.[LastModifiedDate]
		, Location1.[Timestamp]
		, LocationType1.[LocationTypeName]
		, Country1.[CountryName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblCustomers_Location] Location1
	INNER JOIN [dbo].[tlkpCustomers_LocationType] LocationType1 ON LocationType1.[LocationTypeCode]=Location1.[LocationTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Country] Country1 ON Country1.[CountryCode]=Location1.[CountryCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Location1.[MetaPartnerID]
	WHERE Location1.[LocationID] =  @LocationID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetOneLocationType
	  @SqlErrorNumber int = 0 OUTPUT
	, @LocationTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single LocationType by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@LocationTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  LocationType1.[LocationTypeCode]
		, LocationType1.[LocationTypeName]
		, LocationType1.[Description]
		, LocationType1.[IsActive]
		, LocationType1.[CreatedByUserID]
		, LocationType1.[CreatedDate]
		, LocationType1.[LastModifiedByUserID]
		, LocationType1.[LastModifiedDate]
		, LocationType1.[Timestamp]
	FROM
	      [dbo].[tlkpCustomers_LocationType] LocationType1
	WHERE LocationType1.[LocationTypeCode] =  @LocationTypeCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetOneMerchant
	  @SqlErrorNumber int = 0 OUTPUT
	, @MetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single Merchant by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  Merchant1.[MetaPartnerID]
		, Merchant1.[CreatedByUserID]
		, Merchant1.[CreatedDate]
		, Merchant1.[LastModifiedByUserID]
		, Merchant1.[LastModifiedDate]
		, Merchant1.[Timestamp]
		, Business1.[ServiceCharges]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_Merchant] Merchant1
	INNER JOIN [dbo].[tblCustomers_Business] Business1 ON Business1.[MetaPartnerID]=Merchant1.[MetaPartnerID]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Business1.[MetaPartnerID]
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE Merchant1.[MetaPartnerID] =  @MetaPartnerID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetOneMetaPartner
	  @SqlErrorNumber int = 0 OUTPUT
	, @MetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single MetaPartner by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  MetaPartner1.[MetaPartnerID]
		, MetaPartner1.[MetaPartnerSubTypeCode]
		, MetaPartner1.[LocaleCode]
		, MetaPartner1.[CurrencyCode]
		, MetaPartner1.[DateFormatCode]
		, MetaPartner1.[TaxCode]
		, MetaPartner1.[IsActive]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[PictureImageURL]
		, MetaPartner1.[CreatedByUserID]
		, MetaPartner1.[CreatedDate]
		, MetaPartner1.[LastModifiedByUserID]
		, MetaPartner1.[LastModifiedDate]
		, MetaPartner1.[Timestamp]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, Locale1.[LocaleName]
		, Currency1.[CurrencyName]
		, DateFormat1.[DateFormatName]
	FROM
	      [dbo].[tblCustomers_MetaPartner] MetaPartner1
	INNER JOIN [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1 ON MetaPartnerSubType1.[MetaPartnerSubTypeCode]=MetaPartner1.[MetaPartnerSubTypeCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=MetaPartner1.[LocaleCode]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=MetaPartner1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpEnvironments_DateFormat] DateFormat1 ON DateFormat1.[DateFormatCode]=MetaPartner1.[DateFormatCode]
	WHERE MetaPartner1.[MetaPartnerID] =  @MetaPartnerID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetOneMetaPartnerContact
	  @SqlErrorNumber int = 0 OUTPUT
	, @MetaPartnerID uniqueidentifier
	, @ContactMetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single MetaPartnerContact by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@MetaPartnerID IS NULL OR @ContactMetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  MetaPartnerContact1.[MetaPartnerID]
		, MetaPartnerContact1.[ContactMetaPartnerID]
		, MetaPartnerContact1.[CreatedByUserID]
		, MetaPartnerContact1.[CreatedDate]
		, MetaPartnerContact1.[LastModifiedByUserID]
		, MetaPartnerContact1.[LastModifiedDate]
		, MetaPartnerContact1.[Timestamp]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[trelCustomers_MetaPartnerContact] MetaPartnerContact1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=MetaPartnerContact1.[MetaPartnerID]
	WHERE MetaPartnerContact1.[MetaPartnerID] =  @MetaPartnerID AND MetaPartnerContact1.[ContactMetaPartnerID] =  @ContactMetaPartnerID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetOneMetaPartnerEmail
	  @SqlErrorNumber int = 0 OUTPUT
	, @MetaPartnerEmailID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single MetaPartnerEmail by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@MetaPartnerEmailID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  MetaPartnerEmail1.[MetaPartnerEmailID]
		, MetaPartnerEmail1.[EmailAddress]
		, MetaPartnerEmail1.[Password]
		, MetaPartnerEmail1.[MetaPartnerID]
		, MetaPartnerEmail1.[Rank]
		, MetaPartnerEmail1.[IsActive]
		, "DisplayName" = MetaPartnerEmail1.[EmailAddress] + ' (' + MetaPartner1.[MetaPartnerName] + ')'
		, MetaPartnerEmail1.[CreatedByUserID]
		, MetaPartnerEmail1.[CreatedDate]
		, MetaPartnerEmail1.[LastModifiedByUserID]
		, MetaPartnerEmail1.[LastModifiedDate]
		, MetaPartnerEmail1.[Timestamp]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblCustomers_MetaPartnerEmail] MetaPartnerEmail1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=MetaPartnerEmail1.[MetaPartnerID]
	WHERE MetaPartnerEmail1.[MetaPartnerEmailID] =  @MetaPartnerEmailID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetOneMetaPartnerEmailByEmailAddress
	  @SqlErrorNumber int = 0 OUTPUT
	, @EmailAddress nvarchar(255)
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single MetaPartnerEmail by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@EmailAddress IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  MetaPartnerEmail1.[MetaPartnerEmailID]
		, MetaPartnerEmail1.[EmailAddress]
		, MetaPartnerEmail1.[Password]
		, MetaPartnerEmail1.[MetaPartnerID]
		, MetaPartnerEmail1.[Rank]
		, MetaPartnerEmail1.[IsActive]
		, "DisplayName" = MetaPartnerEmail1.[EmailAddress] + ' (' + MetaPartner1.[MetaPartnerName] + ')'
		, MetaPartnerEmail1.[CreatedByUserID]
		, MetaPartnerEmail1.[CreatedDate]
		, MetaPartnerEmail1.[LastModifiedByUserID]
		, MetaPartnerEmail1.[LastModifiedDate]
		, MetaPartnerEmail1.[Timestamp]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblCustomers_MetaPartnerEmail] MetaPartnerEmail1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=MetaPartnerEmail1.[MetaPartnerID]
	WHERE MetaPartnerEmail1.[EmailAddress] =  @EmailAddress

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetOneMetaPartnerPhone
	  @SqlErrorNumber int = 0 OUTPUT
	, @MetaPartnerPhoneID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single MetaPartnerPhone by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@MetaPartnerPhoneID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  MetaPartnerPhone1.[MetaPartnerPhoneID]
		, MetaPartnerPhone1.[PhoneNumber]
		, MetaPartnerPhone1.[MetaPartnerID]
		, MetaPartnerPhone1.[PIN]
		, MetaPartnerPhone1.[CarrierMetaPartnerID]
		, MetaPartnerPhone1.[Rank]
		, MetaPartnerPhone1.[IsActive]
		, "DisplayName" = MetaPartnerPhone1.[PhoneNumber] + ' (' + MetaPartner1.[MetaPartnerName] + ')'
		, MetaPartnerPhone1.[CreatedByUserID]
		, MetaPartnerPhone1.[CreatedDate]
		, MetaPartnerPhone1.[LastModifiedByUserID]
		, MetaPartnerPhone1.[LastModifiedDate]
		, MetaPartnerPhone1.[Timestamp]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblCustomers_MetaPartnerPhone] MetaPartnerPhone1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=MetaPartnerPhone1.[MetaPartnerID]
	WHERE MetaPartnerPhone1.[MetaPartnerPhoneID] =  @MetaPartnerPhoneID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetOneMetaPartnerPhoneByMetaPartnerPhoneIDAndMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @MetaPartnerPhoneID uniqueidentifier
	, @MetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single MetaPartnerPhone by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@MetaPartnerPhoneID IS NULL OR @MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  MetaPartnerPhone1.[MetaPartnerPhoneID]
		, MetaPartnerPhone1.[PhoneNumber]
		, MetaPartnerPhone1.[MetaPartnerID]
		, MetaPartnerPhone1.[PIN]
		, MetaPartnerPhone1.[CarrierMetaPartnerID]
		, MetaPartnerPhone1.[Rank]
		, MetaPartnerPhone1.[IsActive]
		, "DisplayName" = MetaPartnerPhone1.[PhoneNumber] + ' (' + MetaPartner1.[MetaPartnerName] + ')'
		, MetaPartnerPhone1.[CreatedByUserID]
		, MetaPartnerPhone1.[CreatedDate]
		, MetaPartnerPhone1.[LastModifiedByUserID]
		, MetaPartnerPhone1.[LastModifiedDate]
		, MetaPartnerPhone1.[Timestamp]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblCustomers_MetaPartnerPhone] MetaPartnerPhone1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=MetaPartnerPhone1.[MetaPartnerID]
	WHERE MetaPartnerPhone1.[MetaPartnerPhoneID] =  @MetaPartnerPhoneID AND MetaPartnerPhone1.[MetaPartnerID] =  @MetaPartnerID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetOneMetaPartnerPhoneByPhoneNumber
	  @SqlErrorNumber int = 0 OUTPUT
	, @PhoneNumber nvarchar(50)
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single MetaPartnerPhone by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@PhoneNumber IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  MetaPartnerPhone1.[MetaPartnerPhoneID]
		, MetaPartnerPhone1.[PhoneNumber]
		, MetaPartnerPhone1.[MetaPartnerID]
		, MetaPartnerPhone1.[PIN]
		, MetaPartnerPhone1.[CarrierMetaPartnerID]
		, MetaPartnerPhone1.[Rank]
		, MetaPartnerPhone1.[IsActive]
		, "DisplayName" = MetaPartnerPhone1.[PhoneNumber] + ' (' + MetaPartner1.[MetaPartnerName] + ')'
		, MetaPartnerPhone1.[CreatedByUserID]
		, MetaPartnerPhone1.[CreatedDate]
		, MetaPartnerPhone1.[LastModifiedByUserID]
		, MetaPartnerPhone1.[LastModifiedDate]
		, MetaPartnerPhone1.[Timestamp]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblCustomers_MetaPartnerPhone] MetaPartnerPhone1
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=MetaPartnerPhone1.[MetaPartnerID]
	WHERE MetaPartnerPhone1.[PhoneNumber] =  @PhoneNumber

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_GetOneMetaPartnerSubType
	  @SqlErrorNumber int = 0 OUTPUT
	, @MetaPartnerSubTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single MetaPartnerSubType by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@MetaPartnerSubTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  MetaPartnerSubType1.[MetaPartnerSubTypeCode]
		, MetaPartnerSubType1.[MetaPartnerSubTypeName]
		, MetaPartnerSubType1.[Description]
		, MetaPartnerSubType1.[IsActive]
		, MetaPartnerSubType1.[CreatedByUserID]
		, MetaPartnerSubType1.[CreatedDate]
		, MetaPartnerSubType1.[LastModifiedByUserID]
		, MetaPartnerSubType1.[LastModifiedDate]
		, MetaPartnerSubType1.[Timestamp]
	FROM
	      [dbo].[tlkpCustomers_MetaPartnerSubType] MetaPartnerSubType1
	WHERE MetaPartnerSubType1.[MetaPartnerSubTypeCode] =  @MetaPartnerSubTypeCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_UpdateOneBank
	  @SqlErrorNumber int = 0 OUTPUT
	, @LastModifiedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @MetaPartnerID uniqueidentifier
	, @BankCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure updates Bank data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@MetaPartnerID IS NULL OR @BankCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [MetaPartnerID] FROM [dbo].[tblCustomers_Bank] WHERE [MetaPartnerID] =  @MetaPartnerID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [MetaPartnerID] FROM [dbo].[tblCustomers_Bank] WHERE [MetaPartnerID] =  @MetaPartnerID AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	UPDATE
	      [dbo].[tblCustomers_Bank]
	SET
	     [LastModifiedByUserID] = @LastModifiedByUserID
	   , [LastModifiedDate] = getdate()
	   , [MetaPartnerID] = @MetaPartnerID
	   , [BankCode] = @BankCode
	WHERE [MetaPartnerID] =  @MetaPartnerID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

	SET  @Timestamp = @@DBTS

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_UpdateOneBusiness
	  @SqlErrorNumber int = 0 OUTPUT
	, @LastModifiedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @MetaPartnerID uniqueidentifier
	, @ServiceCharges nvarchar(255) = NULL
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure updates Business data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [MetaPartnerID] FROM [dbo].[tblCustomers_Business] WHERE [MetaPartnerID] =  @MetaPartnerID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [MetaPartnerID] FROM [dbo].[tblCustomers_Business] WHERE [MetaPartnerID] =  @MetaPartnerID AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	UPDATE
	      [dbo].[tblCustomers_Business]
	SET
	     [LastModifiedByUserID] = @LastModifiedByUserID
	   , [LastModifiedDate] = getdate()
	   , [MetaPartnerID] = @MetaPartnerID
	   , [ServiceCharges] = @ServiceCharges
	WHERE [MetaPartnerID] =  @MetaPartnerID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

	SET  @Timestamp = @@DBTS

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_UpdateOneBusinessCustomer
	  @SqlErrorNumber int = 0 OUTPUT
	, @LastModifiedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @BusinessMetaPartnerID uniqueidentifier
	, @CustomerMetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure updates BusinessCustomer data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@BusinessMetaPartnerID IS NULL OR @CustomerMetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [BusinessMetaPartnerID], [CustomerMetaPartnerID] FROM [dbo].[trelCustomers_BusinessCustomer] WHERE [BusinessMetaPartnerID] =  @BusinessMetaPartnerID AND [CustomerMetaPartnerID] =  @CustomerMetaPartnerID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [BusinessMetaPartnerID], [CustomerMetaPartnerID] FROM [dbo].[trelCustomers_BusinessCustomer] WHERE [BusinessMetaPartnerID] =  @BusinessMetaPartnerID AND [CustomerMetaPartnerID] =  @CustomerMetaPartnerID AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	UPDATE
	      [dbo].[trelCustomers_BusinessCustomer]
	SET
	     [LastModifiedByUserID] = @LastModifiedByUserID
	   , [LastModifiedDate] = getdate()
	   , [BusinessMetaPartnerID] = @BusinessMetaPartnerID
	   , [CustomerMetaPartnerID] = @CustomerMetaPartnerID
	WHERE [BusinessMetaPartnerID] =  @BusinessMetaPartnerID AND [CustomerMetaPartnerID] =  @CustomerMetaPartnerID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

	SET  @Timestamp = @@DBTS

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_UpdateOneCarrier
	  @SqlErrorNumber int = 0 OUTPUT
	, @LastModifiedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @MetaPartnerID uniqueidentifier
	, @CarrierCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure updates Carrier data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@MetaPartnerID IS NULL OR @CarrierCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [MetaPartnerID] FROM [dbo].[tblCustomers_Carrier] WHERE [MetaPartnerID] =  @MetaPartnerID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [MetaPartnerID] FROM [dbo].[tblCustomers_Carrier] WHERE [MetaPartnerID] =  @MetaPartnerID AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	UPDATE
	      [dbo].[tblCustomers_Carrier]
	SET
	     [LastModifiedByUserID] = @LastModifiedByUserID
	   , [LastModifiedDate] = getdate()
	   , [MetaPartnerID] = @MetaPartnerID
	   , [CarrierCode] = @CarrierCode
	WHERE [MetaPartnerID] =  @MetaPartnerID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

	SET  @Timestamp = @@DBTS

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_UpdateOneCustomer
	  @SqlErrorNumber int = 0 OUTPUT
	, @LastModifiedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @MetaPartnerID uniqueidentifier
	, @FirstName nvarchar(255) = NULL
	, @LastName nvarchar(255) = NULL
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure updates Customer data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [MetaPartnerID] FROM [dbo].[tblCustomers_Customer] WHERE [MetaPartnerID] =  @MetaPartnerID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [MetaPartnerID] FROM [dbo].[tblCustomers_Customer] WHERE [MetaPartnerID] =  @MetaPartnerID AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	UPDATE
	      [dbo].[tblCustomers_Customer]
	SET
	     [LastModifiedByUserID] = @LastModifiedByUserID
	   , [LastModifiedDate] = getdate()
	   , [MetaPartnerID] = @MetaPartnerID
	   , [FirstName] = @FirstName
	   , [LastName] = @LastName
	WHERE [MetaPartnerID] =  @MetaPartnerID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

	SET  @Timestamp = @@DBTS

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_UpdateOneLocationType
	  @SqlErrorNumber int = 0 OUTPUT
	, @LastModifiedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @LocationTypeCode int
	, @LocationTypeName nvarchar(255)
	, @Description nvarchar(2000) = NULL
	, @IsActive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure updates LocationType data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@LocationTypeCode IS NULL OR @LocationTypeName IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [LocationTypeCode] FROM [dbo].[tlkpCustomers_LocationType] WHERE [LocationTypeCode] =  @LocationTypeCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [LocationTypeCode] FROM [dbo].[tlkpCustomers_LocationType] WHERE [LocationTypeCode] =  @LocationTypeCode AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	UPDATE
	      [dbo].[tlkpCustomers_LocationType]
	SET
	     [LastModifiedByUserID] = @LastModifiedByUserID
	   , [LastModifiedDate] = getdate()
	   , [LocationTypeCode] = @LocationTypeCode
	   , [LocationTypeName] = @LocationTypeName
	   , [Description] = @Description
	   , [IsActive] = @IsActive
	WHERE [LocationTypeCode] =  @LocationTypeCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

	SET  @Timestamp = @@DBTS

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_UpdateOneMerchant
	  @SqlErrorNumber int = 0 OUTPUT
	, @LastModifiedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @MetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure updates Merchant data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [MetaPartnerID] FROM [dbo].[tblCustomers_Merchant] WHERE [MetaPartnerID] =  @MetaPartnerID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [MetaPartnerID] FROM [dbo].[tblCustomers_Merchant] WHERE [MetaPartnerID] =  @MetaPartnerID AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	UPDATE
	      [dbo].[tblCustomers_Merchant]
	SET
	     [LastModifiedByUserID] = @LastModifiedByUserID
	   , [LastModifiedDate] = getdate()
	   , [MetaPartnerID] = @MetaPartnerID
	WHERE [MetaPartnerID] =  @MetaPartnerID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

	SET  @Timestamp = @@DBTS

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_UpdateOneMetaPartnerContact
	  @SqlErrorNumber int = 0 OUTPUT
	, @LastModifiedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @MetaPartnerID uniqueidentifier
	, @ContactMetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure updates MetaPartnerContact data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@MetaPartnerID IS NULL OR @ContactMetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [MetaPartnerID], [ContactMetaPartnerID] FROM [dbo].[trelCustomers_MetaPartnerContact] WHERE [MetaPartnerID] =  @MetaPartnerID AND [ContactMetaPartnerID] =  @ContactMetaPartnerID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [MetaPartnerID], [ContactMetaPartnerID] FROM [dbo].[trelCustomers_MetaPartnerContact] WHERE [MetaPartnerID] =  @MetaPartnerID AND [ContactMetaPartnerID] =  @ContactMetaPartnerID AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	UPDATE
	      [dbo].[trelCustomers_MetaPartnerContact]
	SET
	     [LastModifiedByUserID] = @LastModifiedByUserID
	   , [LastModifiedDate] = getdate()
	   , [MetaPartnerID] = @MetaPartnerID
	   , [ContactMetaPartnerID] = @ContactMetaPartnerID
	WHERE [MetaPartnerID] =  @MetaPartnerID AND [ContactMetaPartnerID] =  @ContactMetaPartnerID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

	SET  @Timestamp = @@DBTS

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_UpdateOneMetaPartnerSubType
	  @SqlErrorNumber int = 0 OUTPUT
	, @LastModifiedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @MetaPartnerSubTypeCode int
	, @MetaPartnerSubTypeName nvarchar(255)
	, @Description nvarchar(2000) = NULL
	, @IsActive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure updates MetaPartnerSubType data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@MetaPartnerSubTypeCode IS NULL OR @MetaPartnerSubTypeName IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [MetaPartnerSubTypeCode] FROM [dbo].[tlkpCustomers_MetaPartnerSubType] WHERE [MetaPartnerSubTypeCode] =  @MetaPartnerSubTypeCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [MetaPartnerSubTypeCode] FROM [dbo].[tlkpCustomers_MetaPartnerSubType] WHERE [MetaPartnerSubTypeCode] =  @MetaPartnerSubTypeCode AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	UPDATE
	      [dbo].[tlkpCustomers_MetaPartnerSubType]
	SET
	     [LastModifiedByUserID] = @LastModifiedByUserID
	   , [LastModifiedDate] = getdate()
	   , [MetaPartnerSubTypeCode] = @MetaPartnerSubTypeCode
	   , [MetaPartnerSubTypeName] = @MetaPartnerSubTypeName
	   , [Description] = @Description
	   , [IsActive] = @IsActive
	WHERE [MetaPartnerSubTypeCode] =  @MetaPartnerSubTypeCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

	SET  @Timestamp = @@DBTS

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_UpsertOneLocation
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @LastModifiedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @LocationID uniqueidentifier = NULL OUTPUT
	, @LocationTypeCode int
	, @AddressLine1 nvarchar(255)
	, @AddressLine2 nvarchar(255) = NULL
	, @City nvarchar(255)
	, @StateProvince nvarchar(255) = NULL
	, @CountryCode int
	, @PostalCode nvarchar(50)
	, @MetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure inserts or updates Location data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@LocationTypeCode IS NULL OR @AddressLine1 IS NULL OR @City IS NULL OR @CountryCode IS NULL OR @PostalCode IS NULL OR @MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [LocationID] FROM [dbo].[tblCustomers_Location] WHERE [LocationID] =  @LocationID AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
IF NOT EXISTS (SELECT [LocationID] FROM [dbo].[tblCustomers_Location] WHERE [LocationID] =  @LocationID)
BEGIN
	IF @LocationID  IS NULL
	BEGIN
		SET @LocationID  = NEWID ()
	END
	INSERT
	      [dbo].[tblCustomers_Location]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [LocationID]
	   , [LocationTypeCode]
	   , [AddressLine1]
	   , [AddressLine2]
	   , [City]
	   , [StateProvince]
	   , [CountryCode]
	   , [PostalCode]
	   , [MetaPartnerID]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @LocationID
	   , @LocationTypeCode
	   , @AddressLine1
	   , @AddressLine2
	   , @City
	   , @StateProvince
	   , @CountryCode
	   , @PostalCode
	   , @MetaPartnerID
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
	END
ELSE
BEGIN
	UPDATE
	      [dbo].[tblCustomers_Location]
	SET
	     [LastModifiedByUserID] = @LastModifiedByUserID
	   , [LastModifiedDate] = getdate()
	   , [LocationID] = @LocationID
	   , [LocationTypeCode] = @LocationTypeCode
	   , [AddressLine1] = @AddressLine1
	   , [AddressLine2] = @AddressLine2
	   , [City] = @City
	   , [StateProvince] = @StateProvince
	   , [CountryCode] = @CountryCode
	   , [PostalCode] = @PostalCode
	   , [MetaPartnerID] = @MetaPartnerID
	WHERE [LocationID] =  @LocationID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

	SET  @Timestamp = @@DBTS

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_UpsertOneMetaPartner
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @LastModifiedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @MetaPartnerID uniqueidentifier = NULL OUTPUT
	, @MetaPartnerSubTypeCode int
	, @LocaleCode int
	, @CurrencyCode int
	, @DateFormatCode int
	, @TaxCode nvarchar(100) = NULL
	, @IsActive bit = 1
	, @MetaPartnerName nvarchar(255)
	, @PictureImageURL nvarchar(255) = NULL
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure inserts or updates MetaPartner data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@MetaPartnerSubTypeCode IS NULL OR @LocaleCode IS NULL OR @CurrencyCode IS NULL OR @DateFormatCode IS NULL OR @MetaPartnerName IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [MetaPartnerID] FROM [dbo].[tblCustomers_MetaPartner] WHERE [MetaPartnerID] =  @MetaPartnerID AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
IF NOT EXISTS (SELECT [MetaPartnerID] FROM [dbo].[tblCustomers_MetaPartner] WHERE [MetaPartnerID] =  @MetaPartnerID)
BEGIN
	IF @MetaPartnerID  IS NULL
	BEGIN
		SET @MetaPartnerID  = NEWID ()
	END
	INSERT
	      [dbo].[tblCustomers_MetaPartner]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [MetaPartnerID]
	   , [MetaPartnerSubTypeCode]
	   , [LocaleCode]
	   , [CurrencyCode]
	   , [DateFormatCode]
	   , [TaxCode]
	   , [IsActive]
	   , [MetaPartnerName]
	   , [PictureImageURL]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @MetaPartnerID
	   , @MetaPartnerSubTypeCode
	   , @LocaleCode
	   , @CurrencyCode
	   , @DateFormatCode
	   , @TaxCode
	   , @IsActive
	   , @MetaPartnerName
	   , @PictureImageURL
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
	END
ELSE
BEGIN
	UPDATE
	      [dbo].[tblCustomers_MetaPartner]
	SET
	     [LastModifiedByUserID] = @LastModifiedByUserID
	   , [LastModifiedDate] = getdate()
	   , [MetaPartnerID] = @MetaPartnerID
	   , [MetaPartnerSubTypeCode] = @MetaPartnerSubTypeCode
	   , [LocaleCode] = @LocaleCode
	   , [CurrencyCode] = @CurrencyCode
	   , [DateFormatCode] = @DateFormatCode
	   , [TaxCode] = @TaxCode
	   , [IsActive] = @IsActive
	   , [MetaPartnerName] = @MetaPartnerName
	   , [PictureImageURL] = @PictureImageURL
	WHERE [MetaPartnerID] =  @MetaPartnerID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

	SET  @Timestamp = @@DBTS

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_UpsertOneMetaPartnerEmail
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @LastModifiedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @MetaPartnerEmailID uniqueidentifier = NULL OUTPUT
	, @EmailAddress nvarchar(255)
	, @Password nvarchar(50)
	, @MetaPartnerID uniqueidentifier
	, @Rank int = 0
	, @IsActive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure inserts or updates MetaPartnerEmail data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@EmailAddress IS NULL OR @Password IS NULL OR @MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [MetaPartnerEmailID] FROM [dbo].[tblCustomers_MetaPartnerEmail] WHERE [MetaPartnerEmailID] =  @MetaPartnerEmailID AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
IF NOT EXISTS (SELECT [MetaPartnerEmailID] FROM [dbo].[tblCustomers_MetaPartnerEmail] WHERE [MetaPartnerEmailID] =  @MetaPartnerEmailID)
BEGIN
	IF @MetaPartnerEmailID  IS NULL
	BEGIN
		SET @MetaPartnerEmailID  = NEWID ()
	END
	INSERT
	      [dbo].[tblCustomers_MetaPartnerEmail]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [MetaPartnerEmailID]
	   , [EmailAddress]
	   , [Password]
	   , [MetaPartnerID]
	   , [Rank]
	   , [IsActive]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @MetaPartnerEmailID
	   , @EmailAddress
	   , @Password
	   , @MetaPartnerID
	   , @Rank
	   , @IsActive
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
	END
ELSE
BEGIN
	UPDATE
	      [dbo].[tblCustomers_MetaPartnerEmail]
	SET
	     [LastModifiedByUserID] = @LastModifiedByUserID
	   , [LastModifiedDate] = getdate()
	   , [MetaPartnerEmailID] = @MetaPartnerEmailID
	   , [EmailAddress] = @EmailAddress
	   , [Password] = @Password
	   , [MetaPartnerID] = @MetaPartnerID
	   , [Rank] = @Rank
	   , [IsActive] = @IsActive
	WHERE [MetaPartnerEmailID] =  @MetaPartnerEmailID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

	SET  @Timestamp = @@DBTS

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spCustomers_UpsertOneMetaPartnerPhone
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @LastModifiedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @MetaPartnerPhoneID uniqueidentifier = NULL OUTPUT
	, @PhoneNumber nvarchar(50)
	, @MetaPartnerID uniqueidentifier
	, @PIN nvarchar(50)
	, @CarrierMetaPartnerID uniqueidentifier
	, @Rank int = 0
	, @IsActive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure inserts or updates MetaPartnerPhone data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@PhoneNumber IS NULL OR @MetaPartnerID IS NULL OR @PIN IS NULL OR @CarrierMetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [MetaPartnerPhoneID] FROM [dbo].[tblCustomers_MetaPartnerPhone] WHERE [MetaPartnerPhoneID] =  @MetaPartnerPhoneID AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
IF NOT EXISTS (SELECT [MetaPartnerPhoneID] FROM [dbo].[tblCustomers_MetaPartnerPhone] WHERE [MetaPartnerPhoneID] =  @MetaPartnerPhoneID)
BEGIN
	IF @MetaPartnerPhoneID  IS NULL
	BEGIN
		SET @MetaPartnerPhoneID  = NEWID ()
	END
	INSERT
	      [dbo].[tblCustomers_MetaPartnerPhone]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [MetaPartnerPhoneID]
	   , [PhoneNumber]
	   , [MetaPartnerID]
	   , [PIN]
	   , [CarrierMetaPartnerID]
	   , [Rank]
	   , [IsActive]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @MetaPartnerPhoneID
	   , @PhoneNumber
	   , @MetaPartnerID
	   , @PIN
	   , @CarrierMetaPartnerID
	   , @Rank
	   , @IsActive
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
	END
ELSE
BEGIN
	UPDATE
	      [dbo].[tblCustomers_MetaPartnerPhone]
	SET
	     [LastModifiedByUserID] = @LastModifiedByUserID
	   , [LastModifiedDate] = getdate()
	   , [MetaPartnerPhoneID] = @MetaPartnerPhoneID
	   , [PhoneNumber] = @PhoneNumber
	   , [MetaPartnerID] = @MetaPartnerID
	   , [PIN] = @PIN
	   , [CarrierMetaPartnerID] = @CarrierMetaPartnerID
	   , [Rank] = @Rank
	   , [IsActive] = @IsActive
	WHERE [MetaPartnerPhoneID] =  @MetaPartnerPhoneID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

	SET  @Timestamp = @@DBTS

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spEnvironments_AddOneCountry
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @CountryCode int
	, @CountryName nvarchar(255)
	, @Description nvarchar(2000) = NULL
	, @IsActive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure inserts Country data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@CountryCode IS NULL OR @CountryName IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF EXISTS (SELECT [CountryCode] FROM [dbo].[tlkpEnvironments_Country] WHERE [CountryCode] =  @CountryCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	INSERT
	      [dbo].[tlkpEnvironments_Country]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [CountryCode]
	   , [CountryName]
	   , [Description]
	   , [IsActive]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @CountryCode
	   , @CountryName
	   , @Description
	   , @IsActive
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spEnvironments_AddOneDateFormat
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @DateFormatCode int
	, @DateFormatName nvarchar(255)
	, @DataFormatString nvarchar(255)
	, @Description nvarchar(2000) = NULL
	, @IsActive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure inserts DateFormat data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@DateFormatCode IS NULL OR @DateFormatName IS NULL OR @DataFormatString IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF EXISTS (SELECT [DateFormatCode] FROM [dbo].[tlkpEnvironments_DateFormat] WHERE [DateFormatCode] =  @DateFormatCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	INSERT
	      [dbo].[tlkpEnvironments_DateFormat]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [DateFormatCode]
	   , [DateFormatName]
	   , [DataFormatString]
	   , [Description]
	   , [IsActive]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @DateFormatCode
	   , @DateFormatName
	   , @DataFormatString
	   , @Description
	   , @IsActive
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spEnvironments_AddOneLocale
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @LocaleCode int
	, @LocaleName nvarchar(255)
	, @Description nvarchar(2000) = NULL
	, @IsActive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure inserts Locale data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@LocaleCode IS NULL OR @LocaleName IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF EXISTS (SELECT [LocaleCode] FROM [dbo].[tlkpEnvironments_Locale] WHERE [LocaleCode] =  @LocaleCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	INSERT
	      [dbo].[tlkpEnvironments_Locale]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [LocaleCode]
	   , [LocaleName]
	   , [Description]
	   , [IsActive]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @LocaleCode
	   , @LocaleName
	   , @Description
	   , @IsActive
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spEnvironments_DeleteOneCountry
	  @SqlErrorNumber int = 0 OUTPUT
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @CountryCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes Country data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@CountryCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [CountryCode] FROM [dbo].[tlkpEnvironments_Country] WHERE [CountryCode] =  @CountryCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [CountryCode] FROM [dbo].[tlkpEnvironments_Country] WHERE [CountryCode] =  @CountryCode AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tlkpEnvironments_Country]
	WHERE [CountryCode] =  @CountryCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spEnvironments_DeleteOneDateFormat
	  @SqlErrorNumber int = 0 OUTPUT
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @DateFormatCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes DateFormat data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@DateFormatCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [DateFormatCode] FROM [dbo].[tlkpEnvironments_DateFormat] WHERE [DateFormatCode] =  @DateFormatCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [DateFormatCode] FROM [dbo].[tlkpEnvironments_DateFormat] WHERE [DateFormatCode] =  @DateFormatCode AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tlkpEnvironments_DateFormat]
	WHERE [DateFormatCode] =  @DateFormatCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spEnvironments_DeleteOneLocale
	  @SqlErrorNumber int = 0 OUTPUT
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @LocaleCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes Locale data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@LocaleCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [LocaleCode] FROM [dbo].[tlkpEnvironments_Locale] WHERE [LocaleCode] =  @LocaleCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [LocaleCode] FROM [dbo].[tlkpEnvironments_Locale] WHERE [LocaleCode] =  @LocaleCode AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tlkpEnvironments_Locale]
	WHERE [LocaleCode] =  @LocaleCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spEnvironments_GetAllCountryData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'CountryCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all Country data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='CountryCode'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  Country1.[CountryCode]
		, Country1.[CountryName]
		, Country1.[Description]
		, Country1.[IsActive]
		, Country1.[CreatedByUserID]
		, Country1.[CreatedDate]
		, Country1.[LastModifiedByUserID]
		, Country1.[LastModifiedDate]
		, Country1.[Timestamp]
	FROM
	      [dbo].[tlkpEnvironments_Country] Country1
	WHERE 
		Country1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Country1.[IsActive] ELSE 1 END

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  Country1.[CountryCode]
		, Country1.[CountryName]
		, Country1.[Description]
		, Country1.[IsActive]
		, Country1.[CreatedByUserID]
		, Country1.[CreatedDate]
		, Country1.[LastModifiedByUserID]
		, Country1.[LastModifiedDate]
		, Country1.[Timestamp]
	FROM
	      [dbo].[tlkpEnvironments_Country] Country1
	WHERE 
		Country1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Country1.[IsActive] ELSE 1 END

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CountryCode' THEN Country1.[CountryCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CountryCode' THEN Country1.[CountryCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CountryName' THEN Country1.[CountryName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CountryName' THEN Country1.[CountryName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Country1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Country1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Country1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Country1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Country1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Country1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Country1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Country1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Country1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Country1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Country1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Country1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Country1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Country1.[Timestamp] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spEnvironments_GetAllDateFormatData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'DateFormatCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all DateFormat data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='DateFormatCode'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  DateFormat1.[DateFormatCode]
		, DateFormat1.[DateFormatName]
		, DateFormat1.[DataFormatString]
		, DateFormat1.[Description]
		, DateFormat1.[IsActive]
		, DateFormat1.[CreatedByUserID]
		, DateFormat1.[CreatedDate]
		, DateFormat1.[LastModifiedByUserID]
		, DateFormat1.[LastModifiedDate]
		, DateFormat1.[Timestamp]
	FROM
	      [dbo].[tlkpEnvironments_DateFormat] DateFormat1
	WHERE 
		DateFormat1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN DateFormat1.[IsActive] ELSE 1 END

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  DateFormat1.[DateFormatCode]
		, DateFormat1.[DateFormatName]
		, DateFormat1.[DataFormatString]
		, DateFormat1.[Description]
		, DateFormat1.[IsActive]
		, DateFormat1.[CreatedByUserID]
		, DateFormat1.[CreatedDate]
		, DateFormat1.[LastModifiedByUserID]
		, DateFormat1.[LastModifiedDate]
		, DateFormat1.[Timestamp]
	FROM
	      [dbo].[tlkpEnvironments_DateFormat] DateFormat1
	WHERE 
		DateFormat1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN DateFormat1.[IsActive] ELSE 1 END

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN DateFormat1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN DateFormat1.[DateFormatCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatName' THEN DateFormat1.[DateFormatName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DataFormatString' THEN DateFormat1.[DataFormatString] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DataFormatString' THEN DateFormat1.[DataFormatString] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN DateFormat1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN DateFormat1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN DateFormat1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN DateFormat1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN DateFormat1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN DateFormat1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN DateFormat1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN DateFormat1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN DateFormat1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN DateFormat1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN DateFormat1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN DateFormat1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN DateFormat1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN DateFormat1.[Timestamp] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spEnvironments_GetAllLocaleData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'LocaleCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all Locale data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='LocaleCode'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  Locale1.[LocaleCode]
		, Locale1.[LocaleName]
		, Locale1.[Description]
		, Locale1.[IsActive]
		, Locale1.[CreatedByUserID]
		, Locale1.[CreatedDate]
		, Locale1.[LastModifiedByUserID]
		, Locale1.[LastModifiedDate]
		, Locale1.[Timestamp]
	FROM
	      [dbo].[tlkpEnvironments_Locale] Locale1
	WHERE 
		Locale1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Locale1.[IsActive] ELSE 1 END

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  Locale1.[LocaleCode]
		, Locale1.[LocaleName]
		, Locale1.[Description]
		, Locale1.[IsActive]
		, Locale1.[CreatedByUserID]
		, Locale1.[CreatedDate]
		, Locale1.[LastModifiedByUserID]
		, Locale1.[LastModifiedDate]
		, Locale1.[Timestamp]
	FROM
	      [dbo].[tlkpEnvironments_Locale] Locale1
	WHERE 
		Locale1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Locale1.[IsActive] ELSE 1 END

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN Locale1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN Locale1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Locale1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Locale1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Locale1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Locale1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Locale1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Locale1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Locale1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Locale1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Locale1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Locale1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Locale1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Locale1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Locale1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Locale1.[Timestamp] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spEnvironments_GetOneCountry
	  @SqlErrorNumber int = 0 OUTPUT
	, @CountryCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single Country by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@CountryCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  Country1.[CountryCode]
		, Country1.[CountryName]
		, Country1.[Description]
		, Country1.[IsActive]
		, Country1.[CreatedByUserID]
		, Country1.[CreatedDate]
		, Country1.[LastModifiedByUserID]
		, Country1.[LastModifiedDate]
		, Country1.[Timestamp]
	FROM
	      [dbo].[tlkpEnvironments_Country] Country1
	WHERE Country1.[CountryCode] =  @CountryCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spEnvironments_GetOneDateFormat
	  @SqlErrorNumber int = 0 OUTPUT
	, @DateFormatCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single DateFormat by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@DateFormatCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  DateFormat1.[DateFormatCode]
		, DateFormat1.[DateFormatName]
		, DateFormat1.[DataFormatString]
		, DateFormat1.[Description]
		, DateFormat1.[IsActive]
		, DateFormat1.[CreatedByUserID]
		, DateFormat1.[CreatedDate]
		, DateFormat1.[LastModifiedByUserID]
		, DateFormat1.[LastModifiedDate]
		, DateFormat1.[Timestamp]
	FROM
	      [dbo].[tlkpEnvironments_DateFormat] DateFormat1
	WHERE DateFormat1.[DateFormatCode] =  @DateFormatCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spEnvironments_GetOneLocale
	  @SqlErrorNumber int = 0 OUTPUT
	, @LocaleCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single Locale by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@LocaleCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  Locale1.[LocaleCode]
		, Locale1.[LocaleName]
		, Locale1.[Description]
		, Locale1.[IsActive]
		, Locale1.[CreatedByUserID]
		, Locale1.[CreatedDate]
		, Locale1.[LastModifiedByUserID]
		, Locale1.[LastModifiedDate]
		, Locale1.[Timestamp]
	FROM
	      [dbo].[tlkpEnvironments_Locale] Locale1
	WHERE Locale1.[LocaleCode] =  @LocaleCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spEnvironments_UpdateOneCountry
	  @SqlErrorNumber int = 0 OUTPUT
	, @LastModifiedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @CountryCode int
	, @CountryName nvarchar(255)
	, @Description nvarchar(2000) = NULL
	, @IsActive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure updates Country data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@CountryCode IS NULL OR @CountryName IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [CountryCode] FROM [dbo].[tlkpEnvironments_Country] WHERE [CountryCode] =  @CountryCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [CountryCode] FROM [dbo].[tlkpEnvironments_Country] WHERE [CountryCode] =  @CountryCode AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	UPDATE
	      [dbo].[tlkpEnvironments_Country]
	SET
	     [LastModifiedByUserID] = @LastModifiedByUserID
	   , [LastModifiedDate] = getdate()
	   , [CountryCode] = @CountryCode
	   , [CountryName] = @CountryName
	   , [Description] = @Description
	   , [IsActive] = @IsActive
	WHERE [CountryCode] =  @CountryCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

	SET  @Timestamp = @@DBTS

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spEnvironments_UpdateOneDateFormat
	  @SqlErrorNumber int = 0 OUTPUT
	, @LastModifiedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @DateFormatCode int
	, @DateFormatName nvarchar(255)
	, @DataFormatString nvarchar(255)
	, @Description nvarchar(2000) = NULL
	, @IsActive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure updates DateFormat data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@DateFormatCode IS NULL OR @DateFormatName IS NULL OR @DataFormatString IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [DateFormatCode] FROM [dbo].[tlkpEnvironments_DateFormat] WHERE [DateFormatCode] =  @DateFormatCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [DateFormatCode] FROM [dbo].[tlkpEnvironments_DateFormat] WHERE [DateFormatCode] =  @DateFormatCode AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	UPDATE
	      [dbo].[tlkpEnvironments_DateFormat]
	SET
	     [LastModifiedByUserID] = @LastModifiedByUserID
	   , [LastModifiedDate] = getdate()
	   , [DateFormatCode] = @DateFormatCode
	   , [DateFormatName] = @DateFormatName
	   , [DataFormatString] = @DataFormatString
	   , [Description] = @Description
	   , [IsActive] = @IsActive
	WHERE [DateFormatCode] =  @DateFormatCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

	SET  @Timestamp = @@DBTS

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spEnvironments_UpdateOneLocale
	  @SqlErrorNumber int = 0 OUTPUT
	, @LastModifiedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @LocaleCode int
	, @LocaleName nvarchar(255)
	, @Description nvarchar(2000) = NULL
	, @IsActive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure updates Locale data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@LocaleCode IS NULL OR @LocaleName IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [LocaleCode] FROM [dbo].[tlkpEnvironments_Locale] WHERE [LocaleCode] =  @LocaleCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [LocaleCode] FROM [dbo].[tlkpEnvironments_Locale] WHERE [LocaleCode] =  @LocaleCode AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	UPDATE
	      [dbo].[tlkpEnvironments_Locale]
	SET
	     [LastModifiedByUserID] = @LastModifiedByUserID
	   , [LastModifiedDate] = getdate()
	   , [LocaleCode] = @LocaleCode
	   , [LocaleName] = @LocaleName
	   , [Description] = @Description
	   , [IsActive] = @IsActive
	WHERE [LocaleCode] =  @LocaleCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

	SET  @Timestamp = @@DBTS

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spEvents_AddOneEvent
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @EventCode int
	, @EventName nvarchar(255)
	, @EventTypeCode int
	, @Description nvarchar(2000) = NULL
	, @IsActive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure inserts Event data.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@EventCode IS NULL OR @EventName IS NULL OR @EventTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF EXISTS (SELECT [EventCode] FROM [dbo].[tblEvents_Event] WHERE [EventCode] =  @EventCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	INSERT
	      [dbo].[tblEvents_Event]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [EventCode]
	   , [EventName]
	   , [EventTypeCode]
	   , [Description]
	   , [IsActive]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @EventCode
	   , @EventName
	   , @EventTypeCode
	   , @Description
	   , @IsActive
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spEvents_AddOneEventAttribute
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @BaseAttributeID uniqueidentifier
	, @AttributeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure inserts EventAttribute data.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@BaseAttributeID IS NULL OR @AttributeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF EXISTS (SELECT [BaseAttributeID] FROM [dbo].[tblEvents_EventAttribute] WHERE [BaseAttributeID] =  @BaseAttributeID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	INSERT
	      [dbo].[tblEvents_EventAttribute]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [BaseAttributeID]
	   , [AttributeCode]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @BaseAttributeID
	   , @AttributeCode
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spEvents_AddOneEventType
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @EventTypeCode int
	, @EventTypeName nvarchar(255)
	, @Description nvarchar(2000) = NULL
	, @IsActive bit = 1
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure inserts EventType data.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@EventTypeCode IS NULL OR @EventTypeName IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF EXISTS (SELECT [EventTypeCode] FROM [dbo].[tlkpEvents_EventType] WHERE [EventTypeCode] =  @EventTypeCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	INSERT
	      [dbo].[tlkpEvents_EventType]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [EventTypeCode]
	   , [EventTypeName]
	   , [Description]
	   , [IsActive]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @EventTypeCode
	   , @EventTypeName
	   , @Description
	   , @IsActive
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spEvents_AddOneSpecificEventAttribute
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @EventCode int
	, @BaseAttributeID uniqueidentifier
	, @Rank int = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure inserts SpecificEventAttribute data.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@EventCode IS NULL OR @BaseAttributeID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF EXISTS (SELECT [EventCode], [BaseAttributeID] FROM [dbo].[trelEvents_SpecificEventAttribute] WHERE [EventCode] =  @EventCode AND [BaseAttributeID] =  @BaseAttributeID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	INSERT
	      [dbo].[trelEvents_SpecificEventAttribute]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [EventCode]
	   , [BaseAttributeID]
	   , [Rank]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @EventCode
	   , @BaseAttributeID
	   , @Rank
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spEvents_DeleteAllEventAttributeDataByAttributeTypeCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @AttributeTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all EventAttribute data by a key.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AttributeTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblEvents_EventAttribute]
	WHERE [BaseAttributeID] IN (SELECT [BaseAttributeID] FROM [dbo].[tblCore_BaseAttribute] WHERE [AttributeTypeCode] =  @AttributeTypeCode)

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spEvents_DeleteAllEventAttributeDataByBaseAttributeID
	  @SqlErrorNumber int = 0 OUTPUT
	, @BaseAttributeID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all EventAttribute data by a key.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@BaseAttributeID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblEvents_EventAttribute]
	WHERE [BaseAttributeID] =  @BaseAttributeID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spEvents_DeleteAllEventAttributeDataByDataTypeCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @DataTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all EventAttribute data by a key.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@DataTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblEvents_EventAttribute]
	WHERE [BaseAttributeID] IN (SELECT [BaseAttributeID] FROM [dbo].[tblCore_BaseAttribute] WHERE [DataTypeCode] =  @DataTypeCode)

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spEvents_DeleteAllEventDataByEventTypeCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @EventTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all Event data by a key.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@EventTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblEvents_Event]
	WHERE [EventTypeCode] =  @EventTypeCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spEvents_DeleteAllSpecificEventAttributeDataByBaseAttributeID
	  @SqlErrorNumber int = 0 OUTPUT
	, @BaseAttributeID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all SpecificEventAttribute data by a key.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@BaseAttributeID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[trelEvents_SpecificEventAttribute]
	WHERE [BaseAttributeID] =  @BaseAttributeID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spEvents_DeleteAllSpecificEventAttributeDataByEventCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @EventCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all SpecificEventAttribute data by a key.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@EventCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[trelEvents_SpecificEventAttribute]
	WHERE [EventCode] =  @EventCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spEvents_DeleteOneEvent
	  @SqlErrorNumber int = 0 OUTPUT
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @EventCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes Event data.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@EventCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [EventCode] FROM [dbo].[tblEvents_Event] WHERE [EventCode] =  @EventCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [EventCode] FROM [dbo].[tblEvents_Event] WHERE [EventCode] =  @EventCode AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblEvents_Event]
	WHERE [EventCode] =  @EventCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spEvents_DeleteOneEventAttribute
	  @SqlErrorNumber int = 0 OUTPUT
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @BaseAttributeID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes EventAttribute data.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@BaseAttributeID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [BaseAttributeID] FROM [dbo].[tblEvents_EventAttribute] WHERE [BaseAttributeID] =  @BaseAttributeID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [BaseAttributeID] FROM [dbo].[tblEvents_EventAttribute] WHERE [BaseAttributeID] =  @BaseAttributeID AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblEvents_EventAttribute]
	WHERE [BaseAttributeID] =  @BaseAttributeID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spEvents_DeleteOneEventType
	  @SqlErrorNumber int = 0 OUTPUT
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @EventTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes EventType data.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@EventTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [EventTypeCode] FROM [dbo].[tlkpEvents_EventType] WHERE [EventTypeCode] =  @EventTypeCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [EventTypeCode] FROM [dbo].[tlkpEvents_EventType] WHERE [EventTypeCode] =  @EventTypeCode AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tlkpEvents_EventType]
	WHERE [EventTypeCode] =  @EventTypeCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spEvents_DeleteOneSpecificEventAttribute
	  @SqlErrorNumber int = 0 OUTPUT
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @EventCode int
	, @BaseAttributeID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes SpecificEventAttribute data.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@EventCode IS NULL OR @BaseAttributeID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [EventCode], [BaseAttributeID] FROM [dbo].[trelEvents_SpecificEventAttribute] WHERE [EventCode] =  @EventCode AND [BaseAttributeID] =  @BaseAttributeID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [EventCode], [BaseAttributeID] FROM [dbo].[trelEvents_SpecificEventAttribute] WHERE [EventCode] =  @EventCode AND [BaseAttributeID] =  @BaseAttributeID AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[trelEvents_SpecificEventAttribute]
	WHERE [EventCode] =  @EventCode AND [BaseAttributeID] =  @BaseAttributeID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spEvents_GetAllEventAttributeData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'BaseAttributeID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all EventAttribute data.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='BaseAttributeID'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  EventAttribute1.[BaseAttributeID]
		, EventAttribute1.[AttributeCode]
		, EventAttribute1.[CreatedByUserID]
		, EventAttribute1.[CreatedDate]
		, EventAttribute1.[LastModifiedByUserID]
		, EventAttribute1.[LastModifiedDate]
		, EventAttribute1.[Timestamp]
		, BaseAttribute1.[AttributeName]
		, BaseAttribute1.[AttributeTypeCode]
		, BaseAttribute1.[DataTypeCode]
		, BaseAttribute1.[Description]
		, BaseAttribute1.[IsActive]
		, AttributeType1.[AttributeTypeName]
		, DataType1.[DataTypeName]
	FROM
	      [dbo].[tblEvents_EventAttribute] EventAttribute1
	INNER JOIN [dbo].[tblCore_BaseAttribute] BaseAttribute1 ON BaseAttribute1.[BaseAttributeID]=EventAttribute1.[BaseAttributeID]
	INNER JOIN [dbo].[tlkpCore_AttributeType] AttributeType1 ON AttributeType1.[AttributeTypeCode]=BaseAttribute1.[AttributeTypeCode]
	INNER JOIN [dbo].[tlkpCore_DataType] DataType1 ON DataType1.[DataTypeCode]=BaseAttribute1.[DataTypeCode]
	WHERE 
		BaseAttribute1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN BaseAttribute1.[IsActive] ELSE 1 END

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  EventAttribute1.[BaseAttributeID]
		, EventAttribute1.[AttributeCode]
		, EventAttribute1.[CreatedByUserID]
		, EventAttribute1.[CreatedDate]
		, EventAttribute1.[LastModifiedByUserID]
		, EventAttribute1.[LastModifiedDate]
		, EventAttribute1.[Timestamp]
		, BaseAttribute1.[AttributeName]
		, BaseAttribute1.[AttributeTypeCode]
		, BaseAttribute1.[DataTypeCode]
		, BaseAttribute1.[Description]
		, BaseAttribute1.[IsActive]
		, AttributeType1.[AttributeTypeName]
		, DataType1.[DataTypeName]
	FROM
	      [dbo].[tblEvents_EventAttribute] EventAttribute1
	INNER JOIN [dbo].[tblCore_BaseAttribute] BaseAttribute1 ON BaseAttribute1.[BaseAttributeID]=EventAttribute1.[BaseAttributeID]
	INNER JOIN [dbo].[tlkpCore_AttributeType] AttributeType1 ON AttributeType1.[AttributeTypeCode]=BaseAttribute1.[AttributeTypeCode]
	INNER JOIN [dbo].[tlkpCore_DataType] DataType1 ON DataType1.[DataTypeCode]=BaseAttribute1.[DataTypeCode]
	WHERE 
		BaseAttribute1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN BaseAttribute1.[IsActive] ELSE 1 END

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BaseAttributeID' THEN EventAttribute1.[BaseAttributeID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BaseAttributeID' THEN EventAttribute1.[BaseAttributeID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeCode' THEN EventAttribute1.[AttributeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeCode' THEN EventAttribute1.[AttributeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN EventAttribute1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN EventAttribute1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN EventAttribute1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN EventAttribute1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN EventAttribute1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN EventAttribute1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN EventAttribute1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN EventAttribute1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN EventAttribute1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN EventAttribute1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeName' THEN BaseAttribute1.[AttributeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeName' THEN BaseAttribute1.[AttributeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeTypeCode' THEN BaseAttribute1.[AttributeTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeTypeCode' THEN BaseAttribute1.[AttributeTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DataTypeCode' THEN BaseAttribute1.[DataTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DataTypeCode' THEN BaseAttribute1.[DataTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN BaseAttribute1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN BaseAttribute1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN BaseAttribute1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN BaseAttribute1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeTypeName' THEN AttributeType1.[AttributeTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeTypeName' THEN AttributeType1.[AttributeTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DataTypeName' THEN DataType1.[DataTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DataTypeName' THEN DataType1.[DataTypeName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spEvents_GetAllEventAttributeDataByAttributeTypeCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'AttributeTypeCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @AttributeTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all EventAttribute data by a key.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='AttributeTypeCode'

/*
** parameter validation
*/
IF (@AttributeTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  EventAttribute1.[BaseAttributeID]
		, EventAttribute1.[AttributeCode]
		, EventAttribute1.[CreatedByUserID]
		, EventAttribute1.[CreatedDate]
		, EventAttribute1.[LastModifiedByUserID]
		, EventAttribute1.[LastModifiedDate]
		, EventAttribute1.[Timestamp]
		, BaseAttribute1.[AttributeName]
		, BaseAttribute1.[AttributeTypeCode]
		, BaseAttribute1.[DataTypeCode]
		, BaseAttribute1.[Description]
		, BaseAttribute1.[IsActive]
		, AttributeType1.[AttributeTypeName]
		, DataType1.[DataTypeName]
	FROM
	      [dbo].[tblEvents_EventAttribute] EventAttribute1
	INNER JOIN [dbo].[tblCore_BaseAttribute] BaseAttribute1 ON BaseAttribute1.[BaseAttributeID]=EventAttribute1.[BaseAttributeID]
	INNER JOIN [dbo].[tlkpCore_AttributeType] AttributeType1 ON AttributeType1.[AttributeTypeCode]=BaseAttribute1.[AttributeTypeCode]
	INNER JOIN [dbo].[tlkpCore_DataType] DataType1 ON DataType1.[DataTypeCode]=BaseAttribute1.[DataTypeCode]
	WHERE 
		BaseAttribute1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN BaseAttribute1.[IsActive] ELSE 1 END
		AND BaseAttribute1.[AttributeTypeCode] = @AttributeTypeCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  EventAttribute1.[BaseAttributeID]
		, EventAttribute1.[AttributeCode]
		, EventAttribute1.[CreatedByUserID]
		, EventAttribute1.[CreatedDate]
		, EventAttribute1.[LastModifiedByUserID]
		, EventAttribute1.[LastModifiedDate]
		, EventAttribute1.[Timestamp]
		, BaseAttribute1.[AttributeName]
		, BaseAttribute1.[AttributeTypeCode]
		, BaseAttribute1.[DataTypeCode]
		, BaseAttribute1.[Description]
		, BaseAttribute1.[IsActive]
		, AttributeType1.[AttributeTypeName]
		, DataType1.[DataTypeName]
	FROM
	      [dbo].[tblEvents_EventAttribute] EventAttribute1
	INNER JOIN [dbo].[tblCore_BaseAttribute] BaseAttribute1 ON BaseAttribute1.[BaseAttributeID]=EventAttribute1.[BaseAttributeID]
	INNER JOIN [dbo].[tlkpCore_AttributeType] AttributeType1 ON AttributeType1.[AttributeTypeCode]=BaseAttribute1.[AttributeTypeCode]
	INNER JOIN [dbo].[tlkpCore_DataType] DataType1 ON DataType1.[DataTypeCode]=BaseAttribute1.[DataTypeCode]
	WHERE 
		BaseAttribute1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN BaseAttribute1.[IsActive] ELSE 1 END
		AND BaseAttribute1.[AttributeTypeCode] = @AttributeTypeCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BaseAttributeID' THEN EventAttribute1.[BaseAttributeID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BaseAttributeID' THEN EventAttribute1.[BaseAttributeID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeCode' THEN EventAttribute1.[AttributeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeCode' THEN EventAttribute1.[AttributeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN EventAttribute1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN EventAttribute1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN EventAttribute1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN EventAttribute1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN EventAttribute1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN EventAttribute1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN EventAttribute1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN EventAttribute1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN EventAttribute1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN EventAttribute1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeName' THEN BaseAttribute1.[AttributeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeName' THEN BaseAttribute1.[AttributeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeTypeCode' THEN BaseAttribute1.[AttributeTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeTypeCode' THEN BaseAttribute1.[AttributeTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DataTypeCode' THEN BaseAttribute1.[DataTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DataTypeCode' THEN BaseAttribute1.[DataTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN BaseAttribute1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN BaseAttribute1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN BaseAttribute1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN BaseAttribute1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeTypeName' THEN AttributeType1.[AttributeTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeTypeName' THEN AttributeType1.[AttributeTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DataTypeName' THEN DataType1.[DataTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DataTypeName' THEN DataType1.[DataTypeName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spEvents_GetAllEventAttributeDataByBaseAttributeID
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'BaseAttributeID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @BaseAttributeID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all EventAttribute data by a key.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='BaseAttributeID'

/*
** parameter validation
*/
IF (@BaseAttributeID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  EventAttribute1.[BaseAttributeID]
		, EventAttribute1.[AttributeCode]
		, EventAttribute1.[CreatedByUserID]
		, EventAttribute1.[CreatedDate]
		, EventAttribute1.[LastModifiedByUserID]
		, EventAttribute1.[LastModifiedDate]
		, EventAttribute1.[Timestamp]
		, BaseAttribute1.[AttributeName]
		, BaseAttribute1.[AttributeTypeCode]
		, BaseAttribute1.[DataTypeCode]
		, BaseAttribute1.[Description]
		, BaseAttribute1.[IsActive]
		, AttributeType1.[AttributeTypeName]
		, DataType1.[DataTypeName]
	FROM
	      [dbo].[tblEvents_EventAttribute] EventAttribute1
	INNER JOIN [dbo].[tblCore_BaseAttribute] BaseAttribute1 ON BaseAttribute1.[BaseAttributeID]=EventAttribute1.[BaseAttributeID]
	INNER JOIN [dbo].[tlkpCore_AttributeType] AttributeType1 ON AttributeType1.[AttributeTypeCode]=BaseAttribute1.[AttributeTypeCode]
	INNER JOIN [dbo].[tlkpCore_DataType] DataType1 ON DataType1.[DataTypeCode]=BaseAttribute1.[DataTypeCode]
	WHERE 
		BaseAttribute1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN BaseAttribute1.[IsActive] ELSE 1 END
		AND EventAttribute1.[BaseAttributeID] = @BaseAttributeID

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  EventAttribute1.[BaseAttributeID]
		, EventAttribute1.[AttributeCode]
		, EventAttribute1.[CreatedByUserID]
		, EventAttribute1.[CreatedDate]
		, EventAttribute1.[LastModifiedByUserID]
		, EventAttribute1.[LastModifiedDate]
		, EventAttribute1.[Timestamp]
		, BaseAttribute1.[AttributeName]
		, BaseAttribute1.[AttributeTypeCode]
		, BaseAttribute1.[DataTypeCode]
		, BaseAttribute1.[Description]
		, BaseAttribute1.[IsActive]
		, AttributeType1.[AttributeTypeName]
		, DataType1.[DataTypeName]
	FROM
	      [dbo].[tblEvents_EventAttribute] EventAttribute1
	INNER JOIN [dbo].[tblCore_BaseAttribute] BaseAttribute1 ON BaseAttribute1.[BaseAttributeID]=EventAttribute1.[BaseAttributeID]
	INNER JOIN [dbo].[tlkpCore_AttributeType] AttributeType1 ON AttributeType1.[AttributeTypeCode]=BaseAttribute1.[AttributeTypeCode]
	INNER JOIN [dbo].[tlkpCore_DataType] DataType1 ON DataType1.[DataTypeCode]=BaseAttribute1.[DataTypeCode]
	WHERE 
		BaseAttribute1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN BaseAttribute1.[IsActive] ELSE 1 END
		AND EventAttribute1.[BaseAttributeID] = @BaseAttributeID

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BaseAttributeID' THEN EventAttribute1.[BaseAttributeID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BaseAttributeID' THEN EventAttribute1.[BaseAttributeID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeCode' THEN EventAttribute1.[AttributeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeCode' THEN EventAttribute1.[AttributeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN EventAttribute1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN EventAttribute1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN EventAttribute1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN EventAttribute1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN EventAttribute1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN EventAttribute1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN EventAttribute1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN EventAttribute1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN EventAttribute1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN EventAttribute1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeName' THEN BaseAttribute1.[AttributeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeName' THEN BaseAttribute1.[AttributeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeTypeCode' THEN BaseAttribute1.[AttributeTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeTypeCode' THEN BaseAttribute1.[AttributeTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DataTypeCode' THEN BaseAttribute1.[DataTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DataTypeCode' THEN BaseAttribute1.[DataTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN BaseAttribute1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN BaseAttribute1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN BaseAttribute1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN BaseAttribute1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeTypeName' THEN AttributeType1.[AttributeTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeTypeName' THEN AttributeType1.[AttributeTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DataTypeName' THEN DataType1.[DataTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DataTypeName' THEN DataType1.[DataTypeName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spEvents_GetAllEventAttributeDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'AttributeName'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @AttributeName nvarchar(100)
	, @AttributeTypeCode int
	, @DataTypeCode int
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all EventAttribute data by criteria.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='AttributeName'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  EventAttribute1.[BaseAttributeID]
		, EventAttribute1.[AttributeCode]
		, EventAttribute1.[CreatedByUserID]
		, EventAttribute1.[CreatedDate]
		, EventAttribute1.[LastModifiedByUserID]
		, EventAttribute1.[LastModifiedDate]
		, EventAttribute1.[Timestamp]
		, BaseAttribute1.[AttributeName]
		, BaseAttribute1.[AttributeTypeCode]
		, BaseAttribute1.[DataTypeCode]
		, BaseAttribute1.[Description]
		, BaseAttribute1.[IsActive]
		, AttributeType1.[AttributeTypeName]
		, DataType1.[DataTypeName]
	FROM
	      [dbo].[tblEvents_EventAttribute] EventAttribute1
	INNER JOIN [dbo].[tblCore_BaseAttribute] BaseAttribute1 ON BaseAttribute1.[BaseAttributeID]=EventAttribute1.[BaseAttributeID]
	INNER JOIN [dbo].[tlkpCore_AttributeType] AttributeType1 ON AttributeType1.[AttributeTypeCode]=BaseAttribute1.[AttributeTypeCode]
	INNER JOIN [dbo].[tlkpCore_DataType] DataType1 ON DataType1.[DataTypeCode]=BaseAttribute1.[DataTypeCode]
	WHERE 
		BaseAttribute1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN BaseAttribute1.[IsActive] ELSE 1 END
		AND (@AttributeName IS NULL OR BaseAttribute1.[AttributeName] like '%' + @AttributeName + '%')
		AND (@AttributeTypeCode IS NULL OR BaseAttribute1.[AttributeTypeCode] = @AttributeTypeCode)
		AND (@DataTypeCode IS NULL OR BaseAttribute1.[DataTypeCode] = @DataTypeCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (BaseAttribute1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (BaseAttribute1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  EventAttribute1.[BaseAttributeID]
		, EventAttribute1.[AttributeCode]
		, EventAttribute1.[CreatedByUserID]
		, EventAttribute1.[CreatedDate]
		, EventAttribute1.[LastModifiedByUserID]
		, EventAttribute1.[LastModifiedDate]
		, EventAttribute1.[Timestamp]
		, BaseAttribute1.[AttributeName]
		, BaseAttribute1.[AttributeTypeCode]
		, BaseAttribute1.[DataTypeCode]
		, BaseAttribute1.[Description]
		, BaseAttribute1.[IsActive]
		, AttributeType1.[AttributeTypeName]
		, DataType1.[DataTypeName]
	FROM
	      [dbo].[tblEvents_EventAttribute] EventAttribute1
	INNER JOIN [dbo].[tblCore_BaseAttribute] BaseAttribute1 ON BaseAttribute1.[BaseAttributeID]=EventAttribute1.[BaseAttributeID]
	INNER JOIN [dbo].[tlkpCore_AttributeType] AttributeType1 ON AttributeType1.[AttributeTypeCode]=BaseAttribute1.[AttributeTypeCode]
	INNER JOIN [dbo].[tlkpCore_DataType] DataType1 ON DataType1.[DataTypeCode]=BaseAttribute1.[DataTypeCode]
	WHERE 
		BaseAttribute1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN BaseAttribute1.[IsActive] ELSE 1 END
		AND (@AttributeName IS NULL OR BaseAttribute1.[AttributeName] like '%' + @AttributeName + '%')
		AND (@AttributeTypeCode IS NULL OR BaseAttribute1.[AttributeTypeCode] = @AttributeTypeCode)
		AND (@DataTypeCode IS NULL OR BaseAttribute1.[DataTypeCode] = @DataTypeCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (BaseAttribute1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (BaseAttribute1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BaseAttributeID' THEN EventAttribute1.[BaseAttributeID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BaseAttributeID' THEN EventAttribute1.[BaseAttributeID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeCode' THEN EventAttribute1.[AttributeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeCode' THEN EventAttribute1.[AttributeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN EventAttribute1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN EventAttribute1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN EventAttribute1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN EventAttribute1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN EventAttribute1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN EventAttribute1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN EventAttribute1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN EventAttribute1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN EventAttribute1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN EventAttribute1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeName' THEN BaseAttribute1.[AttributeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeName' THEN BaseAttribute1.[AttributeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeTypeCode' THEN BaseAttribute1.[AttributeTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeTypeCode' THEN BaseAttribute1.[AttributeTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DataTypeCode' THEN BaseAttribute1.[DataTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DataTypeCode' THEN BaseAttribute1.[DataTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN BaseAttribute1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN BaseAttribute1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN BaseAttribute1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN BaseAttribute1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeTypeName' THEN AttributeType1.[AttributeTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeTypeName' THEN AttributeType1.[AttributeTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DataTypeName' THEN DataType1.[DataTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DataTypeName' THEN DataType1.[DataTypeName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spEvents_GetAllEventAttributeDataByDataTypeCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'DataTypeCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @DataTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all EventAttribute data by a key.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='DataTypeCode'

/*
** parameter validation
*/
IF (@DataTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  EventAttribute1.[BaseAttributeID]
		, EventAttribute1.[AttributeCode]
		, EventAttribute1.[CreatedByUserID]
		, EventAttribute1.[CreatedDate]
		, EventAttribute1.[LastModifiedByUserID]
		, EventAttribute1.[LastModifiedDate]
		, EventAttribute1.[Timestamp]
		, BaseAttribute1.[AttributeName]
		, BaseAttribute1.[AttributeTypeCode]
		, BaseAttribute1.[DataTypeCode]
		, BaseAttribute1.[Description]
		, BaseAttribute1.[IsActive]
		, AttributeType1.[AttributeTypeName]
		, DataType1.[DataTypeName]
	FROM
	      [dbo].[tblEvents_EventAttribute] EventAttribute1
	INNER JOIN [dbo].[tblCore_BaseAttribute] BaseAttribute1 ON BaseAttribute1.[BaseAttributeID]=EventAttribute1.[BaseAttributeID]
	INNER JOIN [dbo].[tlkpCore_AttributeType] AttributeType1 ON AttributeType1.[AttributeTypeCode]=BaseAttribute1.[AttributeTypeCode]
	INNER JOIN [dbo].[tlkpCore_DataType] DataType1 ON DataType1.[DataTypeCode]=BaseAttribute1.[DataTypeCode]
	WHERE 
		BaseAttribute1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN BaseAttribute1.[IsActive] ELSE 1 END
		AND BaseAttribute1.[DataTypeCode] = @DataTypeCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  EventAttribute1.[BaseAttributeID]
		, EventAttribute1.[AttributeCode]
		, EventAttribute1.[CreatedByUserID]
		, EventAttribute1.[CreatedDate]
		, EventAttribute1.[LastModifiedByUserID]
		, EventAttribute1.[LastModifiedDate]
		, EventAttribute1.[Timestamp]
		, BaseAttribute1.[AttributeName]
		, BaseAttribute1.[AttributeTypeCode]
		, BaseAttribute1.[DataTypeCode]
		, BaseAttribute1.[Description]
		, BaseAttribute1.[IsActive]
		, AttributeType1.[AttributeTypeName]
		, DataType1.[DataTypeName]
	FROM
	      [dbo].[tblEvents_EventAttribute] EventAttribute1
	INNER JOIN [dbo].[tblCore_BaseAttribute] BaseAttribute1 ON BaseAttribute1.[BaseAttributeID]=EventAttribute1.[BaseAttributeID]
	INNER JOIN [dbo].[tlkpCore_AttributeType] AttributeType1 ON AttributeType1.[AttributeTypeCode]=BaseAttribute1.[AttributeTypeCode]
	INNER JOIN [dbo].[tlkpCore_DataType] DataType1 ON DataType1.[DataTypeCode]=BaseAttribute1.[DataTypeCode]
	WHERE 
		BaseAttribute1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN BaseAttribute1.[IsActive] ELSE 1 END
		AND BaseAttribute1.[DataTypeCode] = @DataTypeCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BaseAttributeID' THEN EventAttribute1.[BaseAttributeID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BaseAttributeID' THEN EventAttribute1.[BaseAttributeID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeCode' THEN EventAttribute1.[AttributeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeCode' THEN EventAttribute1.[AttributeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN EventAttribute1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN EventAttribute1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN EventAttribute1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN EventAttribute1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN EventAttribute1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN EventAttribute1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN EventAttribute1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN EventAttribute1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN EventAttribute1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN EventAttribute1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeName' THEN BaseAttribute1.[AttributeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeName' THEN BaseAttribute1.[AttributeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeTypeCode' THEN BaseAttribute1.[AttributeTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeTypeCode' THEN BaseAttribute1.[AttributeTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DataTypeCode' THEN BaseAttribute1.[DataTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DataTypeCode' THEN BaseAttribute1.[DataTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN BaseAttribute1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN BaseAttribute1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN BaseAttribute1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN BaseAttribute1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeTypeName' THEN AttributeType1.[AttributeTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeTypeName' THEN AttributeType1.[AttributeTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DataTypeName' THEN DataType1.[DataTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DataTypeName' THEN DataType1.[DataTypeName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spEvents_GetAllEventData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'EventCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all Event data.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='EventCode'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  Event1.[EventCode]
		, Event1.[EventName]
		, Event1.[EventTypeCode]
		, Event1.[Description]
		, Event1.[IsActive]
		, Event1.[CreatedByUserID]
		, Event1.[CreatedDate]
		, Event1.[LastModifiedByUserID]
		, Event1.[LastModifiedDate]
		, Event1.[Timestamp]
		, EventType1.[EventTypeName]
	FROM
	      [dbo].[tblEvents_Event] Event1
	INNER JOIN [dbo].[tlkpEvents_EventType] EventType1 ON EventType1.[EventTypeCode]=Event1.[EventTypeCode]
	WHERE 
		Event1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Event1.[IsActive] ELSE 1 END

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  Event1.[EventCode]
		, Event1.[EventName]
		, Event1.[EventTypeCode]
		, Event1.[Description]
		, Event1.[IsActive]
		, Event1.[CreatedByUserID]
		, Event1.[CreatedDate]
		, Event1.[LastModifiedByUserID]
		, Event1.[LastModifiedDate]
		, Event1.[Timestamp]
		, EventType1.[EventTypeName]
	FROM
	      [dbo].[tblEvents_Event] Event1
	INNER JOIN [dbo].[tlkpEvents_EventType] EventType1 ON EventType1.[EventTypeCode]=Event1.[EventTypeCode]
	WHERE 
		Event1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Event1.[IsActive] ELSE 1 END

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EventCode' THEN Event1.[EventCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EventCode' THEN Event1.[EventCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EventName' THEN Event1.[EventName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EventName' THEN Event1.[EventName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EventTypeCode' THEN Event1.[EventTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EventTypeCode' THEN Event1.[EventTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Event1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Event1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Event1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Event1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Event1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Event1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Event1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Event1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Event1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Event1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Event1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Event1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Event1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Event1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EventTypeName' THEN EventType1.[EventTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EventTypeName' THEN EventType1.[EventTypeName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spEvents_GetAllEventDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'EventName'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @EventName nvarchar(255)
	, @EventTypeCode int
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all Event data by criteria.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='EventName'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  Event1.[EventCode]
		, Event1.[EventName]
		, Event1.[EventTypeCode]
		, Event1.[Description]
		, Event1.[IsActive]
		, Event1.[CreatedByUserID]
		, Event1.[CreatedDate]
		, Event1.[LastModifiedByUserID]
		, Event1.[LastModifiedDate]
		, Event1.[Timestamp]
		, EventType1.[EventTypeName]
	FROM
	      [dbo].[tblEvents_Event] Event1
	INNER JOIN [dbo].[tlkpEvents_EventType] EventType1 ON EventType1.[EventTypeCode]=Event1.[EventTypeCode]
	WHERE 
		Event1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Event1.[IsActive] ELSE 1 END
		AND (@EventName IS NULL OR Event1.[EventName] like '%' + @EventName + '%')
		AND (@EventTypeCode IS NULL OR Event1.[EventTypeCode] = @EventTypeCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (Event1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (Event1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  Event1.[EventCode]
		, Event1.[EventName]
		, Event1.[EventTypeCode]
		, Event1.[Description]
		, Event1.[IsActive]
		, Event1.[CreatedByUserID]
		, Event1.[CreatedDate]
		, Event1.[LastModifiedByUserID]
		, Event1.[LastModifiedDate]
		, Event1.[Timestamp]
		, EventType1.[EventTypeName]
	FROM
	      [dbo].[tblEvents_Event] Event1
	INNER JOIN [dbo].[tlkpEvents_EventType] EventType1 ON EventType1.[EventTypeCode]=Event1.[EventTypeCode]
	WHERE 
		Event1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Event1.[IsActive] ELSE 1 END
		AND (@EventName IS NULL OR Event1.[EventName] like '%' + @EventName + '%')
		AND (@EventTypeCode IS NULL OR Event1.[EventTypeCode] = @EventTypeCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (Event1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (Event1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EventCode' THEN Event1.[EventCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EventCode' THEN Event1.[EventCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EventName' THEN Event1.[EventName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EventName' THEN Event1.[EventName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EventTypeCode' THEN Event1.[EventTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EventTypeCode' THEN Event1.[EventTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Event1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Event1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Event1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Event1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Event1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Event1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Event1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Event1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Event1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Event1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Event1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Event1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Event1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Event1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EventTypeName' THEN EventType1.[EventTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EventTypeName' THEN EventType1.[EventTypeName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spEvents_GetAllEventDataByEventTypeCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'EventTypeCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @EventTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all Event data by a key.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='EventTypeCode'

/*
** parameter validation
*/
IF (@EventTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  Event1.[EventCode]
		, Event1.[EventName]
		, Event1.[EventTypeCode]
		, Event1.[Description]
		, Event1.[IsActive]
		, Event1.[CreatedByUserID]
		, Event1.[CreatedDate]
		, Event1.[LastModifiedByUserID]
		, Event1.[LastModifiedDate]
		, Event1.[Timestamp]
		, EventType1.[EventTypeName]
	FROM
	      [dbo].[tblEvents_Event] Event1
	INNER JOIN [dbo].[tlkpEvents_EventType] EventType1 ON EventType1.[EventTypeCode]=Event1.[EventTypeCode]
	WHERE 
		Event1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Event1.[IsActive] ELSE 1 END
		AND Event1.[EventTypeCode] = @EventTypeCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  Event1.[EventCode]
		, Event1.[EventName]
		, Event1.[EventTypeCode]
		, Event1.[Description]
		, Event1.[IsActive]
		, Event1.[CreatedByUserID]
		, Event1.[CreatedDate]
		, Event1.[LastModifiedByUserID]
		, Event1.[LastModifiedDate]
		, Event1.[Timestamp]
		, EventType1.[EventTypeName]
	FROM
	      [dbo].[tblEvents_Event] Event1
	INNER JOIN [dbo].[tlkpEvents_EventType] EventType1 ON EventType1.[EventTypeCode]=Event1.[EventTypeCode]
	WHERE 
		Event1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Event1.[IsActive] ELSE 1 END
		AND Event1.[EventTypeCode] = @EventTypeCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EventCode' THEN Event1.[EventCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EventCode' THEN Event1.[EventCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EventName' THEN Event1.[EventName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EventName' THEN Event1.[EventName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EventTypeCode' THEN Event1.[EventTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EventTypeCode' THEN Event1.[EventTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Event1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Event1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Event1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Event1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Event1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Event1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Event1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Event1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Event1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Event1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Event1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Event1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Event1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Event1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EventTypeName' THEN EventType1.[EventTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EventTypeName' THEN EventType1.[EventTypeName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spEvents_GetAllEventTypeData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'EventTypeCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all EventType data.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='EventTypeCode'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  EventType1.[EventTypeCode]
		, EventType1.[EventTypeName]
		, EventType1.[Description]
		, EventType1.[IsActive]
		, EventType1.[CreatedByUserID]
		, EventType1.[CreatedDate]
		, EventType1.[LastModifiedByUserID]
		, EventType1.[LastModifiedDate]
		, EventType1.[Timestamp]
	FROM
	      [dbo].[tlkpEvents_EventType] EventType1
	WHERE 
		EventType1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN EventType1.[IsActive] ELSE 1 END

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  EventType1.[EventTypeCode]
		, EventType1.[EventTypeName]
		, EventType1.[Description]
		, EventType1.[IsActive]
		, EventType1.[CreatedByUserID]
		, EventType1.[CreatedDate]
		, EventType1.[LastModifiedByUserID]
		, EventType1.[LastModifiedDate]
		, EventType1.[Timestamp]
	FROM
	      [dbo].[tlkpEvents_EventType] EventType1
	WHERE 
		EventType1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN EventType1.[IsActive] ELSE 1 END

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EventTypeCode' THEN EventType1.[EventTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EventTypeCode' THEN EventType1.[EventTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EventTypeName' THEN EventType1.[EventTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EventTypeName' THEN EventType1.[EventTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN EventType1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN EventType1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN EventType1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN EventType1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN EventType1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN EventType1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN EventType1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN EventType1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN EventType1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN EventType1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN EventType1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN EventType1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN EventType1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN EventType1.[Timestamp] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spEvents_GetAllSpecificEventAttributeData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'EventCode'
	, @SortDirection nvarchar(20) = 'Ascending'
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all SpecificEventAttribute data.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='EventCode'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  SpecificEventAttribute1.[EventCode]
		, SpecificEventAttribute1.[BaseAttributeID]
		, SpecificEventAttribute1.[Rank]
		, SpecificEventAttribute1.[CreatedByUserID]
		, SpecificEventAttribute1.[CreatedDate]
		, SpecificEventAttribute1.[LastModifiedByUserID]
		, SpecificEventAttribute1.[LastModifiedDate]
		, SpecificEventAttribute1.[Timestamp]
		, Event1.[EventName]
		, EventAttribute1.[AttributeCode]
	FROM
	      [dbo].[trelEvents_SpecificEventAttribute] SpecificEventAttribute1
	INNER JOIN [dbo].[tblEvents_Event] Event1 ON Event1.[EventCode]=SpecificEventAttribute1.[EventCode]
	INNER JOIN [dbo].[tblEvents_EventAttribute] EventAttribute1 ON EventAttribute1.[BaseAttributeID]=SpecificEventAttribute1.[BaseAttributeID]

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  SpecificEventAttribute1.[EventCode]
		, SpecificEventAttribute1.[BaseAttributeID]
		, SpecificEventAttribute1.[Rank]
		, SpecificEventAttribute1.[CreatedByUserID]
		, SpecificEventAttribute1.[CreatedDate]
		, SpecificEventAttribute1.[LastModifiedByUserID]
		, SpecificEventAttribute1.[LastModifiedDate]
		, SpecificEventAttribute1.[Timestamp]
		, Event1.[EventName]
		, EventAttribute1.[AttributeCode]
	FROM
	      [dbo].[trelEvents_SpecificEventAttribute] SpecificEventAttribute1
	INNER JOIN [dbo].[tblEvents_Event] Event1 ON Event1.[EventCode]=SpecificEventAttribute1.[EventCode]
	INNER JOIN [dbo].[tblEvents_EventAttribute] EventAttribute1 ON EventAttribute1.[BaseAttributeID]=SpecificEventAttribute1.[BaseAttributeID]

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EventCode' THEN SpecificEventAttribute1.[EventCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EventCode' THEN SpecificEventAttribute1.[EventCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BaseAttributeID' THEN SpecificEventAttribute1.[BaseAttributeID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BaseAttributeID' THEN SpecificEventAttribute1.[BaseAttributeID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Rank' THEN SpecificEventAttribute1.[Rank] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Rank' THEN SpecificEventAttribute1.[Rank] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN SpecificEventAttribute1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN SpecificEventAttribute1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN SpecificEventAttribute1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN SpecificEventAttribute1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN SpecificEventAttribute1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN SpecificEventAttribute1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN SpecificEventAttribute1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN SpecificEventAttribute1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN SpecificEventAttribute1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN SpecificEventAttribute1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EventName' THEN Event1.[EventName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EventName' THEN Event1.[EventName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeCode' THEN EventAttribute1.[AttributeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeCode' THEN EventAttribute1.[AttributeCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spEvents_GetAllSpecificEventAttributeDataByBaseAttributeID
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'BaseAttributeID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @BaseAttributeID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all SpecificEventAttribute data by a key.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='BaseAttributeID'

/*
** parameter validation
*/
IF (@BaseAttributeID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  SpecificEventAttribute1.[EventCode]
		, SpecificEventAttribute1.[BaseAttributeID]
		, SpecificEventAttribute1.[Rank]
		, SpecificEventAttribute1.[CreatedByUserID]
		, SpecificEventAttribute1.[CreatedDate]
		, SpecificEventAttribute1.[LastModifiedByUserID]
		, SpecificEventAttribute1.[LastModifiedDate]
		, SpecificEventAttribute1.[Timestamp]
		, Event1.[EventName]
		, EventAttribute1.[AttributeCode]
	FROM
	      [dbo].[trelEvents_SpecificEventAttribute] SpecificEventAttribute1
	INNER JOIN [dbo].[tblEvents_Event] Event1 ON Event1.[EventCode]=SpecificEventAttribute1.[EventCode]
	INNER JOIN [dbo].[tblEvents_EventAttribute] EventAttribute1 ON EventAttribute1.[BaseAttributeID]=SpecificEventAttribute1.[BaseAttributeID]
	WHERE 
		SpecificEventAttribute1.[BaseAttributeID] = @BaseAttributeID

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  SpecificEventAttribute1.[EventCode]
		, SpecificEventAttribute1.[BaseAttributeID]
		, SpecificEventAttribute1.[Rank]
		, SpecificEventAttribute1.[CreatedByUserID]
		, SpecificEventAttribute1.[CreatedDate]
		, SpecificEventAttribute1.[LastModifiedByUserID]
		, SpecificEventAttribute1.[LastModifiedDate]
		, SpecificEventAttribute1.[Timestamp]
		, Event1.[EventName]
		, EventAttribute1.[AttributeCode]
	FROM
	      [dbo].[trelEvents_SpecificEventAttribute] SpecificEventAttribute1
	INNER JOIN [dbo].[tblEvents_Event] Event1 ON Event1.[EventCode]=SpecificEventAttribute1.[EventCode]
	INNER JOIN [dbo].[tblEvents_EventAttribute] EventAttribute1 ON EventAttribute1.[BaseAttributeID]=SpecificEventAttribute1.[BaseAttributeID]
	WHERE 
		SpecificEventAttribute1.[BaseAttributeID] = @BaseAttributeID

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EventCode' THEN SpecificEventAttribute1.[EventCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EventCode' THEN SpecificEventAttribute1.[EventCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BaseAttributeID' THEN SpecificEventAttribute1.[BaseAttributeID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BaseAttributeID' THEN SpecificEventAttribute1.[BaseAttributeID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Rank' THEN SpecificEventAttribute1.[Rank] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Rank' THEN SpecificEventAttribute1.[Rank] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN SpecificEventAttribute1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN SpecificEventAttribute1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN SpecificEventAttribute1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN SpecificEventAttribute1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN SpecificEventAttribute1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN SpecificEventAttribute1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN SpecificEventAttribute1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN SpecificEventAttribute1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN SpecificEventAttribute1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN SpecificEventAttribute1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EventName' THEN Event1.[EventName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EventName' THEN Event1.[EventName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeCode' THEN EventAttribute1.[AttributeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeCode' THEN EventAttribute1.[AttributeCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spEvents_GetAllSpecificEventAttributeDataByEventCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'EventCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @EventCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all SpecificEventAttribute data by a key.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='EventCode'

/*
** parameter validation
*/
IF (@EventCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  SpecificEventAttribute1.[EventCode]
		, SpecificEventAttribute1.[BaseAttributeID]
		, SpecificEventAttribute1.[Rank]
		, SpecificEventAttribute1.[CreatedByUserID]
		, SpecificEventAttribute1.[CreatedDate]
		, SpecificEventAttribute1.[LastModifiedByUserID]
		, SpecificEventAttribute1.[LastModifiedDate]
		, SpecificEventAttribute1.[Timestamp]
		, Event1.[EventName]
		, EventAttribute1.[AttributeCode]
	FROM
	      [dbo].[trelEvents_SpecificEventAttribute] SpecificEventAttribute1
	INNER JOIN [dbo].[tblEvents_Event] Event1 ON Event1.[EventCode]=SpecificEventAttribute1.[EventCode]
	INNER JOIN [dbo].[tblEvents_EventAttribute] EventAttribute1 ON EventAttribute1.[BaseAttributeID]=SpecificEventAttribute1.[BaseAttributeID]
	WHERE 
		SpecificEventAttribute1.[EventCode] = @EventCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  SpecificEventAttribute1.[EventCode]
		, SpecificEventAttribute1.[BaseAttributeID]
		, SpecificEventAttribute1.[Rank]
		, SpecificEventAttribute1.[CreatedByUserID]
		, SpecificEventAttribute1.[CreatedDate]
		, SpecificEventAttribute1.[LastModifiedByUserID]
		, SpecificEventAttribute1.[LastModifiedDate]
		, SpecificEventAttribute1.[Timestamp]
		, Event1.[EventName]
		, EventAttribute1.[AttributeCode]
	FROM
	      [dbo].[trelEvents_SpecificEventAttribute] SpecificEventAttribute1
	INNER JOIN [dbo].[tblEvents_Event] Event1 ON Event1.[EventCode]=SpecificEventAttribute1.[EventCode]
	INNER JOIN [dbo].[tblEvents_EventAttribute] EventAttribute1 ON EventAttribute1.[BaseAttributeID]=SpecificEventAttribute1.[BaseAttributeID]
	WHERE 
		SpecificEventAttribute1.[EventCode] = @EventCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EventCode' THEN SpecificEventAttribute1.[EventCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EventCode' THEN SpecificEventAttribute1.[EventCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BaseAttributeID' THEN SpecificEventAttribute1.[BaseAttributeID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BaseAttributeID' THEN SpecificEventAttribute1.[BaseAttributeID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Rank' THEN SpecificEventAttribute1.[Rank] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Rank' THEN SpecificEventAttribute1.[Rank] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN SpecificEventAttribute1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN SpecificEventAttribute1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN SpecificEventAttribute1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN SpecificEventAttribute1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN SpecificEventAttribute1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN SpecificEventAttribute1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN SpecificEventAttribute1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN SpecificEventAttribute1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN SpecificEventAttribute1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN SpecificEventAttribute1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EventName' THEN Event1.[EventName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EventName' THEN Event1.[EventName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeCode' THEN EventAttribute1.[AttributeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeCode' THEN EventAttribute1.[AttributeCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spEvents_GetManyEventAttributeDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @StartIndex int = 1
	, @PageSize int = 50
	, @MaximumListSize int = 0
	, @MaximumListSizeExceeded bit = 0 OUTPUT
	, @TotalRecords int = 0 OUTPUT
	, @SortColumn sysname = 'AttributeName'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @AttributeName nvarchar(100)
	, @AttributeTypeCode int
	, @DataTypeCode int
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets many EventAttribute data by criteria.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

DECLARE @vEndIndex int
IF (@StartIndex < 1) SET @StartIndex=1
IF (@PageSize < 1) SET @PageSize=1
SET @vEndIndex = @StartIndex + @Pagesize
IF (@SortColumn = '') SET @SortColumn='AttributeName'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

DECLARE @OrderedRecords TABLE
(
     SearchOrderID int IDENTITY (1, 1) NOT NULL
    , BaseAttributeID uniqueidentifier
)
IF (@SortDirection = 'Random')
BEGIN
	INSERT INTO @OrderedRecords (BaseAttributeID)
	SELECT
		  EventAttribute1.[BaseAttributeID]
	FROM
	      [dbo].[tblEvents_EventAttribute] EventAttribute1
	INNER JOIN [dbo].[tblCore_BaseAttribute] BaseAttribute1 ON BaseAttribute1.[BaseAttributeID]=EventAttribute1.[BaseAttributeID]
	INNER JOIN [dbo].[tlkpCore_AttributeType] AttributeType1 ON AttributeType1.[AttributeTypeCode]=BaseAttribute1.[AttributeTypeCode]
	INNER JOIN [dbo].[tlkpCore_DataType] DataType1 ON DataType1.[DataTypeCode]=BaseAttribute1.[DataTypeCode]
	WHERE 
		BaseAttribute1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN BaseAttribute1.[IsActive] ELSE 1 END
		AND (@AttributeName IS NULL OR BaseAttribute1.[AttributeName] like '%' + @AttributeName + '%')
		AND (@AttributeTypeCode IS NULL OR BaseAttribute1.[AttributeTypeCode] = @AttributeTypeCode)
		AND (@DataTypeCode IS NULL OR BaseAttribute1.[DataTypeCode] = @DataTypeCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (BaseAttribute1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (BaseAttribute1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY NewID()
END
ELSE
BEGIN
	INSERT INTO @OrderedRecords (BaseAttributeID)
	SELECT
		  EventAttribute1.[BaseAttributeID]
	FROM
	      [dbo].[tblEvents_EventAttribute] EventAttribute1
	INNER JOIN [dbo].[tblCore_BaseAttribute] BaseAttribute1 ON BaseAttribute1.[BaseAttributeID]=EventAttribute1.[BaseAttributeID]
	INNER JOIN [dbo].[tlkpCore_AttributeType] AttributeType1 ON AttributeType1.[AttributeTypeCode]=BaseAttribute1.[AttributeTypeCode]
	INNER JOIN [dbo].[tlkpCore_DataType] DataType1 ON DataType1.[DataTypeCode]=BaseAttribute1.[DataTypeCode]
	WHERE 
		BaseAttribute1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN BaseAttribute1.[IsActive] ELSE 1 END
		AND (@AttributeName IS NULL OR BaseAttribute1.[AttributeName] like '%' + @AttributeName + '%')
		AND (@AttributeTypeCode IS NULL OR BaseAttribute1.[AttributeTypeCode] = @AttributeTypeCode)
		AND (@DataTypeCode IS NULL OR BaseAttribute1.[DataTypeCode] = @DataTypeCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (BaseAttribute1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (BaseAttribute1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BaseAttributeID' THEN EventAttribute1.[BaseAttributeID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BaseAttributeID' THEN EventAttribute1.[BaseAttributeID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeCode' THEN EventAttribute1.[AttributeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeCode' THEN EventAttribute1.[AttributeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN EventAttribute1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN EventAttribute1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN EventAttribute1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN EventAttribute1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN EventAttribute1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN EventAttribute1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN EventAttribute1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN EventAttribute1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN EventAttribute1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN EventAttribute1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeName' THEN BaseAttribute1.[AttributeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeName' THEN BaseAttribute1.[AttributeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeTypeCode' THEN BaseAttribute1.[AttributeTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeTypeCode' THEN BaseAttribute1.[AttributeTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DataTypeCode' THEN BaseAttribute1.[DataTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DataTypeCode' THEN BaseAttribute1.[DataTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN BaseAttribute1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN BaseAttribute1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN BaseAttribute1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN BaseAttribute1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeTypeName' THEN AttributeType1.[AttributeTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeTypeName' THEN AttributeType1.[AttributeTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DataTypeName' THEN DataType1.[DataTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DataTypeName' THEN DataType1.[DataTypeName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END

BEGIN
	SET @TotalRecords = (SELECT Count (*) FROM @OrderedRecords)
	IF @MaximumListSize > 0
	BEGIN
		IF @TotalRecords > @MaximumListSize
		BEGIN
			SET @MaximumListSizeExceeded = 1
			SET @TotalRecords = @MaximumListSize
		END
	END

	/* get search results */
	SELECT
		  EventAttribute1.[BaseAttributeID]
		, EventAttribute1.[AttributeCode]
		, EventAttribute1.[CreatedByUserID]
		, EventAttribute1.[CreatedDate]
		, EventAttribute1.[LastModifiedByUserID]
		, EventAttribute1.[LastModifiedDate]
		, EventAttribute1.[Timestamp]
		, BaseAttribute1.[AttributeName]
		, BaseAttribute1.[AttributeTypeCode]
		, BaseAttribute1.[DataTypeCode]
		, BaseAttribute1.[Description]
		, BaseAttribute1.[IsActive]
		, AttributeType1.[AttributeTypeName]
		, DataType1.[DataTypeName]
	FROM
	      [dbo].[tblEvents_EventAttribute] EventAttribute1
	INNER JOIN [dbo].[tblCore_BaseAttribute] BaseAttribute1 ON BaseAttribute1.[BaseAttributeID]=EventAttribute1.[BaseAttributeID]
	INNER JOIN [dbo].[tlkpCore_AttributeType] AttributeType1 ON AttributeType1.[AttributeTypeCode]=BaseAttribute1.[AttributeTypeCode]
	INNER JOIN [dbo].[tlkpCore_DataType] DataType1 ON DataType1.[DataTypeCode]=BaseAttribute1.[DataTypeCode]
	INNER JOIN @OrderedRecords search ON search.[BaseAttributeID] = EventAttribute1.[BaseAttributeID]
	WHERE
		search.SearchOrderID  >= @StartIndex AND
		search.SearchOrderID  < @vEndIndex
	ORDER BY
		search.SearchOrderID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spEvents_GetManyEventDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @StartIndex int = 1
	, @PageSize int = 50
	, @MaximumListSize int = 0
	, @MaximumListSizeExceeded bit = 0 OUTPUT
	, @TotalRecords int = 0 OUTPUT
	, @SortColumn sysname = 'EventName'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @EventName nvarchar(255)
	, @EventTypeCode int
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets many Event data by criteria.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

DECLARE @vEndIndex int
IF (@StartIndex < 1) SET @StartIndex=1
IF (@PageSize < 1) SET @PageSize=1
SET @vEndIndex = @StartIndex + @Pagesize
IF (@SortColumn = '') SET @SortColumn='EventName'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

DECLARE @OrderedRecords TABLE
(
     SearchOrderID int IDENTITY (1, 1) NOT NULL
    , EventCode int
)
IF (@SortDirection = 'Random')
BEGIN
	INSERT INTO @OrderedRecords (EventCode)
	SELECT
		  Event1.[EventCode]
	FROM
	      [dbo].[tblEvents_Event] Event1
	INNER JOIN [dbo].[tlkpEvents_EventType] EventType1 ON EventType1.[EventTypeCode]=Event1.[EventTypeCode]
	WHERE 
		Event1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Event1.[IsActive] ELSE 1 END
		AND (@EventName IS NULL OR Event1.[EventName] like '%' + @EventName + '%')
		AND (@EventTypeCode IS NULL OR Event1.[EventTypeCode] = @EventTypeCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (Event1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (Event1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY NewID()
END
ELSE
BEGIN
	INSERT INTO @OrderedRecords (EventCode)
	SELECT
		  Event1.[EventCode]
	FROM
	      [dbo].[tblEvents_Event] Event1
	INNER JOIN [dbo].[tlkpEvents_EventType] EventType1 ON EventType1.[EventTypeCode]=Event1.[EventTypeCode]
	WHERE 
		Event1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Event1.[IsActive] ELSE 1 END
		AND (@EventName IS NULL OR Event1.[EventName] like '%' + @EventName + '%')
		AND (@EventTypeCode IS NULL OR Event1.[EventTypeCode] = @EventTypeCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (Event1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (Event1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EventCode' THEN Event1.[EventCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EventCode' THEN Event1.[EventCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EventName' THEN Event1.[EventName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EventName' THEN Event1.[EventName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EventTypeCode' THEN Event1.[EventTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EventTypeCode' THEN Event1.[EventTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Event1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Event1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Event1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Event1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Event1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Event1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Event1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Event1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Event1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Event1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Event1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Event1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Event1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Event1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EventTypeName' THEN EventType1.[EventTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EventTypeName' THEN EventType1.[EventTypeName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END

BEGIN
	SET @TotalRecords = (SELECT Count (*) FROM @OrderedRecords)
	IF @MaximumListSize > 0
	BEGIN
		IF @TotalRecords > @MaximumListSize
		BEGIN
			SET @MaximumListSizeExceeded = 1
			SET @TotalRecords = @MaximumListSize
		END
	END

	/* get search results */
	SELECT
		  Event1.[EventCode]
		, Event1.[EventName]
		, Event1.[EventTypeCode]
		, Event1.[Description]
		, Event1.[IsActive]
		, Event1.[CreatedByUserID]
		, Event1.[CreatedDate]
		, Event1.[LastModifiedByUserID]
		, Event1.[LastModifiedDate]
		, Event1.[Timestamp]
		, EventType1.[EventTypeName]
	FROM
	      [dbo].[tblEvents_Event] Event1
	INNER JOIN [dbo].[tlkpEvents_EventType] EventType1 ON EventType1.[EventTypeCode]=Event1.[EventTypeCode]
	INNER JOIN @OrderedRecords search ON search.[EventCode] = Event1.[EventCode]
	WHERE
		search.SearchOrderID  >= @StartIndex AND
		search.SearchOrderID  < @vEndIndex
	ORDER BY
		search.SearchOrderID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spEvents_GetOneEvent
	  @SqlErrorNumber int = 0 OUTPUT
	, @EventCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single Event by an index.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@EventCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  Event1.[EventCode]
		, Event1.[EventName]
		, Event1.[EventTypeCode]
		, Event1.[Description]
		, Event1.[IsActive]
		, Event1.[CreatedByUserID]
		, Event1.[CreatedDate]
		, Event1.[LastModifiedByUserID]
		, Event1.[LastModifiedDate]
		, Event1.[Timestamp]
		, EventType1.[EventTypeName]
	FROM
	      [dbo].[tblEvents_Event] Event1
	INNER JOIN [dbo].[tlkpEvents_EventType] EventType1 ON EventType1.[EventTypeCode]=Event1.[EventTypeCode]
	WHERE Event1.[EventCode] =  @EventCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spEvents_GetOneEventAttribute
	  @SqlErrorNumber int = 0 OUTPUT
	, @BaseAttributeID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single EventAttribute by an index.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@BaseAttributeID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  EventAttribute1.[BaseAttributeID]
		, EventAttribute1.[AttributeCode]
		, EventAttribute1.[CreatedByUserID]
		, EventAttribute1.[CreatedDate]
		, EventAttribute1.[LastModifiedByUserID]
		, EventAttribute1.[LastModifiedDate]
		, EventAttribute1.[Timestamp]
		, BaseAttribute1.[AttributeName]
		, BaseAttribute1.[AttributeTypeCode]
		, BaseAttribute1.[DataTypeCode]
		, BaseAttribute1.[Description]
		, BaseAttribute1.[IsActive]
		, AttributeType1.[AttributeTypeName]
		, DataType1.[DataTypeName]
	FROM
	      [dbo].[tblEvents_EventAttribute] EventAttribute1
	INNER JOIN [dbo].[tblCore_BaseAttribute] BaseAttribute1 ON BaseAttribute1.[BaseAttributeID]=EventAttribute1.[BaseAttributeID]
	INNER JOIN [dbo].[tlkpCore_AttributeType] AttributeType1 ON AttributeType1.[AttributeTypeCode]=BaseAttribute1.[AttributeTypeCode]
	INNER JOIN [dbo].[tlkpCore_DataType] DataType1 ON DataType1.[DataTypeCode]=BaseAttribute1.[DataTypeCode]
	WHERE EventAttribute1.[BaseAttributeID] =  @BaseAttributeID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spEvents_GetOneEventAttributeByAttributeCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @AttributeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single EventAttribute by an index.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AttributeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  EventAttribute1.[BaseAttributeID]
		, EventAttribute1.[AttributeCode]
		, EventAttribute1.[CreatedByUserID]
		, EventAttribute1.[CreatedDate]
		, EventAttribute1.[LastModifiedByUserID]
		, EventAttribute1.[LastModifiedDate]
		, EventAttribute1.[Timestamp]
		, BaseAttribute1.[AttributeName]
		, BaseAttribute1.[AttributeTypeCode]
		, BaseAttribute1.[DataTypeCode]
		, BaseAttribute1.[Description]
		, BaseAttribute1.[IsActive]
		, AttributeType1.[AttributeTypeName]
		, DataType1.[DataTypeName]
	FROM
	      [dbo].[tblEvents_EventAttribute] EventAttribute1
	INNER JOIN [dbo].[tblCore_BaseAttribute] BaseAttribute1 ON BaseAttribute1.[BaseAttributeID]=EventAttribute1.[BaseAttributeID]
	INNER JOIN [dbo].[tlkpCore_AttributeType] AttributeType1 ON AttributeType1.[AttributeTypeCode]=BaseAttribute1.[AttributeTypeCode]
	INNER JOIN [dbo].[tlkpCore_DataType] DataType1 ON DataType1.[DataTypeCode]=BaseAttribute1.[DataTypeCode]
	WHERE EventAttribute1.[AttributeCode] =  @AttributeCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spEvents_GetOneEventType
	  @SqlErrorNumber int = 0 OUTPUT
	, @EventTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single EventType by an index.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@EventTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  EventType1.[EventTypeCode]
		, EventType1.[EventTypeName]
		, EventType1.[Description]
		, EventType1.[IsActive]
		, EventType1.[CreatedByUserID]
		, EventType1.[CreatedDate]
		, EventType1.[LastModifiedByUserID]
		, EventType1.[LastModifiedDate]
		, EventType1.[Timestamp]
	FROM
	      [dbo].[tlkpEvents_EventType] EventType1
	WHERE EventType1.[EventTypeCode] =  @EventTypeCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spEvents_GetOneSpecificEventAttribute
	  @SqlErrorNumber int = 0 OUTPUT
	, @EventCode int
	, @BaseAttributeID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single SpecificEventAttribute by an index.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@EventCode IS NULL OR @BaseAttributeID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  SpecificEventAttribute1.[EventCode]
		, SpecificEventAttribute1.[BaseAttributeID]
		, SpecificEventAttribute1.[Rank]
		, SpecificEventAttribute1.[CreatedByUserID]
		, SpecificEventAttribute1.[CreatedDate]
		, SpecificEventAttribute1.[LastModifiedByUserID]
		, SpecificEventAttribute1.[LastModifiedDate]
		, SpecificEventAttribute1.[Timestamp]
		, Event1.[EventName]
		, EventAttribute1.[AttributeCode]
	FROM
	      [dbo].[trelEvents_SpecificEventAttribute] SpecificEventAttribute1
	INNER JOIN [dbo].[tblEvents_Event] Event1 ON Event1.[EventCode]=SpecificEventAttribute1.[EventCode]
	INNER JOIN [dbo].[tblEvents_EventAttribute] EventAttribute1 ON EventAttribute1.[BaseAttributeID]=SpecificEventAttribute1.[BaseAttributeID]
	WHERE SpecificEventAttribute1.[EventCode] =  @EventCode AND SpecificEventAttribute1.[BaseAttributeID] =  @BaseAttributeID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spEvents_UpdateOneEvent
	  @SqlErrorNumber int = 0 OUTPUT
	, @LastModifiedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @EventCode int
	, @EventName nvarchar(255)
	, @EventTypeCode int
	, @Description nvarchar(2000) = NULL
	, @IsActive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure updates Event data.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@EventCode IS NULL OR @EventName IS NULL OR @EventTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [EventCode] FROM [dbo].[tblEvents_Event] WHERE [EventCode] =  @EventCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [EventCode] FROM [dbo].[tblEvents_Event] WHERE [EventCode] =  @EventCode AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	UPDATE
	      [dbo].[tblEvents_Event]
	SET
	     [LastModifiedByUserID] = @LastModifiedByUserID
	   , [LastModifiedDate] = getdate()
	   , [EventCode] = @EventCode
	   , [EventName] = @EventName
	   , [EventTypeCode] = @EventTypeCode
	   , [Description] = @Description
	   , [IsActive] = @IsActive
	WHERE [EventCode] =  @EventCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

	SET  @Timestamp = @@DBTS

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spEvents_UpdateOneEventAttribute
	  @SqlErrorNumber int = 0 OUTPUT
	, @LastModifiedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @BaseAttributeID uniqueidentifier
	, @AttributeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure updates EventAttribute data.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@BaseAttributeID IS NULL OR @AttributeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [BaseAttributeID] FROM [dbo].[tblEvents_EventAttribute] WHERE [BaseAttributeID] =  @BaseAttributeID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [BaseAttributeID] FROM [dbo].[tblEvents_EventAttribute] WHERE [BaseAttributeID] =  @BaseAttributeID AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	UPDATE
	      [dbo].[tblEvents_EventAttribute]
	SET
	     [LastModifiedByUserID] = @LastModifiedByUserID
	   , [LastModifiedDate] = getdate()
	   , [BaseAttributeID] = @BaseAttributeID
	   , [AttributeCode] = @AttributeCode
	WHERE [BaseAttributeID] =  @BaseAttributeID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

	SET  @Timestamp = @@DBTS

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spEvents_UpdateOneEventType
	  @SqlErrorNumber int = 0 OUTPUT
	, @LastModifiedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @EventTypeCode int
	, @EventTypeName nvarchar(255)
	, @Description nvarchar(2000) = NULL
	, @IsActive bit = 1
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure updates EventType data.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@EventTypeCode IS NULL OR @EventTypeName IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [EventTypeCode] FROM [dbo].[tlkpEvents_EventType] WHERE [EventTypeCode] =  @EventTypeCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [EventTypeCode] FROM [dbo].[tlkpEvents_EventType] WHERE [EventTypeCode] =  @EventTypeCode AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	UPDATE
	      [dbo].[tlkpEvents_EventType]
	SET
	     [LastModifiedByUserID] = @LastModifiedByUserID
	   , [LastModifiedDate] = getdate()
	   , [EventTypeCode] = @EventTypeCode
	   , [EventTypeName] = @EventTypeName
	   , [Description] = @Description
	   , [IsActive] = @IsActive
	WHERE [EventTypeCode] =  @EventTypeCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

	SET  @Timestamp = @@DBTS

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spEvents_UpdateOneSpecificEventAttribute
	  @SqlErrorNumber int = 0 OUTPUT
	, @LastModifiedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @EventCode int
	, @BaseAttributeID uniqueidentifier
	, @Rank int = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure updates SpecificEventAttribute data.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@EventCode IS NULL OR @BaseAttributeID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [EventCode], [BaseAttributeID] FROM [dbo].[trelEvents_SpecificEventAttribute] WHERE [EventCode] =  @EventCode AND [BaseAttributeID] =  @BaseAttributeID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [EventCode], [BaseAttributeID] FROM [dbo].[trelEvents_SpecificEventAttribute] WHERE [EventCode] =  @EventCode AND [BaseAttributeID] =  @BaseAttributeID AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	UPDATE
	      [dbo].[trelEvents_SpecificEventAttribute]
	SET
	     [LastModifiedByUserID] = @LastModifiedByUserID
	   , [LastModifiedDate] = getdate()
	   , [EventCode] = @EventCode
	   , [BaseAttributeID] = @BaseAttributeID
	   , [Rank] = @Rank
	WHERE [EventCode] =  @EventCode AND [BaseAttributeID] =  @BaseAttributeID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

	SET  @Timestamp = @@DBTS

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spNotifications_AddOneNotification
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @NotificationCode int
	, @NotificationName nvarchar(255)
	, @EventCode int
	, @Description nvarchar(2000) = NULL
	, @IsActive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure inserts Notification data.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@NotificationCode IS NULL OR @NotificationName IS NULL OR @EventCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF EXISTS (SELECT [NotificationCode] FROM [dbo].[tblNotifications_Notification] WHERE [NotificationCode] =  @NotificationCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	INSERT
	      [dbo].[tblNotifications_Notification]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [NotificationCode]
	   , [NotificationName]
	   , [EventCode]
	   , [Description]
	   , [IsActive]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @NotificationCode
	   , @NotificationName
	   , @EventCode
	   , @Description
	   , @IsActive
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spNotifications_AddOneNotificationDeliveryLog
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @NotificationLogID uniqueidentifier
	, @MetaPartnerID uniqueidentifier
	, @NotificationDeliveryTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure inserts NotificationDeliveryLog data.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@NotificationLogID IS NULL OR @MetaPartnerID IS NULL OR @NotificationDeliveryTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF EXISTS (SELECT [NotificationLogID], [MetaPartnerID], [NotificationDeliveryTypeCode] FROM [dbo].[trelNotifications_NotificationDeliveryLog] WHERE [NotificationLogID] =  @NotificationLogID AND [MetaPartnerID] =  @MetaPartnerID AND [NotificationDeliveryTypeCode] =  @NotificationDeliveryTypeCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	INSERT
	      [dbo].[trelNotifications_NotificationDeliveryLog]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [NotificationLogID]
	   , [MetaPartnerID]
	   , [NotificationDeliveryTypeCode]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @NotificationLogID
	   , @MetaPartnerID
	   , @NotificationDeliveryTypeCode
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spNotifications_AddOneNotificationDeliveryType
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @NotificationDeliveryTypeCode int
	, @NotificationDeliveryTypeName nvarchar(255)
	, @Description nvarchar(2000) = NULL
	, @IsActive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure inserts NotificationDeliveryType data.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@NotificationDeliveryTypeCode IS NULL OR @NotificationDeliveryTypeName IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF EXISTS (SELECT [NotificationDeliveryTypeCode] FROM [dbo].[tlkpNotifications_NotificationDeliveryType] WHERE [NotificationDeliveryTypeCode] =  @NotificationDeliveryTypeCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	INSERT
	      [dbo].[tlkpNotifications_NotificationDeliveryType]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [NotificationDeliveryTypeCode]
	   , [NotificationDeliveryTypeName]
	   , [Description]
	   , [IsActive]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @NotificationDeliveryTypeCode
	   , @NotificationDeliveryTypeName
	   , @Description
	   , @IsActive
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spNotifications_DeleteAllNotificationDataByEventCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @EventCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all Notification data by a key.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@EventCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblNotifications_Notification]
	WHERE [EventCode] =  @EventCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spNotifications_DeleteAllNotificationDeliveryLogDataByMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @MetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all NotificationDeliveryLog data by a key.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[trelNotifications_NotificationDeliveryLog]
	WHERE [MetaPartnerID] =  @MetaPartnerID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spNotifications_DeleteAllNotificationDeliveryLogDataByNotificationDeliveryTypeCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @NotificationDeliveryTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all NotificationDeliveryLog data by a key.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@NotificationDeliveryTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[trelNotifications_NotificationDeliveryLog]
	WHERE [NotificationDeliveryTypeCode] =  @NotificationDeliveryTypeCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spNotifications_DeleteAllNotificationDeliveryLogDataByNotificationLogID
	  @SqlErrorNumber int = 0 OUTPUT
	, @NotificationLogID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all NotificationDeliveryLog data by a key.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@NotificationLogID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[trelNotifications_NotificationDeliveryLog]
	WHERE [NotificationLogID] =  @NotificationLogID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spNotifications_DeleteAllNotificationTemplateDataByLocaleCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @LocaleCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all NotificationTemplate data by a key.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@LocaleCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblNotifications_NotificationTemplate]
	WHERE [LocaleCode] =  @LocaleCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spNotifications_DeleteAllNotificationTemplateDataByNotificationCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @NotificationCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all NotificationTemplate data by a key.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@NotificationCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblNotifications_NotificationTemplate]
	WHERE [NotificationCode] =  @NotificationCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spNotifications_DeleteOneNotification
	  @SqlErrorNumber int = 0 OUTPUT
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @NotificationCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes Notification data.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@NotificationCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [NotificationCode] FROM [dbo].[tblNotifications_Notification] WHERE [NotificationCode] =  @NotificationCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [NotificationCode] FROM [dbo].[tblNotifications_Notification] WHERE [NotificationCode] =  @NotificationCode AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblNotifications_Notification]
	WHERE [NotificationCode] =  @NotificationCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spNotifications_DeleteOneNotificationDeliveryLog
	  @SqlErrorNumber int = 0 OUTPUT
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @NotificationLogID uniqueidentifier
	, @MetaPartnerID uniqueidentifier
	, @NotificationDeliveryTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes NotificationDeliveryLog data.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@NotificationLogID IS NULL OR @MetaPartnerID IS NULL OR @NotificationDeliveryTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [NotificationLogID], [MetaPartnerID], [NotificationDeliveryTypeCode] FROM [dbo].[trelNotifications_NotificationDeliveryLog] WHERE [NotificationLogID] =  @NotificationLogID AND [MetaPartnerID] =  @MetaPartnerID AND [NotificationDeliveryTypeCode] =  @NotificationDeliveryTypeCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [NotificationLogID], [MetaPartnerID], [NotificationDeliveryTypeCode] FROM [dbo].[trelNotifications_NotificationDeliveryLog] WHERE [NotificationLogID] =  @NotificationLogID AND [MetaPartnerID] =  @MetaPartnerID AND [NotificationDeliveryTypeCode] =  @NotificationDeliveryTypeCode AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[trelNotifications_NotificationDeliveryLog]
	WHERE [NotificationLogID] =  @NotificationLogID AND [MetaPartnerID] =  @MetaPartnerID AND [NotificationDeliveryTypeCode] =  @NotificationDeliveryTypeCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spNotifications_DeleteOneNotificationDeliveryType
	  @SqlErrorNumber int = 0 OUTPUT
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @NotificationDeliveryTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes NotificationDeliveryType data.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@NotificationDeliveryTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [NotificationDeliveryTypeCode] FROM [dbo].[tlkpNotifications_NotificationDeliveryType] WHERE [NotificationDeliveryTypeCode] =  @NotificationDeliveryTypeCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [NotificationDeliveryTypeCode] FROM [dbo].[tlkpNotifications_NotificationDeliveryType] WHERE [NotificationDeliveryTypeCode] =  @NotificationDeliveryTypeCode AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tlkpNotifications_NotificationDeliveryType]
	WHERE [NotificationDeliveryTypeCode] =  @NotificationDeliveryTypeCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spNotifications_DeleteOneNotificationTemplate
	  @SqlErrorNumber int = 0 OUTPUT
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @NotificationTemplateID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes NotificationTemplate data.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@NotificationTemplateID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [NotificationTemplateID] FROM [dbo].[tblNotifications_NotificationTemplate] WHERE [NotificationTemplateID] =  @NotificationTemplateID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [NotificationTemplateID] FROM [dbo].[tblNotifications_NotificationTemplate] WHERE [NotificationTemplateID] =  @NotificationTemplateID AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblNotifications_NotificationTemplate]
	WHERE [NotificationTemplateID] =  @NotificationTemplateID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spNotifications_GetAllNotificationAttributeValueLogData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'NotificationAttributeValueLogID'
	, @SortDirection nvarchar(20) = 'Ascending'
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all NotificationAttributeValueLog data.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='NotificationAttributeValueLogID'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  NotificationAttributeValueLog1.[NotificationAttributeValueLogID]
		, NotificationAttributeValueLog1.[NotificationLogID]
		, NotificationAttributeValueLog1.[BaseAttributeValueID]
		, NotificationAttributeValueLog1.[AttributeValue]
		, NotificationAttributeValueLog1.[CreatedByUserID]
		, NotificationAttributeValueLog1.[CreatedDate]
		, NotificationAttributeValueLog1.[LastModifiedByUserID]
		, NotificationAttributeValueLog1.[LastModifiedDate]
		, NotificationAttributeValueLog1.[Timestamp]
	FROM
	      [dbo].[tblNotifications_NotificationAttributeValueLog] NotificationAttributeValueLog1

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  NotificationAttributeValueLog1.[NotificationAttributeValueLogID]
		, NotificationAttributeValueLog1.[NotificationLogID]
		, NotificationAttributeValueLog1.[BaseAttributeValueID]
		, NotificationAttributeValueLog1.[AttributeValue]
		, NotificationAttributeValueLog1.[CreatedByUserID]
		, NotificationAttributeValueLog1.[CreatedDate]
		, NotificationAttributeValueLog1.[LastModifiedByUserID]
		, NotificationAttributeValueLog1.[LastModifiedDate]
		, NotificationAttributeValueLog1.[Timestamp]
	FROM
	      [dbo].[tblNotifications_NotificationAttributeValueLog] NotificationAttributeValueLog1

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationAttributeValueLogID' THEN NotificationAttributeValueLog1.[NotificationAttributeValueLogID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationAttributeValueLogID' THEN NotificationAttributeValueLog1.[NotificationAttributeValueLogID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationLogID' THEN NotificationAttributeValueLog1.[NotificationLogID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationLogID' THEN NotificationAttributeValueLog1.[NotificationLogID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BaseAttributeValueID' THEN NotificationAttributeValueLog1.[BaseAttributeValueID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BaseAttributeValueID' THEN NotificationAttributeValueLog1.[BaseAttributeValueID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeValue' THEN NotificationAttributeValueLog1.[AttributeValue] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeValue' THEN NotificationAttributeValueLog1.[AttributeValue] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN NotificationAttributeValueLog1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN NotificationAttributeValueLog1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN NotificationAttributeValueLog1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN NotificationAttributeValueLog1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN NotificationAttributeValueLog1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN NotificationAttributeValueLog1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN NotificationAttributeValueLog1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN NotificationAttributeValueLog1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN NotificationAttributeValueLog1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN NotificationAttributeValueLog1.[Timestamp] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spNotifications_GetAllNotificationAttributeValueLogDataByBaseAttributeValueID
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'BaseAttributeValueID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @BaseAttributeValueID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all NotificationAttributeValueLog data by a key.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='BaseAttributeValueID'

/*
** parameter validation
*/
IF (@BaseAttributeValueID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  NotificationAttributeValueLog1.[NotificationAttributeValueLogID]
		, NotificationAttributeValueLog1.[NotificationLogID]
		, NotificationAttributeValueLog1.[BaseAttributeValueID]
		, NotificationAttributeValueLog1.[AttributeValue]
		, NotificationAttributeValueLog1.[CreatedByUserID]
		, NotificationAttributeValueLog1.[CreatedDate]
		, NotificationAttributeValueLog1.[LastModifiedByUserID]
		, NotificationAttributeValueLog1.[LastModifiedDate]
		, NotificationAttributeValueLog1.[Timestamp]
	FROM
	      [dbo].[tblNotifications_NotificationAttributeValueLog] NotificationAttributeValueLog1
	WHERE 
		NotificationAttributeValueLog1.[BaseAttributeValueID] = @BaseAttributeValueID

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  NotificationAttributeValueLog1.[NotificationAttributeValueLogID]
		, NotificationAttributeValueLog1.[NotificationLogID]
		, NotificationAttributeValueLog1.[BaseAttributeValueID]
		, NotificationAttributeValueLog1.[AttributeValue]
		, NotificationAttributeValueLog1.[CreatedByUserID]
		, NotificationAttributeValueLog1.[CreatedDate]
		, NotificationAttributeValueLog1.[LastModifiedByUserID]
		, NotificationAttributeValueLog1.[LastModifiedDate]
		, NotificationAttributeValueLog1.[Timestamp]
	FROM
	      [dbo].[tblNotifications_NotificationAttributeValueLog] NotificationAttributeValueLog1
	WHERE 
		NotificationAttributeValueLog1.[BaseAttributeValueID] = @BaseAttributeValueID

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationAttributeValueLogID' THEN NotificationAttributeValueLog1.[NotificationAttributeValueLogID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationAttributeValueLogID' THEN NotificationAttributeValueLog1.[NotificationAttributeValueLogID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationLogID' THEN NotificationAttributeValueLog1.[NotificationLogID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationLogID' THEN NotificationAttributeValueLog1.[NotificationLogID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BaseAttributeValueID' THEN NotificationAttributeValueLog1.[BaseAttributeValueID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BaseAttributeValueID' THEN NotificationAttributeValueLog1.[BaseAttributeValueID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeValue' THEN NotificationAttributeValueLog1.[AttributeValue] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeValue' THEN NotificationAttributeValueLog1.[AttributeValue] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN NotificationAttributeValueLog1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN NotificationAttributeValueLog1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN NotificationAttributeValueLog1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN NotificationAttributeValueLog1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN NotificationAttributeValueLog1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN NotificationAttributeValueLog1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN NotificationAttributeValueLog1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN NotificationAttributeValueLog1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN NotificationAttributeValueLog1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN NotificationAttributeValueLog1.[Timestamp] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spNotifications_GetAllNotificationAttributeValueLogDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'AttributeValue'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @AttributeValue nvarchar(1000) = NULL
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all NotificationAttributeValueLog data by criteria.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='AttributeValue'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  NotificationAttributeValueLog1.[NotificationAttributeValueLogID]
		, NotificationAttributeValueLog1.[NotificationLogID]
		, NotificationAttributeValueLog1.[BaseAttributeValueID]
		, NotificationAttributeValueLog1.[AttributeValue]
		, NotificationAttributeValueLog1.[CreatedByUserID]
		, NotificationAttributeValueLog1.[CreatedDate]
		, NotificationAttributeValueLog1.[LastModifiedByUserID]
		, NotificationAttributeValueLog1.[LastModifiedDate]
		, NotificationAttributeValueLog1.[Timestamp]
	FROM
	      [dbo].[tblNotifications_NotificationAttributeValueLog] NotificationAttributeValueLog1
	WHERE 
		(@AttributeValue IS NULL OR NotificationAttributeValueLog1.[AttributeValue] like '%' + @AttributeValue + '%')
		AND ((@LastModifiedDateStart  IS NULL) OR (NotificationAttributeValueLog1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (NotificationAttributeValueLog1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  NotificationAttributeValueLog1.[NotificationAttributeValueLogID]
		, NotificationAttributeValueLog1.[NotificationLogID]
		, NotificationAttributeValueLog1.[BaseAttributeValueID]
		, NotificationAttributeValueLog1.[AttributeValue]
		, NotificationAttributeValueLog1.[CreatedByUserID]
		, NotificationAttributeValueLog1.[CreatedDate]
		, NotificationAttributeValueLog1.[LastModifiedByUserID]
		, NotificationAttributeValueLog1.[LastModifiedDate]
		, NotificationAttributeValueLog1.[Timestamp]
	FROM
	      [dbo].[tblNotifications_NotificationAttributeValueLog] NotificationAttributeValueLog1
	WHERE 
		(@AttributeValue IS NULL OR NotificationAttributeValueLog1.[AttributeValue] like '%' + @AttributeValue + '%')
		AND ((@LastModifiedDateStart  IS NULL) OR (NotificationAttributeValueLog1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (NotificationAttributeValueLog1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationAttributeValueLogID' THEN NotificationAttributeValueLog1.[NotificationAttributeValueLogID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationAttributeValueLogID' THEN NotificationAttributeValueLog1.[NotificationAttributeValueLogID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationLogID' THEN NotificationAttributeValueLog1.[NotificationLogID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationLogID' THEN NotificationAttributeValueLog1.[NotificationLogID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BaseAttributeValueID' THEN NotificationAttributeValueLog1.[BaseAttributeValueID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BaseAttributeValueID' THEN NotificationAttributeValueLog1.[BaseAttributeValueID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeValue' THEN NotificationAttributeValueLog1.[AttributeValue] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeValue' THEN NotificationAttributeValueLog1.[AttributeValue] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN NotificationAttributeValueLog1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN NotificationAttributeValueLog1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN NotificationAttributeValueLog1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN NotificationAttributeValueLog1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN NotificationAttributeValueLog1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN NotificationAttributeValueLog1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN NotificationAttributeValueLog1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN NotificationAttributeValueLog1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN NotificationAttributeValueLog1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN NotificationAttributeValueLog1.[Timestamp] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spNotifications_GetAllNotificationAttributeValueLogDataByNotificationLogID
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'NotificationLogID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @NotificationLogID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all NotificationAttributeValueLog data by a key.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='NotificationLogID'

/*
** parameter validation
*/
IF (@NotificationLogID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  NotificationAttributeValueLog1.[NotificationAttributeValueLogID]
		, NotificationAttributeValueLog1.[NotificationLogID]
		, NotificationAttributeValueLog1.[BaseAttributeValueID]
		, NotificationAttributeValueLog1.[AttributeValue]
		, NotificationAttributeValueLog1.[CreatedByUserID]
		, NotificationAttributeValueLog1.[CreatedDate]
		, NotificationAttributeValueLog1.[LastModifiedByUserID]
		, NotificationAttributeValueLog1.[LastModifiedDate]
		, NotificationAttributeValueLog1.[Timestamp]
	FROM
	      [dbo].[tblNotifications_NotificationAttributeValueLog] NotificationAttributeValueLog1
	WHERE 
		NotificationAttributeValueLog1.[NotificationLogID] = @NotificationLogID

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  NotificationAttributeValueLog1.[NotificationAttributeValueLogID]
		, NotificationAttributeValueLog1.[NotificationLogID]
		, NotificationAttributeValueLog1.[BaseAttributeValueID]
		, NotificationAttributeValueLog1.[AttributeValue]
		, NotificationAttributeValueLog1.[CreatedByUserID]
		, NotificationAttributeValueLog1.[CreatedDate]
		, NotificationAttributeValueLog1.[LastModifiedByUserID]
		, NotificationAttributeValueLog1.[LastModifiedDate]
		, NotificationAttributeValueLog1.[Timestamp]
	FROM
	      [dbo].[tblNotifications_NotificationAttributeValueLog] NotificationAttributeValueLog1
	WHERE 
		NotificationAttributeValueLog1.[NotificationLogID] = @NotificationLogID

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationAttributeValueLogID' THEN NotificationAttributeValueLog1.[NotificationAttributeValueLogID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationAttributeValueLogID' THEN NotificationAttributeValueLog1.[NotificationAttributeValueLogID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationLogID' THEN NotificationAttributeValueLog1.[NotificationLogID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationLogID' THEN NotificationAttributeValueLog1.[NotificationLogID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BaseAttributeValueID' THEN NotificationAttributeValueLog1.[BaseAttributeValueID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BaseAttributeValueID' THEN NotificationAttributeValueLog1.[BaseAttributeValueID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeValue' THEN NotificationAttributeValueLog1.[AttributeValue] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeValue' THEN NotificationAttributeValueLog1.[AttributeValue] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN NotificationAttributeValueLog1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN NotificationAttributeValueLog1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN NotificationAttributeValueLog1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN NotificationAttributeValueLog1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN NotificationAttributeValueLog1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN NotificationAttributeValueLog1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN NotificationAttributeValueLog1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN NotificationAttributeValueLog1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN NotificationAttributeValueLog1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN NotificationAttributeValueLog1.[Timestamp] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spNotifications_GetAllNotificationData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'NotificationCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all Notification data.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='NotificationCode'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  Notification1.[NotificationCode]
		, Notification1.[NotificationName]
		, Notification1.[EventCode]
		, Notification1.[Description]
		, Notification1.[IsActive]
		, Notification1.[CreatedByUserID]
		, Notification1.[CreatedDate]
		, Notification1.[LastModifiedByUserID]
		, Notification1.[LastModifiedDate]
		, Notification1.[Timestamp]
		, Event1.[EventName]
	FROM
	      [dbo].[tblNotifications_Notification] Notification1
	INNER JOIN [dbo].[tblEvents_Event] Event1 ON Event1.[EventCode]=Notification1.[EventCode]
	WHERE 
		Notification1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Notification1.[IsActive] ELSE 1 END

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  Notification1.[NotificationCode]
		, Notification1.[NotificationName]
		, Notification1.[EventCode]
		, Notification1.[Description]
		, Notification1.[IsActive]
		, Notification1.[CreatedByUserID]
		, Notification1.[CreatedDate]
		, Notification1.[LastModifiedByUserID]
		, Notification1.[LastModifiedDate]
		, Notification1.[Timestamp]
		, Event1.[EventName]
	FROM
	      [dbo].[tblNotifications_Notification] Notification1
	INNER JOIN [dbo].[tblEvents_Event] Event1 ON Event1.[EventCode]=Notification1.[EventCode]
	WHERE 
		Notification1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Notification1.[IsActive] ELSE 1 END

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationCode' THEN Notification1.[NotificationCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationCode' THEN Notification1.[NotificationCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationName' THEN Notification1.[NotificationName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationName' THEN Notification1.[NotificationName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EventCode' THEN Notification1.[EventCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EventCode' THEN Notification1.[EventCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Notification1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Notification1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Notification1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Notification1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Notification1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Notification1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Notification1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Notification1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Notification1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Notification1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Notification1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Notification1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Notification1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Notification1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EventName' THEN Event1.[EventName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EventName' THEN Event1.[EventName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spNotifications_GetAllNotificationDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'NotificationName'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @NotificationName nvarchar(255)
	, @EventCode int
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all Notification data by criteria.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='NotificationName'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  Notification1.[NotificationCode]
		, Notification1.[NotificationName]
		, Notification1.[EventCode]
		, Notification1.[Description]
		, Notification1.[IsActive]
		, Notification1.[CreatedByUserID]
		, Notification1.[CreatedDate]
		, Notification1.[LastModifiedByUserID]
		, Notification1.[LastModifiedDate]
		, Notification1.[Timestamp]
		, Event1.[EventName]
	FROM
	      [dbo].[tblNotifications_Notification] Notification1
	INNER JOIN [dbo].[tblEvents_Event] Event1 ON Event1.[EventCode]=Notification1.[EventCode]
	WHERE 
		Notification1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Notification1.[IsActive] ELSE 1 END
		AND (@NotificationName IS NULL OR Notification1.[NotificationName] like '%' + @NotificationName + '%')
		AND (@EventCode IS NULL OR Notification1.[EventCode] = @EventCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (Notification1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (Notification1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  Notification1.[NotificationCode]
		, Notification1.[NotificationName]
		, Notification1.[EventCode]
		, Notification1.[Description]
		, Notification1.[IsActive]
		, Notification1.[CreatedByUserID]
		, Notification1.[CreatedDate]
		, Notification1.[LastModifiedByUserID]
		, Notification1.[LastModifiedDate]
		, Notification1.[Timestamp]
		, Event1.[EventName]
	FROM
	      [dbo].[tblNotifications_Notification] Notification1
	INNER JOIN [dbo].[tblEvents_Event] Event1 ON Event1.[EventCode]=Notification1.[EventCode]
	WHERE 
		Notification1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Notification1.[IsActive] ELSE 1 END
		AND (@NotificationName IS NULL OR Notification1.[NotificationName] like '%' + @NotificationName + '%')
		AND (@EventCode IS NULL OR Notification1.[EventCode] = @EventCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (Notification1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (Notification1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationCode' THEN Notification1.[NotificationCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationCode' THEN Notification1.[NotificationCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationName' THEN Notification1.[NotificationName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationName' THEN Notification1.[NotificationName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EventCode' THEN Notification1.[EventCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EventCode' THEN Notification1.[EventCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Notification1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Notification1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Notification1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Notification1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Notification1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Notification1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Notification1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Notification1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Notification1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Notification1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Notification1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Notification1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Notification1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Notification1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EventName' THEN Event1.[EventName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EventName' THEN Event1.[EventName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spNotifications_GetAllNotificationDataByEventCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'EventCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @EventCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all Notification data by a key.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='EventCode'

/*
** parameter validation
*/
IF (@EventCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  Notification1.[NotificationCode]
		, Notification1.[NotificationName]
		, Notification1.[EventCode]
		, Notification1.[Description]
		, Notification1.[IsActive]
		, Notification1.[CreatedByUserID]
		, Notification1.[CreatedDate]
		, Notification1.[LastModifiedByUserID]
		, Notification1.[LastModifiedDate]
		, Notification1.[Timestamp]
		, Event1.[EventName]
	FROM
	      [dbo].[tblNotifications_Notification] Notification1
	INNER JOIN [dbo].[tblEvents_Event] Event1 ON Event1.[EventCode]=Notification1.[EventCode]
	WHERE 
		Notification1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Notification1.[IsActive] ELSE 1 END
		AND Notification1.[EventCode] = @EventCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  Notification1.[NotificationCode]
		, Notification1.[NotificationName]
		, Notification1.[EventCode]
		, Notification1.[Description]
		, Notification1.[IsActive]
		, Notification1.[CreatedByUserID]
		, Notification1.[CreatedDate]
		, Notification1.[LastModifiedByUserID]
		, Notification1.[LastModifiedDate]
		, Notification1.[Timestamp]
		, Event1.[EventName]
	FROM
	      [dbo].[tblNotifications_Notification] Notification1
	INNER JOIN [dbo].[tblEvents_Event] Event1 ON Event1.[EventCode]=Notification1.[EventCode]
	WHERE 
		Notification1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Notification1.[IsActive] ELSE 1 END
		AND Notification1.[EventCode] = @EventCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationCode' THEN Notification1.[NotificationCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationCode' THEN Notification1.[NotificationCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationName' THEN Notification1.[NotificationName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationName' THEN Notification1.[NotificationName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EventCode' THEN Notification1.[EventCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EventCode' THEN Notification1.[EventCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Notification1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Notification1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Notification1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Notification1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Notification1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Notification1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Notification1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Notification1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Notification1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Notification1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Notification1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Notification1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Notification1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Notification1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EventName' THEN Event1.[EventName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EventName' THEN Event1.[EventName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spNotifications_GetAllNotificationDeliveryLogData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'NotificationLogID'
	, @SortDirection nvarchar(20) = 'Ascending'
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all NotificationDeliveryLog data.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='NotificationLogID'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  NotificationDeliveryLog1.[NotificationLogID]
		, NotificationDeliveryLog1.[MetaPartnerID]
		, NotificationDeliveryLog1.[NotificationDeliveryTypeCode]
		, NotificationDeliveryLog1.[CreatedByUserID]
		, NotificationDeliveryLog1.[CreatedDate]
		, NotificationDeliveryLog1.[LastModifiedByUserID]
		, NotificationDeliveryLog1.[LastModifiedDate]
		, NotificationDeliveryLog1.[Timestamp]
		, NotificationDeliveryType1.[NotificationDeliveryTypeName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[trelNotifications_NotificationDeliveryLog] NotificationDeliveryLog1
	INNER JOIN [dbo].[tlkpNotifications_NotificationDeliveryType] NotificationDeliveryType1 ON NotificationDeliveryType1.[NotificationDeliveryTypeCode]=NotificationDeliveryLog1.[NotificationDeliveryTypeCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=NotificationDeliveryLog1.[MetaPartnerID]

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  NotificationDeliveryLog1.[NotificationLogID]
		, NotificationDeliveryLog1.[MetaPartnerID]
		, NotificationDeliveryLog1.[NotificationDeliveryTypeCode]
		, NotificationDeliveryLog1.[CreatedByUserID]
		, NotificationDeliveryLog1.[CreatedDate]
		, NotificationDeliveryLog1.[LastModifiedByUserID]
		, NotificationDeliveryLog1.[LastModifiedDate]
		, NotificationDeliveryLog1.[Timestamp]
		, NotificationDeliveryType1.[NotificationDeliveryTypeName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[trelNotifications_NotificationDeliveryLog] NotificationDeliveryLog1
	INNER JOIN [dbo].[tlkpNotifications_NotificationDeliveryType] NotificationDeliveryType1 ON NotificationDeliveryType1.[NotificationDeliveryTypeCode]=NotificationDeliveryLog1.[NotificationDeliveryTypeCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=NotificationDeliveryLog1.[MetaPartnerID]

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationLogID' THEN NotificationDeliveryLog1.[NotificationLogID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationLogID' THEN NotificationDeliveryLog1.[NotificationLogID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN NotificationDeliveryLog1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN NotificationDeliveryLog1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationDeliveryTypeCode' THEN NotificationDeliveryLog1.[NotificationDeliveryTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationDeliveryTypeCode' THEN NotificationDeliveryLog1.[NotificationDeliveryTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN NotificationDeliveryLog1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN NotificationDeliveryLog1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN NotificationDeliveryLog1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN NotificationDeliveryLog1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN NotificationDeliveryLog1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN NotificationDeliveryLog1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN NotificationDeliveryLog1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN NotificationDeliveryLog1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN NotificationDeliveryLog1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN NotificationDeliveryLog1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationDeliveryTypeName' THEN NotificationDeliveryType1.[NotificationDeliveryTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationDeliveryTypeName' THEN NotificationDeliveryType1.[NotificationDeliveryTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spNotifications_GetAllNotificationDeliveryLogDataByMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'MetaPartnerID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @MetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all NotificationDeliveryLog data by a key.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='MetaPartnerID'

/*
** parameter validation
*/
IF (@MetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  NotificationDeliveryLog1.[NotificationLogID]
		, NotificationDeliveryLog1.[MetaPartnerID]
		, NotificationDeliveryLog1.[NotificationDeliveryTypeCode]
		, NotificationDeliveryLog1.[CreatedByUserID]
		, NotificationDeliveryLog1.[CreatedDate]
		, NotificationDeliveryLog1.[LastModifiedByUserID]
		, NotificationDeliveryLog1.[LastModifiedDate]
		, NotificationDeliveryLog1.[Timestamp]
		, NotificationDeliveryType1.[NotificationDeliveryTypeName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[trelNotifications_NotificationDeliveryLog] NotificationDeliveryLog1
	INNER JOIN [dbo].[tlkpNotifications_NotificationDeliveryType] NotificationDeliveryType1 ON NotificationDeliveryType1.[NotificationDeliveryTypeCode]=NotificationDeliveryLog1.[NotificationDeliveryTypeCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=NotificationDeliveryLog1.[MetaPartnerID]
	WHERE 
		NotificationDeliveryLog1.[MetaPartnerID] = @MetaPartnerID

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  NotificationDeliveryLog1.[NotificationLogID]
		, NotificationDeliveryLog1.[MetaPartnerID]
		, NotificationDeliveryLog1.[NotificationDeliveryTypeCode]
		, NotificationDeliveryLog1.[CreatedByUserID]
		, NotificationDeliveryLog1.[CreatedDate]
		, NotificationDeliveryLog1.[LastModifiedByUserID]
		, NotificationDeliveryLog1.[LastModifiedDate]
		, NotificationDeliveryLog1.[Timestamp]
		, NotificationDeliveryType1.[NotificationDeliveryTypeName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[trelNotifications_NotificationDeliveryLog] NotificationDeliveryLog1
	INNER JOIN [dbo].[tlkpNotifications_NotificationDeliveryType] NotificationDeliveryType1 ON NotificationDeliveryType1.[NotificationDeliveryTypeCode]=NotificationDeliveryLog1.[NotificationDeliveryTypeCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=NotificationDeliveryLog1.[MetaPartnerID]
	WHERE 
		NotificationDeliveryLog1.[MetaPartnerID] = @MetaPartnerID

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationLogID' THEN NotificationDeliveryLog1.[NotificationLogID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationLogID' THEN NotificationDeliveryLog1.[NotificationLogID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN NotificationDeliveryLog1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN NotificationDeliveryLog1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationDeliveryTypeCode' THEN NotificationDeliveryLog1.[NotificationDeliveryTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationDeliveryTypeCode' THEN NotificationDeliveryLog1.[NotificationDeliveryTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN NotificationDeliveryLog1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN NotificationDeliveryLog1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN NotificationDeliveryLog1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN NotificationDeliveryLog1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN NotificationDeliveryLog1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN NotificationDeliveryLog1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN NotificationDeliveryLog1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN NotificationDeliveryLog1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN NotificationDeliveryLog1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN NotificationDeliveryLog1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationDeliveryTypeName' THEN NotificationDeliveryType1.[NotificationDeliveryTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationDeliveryTypeName' THEN NotificationDeliveryType1.[NotificationDeliveryTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spNotifications_GetAllNotificationDeliveryLogDataByNotificationDeliveryTypeCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'NotificationDeliveryTypeCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @NotificationDeliveryTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all NotificationDeliveryLog data by a key.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='NotificationDeliveryTypeCode'

/*
** parameter validation
*/
IF (@NotificationDeliveryTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  NotificationDeliveryLog1.[NotificationLogID]
		, NotificationDeliveryLog1.[MetaPartnerID]
		, NotificationDeliveryLog1.[NotificationDeliveryTypeCode]
		, NotificationDeliveryLog1.[CreatedByUserID]
		, NotificationDeliveryLog1.[CreatedDate]
		, NotificationDeliveryLog1.[LastModifiedByUserID]
		, NotificationDeliveryLog1.[LastModifiedDate]
		, NotificationDeliveryLog1.[Timestamp]
		, NotificationDeliveryType1.[NotificationDeliveryTypeName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[trelNotifications_NotificationDeliveryLog] NotificationDeliveryLog1
	INNER JOIN [dbo].[tlkpNotifications_NotificationDeliveryType] NotificationDeliveryType1 ON NotificationDeliveryType1.[NotificationDeliveryTypeCode]=NotificationDeliveryLog1.[NotificationDeliveryTypeCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=NotificationDeliveryLog1.[MetaPartnerID]
	WHERE 
		NotificationDeliveryLog1.[NotificationDeliveryTypeCode] = @NotificationDeliveryTypeCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  NotificationDeliveryLog1.[NotificationLogID]
		, NotificationDeliveryLog1.[MetaPartnerID]
		, NotificationDeliveryLog1.[NotificationDeliveryTypeCode]
		, NotificationDeliveryLog1.[CreatedByUserID]
		, NotificationDeliveryLog1.[CreatedDate]
		, NotificationDeliveryLog1.[LastModifiedByUserID]
		, NotificationDeliveryLog1.[LastModifiedDate]
		, NotificationDeliveryLog1.[Timestamp]
		, NotificationDeliveryType1.[NotificationDeliveryTypeName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[trelNotifications_NotificationDeliveryLog] NotificationDeliveryLog1
	INNER JOIN [dbo].[tlkpNotifications_NotificationDeliveryType] NotificationDeliveryType1 ON NotificationDeliveryType1.[NotificationDeliveryTypeCode]=NotificationDeliveryLog1.[NotificationDeliveryTypeCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=NotificationDeliveryLog1.[MetaPartnerID]
	WHERE 
		NotificationDeliveryLog1.[NotificationDeliveryTypeCode] = @NotificationDeliveryTypeCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationLogID' THEN NotificationDeliveryLog1.[NotificationLogID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationLogID' THEN NotificationDeliveryLog1.[NotificationLogID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN NotificationDeliveryLog1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN NotificationDeliveryLog1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationDeliveryTypeCode' THEN NotificationDeliveryLog1.[NotificationDeliveryTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationDeliveryTypeCode' THEN NotificationDeliveryLog1.[NotificationDeliveryTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN NotificationDeliveryLog1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN NotificationDeliveryLog1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN NotificationDeliveryLog1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN NotificationDeliveryLog1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN NotificationDeliveryLog1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN NotificationDeliveryLog1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN NotificationDeliveryLog1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN NotificationDeliveryLog1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN NotificationDeliveryLog1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN NotificationDeliveryLog1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationDeliveryTypeName' THEN NotificationDeliveryType1.[NotificationDeliveryTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationDeliveryTypeName' THEN NotificationDeliveryType1.[NotificationDeliveryTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spNotifications_GetAllNotificationDeliveryLogDataByNotificationLogID
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'NotificationLogID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @NotificationLogID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all NotificationDeliveryLog data by a key.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='NotificationLogID'

/*
** parameter validation
*/
IF (@NotificationLogID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  NotificationDeliveryLog1.[NotificationLogID]
		, NotificationDeliveryLog1.[MetaPartnerID]
		, NotificationDeliveryLog1.[NotificationDeliveryTypeCode]
		, NotificationDeliveryLog1.[CreatedByUserID]
		, NotificationDeliveryLog1.[CreatedDate]
		, NotificationDeliveryLog1.[LastModifiedByUserID]
		, NotificationDeliveryLog1.[LastModifiedDate]
		, NotificationDeliveryLog1.[Timestamp]
		, NotificationDeliveryType1.[NotificationDeliveryTypeName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[trelNotifications_NotificationDeliveryLog] NotificationDeliveryLog1
	INNER JOIN [dbo].[tlkpNotifications_NotificationDeliveryType] NotificationDeliveryType1 ON NotificationDeliveryType1.[NotificationDeliveryTypeCode]=NotificationDeliveryLog1.[NotificationDeliveryTypeCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=NotificationDeliveryLog1.[MetaPartnerID]
	WHERE 
		NotificationDeliveryLog1.[NotificationLogID] = @NotificationLogID

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  NotificationDeliveryLog1.[NotificationLogID]
		, NotificationDeliveryLog1.[MetaPartnerID]
		, NotificationDeliveryLog1.[NotificationDeliveryTypeCode]
		, NotificationDeliveryLog1.[CreatedByUserID]
		, NotificationDeliveryLog1.[CreatedDate]
		, NotificationDeliveryLog1.[LastModifiedByUserID]
		, NotificationDeliveryLog1.[LastModifiedDate]
		, NotificationDeliveryLog1.[Timestamp]
		, NotificationDeliveryType1.[NotificationDeliveryTypeName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[trelNotifications_NotificationDeliveryLog] NotificationDeliveryLog1
	INNER JOIN [dbo].[tlkpNotifications_NotificationDeliveryType] NotificationDeliveryType1 ON NotificationDeliveryType1.[NotificationDeliveryTypeCode]=NotificationDeliveryLog1.[NotificationDeliveryTypeCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=NotificationDeliveryLog1.[MetaPartnerID]
	WHERE 
		NotificationDeliveryLog1.[NotificationLogID] = @NotificationLogID

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationLogID' THEN NotificationDeliveryLog1.[NotificationLogID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationLogID' THEN NotificationDeliveryLog1.[NotificationLogID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerID' THEN NotificationDeliveryLog1.[MetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerID' THEN NotificationDeliveryLog1.[MetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationDeliveryTypeCode' THEN NotificationDeliveryLog1.[NotificationDeliveryTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationDeliveryTypeCode' THEN NotificationDeliveryLog1.[NotificationDeliveryTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN NotificationDeliveryLog1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN NotificationDeliveryLog1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN NotificationDeliveryLog1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN NotificationDeliveryLog1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN NotificationDeliveryLog1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN NotificationDeliveryLog1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN NotificationDeliveryLog1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN NotificationDeliveryLog1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN NotificationDeliveryLog1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN NotificationDeliveryLog1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationDeliveryTypeName' THEN NotificationDeliveryType1.[NotificationDeliveryTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationDeliveryTypeName' THEN NotificationDeliveryType1.[NotificationDeliveryTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spNotifications_GetAllNotificationDeliveryTypeData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'NotificationDeliveryTypeCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all NotificationDeliveryType data.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='NotificationDeliveryTypeCode'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  NotificationDeliveryType1.[NotificationDeliveryTypeCode]
		, NotificationDeliveryType1.[NotificationDeliveryTypeName]
		, NotificationDeliveryType1.[Description]
		, NotificationDeliveryType1.[IsActive]
		, NotificationDeliveryType1.[CreatedByUserID]
		, NotificationDeliveryType1.[CreatedDate]
		, NotificationDeliveryType1.[LastModifiedByUserID]
		, NotificationDeliveryType1.[LastModifiedDate]
		, NotificationDeliveryType1.[Timestamp]
	FROM
	      [dbo].[tlkpNotifications_NotificationDeliveryType] NotificationDeliveryType1
	WHERE 
		NotificationDeliveryType1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN NotificationDeliveryType1.[IsActive] ELSE 1 END

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  NotificationDeliveryType1.[NotificationDeliveryTypeCode]
		, NotificationDeliveryType1.[NotificationDeliveryTypeName]
		, NotificationDeliveryType1.[Description]
		, NotificationDeliveryType1.[IsActive]
		, NotificationDeliveryType1.[CreatedByUserID]
		, NotificationDeliveryType1.[CreatedDate]
		, NotificationDeliveryType1.[LastModifiedByUserID]
		, NotificationDeliveryType1.[LastModifiedDate]
		, NotificationDeliveryType1.[Timestamp]
	FROM
	      [dbo].[tlkpNotifications_NotificationDeliveryType] NotificationDeliveryType1
	WHERE 
		NotificationDeliveryType1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN NotificationDeliveryType1.[IsActive] ELSE 1 END

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationDeliveryTypeCode' THEN NotificationDeliveryType1.[NotificationDeliveryTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationDeliveryTypeCode' THEN NotificationDeliveryType1.[NotificationDeliveryTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationDeliveryTypeName' THEN NotificationDeliveryType1.[NotificationDeliveryTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationDeliveryTypeName' THEN NotificationDeliveryType1.[NotificationDeliveryTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN NotificationDeliveryType1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN NotificationDeliveryType1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN NotificationDeliveryType1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN NotificationDeliveryType1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN NotificationDeliveryType1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN NotificationDeliveryType1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN NotificationDeliveryType1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN NotificationDeliveryType1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN NotificationDeliveryType1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN NotificationDeliveryType1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN NotificationDeliveryType1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN NotificationDeliveryType1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN NotificationDeliveryType1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN NotificationDeliveryType1.[Timestamp] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spNotifications_GetAllNotificationLogData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'NotificationLogID'
	, @SortDirection nvarchar(20) = 'Ascending'
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all NotificationLog data.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='NotificationLogID'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  NotificationLog1.[NotificationLogID]
		, NotificationLog1.[NotificationCode]
		, NotificationLog1.[NotificationSubject]
		, NotificationLog1.[NotificationMessage]
		, NotificationLog1.[LocaleCode]
		, NotificationLog1.[CreatedByUserID]
		, NotificationLog1.[CreatedDate]
		, NotificationLog1.[LastModifiedByUserID]
		, NotificationLog1.[LastModifiedDate]
		, NotificationLog1.[Timestamp]
		, Notification1.[NotificationName]
		, Locale1.[LocaleName]
	FROM
	      [dbo].[tblNotifications_NotificationLog] NotificationLog1
	INNER JOIN [dbo].[tblNotifications_Notification] Notification1 ON Notification1.[NotificationCode]=NotificationLog1.[NotificationCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=NotificationLog1.[LocaleCode]

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  NotificationLog1.[NotificationLogID]
		, NotificationLog1.[NotificationCode]
		, NotificationLog1.[NotificationSubject]
		, NotificationLog1.[NotificationMessage]
		, NotificationLog1.[LocaleCode]
		, NotificationLog1.[CreatedByUserID]
		, NotificationLog1.[CreatedDate]
		, NotificationLog1.[LastModifiedByUserID]
		, NotificationLog1.[LastModifiedDate]
		, NotificationLog1.[Timestamp]
		, Notification1.[NotificationName]
		, Locale1.[LocaleName]
	FROM
	      [dbo].[tblNotifications_NotificationLog] NotificationLog1
	INNER JOIN [dbo].[tblNotifications_Notification] Notification1 ON Notification1.[NotificationCode]=NotificationLog1.[NotificationCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=NotificationLog1.[LocaleCode]

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationLogID' THEN NotificationLog1.[NotificationLogID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationLogID' THEN NotificationLog1.[NotificationLogID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationCode' THEN NotificationLog1.[NotificationCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationCode' THEN NotificationLog1.[NotificationCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationSubject' THEN NotificationLog1.[NotificationSubject] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationSubject' THEN NotificationLog1.[NotificationSubject] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN NotificationLog1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN NotificationLog1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN NotificationLog1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN NotificationLog1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN NotificationLog1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN NotificationLog1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN NotificationLog1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN NotificationLog1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN NotificationLog1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN NotificationLog1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN NotificationLog1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN NotificationLog1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationName' THEN Notification1.[NotificationName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationName' THEN Notification1.[NotificationName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spNotifications_GetAllNotificationLogDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'NotificationCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @NotificationCode int
	, @LocaleCode int
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all NotificationLog data by criteria.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='NotificationCode'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  NotificationLog1.[NotificationLogID]
		, NotificationLog1.[NotificationCode]
		, NotificationLog1.[NotificationSubject]
		, NotificationLog1.[NotificationMessage]
		, NotificationLog1.[LocaleCode]
		, NotificationLog1.[CreatedByUserID]
		, NotificationLog1.[CreatedDate]
		, NotificationLog1.[LastModifiedByUserID]
		, NotificationLog1.[LastModifiedDate]
		, NotificationLog1.[Timestamp]
		, Notification1.[NotificationName]
		, Locale1.[LocaleName]
	FROM
	      [dbo].[tblNotifications_NotificationLog] NotificationLog1
	INNER JOIN [dbo].[tblNotifications_Notification] Notification1 ON Notification1.[NotificationCode]=NotificationLog1.[NotificationCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=NotificationLog1.[LocaleCode]
	WHERE 
		(@NotificationCode IS NULL OR NotificationLog1.[NotificationCode] = @NotificationCode)
		AND (@LocaleCode IS NULL OR NotificationLog1.[LocaleCode] = @LocaleCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (NotificationLog1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (NotificationLog1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  NotificationLog1.[NotificationLogID]
		, NotificationLog1.[NotificationCode]
		, NotificationLog1.[NotificationSubject]
		, NotificationLog1.[NotificationMessage]
		, NotificationLog1.[LocaleCode]
		, NotificationLog1.[CreatedByUserID]
		, NotificationLog1.[CreatedDate]
		, NotificationLog1.[LastModifiedByUserID]
		, NotificationLog1.[LastModifiedDate]
		, NotificationLog1.[Timestamp]
		, Notification1.[NotificationName]
		, Locale1.[LocaleName]
	FROM
	      [dbo].[tblNotifications_NotificationLog] NotificationLog1
	INNER JOIN [dbo].[tblNotifications_Notification] Notification1 ON Notification1.[NotificationCode]=NotificationLog1.[NotificationCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=NotificationLog1.[LocaleCode]
	WHERE 
		(@NotificationCode IS NULL OR NotificationLog1.[NotificationCode] = @NotificationCode)
		AND (@LocaleCode IS NULL OR NotificationLog1.[LocaleCode] = @LocaleCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (NotificationLog1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (NotificationLog1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationLogID' THEN NotificationLog1.[NotificationLogID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationLogID' THEN NotificationLog1.[NotificationLogID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationCode' THEN NotificationLog1.[NotificationCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationCode' THEN NotificationLog1.[NotificationCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationSubject' THEN NotificationLog1.[NotificationSubject] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationSubject' THEN NotificationLog1.[NotificationSubject] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN NotificationLog1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN NotificationLog1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN NotificationLog1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN NotificationLog1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN NotificationLog1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN NotificationLog1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN NotificationLog1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN NotificationLog1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN NotificationLog1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN NotificationLog1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN NotificationLog1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN NotificationLog1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationName' THEN Notification1.[NotificationName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationName' THEN Notification1.[NotificationName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spNotifications_GetAllNotificationLogDataByLocaleCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'LocaleCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @LocaleCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all NotificationLog data by a key.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='LocaleCode'

/*
** parameter validation
*/
IF (@LocaleCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  NotificationLog1.[NotificationLogID]
		, NotificationLog1.[NotificationCode]
		, NotificationLog1.[NotificationSubject]
		, NotificationLog1.[NotificationMessage]
		, NotificationLog1.[LocaleCode]
		, NotificationLog1.[CreatedByUserID]
		, NotificationLog1.[CreatedDate]
		, NotificationLog1.[LastModifiedByUserID]
		, NotificationLog1.[LastModifiedDate]
		, NotificationLog1.[Timestamp]
		, Notification1.[NotificationName]
		, Locale1.[LocaleName]
	FROM
	      [dbo].[tblNotifications_NotificationLog] NotificationLog1
	INNER JOIN [dbo].[tblNotifications_Notification] Notification1 ON Notification1.[NotificationCode]=NotificationLog1.[NotificationCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=NotificationLog1.[LocaleCode]
	WHERE 
		NotificationLog1.[LocaleCode] = @LocaleCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  NotificationLog1.[NotificationLogID]
		, NotificationLog1.[NotificationCode]
		, NotificationLog1.[NotificationSubject]
		, NotificationLog1.[NotificationMessage]
		, NotificationLog1.[LocaleCode]
		, NotificationLog1.[CreatedByUserID]
		, NotificationLog1.[CreatedDate]
		, NotificationLog1.[LastModifiedByUserID]
		, NotificationLog1.[LastModifiedDate]
		, NotificationLog1.[Timestamp]
		, Notification1.[NotificationName]
		, Locale1.[LocaleName]
	FROM
	      [dbo].[tblNotifications_NotificationLog] NotificationLog1
	INNER JOIN [dbo].[tblNotifications_Notification] Notification1 ON Notification1.[NotificationCode]=NotificationLog1.[NotificationCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=NotificationLog1.[LocaleCode]
	WHERE 
		NotificationLog1.[LocaleCode] = @LocaleCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationLogID' THEN NotificationLog1.[NotificationLogID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationLogID' THEN NotificationLog1.[NotificationLogID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationCode' THEN NotificationLog1.[NotificationCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationCode' THEN NotificationLog1.[NotificationCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationSubject' THEN NotificationLog1.[NotificationSubject] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationSubject' THEN NotificationLog1.[NotificationSubject] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN NotificationLog1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN NotificationLog1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN NotificationLog1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN NotificationLog1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN NotificationLog1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN NotificationLog1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN NotificationLog1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN NotificationLog1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN NotificationLog1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN NotificationLog1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN NotificationLog1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN NotificationLog1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationName' THEN Notification1.[NotificationName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationName' THEN Notification1.[NotificationName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spNotifications_GetAllNotificationLogDataByNotificationCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'NotificationCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @NotificationCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all NotificationLog data by a key.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='NotificationCode'

/*
** parameter validation
*/
IF (@NotificationCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  NotificationLog1.[NotificationLogID]
		, NotificationLog1.[NotificationCode]
		, NotificationLog1.[NotificationSubject]
		, NotificationLog1.[NotificationMessage]
		, NotificationLog1.[LocaleCode]
		, NotificationLog1.[CreatedByUserID]
		, NotificationLog1.[CreatedDate]
		, NotificationLog1.[LastModifiedByUserID]
		, NotificationLog1.[LastModifiedDate]
		, NotificationLog1.[Timestamp]
		, Notification1.[NotificationName]
		, Locale1.[LocaleName]
	FROM
	      [dbo].[tblNotifications_NotificationLog] NotificationLog1
	INNER JOIN [dbo].[tblNotifications_Notification] Notification1 ON Notification1.[NotificationCode]=NotificationLog1.[NotificationCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=NotificationLog1.[LocaleCode]
	WHERE 
		NotificationLog1.[NotificationCode] = @NotificationCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  NotificationLog1.[NotificationLogID]
		, NotificationLog1.[NotificationCode]
		, NotificationLog1.[NotificationSubject]
		, NotificationLog1.[NotificationMessage]
		, NotificationLog1.[LocaleCode]
		, NotificationLog1.[CreatedByUserID]
		, NotificationLog1.[CreatedDate]
		, NotificationLog1.[LastModifiedByUserID]
		, NotificationLog1.[LastModifiedDate]
		, NotificationLog1.[Timestamp]
		, Notification1.[NotificationName]
		, Locale1.[LocaleName]
	FROM
	      [dbo].[tblNotifications_NotificationLog] NotificationLog1
	INNER JOIN [dbo].[tblNotifications_Notification] Notification1 ON Notification1.[NotificationCode]=NotificationLog1.[NotificationCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=NotificationLog1.[LocaleCode]
	WHERE 
		NotificationLog1.[NotificationCode] = @NotificationCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationLogID' THEN NotificationLog1.[NotificationLogID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationLogID' THEN NotificationLog1.[NotificationLogID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationCode' THEN NotificationLog1.[NotificationCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationCode' THEN NotificationLog1.[NotificationCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationSubject' THEN NotificationLog1.[NotificationSubject] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationSubject' THEN NotificationLog1.[NotificationSubject] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN NotificationLog1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN NotificationLog1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN NotificationLog1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN NotificationLog1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN NotificationLog1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN NotificationLog1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN NotificationLog1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN NotificationLog1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN NotificationLog1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN NotificationLog1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN NotificationLog1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN NotificationLog1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationName' THEN Notification1.[NotificationName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationName' THEN Notification1.[NotificationName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spNotifications_GetAllNotificationTemplateData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'NotificationTemplateID'
	, @SortDirection nvarchar(20) = 'Ascending'
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all NotificationTemplate data.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='NotificationTemplateID'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  NotificationTemplate1.[NotificationTemplateID]
		, NotificationTemplate1.[NotificationCode]
		, NotificationTemplate1.[NotificationSubjectTemplate]
		, NotificationTemplate1.[NotificationMessageTemplate]
		, NotificationTemplate1.[LocaleCode]
		, NotificationTemplate1.[CreatedByUserID]
		, NotificationTemplate1.[CreatedDate]
		, NotificationTemplate1.[LastModifiedByUserID]
		, NotificationTemplate1.[LastModifiedDate]
		, NotificationTemplate1.[Timestamp]
		, Notification1.[NotificationName]
		, Locale1.[LocaleName]
	FROM
	      [dbo].[tblNotifications_NotificationTemplate] NotificationTemplate1
	INNER JOIN [dbo].[tblNotifications_Notification] Notification1 ON Notification1.[NotificationCode]=NotificationTemplate1.[NotificationCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=NotificationTemplate1.[LocaleCode]

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  NotificationTemplate1.[NotificationTemplateID]
		, NotificationTemplate1.[NotificationCode]
		, NotificationTemplate1.[NotificationSubjectTemplate]
		, NotificationTemplate1.[NotificationMessageTemplate]
		, NotificationTemplate1.[LocaleCode]
		, NotificationTemplate1.[CreatedByUserID]
		, NotificationTemplate1.[CreatedDate]
		, NotificationTemplate1.[LastModifiedByUserID]
		, NotificationTemplate1.[LastModifiedDate]
		, NotificationTemplate1.[Timestamp]
		, Notification1.[NotificationName]
		, Locale1.[LocaleName]
	FROM
	      [dbo].[tblNotifications_NotificationTemplate] NotificationTemplate1
	INNER JOIN [dbo].[tblNotifications_Notification] Notification1 ON Notification1.[NotificationCode]=NotificationTemplate1.[NotificationCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=NotificationTemplate1.[LocaleCode]

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationTemplateID' THEN NotificationTemplate1.[NotificationTemplateID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationTemplateID' THEN NotificationTemplate1.[NotificationTemplateID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationCode' THEN NotificationTemplate1.[NotificationCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationCode' THEN NotificationTemplate1.[NotificationCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationSubjectTemplate' THEN NotificationTemplate1.[NotificationSubjectTemplate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationSubjectTemplate' THEN NotificationTemplate1.[NotificationSubjectTemplate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN NotificationTemplate1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN NotificationTemplate1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN NotificationTemplate1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN NotificationTemplate1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN NotificationTemplate1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN NotificationTemplate1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN NotificationTemplate1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN NotificationTemplate1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN NotificationTemplate1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN NotificationTemplate1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN NotificationTemplate1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN NotificationTemplate1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationName' THEN Notification1.[NotificationName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationName' THEN Notification1.[NotificationName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spNotifications_GetAllNotificationTemplateDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'NotificationCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @NotificationCode int
	, @LocaleCode int
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all NotificationTemplate data by criteria.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='NotificationCode'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  NotificationTemplate1.[NotificationTemplateID]
		, NotificationTemplate1.[NotificationCode]
		, NotificationTemplate1.[NotificationSubjectTemplate]
		, NotificationTemplate1.[NotificationMessageTemplate]
		, NotificationTemplate1.[LocaleCode]
		, NotificationTemplate1.[CreatedByUserID]
		, NotificationTemplate1.[CreatedDate]
		, NotificationTemplate1.[LastModifiedByUserID]
		, NotificationTemplate1.[LastModifiedDate]
		, NotificationTemplate1.[Timestamp]
		, Notification1.[NotificationName]
		, Locale1.[LocaleName]
	FROM
	      [dbo].[tblNotifications_NotificationTemplate] NotificationTemplate1
	INNER JOIN [dbo].[tblNotifications_Notification] Notification1 ON Notification1.[NotificationCode]=NotificationTemplate1.[NotificationCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=NotificationTemplate1.[LocaleCode]
	WHERE 
		(@NotificationCode IS NULL OR NotificationTemplate1.[NotificationCode] = @NotificationCode)
		AND (@LocaleCode IS NULL OR NotificationTemplate1.[LocaleCode] = @LocaleCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (NotificationTemplate1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (NotificationTemplate1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  NotificationTemplate1.[NotificationTemplateID]
		, NotificationTemplate1.[NotificationCode]
		, NotificationTemplate1.[NotificationSubjectTemplate]
		, NotificationTemplate1.[NotificationMessageTemplate]
		, NotificationTemplate1.[LocaleCode]
		, NotificationTemplate1.[CreatedByUserID]
		, NotificationTemplate1.[CreatedDate]
		, NotificationTemplate1.[LastModifiedByUserID]
		, NotificationTemplate1.[LastModifiedDate]
		, NotificationTemplate1.[Timestamp]
		, Notification1.[NotificationName]
		, Locale1.[LocaleName]
	FROM
	      [dbo].[tblNotifications_NotificationTemplate] NotificationTemplate1
	INNER JOIN [dbo].[tblNotifications_Notification] Notification1 ON Notification1.[NotificationCode]=NotificationTemplate1.[NotificationCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=NotificationTemplate1.[LocaleCode]
	WHERE 
		(@NotificationCode IS NULL OR NotificationTemplate1.[NotificationCode] = @NotificationCode)
		AND (@LocaleCode IS NULL OR NotificationTemplate1.[LocaleCode] = @LocaleCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (NotificationTemplate1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (NotificationTemplate1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationTemplateID' THEN NotificationTemplate1.[NotificationTemplateID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationTemplateID' THEN NotificationTemplate1.[NotificationTemplateID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationCode' THEN NotificationTemplate1.[NotificationCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationCode' THEN NotificationTemplate1.[NotificationCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationSubjectTemplate' THEN NotificationTemplate1.[NotificationSubjectTemplate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationSubjectTemplate' THEN NotificationTemplate1.[NotificationSubjectTemplate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN NotificationTemplate1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN NotificationTemplate1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN NotificationTemplate1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN NotificationTemplate1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN NotificationTemplate1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN NotificationTemplate1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN NotificationTemplate1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN NotificationTemplate1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN NotificationTemplate1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN NotificationTemplate1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN NotificationTemplate1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN NotificationTemplate1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationName' THEN Notification1.[NotificationName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationName' THEN Notification1.[NotificationName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spNotifications_GetAllNotificationTemplateDataByLocaleCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'LocaleCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @LocaleCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all NotificationTemplate data by a key.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='LocaleCode'

/*
** parameter validation
*/
IF (@LocaleCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  NotificationTemplate1.[NotificationTemplateID]
		, NotificationTemplate1.[NotificationCode]
		, NotificationTemplate1.[NotificationSubjectTemplate]
		, NotificationTemplate1.[NotificationMessageTemplate]
		, NotificationTemplate1.[LocaleCode]
		, NotificationTemplate1.[CreatedByUserID]
		, NotificationTemplate1.[CreatedDate]
		, NotificationTemplate1.[LastModifiedByUserID]
		, NotificationTemplate1.[LastModifiedDate]
		, NotificationTemplate1.[Timestamp]
		, Notification1.[NotificationName]
		, Locale1.[LocaleName]
	FROM
	      [dbo].[tblNotifications_NotificationTemplate] NotificationTemplate1
	INNER JOIN [dbo].[tblNotifications_Notification] Notification1 ON Notification1.[NotificationCode]=NotificationTemplate1.[NotificationCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=NotificationTemplate1.[LocaleCode]
	WHERE 
		NotificationTemplate1.[LocaleCode] = @LocaleCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  NotificationTemplate1.[NotificationTemplateID]
		, NotificationTemplate1.[NotificationCode]
		, NotificationTemplate1.[NotificationSubjectTemplate]
		, NotificationTemplate1.[NotificationMessageTemplate]
		, NotificationTemplate1.[LocaleCode]
		, NotificationTemplate1.[CreatedByUserID]
		, NotificationTemplate1.[CreatedDate]
		, NotificationTemplate1.[LastModifiedByUserID]
		, NotificationTemplate1.[LastModifiedDate]
		, NotificationTemplate1.[Timestamp]
		, Notification1.[NotificationName]
		, Locale1.[LocaleName]
	FROM
	      [dbo].[tblNotifications_NotificationTemplate] NotificationTemplate1
	INNER JOIN [dbo].[tblNotifications_Notification] Notification1 ON Notification1.[NotificationCode]=NotificationTemplate1.[NotificationCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=NotificationTemplate1.[LocaleCode]
	WHERE 
		NotificationTemplate1.[LocaleCode] = @LocaleCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationTemplateID' THEN NotificationTemplate1.[NotificationTemplateID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationTemplateID' THEN NotificationTemplate1.[NotificationTemplateID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationCode' THEN NotificationTemplate1.[NotificationCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationCode' THEN NotificationTemplate1.[NotificationCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationSubjectTemplate' THEN NotificationTemplate1.[NotificationSubjectTemplate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationSubjectTemplate' THEN NotificationTemplate1.[NotificationSubjectTemplate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN NotificationTemplate1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN NotificationTemplate1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN NotificationTemplate1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN NotificationTemplate1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN NotificationTemplate1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN NotificationTemplate1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN NotificationTemplate1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN NotificationTemplate1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN NotificationTemplate1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN NotificationTemplate1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN NotificationTemplate1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN NotificationTemplate1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationName' THEN Notification1.[NotificationName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationName' THEN Notification1.[NotificationName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spNotifications_GetAllNotificationTemplateDataByNotificationCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'NotificationCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @NotificationCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all NotificationTemplate data by a key.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='NotificationCode'

/*
** parameter validation
*/
IF (@NotificationCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  NotificationTemplate1.[NotificationTemplateID]
		, NotificationTemplate1.[NotificationCode]
		, NotificationTemplate1.[NotificationSubjectTemplate]
		, NotificationTemplate1.[NotificationMessageTemplate]
		, NotificationTemplate1.[LocaleCode]
		, NotificationTemplate1.[CreatedByUserID]
		, NotificationTemplate1.[CreatedDate]
		, NotificationTemplate1.[LastModifiedByUserID]
		, NotificationTemplate1.[LastModifiedDate]
		, NotificationTemplate1.[Timestamp]
		, Notification1.[NotificationName]
		, Locale1.[LocaleName]
	FROM
	      [dbo].[tblNotifications_NotificationTemplate] NotificationTemplate1
	INNER JOIN [dbo].[tblNotifications_Notification] Notification1 ON Notification1.[NotificationCode]=NotificationTemplate1.[NotificationCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=NotificationTemplate1.[LocaleCode]
	WHERE 
		NotificationTemplate1.[NotificationCode] = @NotificationCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  NotificationTemplate1.[NotificationTemplateID]
		, NotificationTemplate1.[NotificationCode]
		, NotificationTemplate1.[NotificationSubjectTemplate]
		, NotificationTemplate1.[NotificationMessageTemplate]
		, NotificationTemplate1.[LocaleCode]
		, NotificationTemplate1.[CreatedByUserID]
		, NotificationTemplate1.[CreatedDate]
		, NotificationTemplate1.[LastModifiedByUserID]
		, NotificationTemplate1.[LastModifiedDate]
		, NotificationTemplate1.[Timestamp]
		, Notification1.[NotificationName]
		, Locale1.[LocaleName]
	FROM
	      [dbo].[tblNotifications_NotificationTemplate] NotificationTemplate1
	INNER JOIN [dbo].[tblNotifications_Notification] Notification1 ON Notification1.[NotificationCode]=NotificationTemplate1.[NotificationCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=NotificationTemplate1.[LocaleCode]
	WHERE 
		NotificationTemplate1.[NotificationCode] = @NotificationCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationTemplateID' THEN NotificationTemplate1.[NotificationTemplateID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationTemplateID' THEN NotificationTemplate1.[NotificationTemplateID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationCode' THEN NotificationTemplate1.[NotificationCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationCode' THEN NotificationTemplate1.[NotificationCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationSubjectTemplate' THEN NotificationTemplate1.[NotificationSubjectTemplate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationSubjectTemplate' THEN NotificationTemplate1.[NotificationSubjectTemplate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN NotificationTemplate1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN NotificationTemplate1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN NotificationTemplate1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN NotificationTemplate1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN NotificationTemplate1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN NotificationTemplate1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN NotificationTemplate1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN NotificationTemplate1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN NotificationTemplate1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN NotificationTemplate1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN NotificationTemplate1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN NotificationTemplate1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationName' THEN Notification1.[NotificationName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationName' THEN Notification1.[NotificationName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spNotifications_GetManyNotificationAttributeValueLogDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @StartIndex int = 1
	, @PageSize int = 50
	, @MaximumListSize int = 0
	, @MaximumListSizeExceeded bit = 0 OUTPUT
	, @TotalRecords int = 0 OUTPUT
	, @SortColumn sysname = 'AttributeValue'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @AttributeValue nvarchar(1000) = NULL
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets many NotificationAttributeValueLog data by criteria.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

DECLARE @vEndIndex int
IF (@StartIndex < 1) SET @StartIndex=1
IF (@PageSize < 1) SET @PageSize=1
SET @vEndIndex = @StartIndex + @Pagesize
IF (@SortColumn = '') SET @SortColumn='AttributeValue'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

DECLARE @OrderedRecords TABLE
(
     SearchOrderID int IDENTITY (1, 1) NOT NULL
    , NotificationAttributeValueLogID uniqueidentifier
)
IF (@SortDirection = 'Random')
BEGIN
	INSERT INTO @OrderedRecords (NotificationAttributeValueLogID)
	SELECT
		  NotificationAttributeValueLog1.[NotificationAttributeValueLogID]
	FROM
	      [dbo].[tblNotifications_NotificationAttributeValueLog] NotificationAttributeValueLog1
	WHERE 
		(@AttributeValue IS NULL OR NotificationAttributeValueLog1.[AttributeValue] like '%' + @AttributeValue + '%')
		AND ((@LastModifiedDateStart  IS NULL) OR (NotificationAttributeValueLog1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (NotificationAttributeValueLog1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY NewID()
END
ELSE
BEGIN
	INSERT INTO @OrderedRecords (NotificationAttributeValueLogID)
	SELECT
		  NotificationAttributeValueLog1.[NotificationAttributeValueLogID]
	FROM
	      [dbo].[tblNotifications_NotificationAttributeValueLog] NotificationAttributeValueLog1
	WHERE 
		(@AttributeValue IS NULL OR NotificationAttributeValueLog1.[AttributeValue] like '%' + @AttributeValue + '%')
		AND ((@LastModifiedDateStart  IS NULL) OR (NotificationAttributeValueLog1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (NotificationAttributeValueLog1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationAttributeValueLogID' THEN NotificationAttributeValueLog1.[NotificationAttributeValueLogID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationAttributeValueLogID' THEN NotificationAttributeValueLog1.[NotificationAttributeValueLogID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationLogID' THEN NotificationAttributeValueLog1.[NotificationLogID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationLogID' THEN NotificationAttributeValueLog1.[NotificationLogID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BaseAttributeValueID' THEN NotificationAttributeValueLog1.[BaseAttributeValueID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BaseAttributeValueID' THEN NotificationAttributeValueLog1.[BaseAttributeValueID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeValue' THEN NotificationAttributeValueLog1.[AttributeValue] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeValue' THEN NotificationAttributeValueLog1.[AttributeValue] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN NotificationAttributeValueLog1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN NotificationAttributeValueLog1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN NotificationAttributeValueLog1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN NotificationAttributeValueLog1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN NotificationAttributeValueLog1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN NotificationAttributeValueLog1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN NotificationAttributeValueLog1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN NotificationAttributeValueLog1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN NotificationAttributeValueLog1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN NotificationAttributeValueLog1.[Timestamp] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END

BEGIN
	SET @TotalRecords = (SELECT Count (*) FROM @OrderedRecords)
	IF @MaximumListSize > 0
	BEGIN
		IF @TotalRecords > @MaximumListSize
		BEGIN
			SET @MaximumListSizeExceeded = 1
			SET @TotalRecords = @MaximumListSize
		END
	END

	/* get search results */
	SELECT
		  NotificationAttributeValueLog1.[NotificationAttributeValueLogID]
		, NotificationAttributeValueLog1.[NotificationLogID]
		, NotificationAttributeValueLog1.[BaseAttributeValueID]
		, NotificationAttributeValueLog1.[AttributeValue]
		, NotificationAttributeValueLog1.[CreatedByUserID]
		, NotificationAttributeValueLog1.[CreatedDate]
		, NotificationAttributeValueLog1.[LastModifiedByUserID]
		, NotificationAttributeValueLog1.[LastModifiedDate]
		, NotificationAttributeValueLog1.[Timestamp]
	FROM
	      [dbo].[tblNotifications_NotificationAttributeValueLog] NotificationAttributeValueLog1
	INNER JOIN @OrderedRecords search ON search.[NotificationAttributeValueLogID] = NotificationAttributeValueLog1.[NotificationAttributeValueLogID]
	WHERE
		search.SearchOrderID  >= @StartIndex AND
		search.SearchOrderID  < @vEndIndex
	ORDER BY
		search.SearchOrderID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spNotifications_GetManyNotificationDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @StartIndex int = 1
	, @PageSize int = 50
	, @MaximumListSize int = 0
	, @MaximumListSizeExceeded bit = 0 OUTPUT
	, @TotalRecords int = 0 OUTPUT
	, @SortColumn sysname = 'NotificationName'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @NotificationName nvarchar(255)
	, @EventCode int
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets many Notification data by criteria.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

DECLARE @vEndIndex int
IF (@StartIndex < 1) SET @StartIndex=1
IF (@PageSize < 1) SET @PageSize=1
SET @vEndIndex = @StartIndex + @Pagesize
IF (@SortColumn = '') SET @SortColumn='NotificationName'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

DECLARE @OrderedRecords TABLE
(
     SearchOrderID int IDENTITY (1, 1) NOT NULL
    , NotificationCode int
)
IF (@SortDirection = 'Random')
BEGIN
	INSERT INTO @OrderedRecords (NotificationCode)
	SELECT
		  Notification1.[NotificationCode]
	FROM
	      [dbo].[tblNotifications_Notification] Notification1
	INNER JOIN [dbo].[tblEvents_Event] Event1 ON Event1.[EventCode]=Notification1.[EventCode]
	WHERE 
		Notification1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Notification1.[IsActive] ELSE 1 END
		AND (@NotificationName IS NULL OR Notification1.[NotificationName] like '%' + @NotificationName + '%')
		AND (@EventCode IS NULL OR Notification1.[EventCode] = @EventCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (Notification1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (Notification1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY NewID()
END
ELSE
BEGIN
	INSERT INTO @OrderedRecords (NotificationCode)
	SELECT
		  Notification1.[NotificationCode]
	FROM
	      [dbo].[tblNotifications_Notification] Notification1
	INNER JOIN [dbo].[tblEvents_Event] Event1 ON Event1.[EventCode]=Notification1.[EventCode]
	WHERE 
		Notification1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Notification1.[IsActive] ELSE 1 END
		AND (@NotificationName IS NULL OR Notification1.[NotificationName] like '%' + @NotificationName + '%')
		AND (@EventCode IS NULL OR Notification1.[EventCode] = @EventCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (Notification1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (Notification1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationCode' THEN Notification1.[NotificationCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationCode' THEN Notification1.[NotificationCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationName' THEN Notification1.[NotificationName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationName' THEN Notification1.[NotificationName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EventCode' THEN Notification1.[EventCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EventCode' THEN Notification1.[EventCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Notification1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Notification1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Notification1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Notification1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Notification1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Notification1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Notification1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Notification1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Notification1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Notification1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Notification1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Notification1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Notification1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Notification1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'EventName' THEN Event1.[EventName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'EventName' THEN Event1.[EventName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END

BEGIN
	SET @TotalRecords = (SELECT Count (*) FROM @OrderedRecords)
	IF @MaximumListSize > 0
	BEGIN
		IF @TotalRecords > @MaximumListSize
		BEGIN
			SET @MaximumListSizeExceeded = 1
			SET @TotalRecords = @MaximumListSize
		END
	END

	/* get search results */
	SELECT
		  Notification1.[NotificationCode]
		, Notification1.[NotificationName]
		, Notification1.[EventCode]
		, Notification1.[Description]
		, Notification1.[IsActive]
		, Notification1.[CreatedByUserID]
		, Notification1.[CreatedDate]
		, Notification1.[LastModifiedByUserID]
		, Notification1.[LastModifiedDate]
		, Notification1.[Timestamp]
		, Event1.[EventName]
	FROM
	      [dbo].[tblNotifications_Notification] Notification1
	INNER JOIN [dbo].[tblEvents_Event] Event1 ON Event1.[EventCode]=Notification1.[EventCode]
	INNER JOIN @OrderedRecords search ON search.[NotificationCode] = Notification1.[NotificationCode]
	WHERE
		search.SearchOrderID  >= @StartIndex AND
		search.SearchOrderID  < @vEndIndex
	ORDER BY
		search.SearchOrderID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spNotifications_GetManyNotificationLogDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @StartIndex int = 1
	, @PageSize int = 50
	, @MaximumListSize int = 0
	, @MaximumListSizeExceeded bit = 0 OUTPUT
	, @TotalRecords int = 0 OUTPUT
	, @SortColumn sysname = 'NotificationCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @NotificationCode int
	, @LocaleCode int
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets many NotificationLog data by criteria.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

DECLARE @vEndIndex int
IF (@StartIndex < 1) SET @StartIndex=1
IF (@PageSize < 1) SET @PageSize=1
SET @vEndIndex = @StartIndex + @Pagesize
IF (@SortColumn = '') SET @SortColumn='NotificationCode'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

DECLARE @OrderedRecords TABLE
(
     SearchOrderID int IDENTITY (1, 1) NOT NULL
    , NotificationLogID uniqueidentifier
)
IF (@SortDirection = 'Random')
BEGIN
	INSERT INTO @OrderedRecords (NotificationLogID)
	SELECT
		  NotificationLog1.[NotificationLogID]
	FROM
	      [dbo].[tblNotifications_NotificationLog] NotificationLog1
	INNER JOIN [dbo].[tblNotifications_Notification] Notification1 ON Notification1.[NotificationCode]=NotificationLog1.[NotificationCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=NotificationLog1.[LocaleCode]
	WHERE 
		(@NotificationCode IS NULL OR NotificationLog1.[NotificationCode] = @NotificationCode)
		AND (@LocaleCode IS NULL OR NotificationLog1.[LocaleCode] = @LocaleCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (NotificationLog1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (NotificationLog1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY NewID()
END
ELSE
BEGIN
	INSERT INTO @OrderedRecords (NotificationLogID)
	SELECT
		  NotificationLog1.[NotificationLogID]
	FROM
	      [dbo].[tblNotifications_NotificationLog] NotificationLog1
	INNER JOIN [dbo].[tblNotifications_Notification] Notification1 ON Notification1.[NotificationCode]=NotificationLog1.[NotificationCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=NotificationLog1.[LocaleCode]
	WHERE 
		(@NotificationCode IS NULL OR NotificationLog1.[NotificationCode] = @NotificationCode)
		AND (@LocaleCode IS NULL OR NotificationLog1.[LocaleCode] = @LocaleCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (NotificationLog1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (NotificationLog1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationLogID' THEN NotificationLog1.[NotificationLogID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationLogID' THEN NotificationLog1.[NotificationLogID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationCode' THEN NotificationLog1.[NotificationCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationCode' THEN NotificationLog1.[NotificationCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationSubject' THEN NotificationLog1.[NotificationSubject] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationSubject' THEN NotificationLog1.[NotificationSubject] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN NotificationLog1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN NotificationLog1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN NotificationLog1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN NotificationLog1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN NotificationLog1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN NotificationLog1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN NotificationLog1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN NotificationLog1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN NotificationLog1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN NotificationLog1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN NotificationLog1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN NotificationLog1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationName' THEN Notification1.[NotificationName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationName' THEN Notification1.[NotificationName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END

BEGIN
	SET @TotalRecords = (SELECT Count (*) FROM @OrderedRecords)
	IF @MaximumListSize > 0
	BEGIN
		IF @TotalRecords > @MaximumListSize
		BEGIN
			SET @MaximumListSizeExceeded = 1
			SET @TotalRecords = @MaximumListSize
		END
	END

	/* get search results */
	SELECT
		  NotificationLog1.[NotificationLogID]
		, NotificationLog1.[NotificationCode]
		, NotificationLog1.[NotificationSubject]
		, NotificationLog1.[NotificationMessage]
		, NotificationLog1.[LocaleCode]
		, NotificationLog1.[CreatedByUserID]
		, NotificationLog1.[CreatedDate]
		, NotificationLog1.[LastModifiedByUserID]
		, NotificationLog1.[LastModifiedDate]
		, NotificationLog1.[Timestamp]
		, Notification1.[NotificationName]
		, Locale1.[LocaleName]
	FROM
	      [dbo].[tblNotifications_NotificationLog] NotificationLog1
	INNER JOIN [dbo].[tblNotifications_Notification] Notification1 ON Notification1.[NotificationCode]=NotificationLog1.[NotificationCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=NotificationLog1.[LocaleCode]
	INNER JOIN @OrderedRecords search ON search.[NotificationLogID] = NotificationLog1.[NotificationLogID]
	WHERE
		search.SearchOrderID  >= @StartIndex AND
		search.SearchOrderID  < @vEndIndex
	ORDER BY
		search.SearchOrderID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spNotifications_GetManyNotificationTemplateDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @StartIndex int = 1
	, @PageSize int = 50
	, @MaximumListSize int = 0
	, @MaximumListSizeExceeded bit = 0 OUTPUT
	, @TotalRecords int = 0 OUTPUT
	, @SortColumn sysname = 'NotificationCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @NotificationCode int
	, @LocaleCode int
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets many NotificationTemplate data by criteria.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

DECLARE @vEndIndex int
IF (@StartIndex < 1) SET @StartIndex=1
IF (@PageSize < 1) SET @PageSize=1
SET @vEndIndex = @StartIndex + @Pagesize
IF (@SortColumn = '') SET @SortColumn='NotificationCode'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

DECLARE @OrderedRecords TABLE
(
     SearchOrderID int IDENTITY (1, 1) NOT NULL
    , NotificationTemplateID uniqueidentifier
)
IF (@SortDirection = 'Random')
BEGIN
	INSERT INTO @OrderedRecords (NotificationTemplateID)
	SELECT
		  NotificationTemplate1.[NotificationTemplateID]
	FROM
	      [dbo].[tblNotifications_NotificationTemplate] NotificationTemplate1
	INNER JOIN [dbo].[tblNotifications_Notification] Notification1 ON Notification1.[NotificationCode]=NotificationTemplate1.[NotificationCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=NotificationTemplate1.[LocaleCode]
	WHERE 
		(@NotificationCode IS NULL OR NotificationTemplate1.[NotificationCode] = @NotificationCode)
		AND (@LocaleCode IS NULL OR NotificationTemplate1.[LocaleCode] = @LocaleCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (NotificationTemplate1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (NotificationTemplate1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY NewID()
END
ELSE
BEGIN
	INSERT INTO @OrderedRecords (NotificationTemplateID)
	SELECT
		  NotificationTemplate1.[NotificationTemplateID]
	FROM
	      [dbo].[tblNotifications_NotificationTemplate] NotificationTemplate1
	INNER JOIN [dbo].[tblNotifications_Notification] Notification1 ON Notification1.[NotificationCode]=NotificationTemplate1.[NotificationCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=NotificationTemplate1.[LocaleCode]
	WHERE 
		(@NotificationCode IS NULL OR NotificationTemplate1.[NotificationCode] = @NotificationCode)
		AND (@LocaleCode IS NULL OR NotificationTemplate1.[LocaleCode] = @LocaleCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (NotificationTemplate1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (NotificationTemplate1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationTemplateID' THEN NotificationTemplate1.[NotificationTemplateID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationTemplateID' THEN NotificationTemplate1.[NotificationTemplateID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationCode' THEN NotificationTemplate1.[NotificationCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationCode' THEN NotificationTemplate1.[NotificationCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationSubjectTemplate' THEN NotificationTemplate1.[NotificationSubjectTemplate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationSubjectTemplate' THEN NotificationTemplate1.[NotificationSubjectTemplate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN NotificationTemplate1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN NotificationTemplate1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN NotificationTemplate1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN NotificationTemplate1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN NotificationTemplate1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN NotificationTemplate1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN NotificationTemplate1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN NotificationTemplate1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN NotificationTemplate1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN NotificationTemplate1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN NotificationTemplate1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN NotificationTemplate1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'NotificationName' THEN Notification1.[NotificationName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'NotificationName' THEN Notification1.[NotificationName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END

BEGIN
	SET @TotalRecords = (SELECT Count (*) FROM @OrderedRecords)
	IF @MaximumListSize > 0
	BEGIN
		IF @TotalRecords > @MaximumListSize
		BEGIN
			SET @MaximumListSizeExceeded = 1
			SET @TotalRecords = @MaximumListSize
		END
	END

	/* get search results */
	SELECT
		  NotificationTemplate1.[NotificationTemplateID]
		, NotificationTemplate1.[NotificationCode]
		, NotificationTemplate1.[NotificationSubjectTemplate]
		, NotificationTemplate1.[NotificationMessageTemplate]
		, NotificationTemplate1.[LocaleCode]
		, NotificationTemplate1.[CreatedByUserID]
		, NotificationTemplate1.[CreatedDate]
		, NotificationTemplate1.[LastModifiedByUserID]
		, NotificationTemplate1.[LastModifiedDate]
		, NotificationTemplate1.[Timestamp]
		, Notification1.[NotificationName]
		, Locale1.[LocaleName]
	FROM
	      [dbo].[tblNotifications_NotificationTemplate] NotificationTemplate1
	INNER JOIN [dbo].[tblNotifications_Notification] Notification1 ON Notification1.[NotificationCode]=NotificationTemplate1.[NotificationCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=NotificationTemplate1.[LocaleCode]
	INNER JOIN @OrderedRecords search ON search.[NotificationTemplateID] = NotificationTemplate1.[NotificationTemplateID]
	WHERE
		search.SearchOrderID  >= @StartIndex AND
		search.SearchOrderID  < @vEndIndex
	ORDER BY
		search.SearchOrderID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spNotifications_GetOneNotification
	  @SqlErrorNumber int = 0 OUTPUT
	, @NotificationCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single Notification by an index.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@NotificationCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  Notification1.[NotificationCode]
		, Notification1.[NotificationName]
		, Notification1.[EventCode]
		, Notification1.[Description]
		, Notification1.[IsActive]
		, Notification1.[CreatedByUserID]
		, Notification1.[CreatedDate]
		, Notification1.[LastModifiedByUserID]
		, Notification1.[LastModifiedDate]
		, Notification1.[Timestamp]
		, Event1.[EventName]
	FROM
	      [dbo].[tblNotifications_Notification] Notification1
	INNER JOIN [dbo].[tblEvents_Event] Event1 ON Event1.[EventCode]=Notification1.[EventCode]
	WHERE Notification1.[NotificationCode] =  @NotificationCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spNotifications_GetOneNotificationAttributeValueLog
	  @SqlErrorNumber int = 0 OUTPUT
	, @NotificationAttributeValueLogID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single NotificationAttributeValueLog by an index.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@NotificationAttributeValueLogID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  NotificationAttributeValueLog1.[NotificationAttributeValueLogID]
		, NotificationAttributeValueLog1.[NotificationLogID]
		, NotificationAttributeValueLog1.[BaseAttributeValueID]
		, NotificationAttributeValueLog1.[AttributeValue]
		, NotificationAttributeValueLog1.[CreatedByUserID]
		, NotificationAttributeValueLog1.[CreatedDate]
		, NotificationAttributeValueLog1.[LastModifiedByUserID]
		, NotificationAttributeValueLog1.[LastModifiedDate]
		, NotificationAttributeValueLog1.[Timestamp]
	FROM
	      [dbo].[tblNotifications_NotificationAttributeValueLog] NotificationAttributeValueLog1
	WHERE NotificationAttributeValueLog1.[NotificationAttributeValueLogID] =  @NotificationAttributeValueLogID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spNotifications_GetOneNotificationDeliveryLog
	  @SqlErrorNumber int = 0 OUTPUT
	, @NotificationLogID uniqueidentifier
	, @MetaPartnerID uniqueidentifier
	, @NotificationDeliveryTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single NotificationDeliveryLog by an index.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@NotificationLogID IS NULL OR @MetaPartnerID IS NULL OR @NotificationDeliveryTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  NotificationDeliveryLog1.[NotificationLogID]
		, NotificationDeliveryLog1.[MetaPartnerID]
		, NotificationDeliveryLog1.[NotificationDeliveryTypeCode]
		, NotificationDeliveryLog1.[CreatedByUserID]
		, NotificationDeliveryLog1.[CreatedDate]
		, NotificationDeliveryLog1.[LastModifiedByUserID]
		, NotificationDeliveryLog1.[LastModifiedDate]
		, NotificationDeliveryLog1.[Timestamp]
		, NotificationDeliveryType1.[NotificationDeliveryTypeName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[trelNotifications_NotificationDeliveryLog] NotificationDeliveryLog1
	INNER JOIN [dbo].[tlkpNotifications_NotificationDeliveryType] NotificationDeliveryType1 ON NotificationDeliveryType1.[NotificationDeliveryTypeCode]=NotificationDeliveryLog1.[NotificationDeliveryTypeCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=NotificationDeliveryLog1.[MetaPartnerID]
	WHERE NotificationDeliveryLog1.[NotificationLogID] =  @NotificationLogID AND NotificationDeliveryLog1.[MetaPartnerID] =  @MetaPartnerID AND NotificationDeliveryLog1.[NotificationDeliveryTypeCode] =  @NotificationDeliveryTypeCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spNotifications_GetOneNotificationDeliveryType
	  @SqlErrorNumber int = 0 OUTPUT
	, @NotificationDeliveryTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single NotificationDeliveryType by an index.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@NotificationDeliveryTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  NotificationDeliveryType1.[NotificationDeliveryTypeCode]
		, NotificationDeliveryType1.[NotificationDeliveryTypeName]
		, NotificationDeliveryType1.[Description]
		, NotificationDeliveryType1.[IsActive]
		, NotificationDeliveryType1.[CreatedByUserID]
		, NotificationDeliveryType1.[CreatedDate]
		, NotificationDeliveryType1.[LastModifiedByUserID]
		, NotificationDeliveryType1.[LastModifiedDate]
		, NotificationDeliveryType1.[Timestamp]
	FROM
	      [dbo].[tlkpNotifications_NotificationDeliveryType] NotificationDeliveryType1
	WHERE NotificationDeliveryType1.[NotificationDeliveryTypeCode] =  @NotificationDeliveryTypeCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spNotifications_GetOneNotificationLog
	  @SqlErrorNumber int = 0 OUTPUT
	, @NotificationLogID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single NotificationLog by an index.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@NotificationLogID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  NotificationLog1.[NotificationLogID]
		, NotificationLog1.[NotificationCode]
		, NotificationLog1.[NotificationSubject]
		, NotificationLog1.[NotificationMessage]
		, NotificationLog1.[LocaleCode]
		, NotificationLog1.[CreatedByUserID]
		, NotificationLog1.[CreatedDate]
		, NotificationLog1.[LastModifiedByUserID]
		, NotificationLog1.[LastModifiedDate]
		, NotificationLog1.[Timestamp]
		, Notification1.[NotificationName]
		, Locale1.[LocaleName]
	FROM
	      [dbo].[tblNotifications_NotificationLog] NotificationLog1
	INNER JOIN [dbo].[tblNotifications_Notification] Notification1 ON Notification1.[NotificationCode]=NotificationLog1.[NotificationCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=NotificationLog1.[LocaleCode]
	WHERE NotificationLog1.[NotificationLogID] =  @NotificationLogID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spNotifications_GetOneNotificationTemplate
	  @SqlErrorNumber int = 0 OUTPUT
	, @NotificationTemplateID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single NotificationTemplate by an index.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@NotificationTemplateID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  NotificationTemplate1.[NotificationTemplateID]
		, NotificationTemplate1.[NotificationCode]
		, NotificationTemplate1.[NotificationSubjectTemplate]
		, NotificationTemplate1.[NotificationMessageTemplate]
		, NotificationTemplate1.[LocaleCode]
		, NotificationTemplate1.[CreatedByUserID]
		, NotificationTemplate1.[CreatedDate]
		, NotificationTemplate1.[LastModifiedByUserID]
		, NotificationTemplate1.[LastModifiedDate]
		, NotificationTemplate1.[Timestamp]
		, Notification1.[NotificationName]
		, Locale1.[LocaleName]
	FROM
	      [dbo].[tblNotifications_NotificationTemplate] NotificationTemplate1
	INNER JOIN [dbo].[tblNotifications_Notification] Notification1 ON Notification1.[NotificationCode]=NotificationTemplate1.[NotificationCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=NotificationTemplate1.[LocaleCode]
	WHERE NotificationTemplate1.[NotificationTemplateID] =  @NotificationTemplateID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spNotifications_LogOneNotificationAttributeValueLog
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @NotificationAttributeValueLogID uniqueidentifier = NULL OUTPUT
	, @NotificationLogID uniqueidentifier
	, @BaseAttributeValueID uniqueidentifier
	, @AttributeValue nvarchar(1000) = NULL
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure logs NotificationAttributeValueLog data.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@NotificationLogID IS NULL OR @BaseAttributeValueID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF EXISTS (SELECT [NotificationAttributeValueLogID] FROM [dbo].[tblNotifications_NotificationAttributeValueLog] WHERE [NotificationAttributeValueLogID] =  @NotificationAttributeValueLogID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	IF @NotificationAttributeValueLogID  IS NULL
	BEGIN
		SET @NotificationAttributeValueLogID  = NEWID ()
	END
	INSERT
	      [dbo].[tblNotifications_NotificationAttributeValueLog]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [NotificationAttributeValueLogID]
	   , [NotificationLogID]
	   , [BaseAttributeValueID]
	   , [AttributeValue]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @NotificationAttributeValueLogID
	   , @NotificationLogID
	   , @BaseAttributeValueID
	   , @AttributeValue
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spNotifications_LogOneNotificationLog
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @NotificationLogID uniqueidentifier = NULL OUTPUT
	, @NotificationCode int
	, @NotificationSubject nvarchar(255) = NULL
	, @NotificationMessage text = NULL
	, @LocaleCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure logs NotificationLog data.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@NotificationCode IS NULL OR @LocaleCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF EXISTS (SELECT [NotificationLogID] FROM [dbo].[tblNotifications_NotificationLog] WHERE [NotificationLogID] =  @NotificationLogID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	IF @NotificationLogID  IS NULL
	BEGIN
		SET @NotificationLogID  = NEWID ()
	END
	INSERT
	      [dbo].[tblNotifications_NotificationLog]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [NotificationLogID]
	   , [NotificationCode]
	   , [NotificationSubject]
	   , [NotificationMessage]
	   , [LocaleCode]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @NotificationLogID
	   , @NotificationCode
	   , @NotificationSubject
	   , @NotificationMessage
	   , @LocaleCode
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spNotifications_UpdateOneNotification
	  @SqlErrorNumber int = 0 OUTPUT
	, @LastModifiedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @NotificationCode int
	, @NotificationName nvarchar(255)
	, @EventCode int
	, @Description nvarchar(2000) = NULL
	, @IsActive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure updates Notification data.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@NotificationCode IS NULL OR @NotificationName IS NULL OR @EventCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [NotificationCode] FROM [dbo].[tblNotifications_Notification] WHERE [NotificationCode] =  @NotificationCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [NotificationCode] FROM [dbo].[tblNotifications_Notification] WHERE [NotificationCode] =  @NotificationCode AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	UPDATE
	      [dbo].[tblNotifications_Notification]
	SET
	     [LastModifiedByUserID] = @LastModifiedByUserID
	   , [LastModifiedDate] = getdate()
	   , [NotificationCode] = @NotificationCode
	   , [NotificationName] = @NotificationName
	   , [EventCode] = @EventCode
	   , [Description] = @Description
	   , [IsActive] = @IsActive
	WHERE [NotificationCode] =  @NotificationCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

	SET  @Timestamp = @@DBTS

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spNotifications_UpdateOneNotificationDeliveryLog
	  @SqlErrorNumber int = 0 OUTPUT
	, @LastModifiedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @NotificationLogID uniqueidentifier
	, @MetaPartnerID uniqueidentifier
	, @NotificationDeliveryTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure updates NotificationDeliveryLog data.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@NotificationLogID IS NULL OR @MetaPartnerID IS NULL OR @NotificationDeliveryTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [NotificationLogID], [MetaPartnerID], [NotificationDeliveryTypeCode] FROM [dbo].[trelNotifications_NotificationDeliveryLog] WHERE [NotificationLogID] =  @NotificationLogID AND [MetaPartnerID] =  @MetaPartnerID AND [NotificationDeliveryTypeCode] =  @NotificationDeliveryTypeCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [NotificationLogID], [MetaPartnerID], [NotificationDeliveryTypeCode] FROM [dbo].[trelNotifications_NotificationDeliveryLog] WHERE [NotificationLogID] =  @NotificationLogID AND [MetaPartnerID] =  @MetaPartnerID AND [NotificationDeliveryTypeCode] =  @NotificationDeliveryTypeCode AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	UPDATE
	      [dbo].[trelNotifications_NotificationDeliveryLog]
	SET
	     [LastModifiedByUserID] = @LastModifiedByUserID
	   , [LastModifiedDate] = getdate()
	   , [NotificationLogID] = @NotificationLogID
	   , [MetaPartnerID] = @MetaPartnerID
	   , [NotificationDeliveryTypeCode] = @NotificationDeliveryTypeCode
	WHERE [NotificationLogID] =  @NotificationLogID AND [MetaPartnerID] =  @MetaPartnerID AND [NotificationDeliveryTypeCode] =  @NotificationDeliveryTypeCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

	SET  @Timestamp = @@DBTS

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spNotifications_UpdateOneNotificationDeliveryType
	  @SqlErrorNumber int = 0 OUTPUT
	, @LastModifiedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @NotificationDeliveryTypeCode int
	, @NotificationDeliveryTypeName nvarchar(255)
	, @Description nvarchar(2000) = NULL
	, @IsActive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure updates NotificationDeliveryType data.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@NotificationDeliveryTypeCode IS NULL OR @NotificationDeliveryTypeName IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [NotificationDeliveryTypeCode] FROM [dbo].[tlkpNotifications_NotificationDeliveryType] WHERE [NotificationDeliveryTypeCode] =  @NotificationDeliveryTypeCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [NotificationDeliveryTypeCode] FROM [dbo].[tlkpNotifications_NotificationDeliveryType] WHERE [NotificationDeliveryTypeCode] =  @NotificationDeliveryTypeCode AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	UPDATE
	      [dbo].[tlkpNotifications_NotificationDeliveryType]
	SET
	     [LastModifiedByUserID] = @LastModifiedByUserID
	   , [LastModifiedDate] = getdate()
	   , [NotificationDeliveryTypeCode] = @NotificationDeliveryTypeCode
	   , [NotificationDeliveryTypeName] = @NotificationDeliveryTypeName
	   , [Description] = @Description
	   , [IsActive] = @IsActive
	WHERE [NotificationDeliveryTypeCode] =  @NotificationDeliveryTypeCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

	SET  @Timestamp = @@DBTS

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spNotifications_UpsertOneNotificationTemplate
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @LastModifiedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @NotificationTemplateID uniqueidentifier = NULL OUTPUT
	, @NotificationCode int
	, @NotificationSubjectTemplate nvarchar(255)
	, @NotificationMessageTemplate text
	, @LocaleCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure inserts or updates NotificationTemplate data.
**
** Stored Procedure History:
**	9/10/2006 <created> (Dave Clemmer)
**	9/10/2006 <notmodified> (Dave Clemmer)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@NotificationCode IS NULL OR @NotificationSubjectTemplate IS NULL OR @NotificationMessageTemplate IS NULL OR @LocaleCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [NotificationTemplateID] FROM [dbo].[tblNotifications_NotificationTemplate] WHERE [NotificationTemplateID] =  @NotificationTemplateID AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
IF NOT EXISTS (SELECT [NotificationTemplateID] FROM [dbo].[tblNotifications_NotificationTemplate] WHERE [NotificationTemplateID] =  @NotificationTemplateID)
BEGIN
	IF @NotificationTemplateID  IS NULL
	BEGIN
		SET @NotificationTemplateID  = NEWID ()
	END
	INSERT
	      [dbo].[tblNotifications_NotificationTemplate]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [NotificationTemplateID]
	   , [NotificationCode]
	   , [NotificationSubjectTemplate]
	   , [NotificationMessageTemplate]
	   , [LocaleCode]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @NotificationTemplateID
	   , @NotificationCode
	   , @NotificationSubjectTemplate
	   , @NotificationMessageTemplate
	   , @LocaleCode
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
	END
ELSE
BEGIN
	UPDATE
	      [dbo].[tblNotifications_NotificationTemplate]
	SET
	     [LastModifiedByUserID] = @LastModifiedByUserID
	   , [LastModifiedDate] = getdate()
	   , [NotificationTemplateID] = @NotificationTemplateID
	   , [NotificationCode] = @NotificationCode
	   , [NotificationSubjectTemplate] = @NotificationSubjectTemplate
	   , [NotificationMessageTemplate] = @NotificationMessageTemplate
	   , [LocaleCode] = @LocaleCode
	WHERE [NotificationTemplateID] =  @NotificationTemplateID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

	SET  @Timestamp = @@DBTS

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spOrders_AddOneOrderStatus
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @OrderStatusCode int
	, @OrderStatusName nvarchar(255)
	, @Description nvarchar(2000) = NULL
	, @IsActive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure inserts OrderStatus data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@OrderStatusCode IS NULL OR @OrderStatusName IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF EXISTS (SELECT [OrderStatusCode] FROM [dbo].[tlkpOrders_OrderStatus] WHERE [OrderStatusCode] =  @OrderStatusCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	INSERT
	      [dbo].[tlkpOrders_OrderStatus]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [OrderStatusCode]
	   , [OrderStatusName]
	   , [Description]
	   , [IsActive]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @OrderStatusCode
	   , @OrderStatusName
	   , @Description
	   , @IsActive
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spOrders_DeleteAllOrderDataByCreditMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreditMetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all Order data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@CreditMetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblOrders_Order]
	WHERE [CreditMetaPartnerID] =  @CreditMetaPartnerID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spOrders_DeleteAllOrderDataByCurrencyCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @CurrencyCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all Order data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@CurrencyCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblOrders_Order]
	WHERE [CurrencyCode] =  @CurrencyCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spOrders_DeleteAllOrderDataByDebitMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @DebitMetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all Order data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@DebitMetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblOrders_Order]
	WHERE [DebitMetaPartnerID] =  @DebitMetaPartnerID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spOrders_DeleteAllOrderDataByLogToAccountIDAndCreditMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @LogToAccountID uniqueidentifier
	, @CreditMetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all Order data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@LogToAccountID IS NULL OR @CreditMetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblOrders_Order]
	WHERE [LogToAccountID] =  @LogToAccountID AND [CreditMetaPartnerID] =  @CreditMetaPartnerID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spOrders_DeleteAllOrderDataByOrderStatusCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @OrderStatusCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all Order data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@OrderStatusCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblOrders_Order]
	WHERE [OrderStatusCode] =  @OrderStatusCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spOrders_DeleteOneOrder
	  @SqlErrorNumber int = 0 OUTPUT
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @OrderID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes Order data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@OrderID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [OrderID] FROM [dbo].[tblOrders_Order] WHERE [OrderID] =  @OrderID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [OrderID] FROM [dbo].[tblOrders_Order] WHERE [OrderID] =  @OrderID AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblOrders_Order]
	WHERE [OrderID] =  @OrderID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spOrders_DeleteOneOrderStatus
	  @SqlErrorNumber int = 0 OUTPUT
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @OrderStatusCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes OrderStatus data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@OrderStatusCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [OrderStatusCode] FROM [dbo].[tlkpOrders_OrderStatus] WHERE [OrderStatusCode] =  @OrderStatusCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [OrderStatusCode] FROM [dbo].[tlkpOrders_OrderStatus] WHERE [OrderStatusCode] =  @OrderStatusCode AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tlkpOrders_OrderStatus]
	WHERE [OrderStatusCode] =  @OrderStatusCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spOrders_GetAllOrderData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'OrderID'
	, @SortDirection nvarchar(20) = 'Ascending'
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all Order data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='OrderID'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  Order1.[OrderID]
		, Order1.[DebitMetaPartnerID]
		, Order1.[CreditMetaPartnerID]
		, Order1.[LogToAccountID]
		, Order1.[OrderDescription]
		, Order1.[OrderAmount]
		, Order1.[OrderSubtotal]
		, Order1.[OrderTax]
		, Order1.[OrderServiceCharge]
		, Order1.[CurrencyCode]
		, Order1.[OrderStatusCode]
		, Order1.[OrderStatusMessage]
		, Order1.[CreatedByUserID]
		, Order1.[CreatedDate]
		, Order1.[LastModifiedByUserID]
		, Order1.[LastModifiedDate]
		, Order1.[Timestamp]
		, Account1.[AccountName]
		, Currency1.[CurrencyName]
		, OrderStatus1.[OrderStatusName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblOrders_Order] Order1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=Order1.[LogToAccountID] AND Account1.[MetaPartnerID]=Order1.[CreditMetaPartnerID]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Order1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpOrders_OrderStatus] OrderStatus1 ON OrderStatus1.[OrderStatusCode]=Order1.[OrderStatusCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Order1.[DebitMetaPartnerID]

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  Order1.[OrderID]
		, Order1.[DebitMetaPartnerID]
		, Order1.[CreditMetaPartnerID]
		, Order1.[LogToAccountID]
		, Order1.[OrderDescription]
		, Order1.[OrderAmount]
		, Order1.[OrderSubtotal]
		, Order1.[OrderTax]
		, Order1.[OrderServiceCharge]
		, Order1.[CurrencyCode]
		, Order1.[OrderStatusCode]
		, Order1.[OrderStatusMessage]
		, Order1.[CreatedByUserID]
		, Order1.[CreatedDate]
		, Order1.[LastModifiedByUserID]
		, Order1.[LastModifiedDate]
		, Order1.[Timestamp]
		, Account1.[AccountName]
		, Currency1.[CurrencyName]
		, OrderStatus1.[OrderStatusName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblOrders_Order] Order1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=Order1.[LogToAccountID] AND Account1.[MetaPartnerID]=Order1.[CreditMetaPartnerID]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Order1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpOrders_OrderStatus] OrderStatus1 ON OrderStatus1.[OrderStatusCode]=Order1.[OrderStatusCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Order1.[DebitMetaPartnerID]

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderID' THEN Order1.[OrderID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderID' THEN Order1.[OrderID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DebitMetaPartnerID' THEN Order1.[DebitMetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DebitMetaPartnerID' THEN Order1.[DebitMetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreditMetaPartnerID' THEN Order1.[CreditMetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreditMetaPartnerID' THEN Order1.[CreditMetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LogToAccountID' THEN Order1.[LogToAccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LogToAccountID' THEN Order1.[LogToAccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderDescription' THEN Order1.[OrderDescription] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderDescription' THEN Order1.[OrderDescription] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderAmount' THEN Order1.[OrderAmount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderAmount' THEN Order1.[OrderAmount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderSubtotal' THEN Order1.[OrderSubtotal] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderSubtotal' THEN Order1.[OrderSubtotal] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderTax' THEN Order1.[OrderTax] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderTax' THEN Order1.[OrderTax] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderServiceCharge' THEN Order1.[OrderServiceCharge] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderServiceCharge' THEN Order1.[OrderServiceCharge] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Order1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Order1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderStatusCode' THEN Order1.[OrderStatusCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderStatusCode' THEN Order1.[OrderStatusCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderStatusMessage' THEN Order1.[OrderStatusMessage] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderStatusMessage' THEN Order1.[OrderStatusMessage] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Order1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Order1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Order1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Order1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Order1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Order1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Order1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Order1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Order1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Order1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderStatusName' THEN OrderStatus1.[OrderStatusName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderStatusName' THEN OrderStatus1.[OrderStatusName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spOrders_GetAllOrderDataByCreditMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'CreditMetaPartnerID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @CreditMetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all Order data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='CreditMetaPartnerID'

/*
** parameter validation
*/
IF (@CreditMetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  Order1.[OrderID]
		, Order1.[DebitMetaPartnerID]
		, Order1.[CreditMetaPartnerID]
		, Order1.[LogToAccountID]
		, Order1.[OrderDescription]
		, Order1.[OrderAmount]
		, Order1.[OrderSubtotal]
		, Order1.[OrderTax]
		, Order1.[OrderServiceCharge]
		, Order1.[CurrencyCode]
		, Order1.[OrderStatusCode]
		, Order1.[OrderStatusMessage]
		, Order1.[CreatedByUserID]
		, Order1.[CreatedDate]
		, Order1.[LastModifiedByUserID]
		, Order1.[LastModifiedDate]
		, Order1.[Timestamp]
		, Account1.[AccountName]
		, Currency1.[CurrencyName]
		, OrderStatus1.[OrderStatusName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblOrders_Order] Order1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=Order1.[LogToAccountID] AND Account1.[MetaPartnerID]=Order1.[CreditMetaPartnerID]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Order1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpOrders_OrderStatus] OrderStatus1 ON OrderStatus1.[OrderStatusCode]=Order1.[OrderStatusCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Order1.[DebitMetaPartnerID]
	WHERE 
		Order1.[CreditMetaPartnerID] = @CreditMetaPartnerID

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  Order1.[OrderID]
		, Order1.[DebitMetaPartnerID]
		, Order1.[CreditMetaPartnerID]
		, Order1.[LogToAccountID]
		, Order1.[OrderDescription]
		, Order1.[OrderAmount]
		, Order1.[OrderSubtotal]
		, Order1.[OrderTax]
		, Order1.[OrderServiceCharge]
		, Order1.[CurrencyCode]
		, Order1.[OrderStatusCode]
		, Order1.[OrderStatusMessage]
		, Order1.[CreatedByUserID]
		, Order1.[CreatedDate]
		, Order1.[LastModifiedByUserID]
		, Order1.[LastModifiedDate]
		, Order1.[Timestamp]
		, Account1.[AccountName]
		, Currency1.[CurrencyName]
		, OrderStatus1.[OrderStatusName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblOrders_Order] Order1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=Order1.[LogToAccountID] AND Account1.[MetaPartnerID]=Order1.[CreditMetaPartnerID]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Order1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpOrders_OrderStatus] OrderStatus1 ON OrderStatus1.[OrderStatusCode]=Order1.[OrderStatusCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Order1.[DebitMetaPartnerID]
	WHERE 
		Order1.[CreditMetaPartnerID] = @CreditMetaPartnerID

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderID' THEN Order1.[OrderID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderID' THEN Order1.[OrderID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DebitMetaPartnerID' THEN Order1.[DebitMetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DebitMetaPartnerID' THEN Order1.[DebitMetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreditMetaPartnerID' THEN Order1.[CreditMetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreditMetaPartnerID' THEN Order1.[CreditMetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LogToAccountID' THEN Order1.[LogToAccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LogToAccountID' THEN Order1.[LogToAccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderDescription' THEN Order1.[OrderDescription] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderDescription' THEN Order1.[OrderDescription] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderAmount' THEN Order1.[OrderAmount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderAmount' THEN Order1.[OrderAmount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderSubtotal' THEN Order1.[OrderSubtotal] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderSubtotal' THEN Order1.[OrderSubtotal] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderTax' THEN Order1.[OrderTax] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderTax' THEN Order1.[OrderTax] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderServiceCharge' THEN Order1.[OrderServiceCharge] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderServiceCharge' THEN Order1.[OrderServiceCharge] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Order1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Order1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderStatusCode' THEN Order1.[OrderStatusCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderStatusCode' THEN Order1.[OrderStatusCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderStatusMessage' THEN Order1.[OrderStatusMessage] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderStatusMessage' THEN Order1.[OrderStatusMessage] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Order1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Order1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Order1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Order1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Order1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Order1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Order1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Order1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Order1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Order1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderStatusName' THEN OrderStatus1.[OrderStatusName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderStatusName' THEN OrderStatus1.[OrderStatusName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spOrders_GetAllOrderDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'CurrencyCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @CurrencyCode int
	, @OrderStatusCode int
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all Order data by criteria.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='CurrencyCode'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  Order1.[OrderID]
		, Order1.[DebitMetaPartnerID]
		, Order1.[CreditMetaPartnerID]
		, Order1.[LogToAccountID]
		, Order1.[OrderDescription]
		, Order1.[OrderAmount]
		, Order1.[OrderSubtotal]
		, Order1.[OrderTax]
		, Order1.[OrderServiceCharge]
		, Order1.[CurrencyCode]
		, Order1.[OrderStatusCode]
		, Order1.[OrderStatusMessage]
		, Order1.[CreatedByUserID]
		, Order1.[CreatedDate]
		, Order1.[LastModifiedByUserID]
		, Order1.[LastModifiedDate]
		, Order1.[Timestamp]
		, Account1.[AccountName]
		, Currency1.[CurrencyName]
		, OrderStatus1.[OrderStatusName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblOrders_Order] Order1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=Order1.[LogToAccountID] AND Account1.[MetaPartnerID]=Order1.[CreditMetaPartnerID]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Order1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpOrders_OrderStatus] OrderStatus1 ON OrderStatus1.[OrderStatusCode]=Order1.[OrderStatusCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Order1.[DebitMetaPartnerID]
	WHERE 
		(@CurrencyCode IS NULL OR Order1.[CurrencyCode] = @CurrencyCode)
		AND (@OrderStatusCode IS NULL OR Order1.[OrderStatusCode] = @OrderStatusCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (Order1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (Order1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  Order1.[OrderID]
		, Order1.[DebitMetaPartnerID]
		, Order1.[CreditMetaPartnerID]
		, Order1.[LogToAccountID]
		, Order1.[OrderDescription]
		, Order1.[OrderAmount]
		, Order1.[OrderSubtotal]
		, Order1.[OrderTax]
		, Order1.[OrderServiceCharge]
		, Order1.[CurrencyCode]
		, Order1.[OrderStatusCode]
		, Order1.[OrderStatusMessage]
		, Order1.[CreatedByUserID]
		, Order1.[CreatedDate]
		, Order1.[LastModifiedByUserID]
		, Order1.[LastModifiedDate]
		, Order1.[Timestamp]
		, Account1.[AccountName]
		, Currency1.[CurrencyName]
		, OrderStatus1.[OrderStatusName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblOrders_Order] Order1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=Order1.[LogToAccountID] AND Account1.[MetaPartnerID]=Order1.[CreditMetaPartnerID]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Order1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpOrders_OrderStatus] OrderStatus1 ON OrderStatus1.[OrderStatusCode]=Order1.[OrderStatusCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Order1.[DebitMetaPartnerID]
	WHERE 
		(@CurrencyCode IS NULL OR Order1.[CurrencyCode] = @CurrencyCode)
		AND (@OrderStatusCode IS NULL OR Order1.[OrderStatusCode] = @OrderStatusCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (Order1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (Order1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderID' THEN Order1.[OrderID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderID' THEN Order1.[OrderID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DebitMetaPartnerID' THEN Order1.[DebitMetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DebitMetaPartnerID' THEN Order1.[DebitMetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreditMetaPartnerID' THEN Order1.[CreditMetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreditMetaPartnerID' THEN Order1.[CreditMetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LogToAccountID' THEN Order1.[LogToAccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LogToAccountID' THEN Order1.[LogToAccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderDescription' THEN Order1.[OrderDescription] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderDescription' THEN Order1.[OrderDescription] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderAmount' THEN Order1.[OrderAmount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderAmount' THEN Order1.[OrderAmount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderSubtotal' THEN Order1.[OrderSubtotal] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderSubtotal' THEN Order1.[OrderSubtotal] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderTax' THEN Order1.[OrderTax] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderTax' THEN Order1.[OrderTax] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderServiceCharge' THEN Order1.[OrderServiceCharge] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderServiceCharge' THEN Order1.[OrderServiceCharge] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Order1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Order1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderStatusCode' THEN Order1.[OrderStatusCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderStatusCode' THEN Order1.[OrderStatusCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderStatusMessage' THEN Order1.[OrderStatusMessage] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderStatusMessage' THEN Order1.[OrderStatusMessage] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Order1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Order1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Order1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Order1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Order1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Order1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Order1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Order1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Order1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Order1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderStatusName' THEN OrderStatus1.[OrderStatusName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderStatusName' THEN OrderStatus1.[OrderStatusName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spOrders_GetAllOrderDataByCurrencyCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'CurrencyCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @CurrencyCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all Order data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='CurrencyCode'

/*
** parameter validation
*/
IF (@CurrencyCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  Order1.[OrderID]
		, Order1.[DebitMetaPartnerID]
		, Order1.[CreditMetaPartnerID]
		, Order1.[LogToAccountID]
		, Order1.[OrderDescription]
		, Order1.[OrderAmount]
		, Order1.[OrderSubtotal]
		, Order1.[OrderTax]
		, Order1.[OrderServiceCharge]
		, Order1.[CurrencyCode]
		, Order1.[OrderStatusCode]
		, Order1.[OrderStatusMessage]
		, Order1.[CreatedByUserID]
		, Order1.[CreatedDate]
		, Order1.[LastModifiedByUserID]
		, Order1.[LastModifiedDate]
		, Order1.[Timestamp]
		, Account1.[AccountName]
		, Currency1.[CurrencyName]
		, OrderStatus1.[OrderStatusName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblOrders_Order] Order1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=Order1.[LogToAccountID] AND Account1.[MetaPartnerID]=Order1.[CreditMetaPartnerID]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Order1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpOrders_OrderStatus] OrderStatus1 ON OrderStatus1.[OrderStatusCode]=Order1.[OrderStatusCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Order1.[DebitMetaPartnerID]
	WHERE 
		Order1.[CurrencyCode] = @CurrencyCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  Order1.[OrderID]
		, Order1.[DebitMetaPartnerID]
		, Order1.[CreditMetaPartnerID]
		, Order1.[LogToAccountID]
		, Order1.[OrderDescription]
		, Order1.[OrderAmount]
		, Order1.[OrderSubtotal]
		, Order1.[OrderTax]
		, Order1.[OrderServiceCharge]
		, Order1.[CurrencyCode]
		, Order1.[OrderStatusCode]
		, Order1.[OrderStatusMessage]
		, Order1.[CreatedByUserID]
		, Order1.[CreatedDate]
		, Order1.[LastModifiedByUserID]
		, Order1.[LastModifiedDate]
		, Order1.[Timestamp]
		, Account1.[AccountName]
		, Currency1.[CurrencyName]
		, OrderStatus1.[OrderStatusName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblOrders_Order] Order1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=Order1.[LogToAccountID] AND Account1.[MetaPartnerID]=Order1.[CreditMetaPartnerID]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Order1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpOrders_OrderStatus] OrderStatus1 ON OrderStatus1.[OrderStatusCode]=Order1.[OrderStatusCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Order1.[DebitMetaPartnerID]
	WHERE 
		Order1.[CurrencyCode] = @CurrencyCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderID' THEN Order1.[OrderID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderID' THEN Order1.[OrderID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DebitMetaPartnerID' THEN Order1.[DebitMetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DebitMetaPartnerID' THEN Order1.[DebitMetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreditMetaPartnerID' THEN Order1.[CreditMetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreditMetaPartnerID' THEN Order1.[CreditMetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LogToAccountID' THEN Order1.[LogToAccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LogToAccountID' THEN Order1.[LogToAccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderDescription' THEN Order1.[OrderDescription] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderDescription' THEN Order1.[OrderDescription] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderAmount' THEN Order1.[OrderAmount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderAmount' THEN Order1.[OrderAmount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderSubtotal' THEN Order1.[OrderSubtotal] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderSubtotal' THEN Order1.[OrderSubtotal] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderTax' THEN Order1.[OrderTax] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderTax' THEN Order1.[OrderTax] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderServiceCharge' THEN Order1.[OrderServiceCharge] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderServiceCharge' THEN Order1.[OrderServiceCharge] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Order1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Order1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderStatusCode' THEN Order1.[OrderStatusCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderStatusCode' THEN Order1.[OrderStatusCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderStatusMessage' THEN Order1.[OrderStatusMessage] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderStatusMessage' THEN Order1.[OrderStatusMessage] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Order1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Order1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Order1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Order1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Order1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Order1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Order1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Order1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Order1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Order1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderStatusName' THEN OrderStatus1.[OrderStatusName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderStatusName' THEN OrderStatus1.[OrderStatusName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spOrders_GetAllOrderDataByDebitMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'DebitMetaPartnerID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @DebitMetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all Order data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='DebitMetaPartnerID'

/*
** parameter validation
*/
IF (@DebitMetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  Order1.[OrderID]
		, Order1.[DebitMetaPartnerID]
		, Order1.[CreditMetaPartnerID]
		, Order1.[LogToAccountID]
		, Order1.[OrderDescription]
		, Order1.[OrderAmount]
		, Order1.[OrderSubtotal]
		, Order1.[OrderTax]
		, Order1.[OrderServiceCharge]
		, Order1.[CurrencyCode]
		, Order1.[OrderStatusCode]
		, Order1.[OrderStatusMessage]
		, Order1.[CreatedByUserID]
		, Order1.[CreatedDate]
		, Order1.[LastModifiedByUserID]
		, Order1.[LastModifiedDate]
		, Order1.[Timestamp]
		, Account1.[AccountName]
		, Currency1.[CurrencyName]
		, OrderStatus1.[OrderStatusName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblOrders_Order] Order1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=Order1.[LogToAccountID] AND Account1.[MetaPartnerID]=Order1.[CreditMetaPartnerID]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Order1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpOrders_OrderStatus] OrderStatus1 ON OrderStatus1.[OrderStatusCode]=Order1.[OrderStatusCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Order1.[DebitMetaPartnerID]
	WHERE 
		Order1.[DebitMetaPartnerID] = @DebitMetaPartnerID

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  Order1.[OrderID]
		, Order1.[DebitMetaPartnerID]
		, Order1.[CreditMetaPartnerID]
		, Order1.[LogToAccountID]
		, Order1.[OrderDescription]
		, Order1.[OrderAmount]
		, Order1.[OrderSubtotal]
		, Order1.[OrderTax]
		, Order1.[OrderServiceCharge]
		, Order1.[CurrencyCode]
		, Order1.[OrderStatusCode]
		, Order1.[OrderStatusMessage]
		, Order1.[CreatedByUserID]
		, Order1.[CreatedDate]
		, Order1.[LastModifiedByUserID]
		, Order1.[LastModifiedDate]
		, Order1.[Timestamp]
		, Account1.[AccountName]
		, Currency1.[CurrencyName]
		, OrderStatus1.[OrderStatusName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblOrders_Order] Order1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=Order1.[LogToAccountID] AND Account1.[MetaPartnerID]=Order1.[CreditMetaPartnerID]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Order1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpOrders_OrderStatus] OrderStatus1 ON OrderStatus1.[OrderStatusCode]=Order1.[OrderStatusCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Order1.[DebitMetaPartnerID]
	WHERE 
		Order1.[DebitMetaPartnerID] = @DebitMetaPartnerID

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderID' THEN Order1.[OrderID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderID' THEN Order1.[OrderID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DebitMetaPartnerID' THEN Order1.[DebitMetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DebitMetaPartnerID' THEN Order1.[DebitMetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreditMetaPartnerID' THEN Order1.[CreditMetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreditMetaPartnerID' THEN Order1.[CreditMetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LogToAccountID' THEN Order1.[LogToAccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LogToAccountID' THEN Order1.[LogToAccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderDescription' THEN Order1.[OrderDescription] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderDescription' THEN Order1.[OrderDescription] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderAmount' THEN Order1.[OrderAmount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderAmount' THEN Order1.[OrderAmount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderSubtotal' THEN Order1.[OrderSubtotal] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderSubtotal' THEN Order1.[OrderSubtotal] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderTax' THEN Order1.[OrderTax] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderTax' THEN Order1.[OrderTax] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderServiceCharge' THEN Order1.[OrderServiceCharge] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderServiceCharge' THEN Order1.[OrderServiceCharge] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Order1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Order1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderStatusCode' THEN Order1.[OrderStatusCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderStatusCode' THEN Order1.[OrderStatusCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderStatusMessage' THEN Order1.[OrderStatusMessage] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderStatusMessage' THEN Order1.[OrderStatusMessage] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Order1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Order1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Order1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Order1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Order1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Order1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Order1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Order1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Order1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Order1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderStatusName' THEN OrderStatus1.[OrderStatusName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderStatusName' THEN OrderStatus1.[OrderStatusName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spOrders_GetAllOrderDataByLogToAccountIDAndCreditMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'LogToAccountID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @LogToAccountID uniqueidentifier
	, @CreditMetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all Order data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='LogToAccountID'

/*
** parameter validation
*/
IF (@LogToAccountID IS NULL OR @CreditMetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  Order1.[OrderID]
		, Order1.[DebitMetaPartnerID]
		, Order1.[CreditMetaPartnerID]
		, Order1.[LogToAccountID]
		, Order1.[OrderDescription]
		, Order1.[OrderAmount]
		, Order1.[OrderSubtotal]
		, Order1.[OrderTax]
		, Order1.[OrderServiceCharge]
		, Order1.[CurrencyCode]
		, Order1.[OrderStatusCode]
		, Order1.[OrderStatusMessage]
		, Order1.[CreatedByUserID]
		, Order1.[CreatedDate]
		, Order1.[LastModifiedByUserID]
		, Order1.[LastModifiedDate]
		, Order1.[Timestamp]
		, Account1.[AccountName]
		, Currency1.[CurrencyName]
		, OrderStatus1.[OrderStatusName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblOrders_Order] Order1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=Order1.[LogToAccountID] AND Account1.[MetaPartnerID]=Order1.[CreditMetaPartnerID]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Order1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpOrders_OrderStatus] OrderStatus1 ON OrderStatus1.[OrderStatusCode]=Order1.[OrderStatusCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Order1.[DebitMetaPartnerID]
	WHERE 
		Order1.[LogToAccountID] = @LogToAccountID
		AND Order1.[CreditMetaPartnerID] = @CreditMetaPartnerID

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  Order1.[OrderID]
		, Order1.[DebitMetaPartnerID]
		, Order1.[CreditMetaPartnerID]
		, Order1.[LogToAccountID]
		, Order1.[OrderDescription]
		, Order1.[OrderAmount]
		, Order1.[OrderSubtotal]
		, Order1.[OrderTax]
		, Order1.[OrderServiceCharge]
		, Order1.[CurrencyCode]
		, Order1.[OrderStatusCode]
		, Order1.[OrderStatusMessage]
		, Order1.[CreatedByUserID]
		, Order1.[CreatedDate]
		, Order1.[LastModifiedByUserID]
		, Order1.[LastModifiedDate]
		, Order1.[Timestamp]
		, Account1.[AccountName]
		, Currency1.[CurrencyName]
		, OrderStatus1.[OrderStatusName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblOrders_Order] Order1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=Order1.[LogToAccountID] AND Account1.[MetaPartnerID]=Order1.[CreditMetaPartnerID]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Order1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpOrders_OrderStatus] OrderStatus1 ON OrderStatus1.[OrderStatusCode]=Order1.[OrderStatusCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Order1.[DebitMetaPartnerID]
	WHERE 
		Order1.[LogToAccountID] = @LogToAccountID
		AND Order1.[CreditMetaPartnerID] = @CreditMetaPartnerID

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderID' THEN Order1.[OrderID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderID' THEN Order1.[OrderID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DebitMetaPartnerID' THEN Order1.[DebitMetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DebitMetaPartnerID' THEN Order1.[DebitMetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreditMetaPartnerID' THEN Order1.[CreditMetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreditMetaPartnerID' THEN Order1.[CreditMetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LogToAccountID' THEN Order1.[LogToAccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LogToAccountID' THEN Order1.[LogToAccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderDescription' THEN Order1.[OrderDescription] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderDescription' THEN Order1.[OrderDescription] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderAmount' THEN Order1.[OrderAmount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderAmount' THEN Order1.[OrderAmount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderSubtotal' THEN Order1.[OrderSubtotal] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderSubtotal' THEN Order1.[OrderSubtotal] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderTax' THEN Order1.[OrderTax] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderTax' THEN Order1.[OrderTax] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderServiceCharge' THEN Order1.[OrderServiceCharge] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderServiceCharge' THEN Order1.[OrderServiceCharge] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Order1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Order1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderStatusCode' THEN Order1.[OrderStatusCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderStatusCode' THEN Order1.[OrderStatusCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderStatusMessage' THEN Order1.[OrderStatusMessage] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderStatusMessage' THEN Order1.[OrderStatusMessage] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Order1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Order1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Order1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Order1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Order1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Order1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Order1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Order1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Order1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Order1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderStatusName' THEN OrderStatus1.[OrderStatusName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderStatusName' THEN OrderStatus1.[OrderStatusName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spOrders_GetAllOrderDataByOrderStatusCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'OrderStatusCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @OrderStatusCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all Order data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='OrderStatusCode'

/*
** parameter validation
*/
IF (@OrderStatusCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  Order1.[OrderID]
		, Order1.[DebitMetaPartnerID]
		, Order1.[CreditMetaPartnerID]
		, Order1.[LogToAccountID]
		, Order1.[OrderDescription]
		, Order1.[OrderAmount]
		, Order1.[OrderSubtotal]
		, Order1.[OrderTax]
		, Order1.[OrderServiceCharge]
		, Order1.[CurrencyCode]
		, Order1.[OrderStatusCode]
		, Order1.[OrderStatusMessage]
		, Order1.[CreatedByUserID]
		, Order1.[CreatedDate]
		, Order1.[LastModifiedByUserID]
		, Order1.[LastModifiedDate]
		, Order1.[Timestamp]
		, Account1.[AccountName]
		, Currency1.[CurrencyName]
		, OrderStatus1.[OrderStatusName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblOrders_Order] Order1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=Order1.[LogToAccountID] AND Account1.[MetaPartnerID]=Order1.[CreditMetaPartnerID]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Order1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpOrders_OrderStatus] OrderStatus1 ON OrderStatus1.[OrderStatusCode]=Order1.[OrderStatusCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Order1.[DebitMetaPartnerID]
	WHERE 
		Order1.[OrderStatusCode] = @OrderStatusCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  Order1.[OrderID]
		, Order1.[DebitMetaPartnerID]
		, Order1.[CreditMetaPartnerID]
		, Order1.[LogToAccountID]
		, Order1.[OrderDescription]
		, Order1.[OrderAmount]
		, Order1.[OrderSubtotal]
		, Order1.[OrderTax]
		, Order1.[OrderServiceCharge]
		, Order1.[CurrencyCode]
		, Order1.[OrderStatusCode]
		, Order1.[OrderStatusMessage]
		, Order1.[CreatedByUserID]
		, Order1.[CreatedDate]
		, Order1.[LastModifiedByUserID]
		, Order1.[LastModifiedDate]
		, Order1.[Timestamp]
		, Account1.[AccountName]
		, Currency1.[CurrencyName]
		, OrderStatus1.[OrderStatusName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblOrders_Order] Order1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=Order1.[LogToAccountID] AND Account1.[MetaPartnerID]=Order1.[CreditMetaPartnerID]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Order1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpOrders_OrderStatus] OrderStatus1 ON OrderStatus1.[OrderStatusCode]=Order1.[OrderStatusCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Order1.[DebitMetaPartnerID]
	WHERE 
		Order1.[OrderStatusCode] = @OrderStatusCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderID' THEN Order1.[OrderID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderID' THEN Order1.[OrderID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DebitMetaPartnerID' THEN Order1.[DebitMetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DebitMetaPartnerID' THEN Order1.[DebitMetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreditMetaPartnerID' THEN Order1.[CreditMetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreditMetaPartnerID' THEN Order1.[CreditMetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LogToAccountID' THEN Order1.[LogToAccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LogToAccountID' THEN Order1.[LogToAccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderDescription' THEN Order1.[OrderDescription] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderDescription' THEN Order1.[OrderDescription] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderAmount' THEN Order1.[OrderAmount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderAmount' THEN Order1.[OrderAmount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderSubtotal' THEN Order1.[OrderSubtotal] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderSubtotal' THEN Order1.[OrderSubtotal] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderTax' THEN Order1.[OrderTax] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderTax' THEN Order1.[OrderTax] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderServiceCharge' THEN Order1.[OrderServiceCharge] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderServiceCharge' THEN Order1.[OrderServiceCharge] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Order1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Order1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderStatusCode' THEN Order1.[OrderStatusCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderStatusCode' THEN Order1.[OrderStatusCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderStatusMessage' THEN Order1.[OrderStatusMessage] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderStatusMessage' THEN Order1.[OrderStatusMessage] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Order1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Order1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Order1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Order1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Order1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Order1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Order1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Order1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Order1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Order1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderStatusName' THEN OrderStatus1.[OrderStatusName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderStatusName' THEN OrderStatus1.[OrderStatusName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spOrders_GetAllOrderStatusData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'OrderStatusCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all OrderStatus data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='OrderStatusCode'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  OrderStatus1.[OrderStatusCode]
		, OrderStatus1.[OrderStatusName]
		, OrderStatus1.[Description]
		, OrderStatus1.[IsActive]
		, OrderStatus1.[CreatedByUserID]
		, OrderStatus1.[CreatedDate]
		, OrderStatus1.[LastModifiedByUserID]
		, OrderStatus1.[LastModifiedDate]
		, OrderStatus1.[Timestamp]
	FROM
	      [dbo].[tlkpOrders_OrderStatus] OrderStatus1
	WHERE 
		OrderStatus1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN OrderStatus1.[IsActive] ELSE 1 END

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  OrderStatus1.[OrderStatusCode]
		, OrderStatus1.[OrderStatusName]
		, OrderStatus1.[Description]
		, OrderStatus1.[IsActive]
		, OrderStatus1.[CreatedByUserID]
		, OrderStatus1.[CreatedDate]
		, OrderStatus1.[LastModifiedByUserID]
		, OrderStatus1.[LastModifiedDate]
		, OrderStatus1.[Timestamp]
	FROM
	      [dbo].[tlkpOrders_OrderStatus] OrderStatus1
	WHERE 
		OrderStatus1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN OrderStatus1.[IsActive] ELSE 1 END

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderStatusCode' THEN OrderStatus1.[OrderStatusCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderStatusCode' THEN OrderStatus1.[OrderStatusCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderStatusName' THEN OrderStatus1.[OrderStatusName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderStatusName' THEN OrderStatus1.[OrderStatusName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN OrderStatus1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN OrderStatus1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN OrderStatus1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN OrderStatus1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN OrderStatus1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN OrderStatus1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN OrderStatus1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN OrderStatus1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN OrderStatus1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN OrderStatus1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN OrderStatus1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN OrderStatus1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN OrderStatus1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN OrderStatus1.[Timestamp] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spOrders_GetManyOrderDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @StartIndex int = 1
	, @PageSize int = 50
	, @MaximumListSize int = 0
	, @MaximumListSizeExceeded bit = 0 OUTPUT
	, @TotalRecords int = 0 OUTPUT
	, @SortColumn sysname = 'CurrencyCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @CurrencyCode int
	, @OrderStatusCode int
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets many Order data by criteria.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

DECLARE @vEndIndex int
IF (@StartIndex < 1) SET @StartIndex=1
IF (@PageSize < 1) SET @PageSize=1
SET @vEndIndex = @StartIndex + @Pagesize
IF (@SortColumn = '') SET @SortColumn='CurrencyCode'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

DECLARE @OrderedRecords TABLE
(
     SearchOrderID int IDENTITY (1, 1) NOT NULL
    , OrderID uniqueidentifier
)
IF (@SortDirection = 'Random')
BEGIN
	INSERT INTO @OrderedRecords (OrderID)
	SELECT
		  Order1.[OrderID]
	FROM
	      [dbo].[tblOrders_Order] Order1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=Order1.[LogToAccountID] AND Account1.[MetaPartnerID]=Order1.[CreditMetaPartnerID]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Order1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpOrders_OrderStatus] OrderStatus1 ON OrderStatus1.[OrderStatusCode]=Order1.[OrderStatusCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Order1.[DebitMetaPartnerID]
	WHERE 
		(@CurrencyCode IS NULL OR Order1.[CurrencyCode] = @CurrencyCode)
		AND (@OrderStatusCode IS NULL OR Order1.[OrderStatusCode] = @OrderStatusCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (Order1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (Order1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY NewID()
END
ELSE
BEGIN
	INSERT INTO @OrderedRecords (OrderID)
	SELECT
		  Order1.[OrderID]
	FROM
	      [dbo].[tblOrders_Order] Order1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=Order1.[LogToAccountID] AND Account1.[MetaPartnerID]=Order1.[CreditMetaPartnerID]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Order1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpOrders_OrderStatus] OrderStatus1 ON OrderStatus1.[OrderStatusCode]=Order1.[OrderStatusCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Order1.[DebitMetaPartnerID]
	WHERE 
		(@CurrencyCode IS NULL OR Order1.[CurrencyCode] = @CurrencyCode)
		AND (@OrderStatusCode IS NULL OR Order1.[OrderStatusCode] = @OrderStatusCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (Order1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (Order1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderID' THEN Order1.[OrderID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderID' THEN Order1.[OrderID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DebitMetaPartnerID' THEN Order1.[DebitMetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DebitMetaPartnerID' THEN Order1.[DebitMetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreditMetaPartnerID' THEN Order1.[CreditMetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreditMetaPartnerID' THEN Order1.[CreditMetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LogToAccountID' THEN Order1.[LogToAccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LogToAccountID' THEN Order1.[LogToAccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderDescription' THEN Order1.[OrderDescription] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderDescription' THEN Order1.[OrderDescription] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderAmount' THEN Order1.[OrderAmount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderAmount' THEN Order1.[OrderAmount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderSubtotal' THEN Order1.[OrderSubtotal] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderSubtotal' THEN Order1.[OrderSubtotal] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderTax' THEN Order1.[OrderTax] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderTax' THEN Order1.[OrderTax] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderServiceCharge' THEN Order1.[OrderServiceCharge] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderServiceCharge' THEN Order1.[OrderServiceCharge] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyCode' THEN Order1.[CurrencyCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyCode' THEN Order1.[CurrencyCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderStatusCode' THEN Order1.[OrderStatusCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderStatusCode' THEN Order1.[OrderStatusCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderStatusMessage' THEN Order1.[OrderStatusMessage] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderStatusMessage' THEN Order1.[OrderStatusMessage] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Order1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Order1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Order1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Order1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Order1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Order1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Order1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Order1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Order1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Order1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CurrencyName' THEN Currency1.[CurrencyName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderStatusName' THEN OrderStatus1.[OrderStatusName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderStatusName' THEN OrderStatus1.[OrderStatusName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'MetaPartnerName' THEN MetaPartner1.[MetaPartnerName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DateFormatCode' THEN MetaPartner1.[DateFormatCode] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END

BEGIN
	SET @TotalRecords = (SELECT Count (*) FROM @OrderedRecords)
	IF @MaximumListSize > 0
	BEGIN
		IF @TotalRecords > @MaximumListSize
		BEGIN
			SET @MaximumListSizeExceeded = 1
			SET @TotalRecords = @MaximumListSize
		END
	END

	/* get search results */
	SELECT
		  Order1.[OrderID]
		, Order1.[DebitMetaPartnerID]
		, Order1.[CreditMetaPartnerID]
		, Order1.[LogToAccountID]
		, Order1.[OrderDescription]
		, Order1.[OrderAmount]
		, Order1.[OrderSubtotal]
		, Order1.[OrderTax]
		, Order1.[OrderServiceCharge]
		, Order1.[CurrencyCode]
		, Order1.[OrderStatusCode]
		, Order1.[OrderStatusMessage]
		, Order1.[CreatedByUserID]
		, Order1.[CreatedDate]
		, Order1.[LastModifiedByUserID]
		, Order1.[LastModifiedDate]
		, Order1.[Timestamp]
		, Account1.[AccountName]
		, Currency1.[CurrencyName]
		, OrderStatus1.[OrderStatusName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblOrders_Order] Order1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=Order1.[LogToAccountID] AND Account1.[MetaPartnerID]=Order1.[CreditMetaPartnerID]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Order1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpOrders_OrderStatus] OrderStatus1 ON OrderStatus1.[OrderStatusCode]=Order1.[OrderStatusCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Order1.[DebitMetaPartnerID]
	INNER JOIN @OrderedRecords search ON search.[OrderID] = Order1.[OrderID]
	WHERE
		search.SearchOrderID  >= @StartIndex AND
		search.SearchOrderID  < @vEndIndex
	ORDER BY
		search.SearchOrderID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spOrders_GetOneOrder
	  @SqlErrorNumber int = 0 OUTPUT
	, @OrderID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single Order by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@OrderID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  Order1.[OrderID]
		, Order1.[DebitMetaPartnerID]
		, Order1.[CreditMetaPartnerID]
		, Order1.[LogToAccountID]
		, Order1.[OrderDescription]
		, Order1.[OrderAmount]
		, Order1.[OrderSubtotal]
		, Order1.[OrderTax]
		, Order1.[OrderServiceCharge]
		, Order1.[CurrencyCode]
		, Order1.[OrderStatusCode]
		, Order1.[OrderStatusMessage]
		, Order1.[CreatedByUserID]
		, Order1.[CreatedDate]
		, Order1.[LastModifiedByUserID]
		, Order1.[LastModifiedDate]
		, Order1.[Timestamp]
		, Account1.[AccountName]
		, Currency1.[CurrencyName]
		, OrderStatus1.[OrderStatusName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblOrders_Order] Order1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=Order1.[LogToAccountID] AND Account1.[MetaPartnerID]=Order1.[CreditMetaPartnerID]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Order1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpOrders_OrderStatus] OrderStatus1 ON OrderStatus1.[OrderStatusCode]=Order1.[OrderStatusCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Order1.[DebitMetaPartnerID]
	WHERE Order1.[OrderID] =  @OrderID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spOrders_GetOneOrderByOrderIDAndDebitMetaPartnerIDAndCreditMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @OrderID uniqueidentifier
	, @DebitMetaPartnerID uniqueidentifier
	, @CreditMetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single Order by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@OrderID IS NULL OR @DebitMetaPartnerID IS NULL OR @CreditMetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  Order1.[OrderID]
		, Order1.[DebitMetaPartnerID]
		, Order1.[CreditMetaPartnerID]
		, Order1.[LogToAccountID]
		, Order1.[OrderDescription]
		, Order1.[OrderAmount]
		, Order1.[OrderSubtotal]
		, Order1.[OrderTax]
		, Order1.[OrderServiceCharge]
		, Order1.[CurrencyCode]
		, Order1.[OrderStatusCode]
		, Order1.[OrderStatusMessage]
		, Order1.[CreatedByUserID]
		, Order1.[CreatedDate]
		, Order1.[LastModifiedByUserID]
		, Order1.[LastModifiedDate]
		, Order1.[Timestamp]
		, Account1.[AccountName]
		, Currency1.[CurrencyName]
		, OrderStatus1.[OrderStatusName]
		, MetaPartner1.[MetaPartnerName]
		, MetaPartner1.[DateFormatCode]
	FROM
	      [dbo].[tblOrders_Order] Order1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=Order1.[LogToAccountID] AND Account1.[MetaPartnerID]=Order1.[CreditMetaPartnerID]
	INNER JOIN [dbo].[tlkpAccounts_Currency] Currency1 ON Currency1.[CurrencyCode]=Order1.[CurrencyCode]
	INNER JOIN [dbo].[tlkpOrders_OrderStatus] OrderStatus1 ON OrderStatus1.[OrderStatusCode]=Order1.[OrderStatusCode]
	INNER JOIN [dbo].[tblCustomers_MetaPartner] MetaPartner1 ON MetaPartner1.[MetaPartnerID]=Order1.[DebitMetaPartnerID]
	WHERE Order1.[OrderID] =  @OrderID AND Order1.[DebitMetaPartnerID] =  @DebitMetaPartnerID AND Order1.[CreditMetaPartnerID] =  @CreditMetaPartnerID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spOrders_GetOneOrderStatus
	  @SqlErrorNumber int = 0 OUTPUT
	, @OrderStatusCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single OrderStatus by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@OrderStatusCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  OrderStatus1.[OrderStatusCode]
		, OrderStatus1.[OrderStatusName]
		, OrderStatus1.[Description]
		, OrderStatus1.[IsActive]
		, OrderStatus1.[CreatedByUserID]
		, OrderStatus1.[CreatedDate]
		, OrderStatus1.[LastModifiedByUserID]
		, OrderStatus1.[LastModifiedDate]
		, OrderStatus1.[Timestamp]
	FROM
	      [dbo].[tlkpOrders_OrderStatus] OrderStatus1
	WHERE OrderStatus1.[OrderStatusCode] =  @OrderStatusCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spOrders_UpdateOneOrderStatus
	  @SqlErrorNumber int = 0 OUTPUT
	, @LastModifiedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @OrderStatusCode int
	, @OrderStatusName nvarchar(255)
	, @Description nvarchar(2000) = NULL
	, @IsActive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure updates OrderStatus data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@OrderStatusCode IS NULL OR @OrderStatusName IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [OrderStatusCode] FROM [dbo].[tlkpOrders_OrderStatus] WHERE [OrderStatusCode] =  @OrderStatusCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [OrderStatusCode] FROM [dbo].[tlkpOrders_OrderStatus] WHERE [OrderStatusCode] =  @OrderStatusCode AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	UPDATE
	      [dbo].[tlkpOrders_OrderStatus]
	SET
	     [LastModifiedByUserID] = @LastModifiedByUserID
	   , [LastModifiedDate] = getdate()
	   , [OrderStatusCode] = @OrderStatusCode
	   , [OrderStatusName] = @OrderStatusName
	   , [Description] = @Description
	   , [IsActive] = @IsActive
	WHERE [OrderStatusCode] =  @OrderStatusCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

	SET  @Timestamp = @@DBTS

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spOrders_UpsertOneOrder
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @LastModifiedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @OrderID uniqueidentifier = NULL OUTPUT
	, @DebitMetaPartnerID uniqueidentifier
	, @CreditMetaPartnerID uniqueidentifier
	, @LogToAccountID uniqueidentifier
	, @OrderDescription nvarchar(2000) = NULL
	, @OrderAmount money
	, @OrderSubtotal money
	, @OrderTax money
	, @OrderServiceCharge money
	, @CurrencyCode int
	, @OrderStatusCode int
	, @OrderStatusMessage nvarchar(1000) = NULL
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure inserts or updates Order data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@DebitMetaPartnerID IS NULL OR @CreditMetaPartnerID IS NULL OR @LogToAccountID IS NULL OR @OrderAmount IS NULL OR @OrderSubtotal IS NULL OR @OrderTax IS NULL OR @OrderServiceCharge IS NULL OR @CurrencyCode IS NULL OR @OrderStatusCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [OrderID] FROM [dbo].[tblOrders_Order] WHERE [OrderID] =  @OrderID AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
IF NOT EXISTS (SELECT [OrderID] FROM [dbo].[tblOrders_Order] WHERE [OrderID] =  @OrderID)
BEGIN
	IF @OrderID  IS NULL
	BEGIN
		SET @OrderID  = NEWID ()
	END
	INSERT
	      [dbo].[tblOrders_Order]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [OrderID]
	   , [DebitMetaPartnerID]
	   , [CreditMetaPartnerID]
	   , [LogToAccountID]
	   , [OrderDescription]
	   , [OrderAmount]
	   , [OrderSubtotal]
	   , [OrderTax]
	   , [OrderServiceCharge]
	   , [CurrencyCode]
	   , [OrderStatusCode]
	   , [OrderStatusMessage]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @OrderID
	   , @DebitMetaPartnerID
	   , @CreditMetaPartnerID
	   , @LogToAccountID
	   , @OrderDescription
	   , @OrderAmount
	   , @OrderSubtotal
	   , @OrderTax
	   , @OrderServiceCharge
	   , @CurrencyCode
	   , @OrderStatusCode
	   , @OrderStatusMessage
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
	END
ELSE
BEGIN
	UPDATE
	      [dbo].[tblOrders_Order]
	SET
	     [LastModifiedByUserID] = @LastModifiedByUserID
	   , [LastModifiedDate] = getdate()
	   , [OrderID] = @OrderID
	   , [DebitMetaPartnerID] = @DebitMetaPartnerID
	   , [CreditMetaPartnerID] = @CreditMetaPartnerID
	   , [LogToAccountID] = @LogToAccountID
	   , [OrderDescription] = @OrderDescription
	   , [OrderAmount] = @OrderAmount
	   , [OrderSubtotal] = @OrderSubtotal
	   , [OrderTax] = @OrderTax
	   , [OrderServiceCharge] = @OrderServiceCharge
	   , [CurrencyCode] = @CurrencyCode
	   , [OrderStatusCode] = @OrderStatusCode
	   , [OrderStatusMessage] = @OrderStatusMessage
	WHERE [OrderID] =  @OrderID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

	SET  @Timestamp = @@DBTS

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spPayments_AddOnePaymentStatus
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @PaymentStatusCode int
	, @PaymentStatusName nvarchar(255)
	, @Description nvarchar(2000) = NULL
	, @IsActive bit = 1
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure inserts PaymentStatus data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@PaymentStatusCode IS NULL OR @PaymentStatusName IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF EXISTS (SELECT [PaymentStatusCode] FROM [dbo].[tlkpPayments_PaymentStatus] WHERE [PaymentStatusCode] =  @PaymentStatusCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	INSERT
	      [dbo].[tlkpPayments_PaymentStatus]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [PaymentStatusCode]
	   , [PaymentStatusName]
	   , [Description]
	   , [IsActive]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @PaymentStatusCode
	   , @PaymentStatusName
	   , @Description
	   , @IsActive
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spPayments_AddOneTransactionStatus
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @TransactionStatusCode int
	, @TransactionStatusName nvarchar(255)
	, @Description nvarchar(2000) = NULL
	, @IsActive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure inserts TransactionStatus data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@TransactionStatusCode IS NULL OR @TransactionStatusName IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF EXISTS (SELECT [TransactionStatusCode] FROM [dbo].[tlkpPayments_TransactionStatus] WHERE [TransactionStatusCode] =  @TransactionStatusCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	INSERT
	      [dbo].[tlkpPayments_TransactionStatus]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [TransactionStatusCode]
	   , [TransactionStatusName]
	   , [Description]
	   , [IsActive]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @TransactionStatusCode
	   , @TransactionStatusName
	   , @Description
	   , @IsActive
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spPayments_AddOneTransactionType
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @TransactionTypeCode int
	, @TransactionTypeName nvarchar(255)
	, @Description nvarchar(2000) = NULL
	, @IsActive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure inserts TransactionType data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@TransactionTypeCode IS NULL OR @TransactionTypeName IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF EXISTS (SELECT [TransactionTypeCode] FROM [dbo].[tlkpPayments_TransactionType] WHERE [TransactionTypeCode] =  @TransactionTypeCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	INSERT
	      [dbo].[tlkpPayments_TransactionType]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [TransactionTypeCode]
	   , [TransactionTypeName]
	   , [Description]
	   , [IsActive]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @TransactionTypeCode
	   , @TransactionTypeName
	   , @Description
	   , @IsActive
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spPayments_DeleteAllPaymentDataByDestinationAccountIDAndCreditMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @DestinationAccountID uniqueidentifier
	, @CreditMetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all Payment data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@DestinationAccountID IS NULL OR @CreditMetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblPayments_Payment]
	WHERE [DestinationAccountID] =  @DestinationAccountID AND [CreditMetaPartnerID] =  @CreditMetaPartnerID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spPayments_DeleteAllPaymentDataByOrderID
	  @SqlErrorNumber int = 0 OUTPUT
	, @OrderID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all Payment data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@OrderID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblPayments_Payment]
	WHERE [OrderID] =  @OrderID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spPayments_DeleteAllPaymentDataByPaymentStatusCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @PaymentStatusCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all Payment data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@PaymentStatusCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblPayments_Payment]
	WHERE [PaymentStatusCode] =  @PaymentStatusCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spPayments_DeleteAllPaymentDataBySourceAccountIDAndDebitMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @SourceAccountID uniqueidentifier
	, @DebitMetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all Payment data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@SourceAccountID IS NULL OR @DebitMetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblPayments_Payment]
	WHERE [SourceAccountID] =  @SourceAccountID AND [DebitMetaPartnerID] =  @DebitMetaPartnerID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spPayments_DeleteOnePayment
	  @SqlErrorNumber int = 0 OUTPUT
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @PaymentID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes Payment data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@PaymentID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [PaymentID] FROM [dbo].[tblPayments_Payment] WHERE [PaymentID] =  @PaymentID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [PaymentID] FROM [dbo].[tblPayments_Payment] WHERE [PaymentID] =  @PaymentID AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblPayments_Payment]
	WHERE [PaymentID] =  @PaymentID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spPayments_DeleteOnePaymentStatus
	  @SqlErrorNumber int = 0 OUTPUT
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @PaymentStatusCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes PaymentStatus data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@PaymentStatusCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [PaymentStatusCode] FROM [dbo].[tlkpPayments_PaymentStatus] WHERE [PaymentStatusCode] =  @PaymentStatusCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [PaymentStatusCode] FROM [dbo].[tlkpPayments_PaymentStatus] WHERE [PaymentStatusCode] =  @PaymentStatusCode AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tlkpPayments_PaymentStatus]
	WHERE [PaymentStatusCode] =  @PaymentStatusCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spPayments_DeleteOneTransactionStatus
	  @SqlErrorNumber int = 0 OUTPUT
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @TransactionStatusCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes TransactionStatus data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@TransactionStatusCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [TransactionStatusCode] FROM [dbo].[tlkpPayments_TransactionStatus] WHERE [TransactionStatusCode] =  @TransactionStatusCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [TransactionStatusCode] FROM [dbo].[tlkpPayments_TransactionStatus] WHERE [TransactionStatusCode] =  @TransactionStatusCode AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tlkpPayments_TransactionStatus]
	WHERE [TransactionStatusCode] =  @TransactionStatusCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spPayments_DeleteOneTransactionType
	  @SqlErrorNumber int = 0 OUTPUT
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @TransactionTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes TransactionType data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@TransactionTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [TransactionTypeCode] FROM [dbo].[tlkpPayments_TransactionType] WHERE [TransactionTypeCode] =  @TransactionTypeCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [TransactionTypeCode] FROM [dbo].[tlkpPayments_TransactionType] WHERE [TransactionTypeCode] =  @TransactionTypeCode AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tlkpPayments_TransactionType]
	WHERE [TransactionTypeCode] =  @TransactionTypeCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spPayments_GetAllPaymentData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'PaymentID'
	, @SortDirection nvarchar(20) = 'Ascending'
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all Payment data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='PaymentID'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  Payment1.[PaymentID]
		, Payment1.[PaymentAmount]
		, Payment1.[PaymentSubtotal]
		, Payment1.[PaymentTax]
		, Payment1.[PaymentServiceCharge]
		, Payment1.[OrderID]
		, Payment1.[DebitMetaPartnerID]
		, Payment1.[SourceAccountID]
		, Payment1.[CreditMetaPartnerID]
		, Payment1.[DestinationAccountID]
		, Payment1.[PaymentStatusCode]
		, Payment1.[PaymentStatusMessage]
		, Payment1.[CreatedByUserID]
		, Payment1.[CreatedDate]
		, Payment1.[LastModifiedByUserID]
		, Payment1.[LastModifiedDate]
		, Payment1.[Timestamp]
		, Account1.[AccountName]
		, PaymentStatus1.[PaymentStatusName]
	FROM
	      [dbo].[tblPayments_Payment] Payment1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=Payment1.[SourceAccountID] AND Account1.[MetaPartnerID]=Payment1.[DebitMetaPartnerID]
	INNER JOIN [dbo].[tlkpPayments_PaymentStatus] PaymentStatus1 ON PaymentStatus1.[PaymentStatusCode]=Payment1.[PaymentStatusCode]

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  Payment1.[PaymentID]
		, Payment1.[PaymentAmount]
		, Payment1.[PaymentSubtotal]
		, Payment1.[PaymentTax]
		, Payment1.[PaymentServiceCharge]
		, Payment1.[OrderID]
		, Payment1.[DebitMetaPartnerID]
		, Payment1.[SourceAccountID]
		, Payment1.[CreditMetaPartnerID]
		, Payment1.[DestinationAccountID]
		, Payment1.[PaymentStatusCode]
		, Payment1.[PaymentStatusMessage]
		, Payment1.[CreatedByUserID]
		, Payment1.[CreatedDate]
		, Payment1.[LastModifiedByUserID]
		, Payment1.[LastModifiedDate]
		, Payment1.[Timestamp]
		, Account1.[AccountName]
		, PaymentStatus1.[PaymentStatusName]
	FROM
	      [dbo].[tblPayments_Payment] Payment1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=Payment1.[SourceAccountID] AND Account1.[MetaPartnerID]=Payment1.[DebitMetaPartnerID]
	INNER JOIN [dbo].[tlkpPayments_PaymentStatus] PaymentStatus1 ON PaymentStatus1.[PaymentStatusCode]=Payment1.[PaymentStatusCode]

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentID' THEN Payment1.[PaymentID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentID' THEN Payment1.[PaymentID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentAmount' THEN Payment1.[PaymentAmount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentAmount' THEN Payment1.[PaymentAmount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentSubtotal' THEN Payment1.[PaymentSubtotal] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentSubtotal' THEN Payment1.[PaymentSubtotal] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentTax' THEN Payment1.[PaymentTax] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentTax' THEN Payment1.[PaymentTax] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentServiceCharge' THEN Payment1.[PaymentServiceCharge] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentServiceCharge' THEN Payment1.[PaymentServiceCharge] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderID' THEN Payment1.[OrderID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderID' THEN Payment1.[OrderID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DebitMetaPartnerID' THEN Payment1.[DebitMetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DebitMetaPartnerID' THEN Payment1.[DebitMetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'SourceAccountID' THEN Payment1.[SourceAccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'SourceAccountID' THEN Payment1.[SourceAccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreditMetaPartnerID' THEN Payment1.[CreditMetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreditMetaPartnerID' THEN Payment1.[CreditMetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DestinationAccountID' THEN Payment1.[DestinationAccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DestinationAccountID' THEN Payment1.[DestinationAccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentStatusCode' THEN Payment1.[PaymentStatusCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentStatusCode' THEN Payment1.[PaymentStatusCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentStatusMessage' THEN Payment1.[PaymentStatusMessage] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentStatusMessage' THEN Payment1.[PaymentStatusMessage] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Payment1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Payment1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Payment1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Payment1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Payment1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Payment1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Payment1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Payment1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Payment1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Payment1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentStatusName' THEN PaymentStatus1.[PaymentStatusName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentStatusName' THEN PaymentStatus1.[PaymentStatusName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spPayments_GetAllPaymentDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'PaymentStatusCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @PaymentStatusCode int
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all Payment data by criteria.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='PaymentStatusCode'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  Payment1.[PaymentID]
		, Payment1.[PaymentAmount]
		, Payment1.[PaymentSubtotal]
		, Payment1.[PaymentTax]
		, Payment1.[PaymentServiceCharge]
		, Payment1.[OrderID]
		, Payment1.[DebitMetaPartnerID]
		, Payment1.[SourceAccountID]
		, Payment1.[CreditMetaPartnerID]
		, Payment1.[DestinationAccountID]
		, Payment1.[PaymentStatusCode]
		, Payment1.[PaymentStatusMessage]
		, Payment1.[CreatedByUserID]
		, Payment1.[CreatedDate]
		, Payment1.[LastModifiedByUserID]
		, Payment1.[LastModifiedDate]
		, Payment1.[Timestamp]
		, Account1.[AccountName]
		, PaymentStatus1.[PaymentStatusName]
	FROM
	      [dbo].[tblPayments_Payment] Payment1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=Payment1.[SourceAccountID] AND Account1.[MetaPartnerID]=Payment1.[DebitMetaPartnerID]
	INNER JOIN [dbo].[tlkpPayments_PaymentStatus] PaymentStatus1 ON PaymentStatus1.[PaymentStatusCode]=Payment1.[PaymentStatusCode]
	WHERE 
		(@PaymentStatusCode IS NULL OR Payment1.[PaymentStatusCode] = @PaymentStatusCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (Payment1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (Payment1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  Payment1.[PaymentID]
		, Payment1.[PaymentAmount]
		, Payment1.[PaymentSubtotal]
		, Payment1.[PaymentTax]
		, Payment1.[PaymentServiceCharge]
		, Payment1.[OrderID]
		, Payment1.[DebitMetaPartnerID]
		, Payment1.[SourceAccountID]
		, Payment1.[CreditMetaPartnerID]
		, Payment1.[DestinationAccountID]
		, Payment1.[PaymentStatusCode]
		, Payment1.[PaymentStatusMessage]
		, Payment1.[CreatedByUserID]
		, Payment1.[CreatedDate]
		, Payment1.[LastModifiedByUserID]
		, Payment1.[LastModifiedDate]
		, Payment1.[Timestamp]
		, Account1.[AccountName]
		, PaymentStatus1.[PaymentStatusName]
	FROM
	      [dbo].[tblPayments_Payment] Payment1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=Payment1.[SourceAccountID] AND Account1.[MetaPartnerID]=Payment1.[DebitMetaPartnerID]
	INNER JOIN [dbo].[tlkpPayments_PaymentStatus] PaymentStatus1 ON PaymentStatus1.[PaymentStatusCode]=Payment1.[PaymentStatusCode]
	WHERE 
		(@PaymentStatusCode IS NULL OR Payment1.[PaymentStatusCode] = @PaymentStatusCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (Payment1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (Payment1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentID' THEN Payment1.[PaymentID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentID' THEN Payment1.[PaymentID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentAmount' THEN Payment1.[PaymentAmount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentAmount' THEN Payment1.[PaymentAmount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentSubtotal' THEN Payment1.[PaymentSubtotal] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentSubtotal' THEN Payment1.[PaymentSubtotal] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentTax' THEN Payment1.[PaymentTax] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentTax' THEN Payment1.[PaymentTax] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentServiceCharge' THEN Payment1.[PaymentServiceCharge] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentServiceCharge' THEN Payment1.[PaymentServiceCharge] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderID' THEN Payment1.[OrderID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderID' THEN Payment1.[OrderID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DebitMetaPartnerID' THEN Payment1.[DebitMetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DebitMetaPartnerID' THEN Payment1.[DebitMetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'SourceAccountID' THEN Payment1.[SourceAccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'SourceAccountID' THEN Payment1.[SourceAccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreditMetaPartnerID' THEN Payment1.[CreditMetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreditMetaPartnerID' THEN Payment1.[CreditMetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DestinationAccountID' THEN Payment1.[DestinationAccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DestinationAccountID' THEN Payment1.[DestinationAccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentStatusCode' THEN Payment1.[PaymentStatusCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentStatusCode' THEN Payment1.[PaymentStatusCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentStatusMessage' THEN Payment1.[PaymentStatusMessage] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentStatusMessage' THEN Payment1.[PaymentStatusMessage] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Payment1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Payment1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Payment1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Payment1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Payment1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Payment1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Payment1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Payment1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Payment1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Payment1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentStatusName' THEN PaymentStatus1.[PaymentStatusName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentStatusName' THEN PaymentStatus1.[PaymentStatusName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spPayments_GetAllPaymentDataByDestinationAccountIDAndCreditMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'DestinationAccountID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @DestinationAccountID uniqueidentifier
	, @CreditMetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all Payment data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='DestinationAccountID'

/*
** parameter validation
*/
IF (@DestinationAccountID IS NULL OR @CreditMetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  Payment1.[PaymentID]
		, Payment1.[PaymentAmount]
		, Payment1.[PaymentSubtotal]
		, Payment1.[PaymentTax]
		, Payment1.[PaymentServiceCharge]
		, Payment1.[OrderID]
		, Payment1.[DebitMetaPartnerID]
		, Payment1.[SourceAccountID]
		, Payment1.[CreditMetaPartnerID]
		, Payment1.[DestinationAccountID]
		, Payment1.[PaymentStatusCode]
		, Payment1.[PaymentStatusMessage]
		, Payment1.[CreatedByUserID]
		, Payment1.[CreatedDate]
		, Payment1.[LastModifiedByUserID]
		, Payment1.[LastModifiedDate]
		, Payment1.[Timestamp]
		, Account1.[AccountName]
		, PaymentStatus1.[PaymentStatusName]
	FROM
	      [dbo].[tblPayments_Payment] Payment1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=Payment1.[SourceAccountID] AND Account1.[MetaPartnerID]=Payment1.[DebitMetaPartnerID]
	INNER JOIN [dbo].[tlkpPayments_PaymentStatus] PaymentStatus1 ON PaymentStatus1.[PaymentStatusCode]=Payment1.[PaymentStatusCode]
	WHERE 
		Payment1.[DestinationAccountID] = @DestinationAccountID
		AND Payment1.[CreditMetaPartnerID] = @CreditMetaPartnerID

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  Payment1.[PaymentID]
		, Payment1.[PaymentAmount]
		, Payment1.[PaymentSubtotal]
		, Payment1.[PaymentTax]
		, Payment1.[PaymentServiceCharge]
		, Payment1.[OrderID]
		, Payment1.[DebitMetaPartnerID]
		, Payment1.[SourceAccountID]
		, Payment1.[CreditMetaPartnerID]
		, Payment1.[DestinationAccountID]
		, Payment1.[PaymentStatusCode]
		, Payment1.[PaymentStatusMessage]
		, Payment1.[CreatedByUserID]
		, Payment1.[CreatedDate]
		, Payment1.[LastModifiedByUserID]
		, Payment1.[LastModifiedDate]
		, Payment1.[Timestamp]
		, Account1.[AccountName]
		, PaymentStatus1.[PaymentStatusName]
	FROM
	      [dbo].[tblPayments_Payment] Payment1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=Payment1.[SourceAccountID] AND Account1.[MetaPartnerID]=Payment1.[DebitMetaPartnerID]
	INNER JOIN [dbo].[tlkpPayments_PaymentStatus] PaymentStatus1 ON PaymentStatus1.[PaymentStatusCode]=Payment1.[PaymentStatusCode]
	WHERE 
		Payment1.[DestinationAccountID] = @DestinationAccountID
		AND Payment1.[CreditMetaPartnerID] = @CreditMetaPartnerID

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentID' THEN Payment1.[PaymentID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentID' THEN Payment1.[PaymentID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentAmount' THEN Payment1.[PaymentAmount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentAmount' THEN Payment1.[PaymentAmount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentSubtotal' THEN Payment1.[PaymentSubtotal] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentSubtotal' THEN Payment1.[PaymentSubtotal] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentTax' THEN Payment1.[PaymentTax] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentTax' THEN Payment1.[PaymentTax] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentServiceCharge' THEN Payment1.[PaymentServiceCharge] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentServiceCharge' THEN Payment1.[PaymentServiceCharge] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderID' THEN Payment1.[OrderID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderID' THEN Payment1.[OrderID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DebitMetaPartnerID' THEN Payment1.[DebitMetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DebitMetaPartnerID' THEN Payment1.[DebitMetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'SourceAccountID' THEN Payment1.[SourceAccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'SourceAccountID' THEN Payment1.[SourceAccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreditMetaPartnerID' THEN Payment1.[CreditMetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreditMetaPartnerID' THEN Payment1.[CreditMetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DestinationAccountID' THEN Payment1.[DestinationAccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DestinationAccountID' THEN Payment1.[DestinationAccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentStatusCode' THEN Payment1.[PaymentStatusCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentStatusCode' THEN Payment1.[PaymentStatusCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentStatusMessage' THEN Payment1.[PaymentStatusMessage] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentStatusMessage' THEN Payment1.[PaymentStatusMessage] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Payment1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Payment1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Payment1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Payment1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Payment1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Payment1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Payment1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Payment1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Payment1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Payment1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentStatusName' THEN PaymentStatus1.[PaymentStatusName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentStatusName' THEN PaymentStatus1.[PaymentStatusName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spPayments_GetAllPaymentDataByOrderID
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'OrderID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @OrderID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all Payment data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='OrderID'

/*
** parameter validation
*/
IF (@OrderID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  Payment1.[PaymentID]
		, Payment1.[PaymentAmount]
		, Payment1.[PaymentSubtotal]
		, Payment1.[PaymentTax]
		, Payment1.[PaymentServiceCharge]
		, Payment1.[OrderID]
		, Payment1.[DebitMetaPartnerID]
		, Payment1.[SourceAccountID]
		, Payment1.[CreditMetaPartnerID]
		, Payment1.[DestinationAccountID]
		, Payment1.[PaymentStatusCode]
		, Payment1.[PaymentStatusMessage]
		, Payment1.[CreatedByUserID]
		, Payment1.[CreatedDate]
		, Payment1.[LastModifiedByUserID]
		, Payment1.[LastModifiedDate]
		, Payment1.[Timestamp]
		, Account1.[AccountName]
		, PaymentStatus1.[PaymentStatusName]
	FROM
	      [dbo].[tblPayments_Payment] Payment1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=Payment1.[SourceAccountID] AND Account1.[MetaPartnerID]=Payment1.[DebitMetaPartnerID]
	INNER JOIN [dbo].[tlkpPayments_PaymentStatus] PaymentStatus1 ON PaymentStatus1.[PaymentStatusCode]=Payment1.[PaymentStatusCode]
	WHERE 
		Payment1.[OrderID] = @OrderID

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  Payment1.[PaymentID]
		, Payment1.[PaymentAmount]
		, Payment1.[PaymentSubtotal]
		, Payment1.[PaymentTax]
		, Payment1.[PaymentServiceCharge]
		, Payment1.[OrderID]
		, Payment1.[DebitMetaPartnerID]
		, Payment1.[SourceAccountID]
		, Payment1.[CreditMetaPartnerID]
		, Payment1.[DestinationAccountID]
		, Payment1.[PaymentStatusCode]
		, Payment1.[PaymentStatusMessage]
		, Payment1.[CreatedByUserID]
		, Payment1.[CreatedDate]
		, Payment1.[LastModifiedByUserID]
		, Payment1.[LastModifiedDate]
		, Payment1.[Timestamp]
		, Account1.[AccountName]
		, PaymentStatus1.[PaymentStatusName]
	FROM
	      [dbo].[tblPayments_Payment] Payment1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=Payment1.[SourceAccountID] AND Account1.[MetaPartnerID]=Payment1.[DebitMetaPartnerID]
	INNER JOIN [dbo].[tlkpPayments_PaymentStatus] PaymentStatus1 ON PaymentStatus1.[PaymentStatusCode]=Payment1.[PaymentStatusCode]
	WHERE 
		Payment1.[OrderID] = @OrderID

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentID' THEN Payment1.[PaymentID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentID' THEN Payment1.[PaymentID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentAmount' THEN Payment1.[PaymentAmount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentAmount' THEN Payment1.[PaymentAmount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentSubtotal' THEN Payment1.[PaymentSubtotal] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentSubtotal' THEN Payment1.[PaymentSubtotal] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentTax' THEN Payment1.[PaymentTax] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentTax' THEN Payment1.[PaymentTax] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentServiceCharge' THEN Payment1.[PaymentServiceCharge] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentServiceCharge' THEN Payment1.[PaymentServiceCharge] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderID' THEN Payment1.[OrderID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderID' THEN Payment1.[OrderID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DebitMetaPartnerID' THEN Payment1.[DebitMetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DebitMetaPartnerID' THEN Payment1.[DebitMetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'SourceAccountID' THEN Payment1.[SourceAccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'SourceAccountID' THEN Payment1.[SourceAccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreditMetaPartnerID' THEN Payment1.[CreditMetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreditMetaPartnerID' THEN Payment1.[CreditMetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DestinationAccountID' THEN Payment1.[DestinationAccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DestinationAccountID' THEN Payment1.[DestinationAccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentStatusCode' THEN Payment1.[PaymentStatusCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentStatusCode' THEN Payment1.[PaymentStatusCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentStatusMessage' THEN Payment1.[PaymentStatusMessage] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentStatusMessage' THEN Payment1.[PaymentStatusMessage] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Payment1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Payment1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Payment1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Payment1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Payment1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Payment1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Payment1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Payment1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Payment1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Payment1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentStatusName' THEN PaymentStatus1.[PaymentStatusName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentStatusName' THEN PaymentStatus1.[PaymentStatusName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spPayments_GetAllPaymentDataByPaymentStatusCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'PaymentStatusCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @PaymentStatusCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all Payment data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='PaymentStatusCode'

/*
** parameter validation
*/
IF (@PaymentStatusCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  Payment1.[PaymentID]
		, Payment1.[PaymentAmount]
		, Payment1.[PaymentSubtotal]
		, Payment1.[PaymentTax]
		, Payment1.[PaymentServiceCharge]
		, Payment1.[OrderID]
		, Payment1.[DebitMetaPartnerID]
		, Payment1.[SourceAccountID]
		, Payment1.[CreditMetaPartnerID]
		, Payment1.[DestinationAccountID]
		, Payment1.[PaymentStatusCode]
		, Payment1.[PaymentStatusMessage]
		, Payment1.[CreatedByUserID]
		, Payment1.[CreatedDate]
		, Payment1.[LastModifiedByUserID]
		, Payment1.[LastModifiedDate]
		, Payment1.[Timestamp]
		, Account1.[AccountName]
		, PaymentStatus1.[PaymentStatusName]
	FROM
	      [dbo].[tblPayments_Payment] Payment1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=Payment1.[SourceAccountID] AND Account1.[MetaPartnerID]=Payment1.[DebitMetaPartnerID]
	INNER JOIN [dbo].[tlkpPayments_PaymentStatus] PaymentStatus1 ON PaymentStatus1.[PaymentStatusCode]=Payment1.[PaymentStatusCode]
	WHERE 
		Payment1.[PaymentStatusCode] = @PaymentStatusCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  Payment1.[PaymentID]
		, Payment1.[PaymentAmount]
		, Payment1.[PaymentSubtotal]
		, Payment1.[PaymentTax]
		, Payment1.[PaymentServiceCharge]
		, Payment1.[OrderID]
		, Payment1.[DebitMetaPartnerID]
		, Payment1.[SourceAccountID]
		, Payment1.[CreditMetaPartnerID]
		, Payment1.[DestinationAccountID]
		, Payment1.[PaymentStatusCode]
		, Payment1.[PaymentStatusMessage]
		, Payment1.[CreatedByUserID]
		, Payment1.[CreatedDate]
		, Payment1.[LastModifiedByUserID]
		, Payment1.[LastModifiedDate]
		, Payment1.[Timestamp]
		, Account1.[AccountName]
		, PaymentStatus1.[PaymentStatusName]
	FROM
	      [dbo].[tblPayments_Payment] Payment1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=Payment1.[SourceAccountID] AND Account1.[MetaPartnerID]=Payment1.[DebitMetaPartnerID]
	INNER JOIN [dbo].[tlkpPayments_PaymentStatus] PaymentStatus1 ON PaymentStatus1.[PaymentStatusCode]=Payment1.[PaymentStatusCode]
	WHERE 
		Payment1.[PaymentStatusCode] = @PaymentStatusCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentID' THEN Payment1.[PaymentID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentID' THEN Payment1.[PaymentID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentAmount' THEN Payment1.[PaymentAmount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentAmount' THEN Payment1.[PaymentAmount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentSubtotal' THEN Payment1.[PaymentSubtotal] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentSubtotal' THEN Payment1.[PaymentSubtotal] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentTax' THEN Payment1.[PaymentTax] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentTax' THEN Payment1.[PaymentTax] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentServiceCharge' THEN Payment1.[PaymentServiceCharge] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentServiceCharge' THEN Payment1.[PaymentServiceCharge] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderID' THEN Payment1.[OrderID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderID' THEN Payment1.[OrderID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DebitMetaPartnerID' THEN Payment1.[DebitMetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DebitMetaPartnerID' THEN Payment1.[DebitMetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'SourceAccountID' THEN Payment1.[SourceAccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'SourceAccountID' THEN Payment1.[SourceAccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreditMetaPartnerID' THEN Payment1.[CreditMetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreditMetaPartnerID' THEN Payment1.[CreditMetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DestinationAccountID' THEN Payment1.[DestinationAccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DestinationAccountID' THEN Payment1.[DestinationAccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentStatusCode' THEN Payment1.[PaymentStatusCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentStatusCode' THEN Payment1.[PaymentStatusCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentStatusMessage' THEN Payment1.[PaymentStatusMessage] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentStatusMessage' THEN Payment1.[PaymentStatusMessage] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Payment1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Payment1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Payment1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Payment1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Payment1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Payment1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Payment1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Payment1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Payment1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Payment1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentStatusName' THEN PaymentStatus1.[PaymentStatusName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentStatusName' THEN PaymentStatus1.[PaymentStatusName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spPayments_GetAllPaymentDataBySourceAccountIDAndDebitMetaPartnerID
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'SourceAccountID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @SourceAccountID uniqueidentifier
	, @DebitMetaPartnerID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all Payment data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='SourceAccountID'

/*
** parameter validation
*/
IF (@SourceAccountID IS NULL OR @DebitMetaPartnerID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  Payment1.[PaymentID]
		, Payment1.[PaymentAmount]
		, Payment1.[PaymentSubtotal]
		, Payment1.[PaymentTax]
		, Payment1.[PaymentServiceCharge]
		, Payment1.[OrderID]
		, Payment1.[DebitMetaPartnerID]
		, Payment1.[SourceAccountID]
		, Payment1.[CreditMetaPartnerID]
		, Payment1.[DestinationAccountID]
		, Payment1.[PaymentStatusCode]
		, Payment1.[PaymentStatusMessage]
		, Payment1.[CreatedByUserID]
		, Payment1.[CreatedDate]
		, Payment1.[LastModifiedByUserID]
		, Payment1.[LastModifiedDate]
		, Payment1.[Timestamp]
		, Account1.[AccountName]
		, PaymentStatus1.[PaymentStatusName]
	FROM
	      [dbo].[tblPayments_Payment] Payment1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=Payment1.[SourceAccountID] AND Account1.[MetaPartnerID]=Payment1.[DebitMetaPartnerID]
	INNER JOIN [dbo].[tlkpPayments_PaymentStatus] PaymentStatus1 ON PaymentStatus1.[PaymentStatusCode]=Payment1.[PaymentStatusCode]
	WHERE 
		Payment1.[SourceAccountID] = @SourceAccountID
		AND Payment1.[DebitMetaPartnerID] = @DebitMetaPartnerID

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  Payment1.[PaymentID]
		, Payment1.[PaymentAmount]
		, Payment1.[PaymentSubtotal]
		, Payment1.[PaymentTax]
		, Payment1.[PaymentServiceCharge]
		, Payment1.[OrderID]
		, Payment1.[DebitMetaPartnerID]
		, Payment1.[SourceAccountID]
		, Payment1.[CreditMetaPartnerID]
		, Payment1.[DestinationAccountID]
		, Payment1.[PaymentStatusCode]
		, Payment1.[PaymentStatusMessage]
		, Payment1.[CreatedByUserID]
		, Payment1.[CreatedDate]
		, Payment1.[LastModifiedByUserID]
		, Payment1.[LastModifiedDate]
		, Payment1.[Timestamp]
		, Account1.[AccountName]
		, PaymentStatus1.[PaymentStatusName]
	FROM
	      [dbo].[tblPayments_Payment] Payment1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=Payment1.[SourceAccountID] AND Account1.[MetaPartnerID]=Payment1.[DebitMetaPartnerID]
	INNER JOIN [dbo].[tlkpPayments_PaymentStatus] PaymentStatus1 ON PaymentStatus1.[PaymentStatusCode]=Payment1.[PaymentStatusCode]
	WHERE 
		Payment1.[SourceAccountID] = @SourceAccountID
		AND Payment1.[DebitMetaPartnerID] = @DebitMetaPartnerID

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentID' THEN Payment1.[PaymentID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentID' THEN Payment1.[PaymentID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentAmount' THEN Payment1.[PaymentAmount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentAmount' THEN Payment1.[PaymentAmount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentSubtotal' THEN Payment1.[PaymentSubtotal] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentSubtotal' THEN Payment1.[PaymentSubtotal] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentTax' THEN Payment1.[PaymentTax] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentTax' THEN Payment1.[PaymentTax] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentServiceCharge' THEN Payment1.[PaymentServiceCharge] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentServiceCharge' THEN Payment1.[PaymentServiceCharge] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderID' THEN Payment1.[OrderID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderID' THEN Payment1.[OrderID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DebitMetaPartnerID' THEN Payment1.[DebitMetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DebitMetaPartnerID' THEN Payment1.[DebitMetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'SourceAccountID' THEN Payment1.[SourceAccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'SourceAccountID' THEN Payment1.[SourceAccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreditMetaPartnerID' THEN Payment1.[CreditMetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreditMetaPartnerID' THEN Payment1.[CreditMetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DestinationAccountID' THEN Payment1.[DestinationAccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DestinationAccountID' THEN Payment1.[DestinationAccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentStatusCode' THEN Payment1.[PaymentStatusCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentStatusCode' THEN Payment1.[PaymentStatusCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentStatusMessage' THEN Payment1.[PaymentStatusMessage] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentStatusMessage' THEN Payment1.[PaymentStatusMessage] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Payment1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Payment1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Payment1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Payment1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Payment1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Payment1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Payment1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Payment1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Payment1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Payment1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentStatusName' THEN PaymentStatus1.[PaymentStatusName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentStatusName' THEN PaymentStatus1.[PaymentStatusName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spPayments_GetAllPaymentStatusData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'PaymentStatusCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all PaymentStatus data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='PaymentStatusCode'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  PaymentStatus1.[PaymentStatusCode]
		, PaymentStatus1.[PaymentStatusName]
		, PaymentStatus1.[Description]
		, PaymentStatus1.[IsActive]
		, PaymentStatus1.[CreatedByUserID]
		, PaymentStatus1.[CreatedDate]
		, PaymentStatus1.[LastModifiedByUserID]
		, PaymentStatus1.[LastModifiedDate]
		, PaymentStatus1.[Timestamp]
	FROM
	      [dbo].[tlkpPayments_PaymentStatus] PaymentStatus1
	WHERE 
		PaymentStatus1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN PaymentStatus1.[IsActive] ELSE 1 END

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  PaymentStatus1.[PaymentStatusCode]
		, PaymentStatus1.[PaymentStatusName]
		, PaymentStatus1.[Description]
		, PaymentStatus1.[IsActive]
		, PaymentStatus1.[CreatedByUserID]
		, PaymentStatus1.[CreatedDate]
		, PaymentStatus1.[LastModifiedByUserID]
		, PaymentStatus1.[LastModifiedDate]
		, PaymentStatus1.[Timestamp]
	FROM
	      [dbo].[tlkpPayments_PaymentStatus] PaymentStatus1
	WHERE 
		PaymentStatus1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN PaymentStatus1.[IsActive] ELSE 1 END

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentStatusCode' THEN PaymentStatus1.[PaymentStatusCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentStatusCode' THEN PaymentStatus1.[PaymentStatusCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentStatusName' THEN PaymentStatus1.[PaymentStatusName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentStatusName' THEN PaymentStatus1.[PaymentStatusName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN PaymentStatus1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN PaymentStatus1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN PaymentStatus1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN PaymentStatus1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN PaymentStatus1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN PaymentStatus1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN PaymentStatus1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN PaymentStatus1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN PaymentStatus1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN PaymentStatus1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN PaymentStatus1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN PaymentStatus1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN PaymentStatus1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN PaymentStatus1.[Timestamp] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spPayments_GetAllPaymentTransactionAttributeValueLogData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'PaymentTransactionAttributeValueLogID'
	, @SortDirection nvarchar(20) = 'Ascending'
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all PaymentTransactionAttributeValueLog data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='PaymentTransactionAttributeValueLogID'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  PaymentTransactionAttributeValueLog1.[PaymentTransactionAttributeValueLogID]
		, PaymentTransactionAttributeValueLog1.[PaymentTransactionLogID]
		, PaymentTransactionAttributeValueLog1.[BaseAttributeID]
		, PaymentTransactionAttributeValueLog1.[AttributeValue]
		, PaymentTransactionAttributeValueLog1.[CreatedByUserID]
		, PaymentTransactionAttributeValueLog1.[CreatedDate]
		, PaymentTransactionAttributeValueLog1.[LastModifiedByUserID]
		, PaymentTransactionAttributeValueLog1.[LastModifiedDate]
		, PaymentTransactionAttributeValueLog1.[Timestamp]
	FROM
	      [dbo].[tblPayments_PaymentTransactionAttributeValueLog] PaymentTransactionAttributeValueLog1

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  PaymentTransactionAttributeValueLog1.[PaymentTransactionAttributeValueLogID]
		, PaymentTransactionAttributeValueLog1.[PaymentTransactionLogID]
		, PaymentTransactionAttributeValueLog1.[BaseAttributeID]
		, PaymentTransactionAttributeValueLog1.[AttributeValue]
		, PaymentTransactionAttributeValueLog1.[CreatedByUserID]
		, PaymentTransactionAttributeValueLog1.[CreatedDate]
		, PaymentTransactionAttributeValueLog1.[LastModifiedByUserID]
		, PaymentTransactionAttributeValueLog1.[LastModifiedDate]
		, PaymentTransactionAttributeValueLog1.[Timestamp]
	FROM
	      [dbo].[tblPayments_PaymentTransactionAttributeValueLog] PaymentTransactionAttributeValueLog1

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentTransactionAttributeValueLogID' THEN PaymentTransactionAttributeValueLog1.[PaymentTransactionAttributeValueLogID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentTransactionAttributeValueLogID' THEN PaymentTransactionAttributeValueLog1.[PaymentTransactionAttributeValueLogID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentTransactionLogID' THEN PaymentTransactionAttributeValueLog1.[PaymentTransactionLogID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentTransactionLogID' THEN PaymentTransactionAttributeValueLog1.[PaymentTransactionLogID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BaseAttributeID' THEN PaymentTransactionAttributeValueLog1.[BaseAttributeID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BaseAttributeID' THEN PaymentTransactionAttributeValueLog1.[BaseAttributeID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeValue' THEN PaymentTransactionAttributeValueLog1.[AttributeValue] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeValue' THEN PaymentTransactionAttributeValueLog1.[AttributeValue] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN PaymentTransactionAttributeValueLog1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN PaymentTransactionAttributeValueLog1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN PaymentTransactionAttributeValueLog1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN PaymentTransactionAttributeValueLog1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN PaymentTransactionAttributeValueLog1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN PaymentTransactionAttributeValueLog1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN PaymentTransactionAttributeValueLog1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN PaymentTransactionAttributeValueLog1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN PaymentTransactionAttributeValueLog1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN PaymentTransactionAttributeValueLog1.[Timestamp] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spPayments_GetAllPaymentTransactionAttributeValueLogDataByBaseAttributeID
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'BaseAttributeID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @BaseAttributeID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all PaymentTransactionAttributeValueLog data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='BaseAttributeID'

/*
** parameter validation
*/
IF (@BaseAttributeID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  PaymentTransactionAttributeValueLog1.[PaymentTransactionAttributeValueLogID]
		, PaymentTransactionAttributeValueLog1.[PaymentTransactionLogID]
		, PaymentTransactionAttributeValueLog1.[BaseAttributeID]
		, PaymentTransactionAttributeValueLog1.[AttributeValue]
		, PaymentTransactionAttributeValueLog1.[CreatedByUserID]
		, PaymentTransactionAttributeValueLog1.[CreatedDate]
		, PaymentTransactionAttributeValueLog1.[LastModifiedByUserID]
		, PaymentTransactionAttributeValueLog1.[LastModifiedDate]
		, PaymentTransactionAttributeValueLog1.[Timestamp]
	FROM
	      [dbo].[tblPayments_PaymentTransactionAttributeValueLog] PaymentTransactionAttributeValueLog1
	WHERE 
		PaymentTransactionAttributeValueLog1.[BaseAttributeID] = @BaseAttributeID

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  PaymentTransactionAttributeValueLog1.[PaymentTransactionAttributeValueLogID]
		, PaymentTransactionAttributeValueLog1.[PaymentTransactionLogID]
		, PaymentTransactionAttributeValueLog1.[BaseAttributeID]
		, PaymentTransactionAttributeValueLog1.[AttributeValue]
		, PaymentTransactionAttributeValueLog1.[CreatedByUserID]
		, PaymentTransactionAttributeValueLog1.[CreatedDate]
		, PaymentTransactionAttributeValueLog1.[LastModifiedByUserID]
		, PaymentTransactionAttributeValueLog1.[LastModifiedDate]
		, PaymentTransactionAttributeValueLog1.[Timestamp]
	FROM
	      [dbo].[tblPayments_PaymentTransactionAttributeValueLog] PaymentTransactionAttributeValueLog1
	WHERE 
		PaymentTransactionAttributeValueLog1.[BaseAttributeID] = @BaseAttributeID

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentTransactionAttributeValueLogID' THEN PaymentTransactionAttributeValueLog1.[PaymentTransactionAttributeValueLogID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentTransactionAttributeValueLogID' THEN PaymentTransactionAttributeValueLog1.[PaymentTransactionAttributeValueLogID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentTransactionLogID' THEN PaymentTransactionAttributeValueLog1.[PaymentTransactionLogID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentTransactionLogID' THEN PaymentTransactionAttributeValueLog1.[PaymentTransactionLogID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BaseAttributeID' THEN PaymentTransactionAttributeValueLog1.[BaseAttributeID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BaseAttributeID' THEN PaymentTransactionAttributeValueLog1.[BaseAttributeID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeValue' THEN PaymentTransactionAttributeValueLog1.[AttributeValue] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeValue' THEN PaymentTransactionAttributeValueLog1.[AttributeValue] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN PaymentTransactionAttributeValueLog1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN PaymentTransactionAttributeValueLog1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN PaymentTransactionAttributeValueLog1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN PaymentTransactionAttributeValueLog1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN PaymentTransactionAttributeValueLog1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN PaymentTransactionAttributeValueLog1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN PaymentTransactionAttributeValueLog1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN PaymentTransactionAttributeValueLog1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN PaymentTransactionAttributeValueLog1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN PaymentTransactionAttributeValueLog1.[Timestamp] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spPayments_GetAllPaymentTransactionAttributeValueLogDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'AttributeValue'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @AttributeValue nvarchar(255) = NULL
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all PaymentTransactionAttributeValueLog data by criteria.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='AttributeValue'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  PaymentTransactionAttributeValueLog1.[PaymentTransactionAttributeValueLogID]
		, PaymentTransactionAttributeValueLog1.[PaymentTransactionLogID]
		, PaymentTransactionAttributeValueLog1.[BaseAttributeID]
		, PaymentTransactionAttributeValueLog1.[AttributeValue]
		, PaymentTransactionAttributeValueLog1.[CreatedByUserID]
		, PaymentTransactionAttributeValueLog1.[CreatedDate]
		, PaymentTransactionAttributeValueLog1.[LastModifiedByUserID]
		, PaymentTransactionAttributeValueLog1.[LastModifiedDate]
		, PaymentTransactionAttributeValueLog1.[Timestamp]
	FROM
	      [dbo].[tblPayments_PaymentTransactionAttributeValueLog] PaymentTransactionAttributeValueLog1
	WHERE 
		(@AttributeValue IS NULL OR PaymentTransactionAttributeValueLog1.[AttributeValue] like '%' + @AttributeValue + '%')
		AND ((@LastModifiedDateStart  IS NULL) OR (PaymentTransactionAttributeValueLog1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (PaymentTransactionAttributeValueLog1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  PaymentTransactionAttributeValueLog1.[PaymentTransactionAttributeValueLogID]
		, PaymentTransactionAttributeValueLog1.[PaymentTransactionLogID]
		, PaymentTransactionAttributeValueLog1.[BaseAttributeID]
		, PaymentTransactionAttributeValueLog1.[AttributeValue]
		, PaymentTransactionAttributeValueLog1.[CreatedByUserID]
		, PaymentTransactionAttributeValueLog1.[CreatedDate]
		, PaymentTransactionAttributeValueLog1.[LastModifiedByUserID]
		, PaymentTransactionAttributeValueLog1.[LastModifiedDate]
		, PaymentTransactionAttributeValueLog1.[Timestamp]
	FROM
	      [dbo].[tblPayments_PaymentTransactionAttributeValueLog] PaymentTransactionAttributeValueLog1
	WHERE 
		(@AttributeValue IS NULL OR PaymentTransactionAttributeValueLog1.[AttributeValue] like '%' + @AttributeValue + '%')
		AND ((@LastModifiedDateStart  IS NULL) OR (PaymentTransactionAttributeValueLog1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (PaymentTransactionAttributeValueLog1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentTransactionAttributeValueLogID' THEN PaymentTransactionAttributeValueLog1.[PaymentTransactionAttributeValueLogID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentTransactionAttributeValueLogID' THEN PaymentTransactionAttributeValueLog1.[PaymentTransactionAttributeValueLogID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentTransactionLogID' THEN PaymentTransactionAttributeValueLog1.[PaymentTransactionLogID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentTransactionLogID' THEN PaymentTransactionAttributeValueLog1.[PaymentTransactionLogID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BaseAttributeID' THEN PaymentTransactionAttributeValueLog1.[BaseAttributeID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BaseAttributeID' THEN PaymentTransactionAttributeValueLog1.[BaseAttributeID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeValue' THEN PaymentTransactionAttributeValueLog1.[AttributeValue] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeValue' THEN PaymentTransactionAttributeValueLog1.[AttributeValue] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN PaymentTransactionAttributeValueLog1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN PaymentTransactionAttributeValueLog1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN PaymentTransactionAttributeValueLog1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN PaymentTransactionAttributeValueLog1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN PaymentTransactionAttributeValueLog1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN PaymentTransactionAttributeValueLog1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN PaymentTransactionAttributeValueLog1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN PaymentTransactionAttributeValueLog1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN PaymentTransactionAttributeValueLog1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN PaymentTransactionAttributeValueLog1.[Timestamp] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spPayments_GetAllPaymentTransactionAttributeValueLogDataByPaymentTransactionLogID
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'PaymentTransactionLogID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @PaymentTransactionLogID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all PaymentTransactionAttributeValueLog data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='PaymentTransactionLogID'

/*
** parameter validation
*/
IF (@PaymentTransactionLogID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  PaymentTransactionAttributeValueLog1.[PaymentTransactionAttributeValueLogID]
		, PaymentTransactionAttributeValueLog1.[PaymentTransactionLogID]
		, PaymentTransactionAttributeValueLog1.[BaseAttributeID]
		, PaymentTransactionAttributeValueLog1.[AttributeValue]
		, PaymentTransactionAttributeValueLog1.[CreatedByUserID]
		, PaymentTransactionAttributeValueLog1.[CreatedDate]
		, PaymentTransactionAttributeValueLog1.[LastModifiedByUserID]
		, PaymentTransactionAttributeValueLog1.[LastModifiedDate]
		, PaymentTransactionAttributeValueLog1.[Timestamp]
	FROM
	      [dbo].[tblPayments_PaymentTransactionAttributeValueLog] PaymentTransactionAttributeValueLog1
	WHERE 
		PaymentTransactionAttributeValueLog1.[PaymentTransactionLogID] = @PaymentTransactionLogID

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  PaymentTransactionAttributeValueLog1.[PaymentTransactionAttributeValueLogID]
		, PaymentTransactionAttributeValueLog1.[PaymentTransactionLogID]
		, PaymentTransactionAttributeValueLog1.[BaseAttributeID]
		, PaymentTransactionAttributeValueLog1.[AttributeValue]
		, PaymentTransactionAttributeValueLog1.[CreatedByUserID]
		, PaymentTransactionAttributeValueLog1.[CreatedDate]
		, PaymentTransactionAttributeValueLog1.[LastModifiedByUserID]
		, PaymentTransactionAttributeValueLog1.[LastModifiedDate]
		, PaymentTransactionAttributeValueLog1.[Timestamp]
	FROM
	      [dbo].[tblPayments_PaymentTransactionAttributeValueLog] PaymentTransactionAttributeValueLog1
	WHERE 
		PaymentTransactionAttributeValueLog1.[PaymentTransactionLogID] = @PaymentTransactionLogID

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentTransactionAttributeValueLogID' THEN PaymentTransactionAttributeValueLog1.[PaymentTransactionAttributeValueLogID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentTransactionAttributeValueLogID' THEN PaymentTransactionAttributeValueLog1.[PaymentTransactionAttributeValueLogID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentTransactionLogID' THEN PaymentTransactionAttributeValueLog1.[PaymentTransactionLogID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentTransactionLogID' THEN PaymentTransactionAttributeValueLog1.[PaymentTransactionLogID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BaseAttributeID' THEN PaymentTransactionAttributeValueLog1.[BaseAttributeID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BaseAttributeID' THEN PaymentTransactionAttributeValueLog1.[BaseAttributeID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeValue' THEN PaymentTransactionAttributeValueLog1.[AttributeValue] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeValue' THEN PaymentTransactionAttributeValueLog1.[AttributeValue] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN PaymentTransactionAttributeValueLog1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN PaymentTransactionAttributeValueLog1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN PaymentTransactionAttributeValueLog1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN PaymentTransactionAttributeValueLog1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN PaymentTransactionAttributeValueLog1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN PaymentTransactionAttributeValueLog1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN PaymentTransactionAttributeValueLog1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN PaymentTransactionAttributeValueLog1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN PaymentTransactionAttributeValueLog1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN PaymentTransactionAttributeValueLog1.[Timestamp] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spPayments_GetAllPaymentTransactionLogData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'PaymentTransactionLogID'
	, @SortDirection nvarchar(20) = 'Ascending'
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all PaymentTransactionLog data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='PaymentTransactionLogID'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  PaymentTransactionLog1.[PaymentTransactionLogID]
		, PaymentTransactionLog1.[PaymentID]
		, PaymentTransactionLog1.[TransactionTypeCode]
		, PaymentTransactionLog1.[TransactionStatusCode]
		, PaymentTransactionLog1.[TransactionAmount]
		, PaymentTransactionLog1.[ResponseCode]
		, PaymentTransactionLog1.[TransactionCode]
		, PaymentTransactionLog1.[TransactionMessage]
		, PaymentTransactionLog1.[Balance]
		, PaymentTransactionLog1.[CreatedByUserID]
		, PaymentTransactionLog1.[CreatedDate]
		, PaymentTransactionLog1.[LastModifiedByUserID]
		, PaymentTransactionLog1.[LastModifiedDate]
		, PaymentTransactionLog1.[Timestamp]
		, TransactionType1.[TransactionTypeName]
		, TransactionStatus1.[TransactionStatusName]
	FROM
	      [dbo].[tblPayments_PaymentTransactionLog] PaymentTransactionLog1
	INNER JOIN [dbo].[tlkpPayments_TransactionType] TransactionType1 ON TransactionType1.[TransactionTypeCode]=PaymentTransactionLog1.[TransactionTypeCode]
	INNER JOIN [dbo].[tlkpPayments_TransactionStatus] TransactionStatus1 ON TransactionStatus1.[TransactionStatusCode]=PaymentTransactionLog1.[TransactionStatusCode]

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  PaymentTransactionLog1.[PaymentTransactionLogID]
		, PaymentTransactionLog1.[PaymentID]
		, PaymentTransactionLog1.[TransactionTypeCode]
		, PaymentTransactionLog1.[TransactionStatusCode]
		, PaymentTransactionLog1.[TransactionAmount]
		, PaymentTransactionLog1.[ResponseCode]
		, PaymentTransactionLog1.[TransactionCode]
		, PaymentTransactionLog1.[TransactionMessage]
		, PaymentTransactionLog1.[Balance]
		, PaymentTransactionLog1.[CreatedByUserID]
		, PaymentTransactionLog1.[CreatedDate]
		, PaymentTransactionLog1.[LastModifiedByUserID]
		, PaymentTransactionLog1.[LastModifiedDate]
		, PaymentTransactionLog1.[Timestamp]
		, TransactionType1.[TransactionTypeName]
		, TransactionStatus1.[TransactionStatusName]
	FROM
	      [dbo].[tblPayments_PaymentTransactionLog] PaymentTransactionLog1
	INNER JOIN [dbo].[tlkpPayments_TransactionType] TransactionType1 ON TransactionType1.[TransactionTypeCode]=PaymentTransactionLog1.[TransactionTypeCode]
	INNER JOIN [dbo].[tlkpPayments_TransactionStatus] TransactionStatus1 ON TransactionStatus1.[TransactionStatusCode]=PaymentTransactionLog1.[TransactionStatusCode]

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentTransactionLogID' THEN PaymentTransactionLog1.[PaymentTransactionLogID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentTransactionLogID' THEN PaymentTransactionLog1.[PaymentTransactionLogID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentID' THEN PaymentTransactionLog1.[PaymentID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentID' THEN PaymentTransactionLog1.[PaymentID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TransactionTypeCode' THEN PaymentTransactionLog1.[TransactionTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TransactionTypeCode' THEN PaymentTransactionLog1.[TransactionTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TransactionStatusCode' THEN PaymentTransactionLog1.[TransactionStatusCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TransactionStatusCode' THEN PaymentTransactionLog1.[TransactionStatusCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TransactionAmount' THEN PaymentTransactionLog1.[TransactionAmount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TransactionAmount' THEN PaymentTransactionLog1.[TransactionAmount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ResponseCode' THEN PaymentTransactionLog1.[ResponseCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ResponseCode' THEN PaymentTransactionLog1.[ResponseCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TransactionCode' THEN PaymentTransactionLog1.[TransactionCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TransactionCode' THEN PaymentTransactionLog1.[TransactionCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TransactionMessage' THEN PaymentTransactionLog1.[TransactionMessage] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TransactionMessage' THEN PaymentTransactionLog1.[TransactionMessage] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Balance' THEN PaymentTransactionLog1.[Balance] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Balance' THEN PaymentTransactionLog1.[Balance] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN PaymentTransactionLog1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN PaymentTransactionLog1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN PaymentTransactionLog1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN PaymentTransactionLog1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN PaymentTransactionLog1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN PaymentTransactionLog1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN PaymentTransactionLog1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN PaymentTransactionLog1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN PaymentTransactionLog1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN PaymentTransactionLog1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TransactionTypeName' THEN TransactionType1.[TransactionTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TransactionTypeName' THEN TransactionType1.[TransactionTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TransactionStatusName' THEN TransactionStatus1.[TransactionStatusName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TransactionStatusName' THEN TransactionStatus1.[TransactionStatusName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spPayments_GetAllPaymentTransactionLogDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'TransactionTypeCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @TransactionTypeCode int
	, @TransactionStatusCode int
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all PaymentTransactionLog data by criteria.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='TransactionTypeCode'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  PaymentTransactionLog1.[PaymentTransactionLogID]
		, PaymentTransactionLog1.[PaymentID]
		, PaymentTransactionLog1.[TransactionTypeCode]
		, PaymentTransactionLog1.[TransactionStatusCode]
		, PaymentTransactionLog1.[TransactionAmount]
		, PaymentTransactionLog1.[ResponseCode]
		, PaymentTransactionLog1.[TransactionCode]
		, PaymentTransactionLog1.[TransactionMessage]
		, PaymentTransactionLog1.[Balance]
		, PaymentTransactionLog1.[CreatedByUserID]
		, PaymentTransactionLog1.[CreatedDate]
		, PaymentTransactionLog1.[LastModifiedByUserID]
		, PaymentTransactionLog1.[LastModifiedDate]
		, PaymentTransactionLog1.[Timestamp]
		, TransactionType1.[TransactionTypeName]
		, TransactionStatus1.[TransactionStatusName]
	FROM
	      [dbo].[tblPayments_PaymentTransactionLog] PaymentTransactionLog1
	INNER JOIN [dbo].[tlkpPayments_TransactionType] TransactionType1 ON TransactionType1.[TransactionTypeCode]=PaymentTransactionLog1.[TransactionTypeCode]
	INNER JOIN [dbo].[tlkpPayments_TransactionStatus] TransactionStatus1 ON TransactionStatus1.[TransactionStatusCode]=PaymentTransactionLog1.[TransactionStatusCode]
	WHERE 
		(@TransactionTypeCode IS NULL OR PaymentTransactionLog1.[TransactionTypeCode] = @TransactionTypeCode)
		AND (@TransactionStatusCode IS NULL OR PaymentTransactionLog1.[TransactionStatusCode] = @TransactionStatusCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (PaymentTransactionLog1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (PaymentTransactionLog1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  PaymentTransactionLog1.[PaymentTransactionLogID]
		, PaymentTransactionLog1.[PaymentID]
		, PaymentTransactionLog1.[TransactionTypeCode]
		, PaymentTransactionLog1.[TransactionStatusCode]
		, PaymentTransactionLog1.[TransactionAmount]
		, PaymentTransactionLog1.[ResponseCode]
		, PaymentTransactionLog1.[TransactionCode]
		, PaymentTransactionLog1.[TransactionMessage]
		, PaymentTransactionLog1.[Balance]
		, PaymentTransactionLog1.[CreatedByUserID]
		, PaymentTransactionLog1.[CreatedDate]
		, PaymentTransactionLog1.[LastModifiedByUserID]
		, PaymentTransactionLog1.[LastModifiedDate]
		, PaymentTransactionLog1.[Timestamp]
		, TransactionType1.[TransactionTypeName]
		, TransactionStatus1.[TransactionStatusName]
	FROM
	      [dbo].[tblPayments_PaymentTransactionLog] PaymentTransactionLog1
	INNER JOIN [dbo].[tlkpPayments_TransactionType] TransactionType1 ON TransactionType1.[TransactionTypeCode]=PaymentTransactionLog1.[TransactionTypeCode]
	INNER JOIN [dbo].[tlkpPayments_TransactionStatus] TransactionStatus1 ON TransactionStatus1.[TransactionStatusCode]=PaymentTransactionLog1.[TransactionStatusCode]
	WHERE 
		(@TransactionTypeCode IS NULL OR PaymentTransactionLog1.[TransactionTypeCode] = @TransactionTypeCode)
		AND (@TransactionStatusCode IS NULL OR PaymentTransactionLog1.[TransactionStatusCode] = @TransactionStatusCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (PaymentTransactionLog1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (PaymentTransactionLog1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentTransactionLogID' THEN PaymentTransactionLog1.[PaymentTransactionLogID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentTransactionLogID' THEN PaymentTransactionLog1.[PaymentTransactionLogID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentID' THEN PaymentTransactionLog1.[PaymentID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentID' THEN PaymentTransactionLog1.[PaymentID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TransactionTypeCode' THEN PaymentTransactionLog1.[TransactionTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TransactionTypeCode' THEN PaymentTransactionLog1.[TransactionTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TransactionStatusCode' THEN PaymentTransactionLog1.[TransactionStatusCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TransactionStatusCode' THEN PaymentTransactionLog1.[TransactionStatusCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TransactionAmount' THEN PaymentTransactionLog1.[TransactionAmount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TransactionAmount' THEN PaymentTransactionLog1.[TransactionAmount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ResponseCode' THEN PaymentTransactionLog1.[ResponseCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ResponseCode' THEN PaymentTransactionLog1.[ResponseCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TransactionCode' THEN PaymentTransactionLog1.[TransactionCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TransactionCode' THEN PaymentTransactionLog1.[TransactionCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TransactionMessage' THEN PaymentTransactionLog1.[TransactionMessage] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TransactionMessage' THEN PaymentTransactionLog1.[TransactionMessage] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Balance' THEN PaymentTransactionLog1.[Balance] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Balance' THEN PaymentTransactionLog1.[Balance] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN PaymentTransactionLog1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN PaymentTransactionLog1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN PaymentTransactionLog1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN PaymentTransactionLog1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN PaymentTransactionLog1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN PaymentTransactionLog1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN PaymentTransactionLog1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN PaymentTransactionLog1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN PaymentTransactionLog1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN PaymentTransactionLog1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TransactionTypeName' THEN TransactionType1.[TransactionTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TransactionTypeName' THEN TransactionType1.[TransactionTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TransactionStatusName' THEN TransactionStatus1.[TransactionStatusName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TransactionStatusName' THEN TransactionStatus1.[TransactionStatusName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spPayments_GetAllPaymentTransactionLogDataByPaymentID
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'PaymentID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @PaymentID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all PaymentTransactionLog data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='PaymentID'

/*
** parameter validation
*/
IF (@PaymentID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  PaymentTransactionLog1.[PaymentTransactionLogID]
		, PaymentTransactionLog1.[PaymentID]
		, PaymentTransactionLog1.[TransactionTypeCode]
		, PaymentTransactionLog1.[TransactionStatusCode]
		, PaymentTransactionLog1.[TransactionAmount]
		, PaymentTransactionLog1.[ResponseCode]
		, PaymentTransactionLog1.[TransactionCode]
		, PaymentTransactionLog1.[TransactionMessage]
		, PaymentTransactionLog1.[Balance]
		, PaymentTransactionLog1.[CreatedByUserID]
		, PaymentTransactionLog1.[CreatedDate]
		, PaymentTransactionLog1.[LastModifiedByUserID]
		, PaymentTransactionLog1.[LastModifiedDate]
		, PaymentTransactionLog1.[Timestamp]
		, TransactionType1.[TransactionTypeName]
		, TransactionStatus1.[TransactionStatusName]
	FROM
	      [dbo].[tblPayments_PaymentTransactionLog] PaymentTransactionLog1
	INNER JOIN [dbo].[tlkpPayments_TransactionType] TransactionType1 ON TransactionType1.[TransactionTypeCode]=PaymentTransactionLog1.[TransactionTypeCode]
	INNER JOIN [dbo].[tlkpPayments_TransactionStatus] TransactionStatus1 ON TransactionStatus1.[TransactionStatusCode]=PaymentTransactionLog1.[TransactionStatusCode]
	WHERE 
		PaymentTransactionLog1.[PaymentID] = @PaymentID

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  PaymentTransactionLog1.[PaymentTransactionLogID]
		, PaymentTransactionLog1.[PaymentID]
		, PaymentTransactionLog1.[TransactionTypeCode]
		, PaymentTransactionLog1.[TransactionStatusCode]
		, PaymentTransactionLog1.[TransactionAmount]
		, PaymentTransactionLog1.[ResponseCode]
		, PaymentTransactionLog1.[TransactionCode]
		, PaymentTransactionLog1.[TransactionMessage]
		, PaymentTransactionLog1.[Balance]
		, PaymentTransactionLog1.[CreatedByUserID]
		, PaymentTransactionLog1.[CreatedDate]
		, PaymentTransactionLog1.[LastModifiedByUserID]
		, PaymentTransactionLog1.[LastModifiedDate]
		, PaymentTransactionLog1.[Timestamp]
		, TransactionType1.[TransactionTypeName]
		, TransactionStatus1.[TransactionStatusName]
	FROM
	      [dbo].[tblPayments_PaymentTransactionLog] PaymentTransactionLog1
	INNER JOIN [dbo].[tlkpPayments_TransactionType] TransactionType1 ON TransactionType1.[TransactionTypeCode]=PaymentTransactionLog1.[TransactionTypeCode]
	INNER JOIN [dbo].[tlkpPayments_TransactionStatus] TransactionStatus1 ON TransactionStatus1.[TransactionStatusCode]=PaymentTransactionLog1.[TransactionStatusCode]
	WHERE 
		PaymentTransactionLog1.[PaymentID] = @PaymentID

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentTransactionLogID' THEN PaymentTransactionLog1.[PaymentTransactionLogID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentTransactionLogID' THEN PaymentTransactionLog1.[PaymentTransactionLogID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentID' THEN PaymentTransactionLog1.[PaymentID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentID' THEN PaymentTransactionLog1.[PaymentID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TransactionTypeCode' THEN PaymentTransactionLog1.[TransactionTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TransactionTypeCode' THEN PaymentTransactionLog1.[TransactionTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TransactionStatusCode' THEN PaymentTransactionLog1.[TransactionStatusCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TransactionStatusCode' THEN PaymentTransactionLog1.[TransactionStatusCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TransactionAmount' THEN PaymentTransactionLog1.[TransactionAmount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TransactionAmount' THEN PaymentTransactionLog1.[TransactionAmount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ResponseCode' THEN PaymentTransactionLog1.[ResponseCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ResponseCode' THEN PaymentTransactionLog1.[ResponseCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TransactionCode' THEN PaymentTransactionLog1.[TransactionCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TransactionCode' THEN PaymentTransactionLog1.[TransactionCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TransactionMessage' THEN PaymentTransactionLog1.[TransactionMessage] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TransactionMessage' THEN PaymentTransactionLog1.[TransactionMessage] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Balance' THEN PaymentTransactionLog1.[Balance] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Balance' THEN PaymentTransactionLog1.[Balance] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN PaymentTransactionLog1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN PaymentTransactionLog1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN PaymentTransactionLog1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN PaymentTransactionLog1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN PaymentTransactionLog1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN PaymentTransactionLog1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN PaymentTransactionLog1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN PaymentTransactionLog1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN PaymentTransactionLog1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN PaymentTransactionLog1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TransactionTypeName' THEN TransactionType1.[TransactionTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TransactionTypeName' THEN TransactionType1.[TransactionTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TransactionStatusName' THEN TransactionStatus1.[TransactionStatusName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TransactionStatusName' THEN TransactionStatus1.[TransactionStatusName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spPayments_GetAllPaymentTransactionLogDataByTransactionStatusCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'TransactionStatusCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @TransactionStatusCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all PaymentTransactionLog data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='TransactionStatusCode'

/*
** parameter validation
*/
IF (@TransactionStatusCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  PaymentTransactionLog1.[PaymentTransactionLogID]
		, PaymentTransactionLog1.[PaymentID]
		, PaymentTransactionLog1.[TransactionTypeCode]
		, PaymentTransactionLog1.[TransactionStatusCode]
		, PaymentTransactionLog1.[TransactionAmount]
		, PaymentTransactionLog1.[ResponseCode]
		, PaymentTransactionLog1.[TransactionCode]
		, PaymentTransactionLog1.[TransactionMessage]
		, PaymentTransactionLog1.[Balance]
		, PaymentTransactionLog1.[CreatedByUserID]
		, PaymentTransactionLog1.[CreatedDate]
		, PaymentTransactionLog1.[LastModifiedByUserID]
		, PaymentTransactionLog1.[LastModifiedDate]
		, PaymentTransactionLog1.[Timestamp]
		, TransactionType1.[TransactionTypeName]
		, TransactionStatus1.[TransactionStatusName]
	FROM
	      [dbo].[tblPayments_PaymentTransactionLog] PaymentTransactionLog1
	INNER JOIN [dbo].[tlkpPayments_TransactionType] TransactionType1 ON TransactionType1.[TransactionTypeCode]=PaymentTransactionLog1.[TransactionTypeCode]
	INNER JOIN [dbo].[tlkpPayments_TransactionStatus] TransactionStatus1 ON TransactionStatus1.[TransactionStatusCode]=PaymentTransactionLog1.[TransactionStatusCode]
	WHERE 
		PaymentTransactionLog1.[TransactionStatusCode] = @TransactionStatusCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  PaymentTransactionLog1.[PaymentTransactionLogID]
		, PaymentTransactionLog1.[PaymentID]
		, PaymentTransactionLog1.[TransactionTypeCode]
		, PaymentTransactionLog1.[TransactionStatusCode]
		, PaymentTransactionLog1.[TransactionAmount]
		, PaymentTransactionLog1.[ResponseCode]
		, PaymentTransactionLog1.[TransactionCode]
		, PaymentTransactionLog1.[TransactionMessage]
		, PaymentTransactionLog1.[Balance]
		, PaymentTransactionLog1.[CreatedByUserID]
		, PaymentTransactionLog1.[CreatedDate]
		, PaymentTransactionLog1.[LastModifiedByUserID]
		, PaymentTransactionLog1.[LastModifiedDate]
		, PaymentTransactionLog1.[Timestamp]
		, TransactionType1.[TransactionTypeName]
		, TransactionStatus1.[TransactionStatusName]
	FROM
	      [dbo].[tblPayments_PaymentTransactionLog] PaymentTransactionLog1
	INNER JOIN [dbo].[tlkpPayments_TransactionType] TransactionType1 ON TransactionType1.[TransactionTypeCode]=PaymentTransactionLog1.[TransactionTypeCode]
	INNER JOIN [dbo].[tlkpPayments_TransactionStatus] TransactionStatus1 ON TransactionStatus1.[TransactionStatusCode]=PaymentTransactionLog1.[TransactionStatusCode]
	WHERE 
		PaymentTransactionLog1.[TransactionStatusCode] = @TransactionStatusCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentTransactionLogID' THEN PaymentTransactionLog1.[PaymentTransactionLogID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentTransactionLogID' THEN PaymentTransactionLog1.[PaymentTransactionLogID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentID' THEN PaymentTransactionLog1.[PaymentID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentID' THEN PaymentTransactionLog1.[PaymentID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TransactionTypeCode' THEN PaymentTransactionLog1.[TransactionTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TransactionTypeCode' THEN PaymentTransactionLog1.[TransactionTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TransactionStatusCode' THEN PaymentTransactionLog1.[TransactionStatusCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TransactionStatusCode' THEN PaymentTransactionLog1.[TransactionStatusCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TransactionAmount' THEN PaymentTransactionLog1.[TransactionAmount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TransactionAmount' THEN PaymentTransactionLog1.[TransactionAmount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ResponseCode' THEN PaymentTransactionLog1.[ResponseCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ResponseCode' THEN PaymentTransactionLog1.[ResponseCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TransactionCode' THEN PaymentTransactionLog1.[TransactionCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TransactionCode' THEN PaymentTransactionLog1.[TransactionCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TransactionMessage' THEN PaymentTransactionLog1.[TransactionMessage] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TransactionMessage' THEN PaymentTransactionLog1.[TransactionMessage] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Balance' THEN PaymentTransactionLog1.[Balance] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Balance' THEN PaymentTransactionLog1.[Balance] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN PaymentTransactionLog1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN PaymentTransactionLog1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN PaymentTransactionLog1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN PaymentTransactionLog1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN PaymentTransactionLog1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN PaymentTransactionLog1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN PaymentTransactionLog1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN PaymentTransactionLog1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN PaymentTransactionLog1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN PaymentTransactionLog1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TransactionTypeName' THEN TransactionType1.[TransactionTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TransactionTypeName' THEN TransactionType1.[TransactionTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TransactionStatusName' THEN TransactionStatus1.[TransactionStatusName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TransactionStatusName' THEN TransactionStatus1.[TransactionStatusName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spPayments_GetAllPaymentTransactionLogDataByTransactionTypeCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'TransactionTypeCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @TransactionTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all PaymentTransactionLog data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='TransactionTypeCode'

/*
** parameter validation
*/
IF (@TransactionTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  PaymentTransactionLog1.[PaymentTransactionLogID]
		, PaymentTransactionLog1.[PaymentID]
		, PaymentTransactionLog1.[TransactionTypeCode]
		, PaymentTransactionLog1.[TransactionStatusCode]
		, PaymentTransactionLog1.[TransactionAmount]
		, PaymentTransactionLog1.[ResponseCode]
		, PaymentTransactionLog1.[TransactionCode]
		, PaymentTransactionLog1.[TransactionMessage]
		, PaymentTransactionLog1.[Balance]
		, PaymentTransactionLog1.[CreatedByUserID]
		, PaymentTransactionLog1.[CreatedDate]
		, PaymentTransactionLog1.[LastModifiedByUserID]
		, PaymentTransactionLog1.[LastModifiedDate]
		, PaymentTransactionLog1.[Timestamp]
		, TransactionType1.[TransactionTypeName]
		, TransactionStatus1.[TransactionStatusName]
	FROM
	      [dbo].[tblPayments_PaymentTransactionLog] PaymentTransactionLog1
	INNER JOIN [dbo].[tlkpPayments_TransactionType] TransactionType1 ON TransactionType1.[TransactionTypeCode]=PaymentTransactionLog1.[TransactionTypeCode]
	INNER JOIN [dbo].[tlkpPayments_TransactionStatus] TransactionStatus1 ON TransactionStatus1.[TransactionStatusCode]=PaymentTransactionLog1.[TransactionStatusCode]
	WHERE 
		PaymentTransactionLog1.[TransactionTypeCode] = @TransactionTypeCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  PaymentTransactionLog1.[PaymentTransactionLogID]
		, PaymentTransactionLog1.[PaymentID]
		, PaymentTransactionLog1.[TransactionTypeCode]
		, PaymentTransactionLog1.[TransactionStatusCode]
		, PaymentTransactionLog1.[TransactionAmount]
		, PaymentTransactionLog1.[ResponseCode]
		, PaymentTransactionLog1.[TransactionCode]
		, PaymentTransactionLog1.[TransactionMessage]
		, PaymentTransactionLog1.[Balance]
		, PaymentTransactionLog1.[CreatedByUserID]
		, PaymentTransactionLog1.[CreatedDate]
		, PaymentTransactionLog1.[LastModifiedByUserID]
		, PaymentTransactionLog1.[LastModifiedDate]
		, PaymentTransactionLog1.[Timestamp]
		, TransactionType1.[TransactionTypeName]
		, TransactionStatus1.[TransactionStatusName]
	FROM
	      [dbo].[tblPayments_PaymentTransactionLog] PaymentTransactionLog1
	INNER JOIN [dbo].[tlkpPayments_TransactionType] TransactionType1 ON TransactionType1.[TransactionTypeCode]=PaymentTransactionLog1.[TransactionTypeCode]
	INNER JOIN [dbo].[tlkpPayments_TransactionStatus] TransactionStatus1 ON TransactionStatus1.[TransactionStatusCode]=PaymentTransactionLog1.[TransactionStatusCode]
	WHERE 
		PaymentTransactionLog1.[TransactionTypeCode] = @TransactionTypeCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentTransactionLogID' THEN PaymentTransactionLog1.[PaymentTransactionLogID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentTransactionLogID' THEN PaymentTransactionLog1.[PaymentTransactionLogID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentID' THEN PaymentTransactionLog1.[PaymentID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentID' THEN PaymentTransactionLog1.[PaymentID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TransactionTypeCode' THEN PaymentTransactionLog1.[TransactionTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TransactionTypeCode' THEN PaymentTransactionLog1.[TransactionTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TransactionStatusCode' THEN PaymentTransactionLog1.[TransactionStatusCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TransactionStatusCode' THEN PaymentTransactionLog1.[TransactionStatusCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TransactionAmount' THEN PaymentTransactionLog1.[TransactionAmount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TransactionAmount' THEN PaymentTransactionLog1.[TransactionAmount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ResponseCode' THEN PaymentTransactionLog1.[ResponseCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ResponseCode' THEN PaymentTransactionLog1.[ResponseCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TransactionCode' THEN PaymentTransactionLog1.[TransactionCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TransactionCode' THEN PaymentTransactionLog1.[TransactionCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TransactionMessage' THEN PaymentTransactionLog1.[TransactionMessage] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TransactionMessage' THEN PaymentTransactionLog1.[TransactionMessage] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Balance' THEN PaymentTransactionLog1.[Balance] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Balance' THEN PaymentTransactionLog1.[Balance] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN PaymentTransactionLog1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN PaymentTransactionLog1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN PaymentTransactionLog1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN PaymentTransactionLog1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN PaymentTransactionLog1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN PaymentTransactionLog1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN PaymentTransactionLog1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN PaymentTransactionLog1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN PaymentTransactionLog1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN PaymentTransactionLog1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TransactionTypeName' THEN TransactionType1.[TransactionTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TransactionTypeName' THEN TransactionType1.[TransactionTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TransactionStatusName' THEN TransactionStatus1.[TransactionStatusName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TransactionStatusName' THEN TransactionStatus1.[TransactionStatusName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spPayments_GetAllTransactionStatusData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'TransactionStatusCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all TransactionStatus data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='TransactionStatusCode'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  TransactionStatus1.[TransactionStatusCode]
		, TransactionStatus1.[TransactionStatusName]
		, TransactionStatus1.[Description]
		, TransactionStatus1.[IsActive]
		, TransactionStatus1.[CreatedByUserID]
		, TransactionStatus1.[CreatedDate]
		, TransactionStatus1.[LastModifiedByUserID]
		, TransactionStatus1.[LastModifiedDate]
		, TransactionStatus1.[Timestamp]
	FROM
	      [dbo].[tlkpPayments_TransactionStatus] TransactionStatus1
	WHERE 
		TransactionStatus1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN TransactionStatus1.[IsActive] ELSE 1 END

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  TransactionStatus1.[TransactionStatusCode]
		, TransactionStatus1.[TransactionStatusName]
		, TransactionStatus1.[Description]
		, TransactionStatus1.[IsActive]
		, TransactionStatus1.[CreatedByUserID]
		, TransactionStatus1.[CreatedDate]
		, TransactionStatus1.[LastModifiedByUserID]
		, TransactionStatus1.[LastModifiedDate]
		, TransactionStatus1.[Timestamp]
	FROM
	      [dbo].[tlkpPayments_TransactionStatus] TransactionStatus1
	WHERE 
		TransactionStatus1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN TransactionStatus1.[IsActive] ELSE 1 END

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TransactionStatusCode' THEN TransactionStatus1.[TransactionStatusCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TransactionStatusCode' THEN TransactionStatus1.[TransactionStatusCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TransactionStatusName' THEN TransactionStatus1.[TransactionStatusName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TransactionStatusName' THEN TransactionStatus1.[TransactionStatusName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN TransactionStatus1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN TransactionStatus1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN TransactionStatus1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN TransactionStatus1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN TransactionStatus1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN TransactionStatus1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN TransactionStatus1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN TransactionStatus1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN TransactionStatus1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN TransactionStatus1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN TransactionStatus1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN TransactionStatus1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN TransactionStatus1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN TransactionStatus1.[Timestamp] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spPayments_GetAllTransactionTypeData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'TransactionTypeCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all TransactionType data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='TransactionTypeCode'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  TransactionType1.[TransactionTypeCode]
		, TransactionType1.[TransactionTypeName]
		, TransactionType1.[Description]
		, TransactionType1.[IsActive]
		, TransactionType1.[CreatedByUserID]
		, TransactionType1.[CreatedDate]
		, TransactionType1.[LastModifiedByUserID]
		, TransactionType1.[LastModifiedDate]
		, TransactionType1.[Timestamp]
	FROM
	      [dbo].[tlkpPayments_TransactionType] TransactionType1
	WHERE 
		TransactionType1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN TransactionType1.[IsActive] ELSE 1 END

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  TransactionType1.[TransactionTypeCode]
		, TransactionType1.[TransactionTypeName]
		, TransactionType1.[Description]
		, TransactionType1.[IsActive]
		, TransactionType1.[CreatedByUserID]
		, TransactionType1.[CreatedDate]
		, TransactionType1.[LastModifiedByUserID]
		, TransactionType1.[LastModifiedDate]
		, TransactionType1.[Timestamp]
	FROM
	      [dbo].[tlkpPayments_TransactionType] TransactionType1
	WHERE 
		TransactionType1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN TransactionType1.[IsActive] ELSE 1 END

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TransactionTypeCode' THEN TransactionType1.[TransactionTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TransactionTypeCode' THEN TransactionType1.[TransactionTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TransactionTypeName' THEN TransactionType1.[TransactionTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TransactionTypeName' THEN TransactionType1.[TransactionTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN TransactionType1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN TransactionType1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN TransactionType1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN TransactionType1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN TransactionType1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN TransactionType1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN TransactionType1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN TransactionType1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN TransactionType1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN TransactionType1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN TransactionType1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN TransactionType1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN TransactionType1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN TransactionType1.[Timestamp] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spPayments_GetManyPaymentDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @StartIndex int = 1
	, @PageSize int = 50
	, @MaximumListSize int = 0
	, @MaximumListSizeExceeded bit = 0 OUTPUT
	, @TotalRecords int = 0 OUTPUT
	, @SortColumn sysname = 'PaymentStatusCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @PaymentStatusCode int
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets many Payment data by criteria.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

DECLARE @vEndIndex int
IF (@StartIndex < 1) SET @StartIndex=1
IF (@PageSize < 1) SET @PageSize=1
SET @vEndIndex = @StartIndex + @Pagesize
IF (@SortColumn = '') SET @SortColumn='PaymentStatusCode'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

DECLARE @OrderedRecords TABLE
(
     SearchOrderID int IDENTITY (1, 1) NOT NULL
    , PaymentID uniqueidentifier
)
IF (@SortDirection = 'Random')
BEGIN
	INSERT INTO @OrderedRecords (PaymentID)
	SELECT
		  Payment1.[PaymentID]
	FROM
	      [dbo].[tblPayments_Payment] Payment1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=Payment1.[SourceAccountID] AND Account1.[MetaPartnerID]=Payment1.[DebitMetaPartnerID]
	INNER JOIN [dbo].[tlkpPayments_PaymentStatus] PaymentStatus1 ON PaymentStatus1.[PaymentStatusCode]=Payment1.[PaymentStatusCode]
	WHERE 
		(@PaymentStatusCode IS NULL OR Payment1.[PaymentStatusCode] = @PaymentStatusCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (Payment1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (Payment1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY NewID()
END
ELSE
BEGIN
	INSERT INTO @OrderedRecords (PaymentID)
	SELECT
		  Payment1.[PaymentID]
	FROM
	      [dbo].[tblPayments_Payment] Payment1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=Payment1.[SourceAccountID] AND Account1.[MetaPartnerID]=Payment1.[DebitMetaPartnerID]
	INNER JOIN [dbo].[tlkpPayments_PaymentStatus] PaymentStatus1 ON PaymentStatus1.[PaymentStatusCode]=Payment1.[PaymentStatusCode]
	WHERE 
		(@PaymentStatusCode IS NULL OR Payment1.[PaymentStatusCode] = @PaymentStatusCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (Payment1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (Payment1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentID' THEN Payment1.[PaymentID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentID' THEN Payment1.[PaymentID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentAmount' THEN Payment1.[PaymentAmount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentAmount' THEN Payment1.[PaymentAmount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentSubtotal' THEN Payment1.[PaymentSubtotal] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentSubtotal' THEN Payment1.[PaymentSubtotal] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentTax' THEN Payment1.[PaymentTax] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentTax' THEN Payment1.[PaymentTax] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentServiceCharge' THEN Payment1.[PaymentServiceCharge] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentServiceCharge' THEN Payment1.[PaymentServiceCharge] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'OrderID' THEN Payment1.[OrderID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'OrderID' THEN Payment1.[OrderID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DebitMetaPartnerID' THEN Payment1.[DebitMetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DebitMetaPartnerID' THEN Payment1.[DebitMetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'SourceAccountID' THEN Payment1.[SourceAccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'SourceAccountID' THEN Payment1.[SourceAccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreditMetaPartnerID' THEN Payment1.[CreditMetaPartnerID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreditMetaPartnerID' THEN Payment1.[CreditMetaPartnerID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DestinationAccountID' THEN Payment1.[DestinationAccountID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DestinationAccountID' THEN Payment1.[DestinationAccountID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentStatusCode' THEN Payment1.[PaymentStatusCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentStatusCode' THEN Payment1.[PaymentStatusCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentStatusMessage' THEN Payment1.[PaymentStatusMessage] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentStatusMessage' THEN Payment1.[PaymentStatusMessage] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Payment1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Payment1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Payment1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Payment1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Payment1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Payment1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Payment1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Payment1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Payment1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Payment1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccountName' THEN Account1.[AccountName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentStatusName' THEN PaymentStatus1.[PaymentStatusName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentStatusName' THEN PaymentStatus1.[PaymentStatusName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END

BEGIN
	SET @TotalRecords = (SELECT Count (*) FROM @OrderedRecords)
	IF @MaximumListSize > 0
	BEGIN
		IF @TotalRecords > @MaximumListSize
		BEGIN
			SET @MaximumListSizeExceeded = 1
			SET @TotalRecords = @MaximumListSize
		END
	END

	/* get search results */
	SELECT
		  Payment1.[PaymentID]
		, Payment1.[PaymentAmount]
		, Payment1.[PaymentSubtotal]
		, Payment1.[PaymentTax]
		, Payment1.[PaymentServiceCharge]
		, Payment1.[OrderID]
		, Payment1.[DebitMetaPartnerID]
		, Payment1.[SourceAccountID]
		, Payment1.[CreditMetaPartnerID]
		, Payment1.[DestinationAccountID]
		, Payment1.[PaymentStatusCode]
		, Payment1.[PaymentStatusMessage]
		, Payment1.[CreatedByUserID]
		, Payment1.[CreatedDate]
		, Payment1.[LastModifiedByUserID]
		, Payment1.[LastModifiedDate]
		, Payment1.[Timestamp]
		, Account1.[AccountName]
		, PaymentStatus1.[PaymentStatusName]
	FROM
	      [dbo].[tblPayments_Payment] Payment1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=Payment1.[SourceAccountID] AND Account1.[MetaPartnerID]=Payment1.[DebitMetaPartnerID]
	INNER JOIN [dbo].[tlkpPayments_PaymentStatus] PaymentStatus1 ON PaymentStatus1.[PaymentStatusCode]=Payment1.[PaymentStatusCode]
	INNER JOIN @OrderedRecords search ON search.[PaymentID] = Payment1.[PaymentID]
	WHERE
		search.SearchOrderID  >= @StartIndex AND
		search.SearchOrderID  < @vEndIndex
	ORDER BY
		search.SearchOrderID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spPayments_GetManyPaymentTransactionAttributeValueLogDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @StartIndex int = 1
	, @PageSize int = 50
	, @MaximumListSize int = 0
	, @MaximumListSizeExceeded bit = 0 OUTPUT
	, @TotalRecords int = 0 OUTPUT
	, @SortColumn sysname = 'AttributeValue'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @AttributeValue nvarchar(255) = NULL
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets many PaymentTransactionAttributeValueLog data by criteria.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

DECLARE @vEndIndex int
IF (@StartIndex < 1) SET @StartIndex=1
IF (@PageSize < 1) SET @PageSize=1
SET @vEndIndex = @StartIndex + @Pagesize
IF (@SortColumn = '') SET @SortColumn='AttributeValue'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

DECLARE @OrderedRecords TABLE
(
     SearchOrderID int IDENTITY (1, 1) NOT NULL
    , PaymentTransactionAttributeValueLogID uniqueidentifier
)
IF (@SortDirection = 'Random')
BEGIN
	INSERT INTO @OrderedRecords (PaymentTransactionAttributeValueLogID)
	SELECT
		  PaymentTransactionAttributeValueLog1.[PaymentTransactionAttributeValueLogID]
	FROM
	      [dbo].[tblPayments_PaymentTransactionAttributeValueLog] PaymentTransactionAttributeValueLog1
	WHERE 
		(@AttributeValue IS NULL OR PaymentTransactionAttributeValueLog1.[AttributeValue] like '%' + @AttributeValue + '%')
		AND ((@LastModifiedDateStart  IS NULL) OR (PaymentTransactionAttributeValueLog1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (PaymentTransactionAttributeValueLog1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY NewID()
END
ELSE
BEGIN
	INSERT INTO @OrderedRecords (PaymentTransactionAttributeValueLogID)
	SELECT
		  PaymentTransactionAttributeValueLog1.[PaymentTransactionAttributeValueLogID]
	FROM
	      [dbo].[tblPayments_PaymentTransactionAttributeValueLog] PaymentTransactionAttributeValueLog1
	WHERE 
		(@AttributeValue IS NULL OR PaymentTransactionAttributeValueLog1.[AttributeValue] like '%' + @AttributeValue + '%')
		AND ((@LastModifiedDateStart  IS NULL) OR (PaymentTransactionAttributeValueLog1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (PaymentTransactionAttributeValueLog1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentTransactionAttributeValueLogID' THEN PaymentTransactionAttributeValueLog1.[PaymentTransactionAttributeValueLogID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentTransactionAttributeValueLogID' THEN PaymentTransactionAttributeValueLog1.[PaymentTransactionAttributeValueLogID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentTransactionLogID' THEN PaymentTransactionAttributeValueLog1.[PaymentTransactionLogID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentTransactionLogID' THEN PaymentTransactionAttributeValueLog1.[PaymentTransactionLogID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'BaseAttributeID' THEN PaymentTransactionAttributeValueLog1.[BaseAttributeID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'BaseAttributeID' THEN PaymentTransactionAttributeValueLog1.[BaseAttributeID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AttributeValue' THEN PaymentTransactionAttributeValueLog1.[AttributeValue] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AttributeValue' THEN PaymentTransactionAttributeValueLog1.[AttributeValue] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN PaymentTransactionAttributeValueLog1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN PaymentTransactionAttributeValueLog1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN PaymentTransactionAttributeValueLog1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN PaymentTransactionAttributeValueLog1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN PaymentTransactionAttributeValueLog1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN PaymentTransactionAttributeValueLog1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN PaymentTransactionAttributeValueLog1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN PaymentTransactionAttributeValueLog1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN PaymentTransactionAttributeValueLog1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN PaymentTransactionAttributeValueLog1.[Timestamp] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END

BEGIN
	SET @TotalRecords = (SELECT Count (*) FROM @OrderedRecords)
	IF @MaximumListSize > 0
	BEGIN
		IF @TotalRecords > @MaximumListSize
		BEGIN
			SET @MaximumListSizeExceeded = 1
			SET @TotalRecords = @MaximumListSize
		END
	END

	/* get search results */
	SELECT
		  PaymentTransactionAttributeValueLog1.[PaymentTransactionAttributeValueLogID]
		, PaymentTransactionAttributeValueLog1.[PaymentTransactionLogID]
		, PaymentTransactionAttributeValueLog1.[BaseAttributeID]
		, PaymentTransactionAttributeValueLog1.[AttributeValue]
		, PaymentTransactionAttributeValueLog1.[CreatedByUserID]
		, PaymentTransactionAttributeValueLog1.[CreatedDate]
		, PaymentTransactionAttributeValueLog1.[LastModifiedByUserID]
		, PaymentTransactionAttributeValueLog1.[LastModifiedDate]
		, PaymentTransactionAttributeValueLog1.[Timestamp]
	FROM
	      [dbo].[tblPayments_PaymentTransactionAttributeValueLog] PaymentTransactionAttributeValueLog1
	INNER JOIN @OrderedRecords search ON search.[PaymentTransactionAttributeValueLogID] = PaymentTransactionAttributeValueLog1.[PaymentTransactionAttributeValueLogID]
	WHERE
		search.SearchOrderID  >= @StartIndex AND
		search.SearchOrderID  < @vEndIndex
	ORDER BY
		search.SearchOrderID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spPayments_GetManyPaymentTransactionLogDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @StartIndex int = 1
	, @PageSize int = 50
	, @MaximumListSize int = 0
	, @MaximumListSizeExceeded bit = 0 OUTPUT
	, @TotalRecords int = 0 OUTPUT
	, @SortColumn sysname = 'TransactionTypeCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @TransactionTypeCode int
	, @TransactionStatusCode int
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets many PaymentTransactionLog data by criteria.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

DECLARE @vEndIndex int
IF (@StartIndex < 1) SET @StartIndex=1
IF (@PageSize < 1) SET @PageSize=1
SET @vEndIndex = @StartIndex + @Pagesize
IF (@SortColumn = '') SET @SortColumn='TransactionTypeCode'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

DECLARE @OrderedRecords TABLE
(
     SearchOrderID int IDENTITY (1, 1) NOT NULL
    , PaymentTransactionLogID uniqueidentifier
)
IF (@SortDirection = 'Random')
BEGIN
	INSERT INTO @OrderedRecords (PaymentTransactionLogID)
	SELECT
		  PaymentTransactionLog1.[PaymentTransactionLogID]
	FROM
	      [dbo].[tblPayments_PaymentTransactionLog] PaymentTransactionLog1
	INNER JOIN [dbo].[tlkpPayments_TransactionType] TransactionType1 ON TransactionType1.[TransactionTypeCode]=PaymentTransactionLog1.[TransactionTypeCode]
	INNER JOIN [dbo].[tlkpPayments_TransactionStatus] TransactionStatus1 ON TransactionStatus1.[TransactionStatusCode]=PaymentTransactionLog1.[TransactionStatusCode]
	WHERE 
		(@TransactionTypeCode IS NULL OR PaymentTransactionLog1.[TransactionTypeCode] = @TransactionTypeCode)
		AND (@TransactionStatusCode IS NULL OR PaymentTransactionLog1.[TransactionStatusCode] = @TransactionStatusCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (PaymentTransactionLog1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (PaymentTransactionLog1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY NewID()
END
ELSE
BEGIN
	INSERT INTO @OrderedRecords (PaymentTransactionLogID)
	SELECT
		  PaymentTransactionLog1.[PaymentTransactionLogID]
	FROM
	      [dbo].[tblPayments_PaymentTransactionLog] PaymentTransactionLog1
	INNER JOIN [dbo].[tlkpPayments_TransactionType] TransactionType1 ON TransactionType1.[TransactionTypeCode]=PaymentTransactionLog1.[TransactionTypeCode]
	INNER JOIN [dbo].[tlkpPayments_TransactionStatus] TransactionStatus1 ON TransactionStatus1.[TransactionStatusCode]=PaymentTransactionLog1.[TransactionStatusCode]
	WHERE 
		(@TransactionTypeCode IS NULL OR PaymentTransactionLog1.[TransactionTypeCode] = @TransactionTypeCode)
		AND (@TransactionStatusCode IS NULL OR PaymentTransactionLog1.[TransactionStatusCode] = @TransactionStatusCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (PaymentTransactionLog1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (PaymentTransactionLog1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentTransactionLogID' THEN PaymentTransactionLog1.[PaymentTransactionLogID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentTransactionLogID' THEN PaymentTransactionLog1.[PaymentTransactionLogID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'PaymentID' THEN PaymentTransactionLog1.[PaymentID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'PaymentID' THEN PaymentTransactionLog1.[PaymentID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TransactionTypeCode' THEN PaymentTransactionLog1.[TransactionTypeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TransactionTypeCode' THEN PaymentTransactionLog1.[TransactionTypeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TransactionStatusCode' THEN PaymentTransactionLog1.[TransactionStatusCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TransactionStatusCode' THEN PaymentTransactionLog1.[TransactionStatusCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TransactionAmount' THEN PaymentTransactionLog1.[TransactionAmount] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TransactionAmount' THEN PaymentTransactionLog1.[TransactionAmount] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ResponseCode' THEN PaymentTransactionLog1.[ResponseCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ResponseCode' THEN PaymentTransactionLog1.[ResponseCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TransactionCode' THEN PaymentTransactionLog1.[TransactionCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TransactionCode' THEN PaymentTransactionLog1.[TransactionCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TransactionMessage' THEN PaymentTransactionLog1.[TransactionMessage] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TransactionMessage' THEN PaymentTransactionLog1.[TransactionMessage] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Balance' THEN PaymentTransactionLog1.[Balance] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Balance' THEN PaymentTransactionLog1.[Balance] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN PaymentTransactionLog1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN PaymentTransactionLog1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN PaymentTransactionLog1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN PaymentTransactionLog1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN PaymentTransactionLog1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN PaymentTransactionLog1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN PaymentTransactionLog1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN PaymentTransactionLog1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN PaymentTransactionLog1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN PaymentTransactionLog1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TransactionTypeName' THEN TransactionType1.[TransactionTypeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TransactionTypeName' THEN TransactionType1.[TransactionTypeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TransactionStatusName' THEN TransactionStatus1.[TransactionStatusName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TransactionStatusName' THEN TransactionStatus1.[TransactionStatusName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END

BEGIN
	SET @TotalRecords = (SELECT Count (*) FROM @OrderedRecords)
	IF @MaximumListSize > 0
	BEGIN
		IF @TotalRecords > @MaximumListSize
		BEGIN
			SET @MaximumListSizeExceeded = 1
			SET @TotalRecords = @MaximumListSize
		END
	END

	/* get search results */
	SELECT
		  PaymentTransactionLog1.[PaymentTransactionLogID]
		, PaymentTransactionLog1.[PaymentID]
		, PaymentTransactionLog1.[TransactionTypeCode]
		, PaymentTransactionLog1.[TransactionStatusCode]
		, PaymentTransactionLog1.[TransactionAmount]
		, PaymentTransactionLog1.[ResponseCode]
		, PaymentTransactionLog1.[TransactionCode]
		, PaymentTransactionLog1.[TransactionMessage]
		, PaymentTransactionLog1.[Balance]
		, PaymentTransactionLog1.[CreatedByUserID]
		, PaymentTransactionLog1.[CreatedDate]
		, PaymentTransactionLog1.[LastModifiedByUserID]
		, PaymentTransactionLog1.[LastModifiedDate]
		, PaymentTransactionLog1.[Timestamp]
		, TransactionType1.[TransactionTypeName]
		, TransactionStatus1.[TransactionStatusName]
	FROM
	      [dbo].[tblPayments_PaymentTransactionLog] PaymentTransactionLog1
	INNER JOIN [dbo].[tlkpPayments_TransactionType] TransactionType1 ON TransactionType1.[TransactionTypeCode]=PaymentTransactionLog1.[TransactionTypeCode]
	INNER JOIN [dbo].[tlkpPayments_TransactionStatus] TransactionStatus1 ON TransactionStatus1.[TransactionStatusCode]=PaymentTransactionLog1.[TransactionStatusCode]
	INNER JOIN @OrderedRecords search ON search.[PaymentTransactionLogID] = PaymentTransactionLog1.[PaymentTransactionLogID]
	WHERE
		search.SearchOrderID  >= @StartIndex AND
		search.SearchOrderID  < @vEndIndex
	ORDER BY
		search.SearchOrderID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spPayments_GetOnePayment
	  @SqlErrorNumber int = 0 OUTPUT
	, @PaymentID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single Payment by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@PaymentID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  Payment1.[PaymentID]
		, Payment1.[PaymentAmount]
		, Payment1.[PaymentSubtotal]
		, Payment1.[PaymentTax]
		, Payment1.[PaymentServiceCharge]
		, Payment1.[OrderID]
		, Payment1.[DebitMetaPartnerID]
		, Payment1.[SourceAccountID]
		, Payment1.[CreditMetaPartnerID]
		, Payment1.[DestinationAccountID]
		, Payment1.[PaymentStatusCode]
		, Payment1.[PaymentStatusMessage]
		, Payment1.[CreatedByUserID]
		, Payment1.[CreatedDate]
		, Payment1.[LastModifiedByUserID]
		, Payment1.[LastModifiedDate]
		, Payment1.[Timestamp]
		, Account1.[AccountName]
		, PaymentStatus1.[PaymentStatusName]
	FROM
	      [dbo].[tblPayments_Payment] Payment1
	INNER JOIN [dbo].[tblAccounts_Account] Account1 ON Account1.[AccountID]=Payment1.[SourceAccountID] AND Account1.[MetaPartnerID]=Payment1.[DebitMetaPartnerID]
	INNER JOIN [dbo].[tlkpPayments_PaymentStatus] PaymentStatus1 ON PaymentStatus1.[PaymentStatusCode]=Payment1.[PaymentStatusCode]
	WHERE Payment1.[PaymentID] =  @PaymentID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spPayments_GetOnePaymentStatus
	  @SqlErrorNumber int = 0 OUTPUT
	, @PaymentStatusCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single PaymentStatus by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@PaymentStatusCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  PaymentStatus1.[PaymentStatusCode]
		, PaymentStatus1.[PaymentStatusName]
		, PaymentStatus1.[Description]
		, PaymentStatus1.[IsActive]
		, PaymentStatus1.[CreatedByUserID]
		, PaymentStatus1.[CreatedDate]
		, PaymentStatus1.[LastModifiedByUserID]
		, PaymentStatus1.[LastModifiedDate]
		, PaymentStatus1.[Timestamp]
	FROM
	      [dbo].[tlkpPayments_PaymentStatus] PaymentStatus1
	WHERE PaymentStatus1.[PaymentStatusCode] =  @PaymentStatusCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spPayments_GetOnePaymentTransactionAttributeValueLog
	  @SqlErrorNumber int = 0 OUTPUT
	, @PaymentTransactionAttributeValueLogID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single PaymentTransactionAttributeValueLog by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@PaymentTransactionAttributeValueLogID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  PaymentTransactionAttributeValueLog1.[PaymentTransactionAttributeValueLogID]
		, PaymentTransactionAttributeValueLog1.[PaymentTransactionLogID]
		, PaymentTransactionAttributeValueLog1.[BaseAttributeID]
		, PaymentTransactionAttributeValueLog1.[AttributeValue]
		, PaymentTransactionAttributeValueLog1.[CreatedByUserID]
		, PaymentTransactionAttributeValueLog1.[CreatedDate]
		, PaymentTransactionAttributeValueLog1.[LastModifiedByUserID]
		, PaymentTransactionAttributeValueLog1.[LastModifiedDate]
		, PaymentTransactionAttributeValueLog1.[Timestamp]
	FROM
	      [dbo].[tblPayments_PaymentTransactionAttributeValueLog] PaymentTransactionAttributeValueLog1
	WHERE PaymentTransactionAttributeValueLog1.[PaymentTransactionAttributeValueLogID] =  @PaymentTransactionAttributeValueLogID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spPayments_GetOnePaymentTransactionLog
	  @SqlErrorNumber int = 0 OUTPUT
	, @PaymentTransactionLogID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single PaymentTransactionLog by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@PaymentTransactionLogID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  PaymentTransactionLog1.[PaymentTransactionLogID]
		, PaymentTransactionLog1.[PaymentID]
		, PaymentTransactionLog1.[TransactionTypeCode]
		, PaymentTransactionLog1.[TransactionStatusCode]
		, PaymentTransactionLog1.[TransactionAmount]
		, PaymentTransactionLog1.[ResponseCode]
		, PaymentTransactionLog1.[TransactionCode]
		, PaymentTransactionLog1.[TransactionMessage]
		, PaymentTransactionLog1.[Balance]
		, PaymentTransactionLog1.[CreatedByUserID]
		, PaymentTransactionLog1.[CreatedDate]
		, PaymentTransactionLog1.[LastModifiedByUserID]
		, PaymentTransactionLog1.[LastModifiedDate]
		, PaymentTransactionLog1.[Timestamp]
		, TransactionType1.[TransactionTypeName]
		, TransactionStatus1.[TransactionStatusName]
	FROM
	      [dbo].[tblPayments_PaymentTransactionLog] PaymentTransactionLog1
	INNER JOIN [dbo].[tlkpPayments_TransactionType] TransactionType1 ON TransactionType1.[TransactionTypeCode]=PaymentTransactionLog1.[TransactionTypeCode]
	INNER JOIN [dbo].[tlkpPayments_TransactionStatus] TransactionStatus1 ON TransactionStatus1.[TransactionStatusCode]=PaymentTransactionLog1.[TransactionStatusCode]
	WHERE PaymentTransactionLog1.[PaymentTransactionLogID] =  @PaymentTransactionLogID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spPayments_GetOneTransactionStatus
	  @SqlErrorNumber int = 0 OUTPUT
	, @TransactionStatusCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single TransactionStatus by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@TransactionStatusCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  TransactionStatus1.[TransactionStatusCode]
		, TransactionStatus1.[TransactionStatusName]
		, TransactionStatus1.[Description]
		, TransactionStatus1.[IsActive]
		, TransactionStatus1.[CreatedByUserID]
		, TransactionStatus1.[CreatedDate]
		, TransactionStatus1.[LastModifiedByUserID]
		, TransactionStatus1.[LastModifiedDate]
		, TransactionStatus1.[Timestamp]
	FROM
	      [dbo].[tlkpPayments_TransactionStatus] TransactionStatus1
	WHERE TransactionStatus1.[TransactionStatusCode] =  @TransactionStatusCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spPayments_GetOneTransactionType
	  @SqlErrorNumber int = 0 OUTPUT
	, @TransactionTypeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single TransactionType by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@TransactionTypeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  TransactionType1.[TransactionTypeCode]
		, TransactionType1.[TransactionTypeName]
		, TransactionType1.[Description]
		, TransactionType1.[IsActive]
		, TransactionType1.[CreatedByUserID]
		, TransactionType1.[CreatedDate]
		, TransactionType1.[LastModifiedByUserID]
		, TransactionType1.[LastModifiedDate]
		, TransactionType1.[Timestamp]
	FROM
	      [dbo].[tlkpPayments_TransactionType] TransactionType1
	WHERE TransactionType1.[TransactionTypeCode] =  @TransactionTypeCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spPayments_LogOnePaymentTransactionAttributeValueLog
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @PaymentTransactionAttributeValueLogID uniqueidentifier = NULL OUTPUT
	, @PaymentTransactionLogID uniqueidentifier
	, @BaseAttributeID uniqueidentifier
	, @AttributeValue nvarchar(255) = NULL
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure logs PaymentTransactionAttributeValueLog data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@PaymentTransactionLogID IS NULL OR @BaseAttributeID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF EXISTS (SELECT [PaymentTransactionAttributeValueLogID] FROM [dbo].[tblPayments_PaymentTransactionAttributeValueLog] WHERE [PaymentTransactionAttributeValueLogID] =  @PaymentTransactionAttributeValueLogID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	IF @PaymentTransactionAttributeValueLogID  IS NULL
	BEGIN
		SET @PaymentTransactionAttributeValueLogID  = NEWID ()
	END
	INSERT
	      [dbo].[tblPayments_PaymentTransactionAttributeValueLog]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [PaymentTransactionAttributeValueLogID]
	   , [PaymentTransactionLogID]
	   , [BaseAttributeID]
	   , [AttributeValue]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @PaymentTransactionAttributeValueLogID
	   , @PaymentTransactionLogID
	   , @BaseAttributeID
	   , @AttributeValue
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spPayments_LogOnePaymentTransactionLog
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @PaymentTransactionLogID uniqueidentifier = NULL OUTPUT
	, @PaymentID uniqueidentifier
	, @TransactionTypeCode int
	, @TransactionStatusCode int
	, @TransactionAmount money = 0
	, @ResponseCode nvarchar(25) = NULL
	, @TransactionCode nvarchar(25) = NULL
	, @TransactionMessage nvarchar(255) = NULL
	, @Balance money
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure logs PaymentTransactionLog data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@PaymentID IS NULL OR @TransactionTypeCode IS NULL OR @TransactionStatusCode IS NULL OR @Balance IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF EXISTS (SELECT [PaymentTransactionLogID] FROM [dbo].[tblPayments_PaymentTransactionLog] WHERE [PaymentTransactionLogID] =  @PaymentTransactionLogID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	IF @PaymentTransactionLogID  IS NULL
	BEGIN
		SET @PaymentTransactionLogID  = NEWID ()
	END
	INSERT
	      [dbo].[tblPayments_PaymentTransactionLog]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [PaymentTransactionLogID]
	   , [PaymentID]
	   , [TransactionTypeCode]
	   , [TransactionStatusCode]
	   , [TransactionAmount]
	   , [ResponseCode]
	   , [TransactionCode]
	   , [TransactionMessage]
	   , [Balance]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @PaymentTransactionLogID
	   , @PaymentID
	   , @TransactionTypeCode
	   , @TransactionStatusCode
	   , @TransactionAmount
	   , @ResponseCode
	   , @TransactionCode
	   , @TransactionMessage
	   , @Balance
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spPayments_UpdateOnePaymentStatus
	  @SqlErrorNumber int = 0 OUTPUT
	, @LastModifiedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @PaymentStatusCode int
	, @PaymentStatusName nvarchar(255)
	, @Description nvarchar(2000) = NULL
	, @IsActive bit = 1
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure updates PaymentStatus data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@PaymentStatusCode IS NULL OR @PaymentStatusName IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [PaymentStatusCode] FROM [dbo].[tlkpPayments_PaymentStatus] WHERE [PaymentStatusCode] =  @PaymentStatusCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [PaymentStatusCode] FROM [dbo].[tlkpPayments_PaymentStatus] WHERE [PaymentStatusCode] =  @PaymentStatusCode AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	UPDATE
	      [dbo].[tlkpPayments_PaymentStatus]
	SET
	     [LastModifiedByUserID] = @LastModifiedByUserID
	   , [LastModifiedDate] = getdate()
	   , [PaymentStatusCode] = @PaymentStatusCode
	   , [PaymentStatusName] = @PaymentStatusName
	   , [Description] = @Description
	   , [IsActive] = @IsActive
	WHERE [PaymentStatusCode] =  @PaymentStatusCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

	SET  @Timestamp = @@DBTS

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spPayments_UpdateOneTransactionStatus
	  @SqlErrorNumber int = 0 OUTPUT
	, @LastModifiedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @TransactionStatusCode int
	, @TransactionStatusName nvarchar(255)
	, @Description nvarchar(2000) = NULL
	, @IsActive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure updates TransactionStatus data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@TransactionStatusCode IS NULL OR @TransactionStatusName IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [TransactionStatusCode] FROM [dbo].[tlkpPayments_TransactionStatus] WHERE [TransactionStatusCode] =  @TransactionStatusCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [TransactionStatusCode] FROM [dbo].[tlkpPayments_TransactionStatus] WHERE [TransactionStatusCode] =  @TransactionStatusCode AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	UPDATE
	      [dbo].[tlkpPayments_TransactionStatus]
	SET
	     [LastModifiedByUserID] = @LastModifiedByUserID
	   , [LastModifiedDate] = getdate()
	   , [TransactionStatusCode] = @TransactionStatusCode
	   , [TransactionStatusName] = @TransactionStatusName
	   , [Description] = @Description
	   , [IsActive] = @IsActive
	WHERE [TransactionStatusCode] =  @TransactionStatusCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

	SET  @Timestamp = @@DBTS

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spPayments_UpdateOneTransactionType
	  @SqlErrorNumber int = 0 OUTPUT
	, @LastModifiedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @TransactionTypeCode int
	, @TransactionTypeName nvarchar(255)
	, @Description nvarchar(2000) = NULL
	, @IsActive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure updates TransactionType data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@TransactionTypeCode IS NULL OR @TransactionTypeName IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [TransactionTypeCode] FROM [dbo].[tlkpPayments_TransactionType] WHERE [TransactionTypeCode] =  @TransactionTypeCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [TransactionTypeCode] FROM [dbo].[tlkpPayments_TransactionType] WHERE [TransactionTypeCode] =  @TransactionTypeCode AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	UPDATE
	      [dbo].[tlkpPayments_TransactionType]
	SET
	     [LastModifiedByUserID] = @LastModifiedByUserID
	   , [LastModifiedDate] = getdate()
	   , [TransactionTypeCode] = @TransactionTypeCode
	   , [TransactionTypeName] = @TransactionTypeName
	   , [Description] = @Description
	   , [IsActive] = @IsActive
	WHERE [TransactionTypeCode] =  @TransactionTypeCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

	SET  @Timestamp = @@DBTS

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spPayments_UpsertOnePayment
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @LastModifiedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @PaymentID uniqueidentifier = NULL OUTPUT
	, @PaymentAmount money = 0
	, @PaymentSubtotal money
	, @PaymentTax money
	, @PaymentServiceCharge money
	, @OrderID uniqueidentifier
	, @DebitMetaPartnerID uniqueidentifier
	, @SourceAccountID uniqueidentifier
	, @CreditMetaPartnerID uniqueidentifier
	, @DestinationAccountID uniqueidentifier
	, @PaymentStatusCode int
	, @PaymentStatusMessage nvarchar(1000) = NULL
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure inserts or updates Payment data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@PaymentSubtotal IS NULL OR @PaymentTax IS NULL OR @PaymentServiceCharge IS NULL OR @OrderID IS NULL OR @DebitMetaPartnerID IS NULL OR @SourceAccountID IS NULL OR @CreditMetaPartnerID IS NULL OR @DestinationAccountID IS NULL OR @PaymentStatusCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [PaymentID] FROM [dbo].[tblPayments_Payment] WHERE [PaymentID] =  @PaymentID AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
IF NOT EXISTS (SELECT [PaymentID] FROM [dbo].[tblPayments_Payment] WHERE [PaymentID] =  @PaymentID)
BEGIN
	IF @PaymentID  IS NULL
	BEGIN
		SET @PaymentID  = NEWID ()
	END
	INSERT
	      [dbo].[tblPayments_Payment]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [PaymentID]
	   , [PaymentAmount]
	   , [PaymentSubtotal]
	   , [PaymentTax]
	   , [PaymentServiceCharge]
	   , [OrderID]
	   , [DebitMetaPartnerID]
	   , [SourceAccountID]
	   , [CreditMetaPartnerID]
	   , [DestinationAccountID]
	   , [PaymentStatusCode]
	   , [PaymentStatusMessage]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @PaymentID
	   , @PaymentAmount
	   , @PaymentSubtotal
	   , @PaymentTax
	   , @PaymentServiceCharge
	   , @OrderID
	   , @DebitMetaPartnerID
	   , @SourceAccountID
	   , @CreditMetaPartnerID
	   , @DestinationAccountID
	   , @PaymentStatusCode
	   , @PaymentStatusMessage
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
	END
ELSE
BEGIN
	UPDATE
	      [dbo].[tblPayments_Payment]
	SET
	     [LastModifiedByUserID] = @LastModifiedByUserID
	   , [LastModifiedDate] = getdate()
	   , [PaymentID] = @PaymentID
	   , [PaymentAmount] = @PaymentAmount
	   , [PaymentSubtotal] = @PaymentSubtotal
	   , [PaymentTax] = @PaymentTax
	   , [PaymentServiceCharge] = @PaymentServiceCharge
	   , [OrderID] = @OrderID
	   , [DebitMetaPartnerID] = @DebitMetaPartnerID
	   , [SourceAccountID] = @SourceAccountID
	   , [CreditMetaPartnerID] = @CreditMetaPartnerID
	   , [DestinationAccountID] = @DestinationAccountID
	   , [PaymentStatusCode] = @PaymentStatusCode
	   , [PaymentStatusMessage] = @PaymentStatusMessage
	WHERE [PaymentID] =  @PaymentID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

	SET  @Timestamp = @@DBTS

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUserExperience_AddOneAdminHelp
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @ActivityCode int
	, @LocaleCode int
	, @AdminHelpTitle nvarchar(255)
	, @AdminHelpText nvarchar(2000) = NULL
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure inserts AdminHelp data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@ActivityCode IS NULL OR @LocaleCode IS NULL OR @AdminHelpTitle IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF EXISTS (SELECT [ActivityCode], [LocaleCode] FROM [dbo].[tblUserExperience_AdminHelp] WHERE [ActivityCode] =  @ActivityCode AND [LocaleCode] =  @LocaleCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	INSERT
	      [dbo].[tblUserExperience_AdminHelp]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [ActivityCode]
	   , [LocaleCode]
	   , [AdminHelpTitle]
	   , [AdminHelpText]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @ActivityCode
	   , @LocaleCode
	   , @AdminHelpTitle
	   , @AdminHelpText
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUserExperience_AddOneSiteHelp
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @SiteHelpCode int
	, @LocaleCode int
	, @SiteHelpName nvarchar(255)
	, @SiteHelpText nvarchar(2000) = NULL
	, @SiteHelpImageURL nvarchar(255) = NULL
	, @SiteHelpGroupCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure inserts SiteHelp data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@SiteHelpCode IS NULL OR @LocaleCode IS NULL OR @SiteHelpName IS NULL OR @SiteHelpGroupCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF EXISTS (SELECT [SiteHelpCode], [LocaleCode] FROM [dbo].[tblUserExperience_SiteHelp] WHERE [SiteHelpCode] =  @SiteHelpCode AND [LocaleCode] =  @LocaleCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	INSERT
	      [dbo].[tblUserExperience_SiteHelp]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [SiteHelpCode]
	   , [LocaleCode]
	   , [SiteHelpName]
	   , [SiteHelpText]
	   , [SiteHelpImageURL]
	   , [SiteHelpGroupCode]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @SiteHelpCode
	   , @LocaleCode
	   , @SiteHelpName
	   , @SiteHelpText
	   , @SiteHelpImageURL
	   , @SiteHelpGroupCode
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUserExperience_AddOneSiteHelpGroup
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @SiteHelpGroupCode int
	, @SiteHelpGroupName nvarchar(255) = NULL
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure inserts SiteHelpGroup data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@SiteHelpGroupCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF EXISTS (SELECT [SiteHelpGroupCode] FROM [dbo].[tlkpUserExperience_SiteHelpGroup] WHERE [SiteHelpGroupCode] =  @SiteHelpGroupCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	INSERT
	      [dbo].[tlkpUserExperience_SiteHelpGroup]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [SiteHelpGroupCode]
	   , [SiteHelpGroupName]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @SiteHelpGroupCode
	   , @SiteHelpGroupName
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUserExperience_AddOneSiteLabel
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @SiteLabelCode int
	, @LocaleCode int
	, @Title nvarchar(255)
	, @DisplayText nvarchar(2000) = NULL
	, @TargetLocation nvarchar(255) = NULL
	, @FileURL nvarchar(255)
	, @Description nvarchar(1000) = NULL
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure inserts SiteLabel data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@SiteLabelCode IS NULL OR @LocaleCode IS NULL OR @Title IS NULL OR @FileURL IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF EXISTS (SELECT [SiteLabelCode], [LocaleCode] FROM [dbo].[tblUserExperience_SiteLabel] WHERE [SiteLabelCode] =  @SiteLabelCode AND [LocaleCode] =  @LocaleCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	INSERT
	      [dbo].[tblUserExperience_SiteLabel]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [SiteLabelCode]
	   , [LocaleCode]
	   , [Title]
	   , [DisplayText]
	   , [TargetLocation]
	   , [FileURL]
	   , [Description]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @SiteLabelCode
	   , @LocaleCode
	   , @Title
	   , @DisplayText
	   , @TargetLocation
	   , @FileURL
	   , @Description
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUserExperience_DeleteAllAdminHelpDataByActivityCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @ActivityCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all AdminHelp data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@ActivityCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblUserExperience_AdminHelp]
	WHERE [ActivityCode] =  @ActivityCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUserExperience_DeleteAllAdminHelpDataByLocaleCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @LocaleCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all AdminHelp data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@LocaleCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblUserExperience_AdminHelp]
	WHERE [LocaleCode] =  @LocaleCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUserExperience_DeleteAllSiteHelpDataByLocaleCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @LocaleCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all SiteHelp data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@LocaleCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblUserExperience_SiteHelp]
	WHERE [LocaleCode] =  @LocaleCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUserExperience_DeleteAllSiteHelpDataBySiteHelpGroupCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SiteHelpGroupCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all SiteHelp data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@SiteHelpGroupCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblUserExperience_SiteHelp]
	WHERE [SiteHelpGroupCode] =  @SiteHelpGroupCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUserExperience_DeleteAllSiteLabelDataByLocaleCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @LocaleCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all SiteLabel data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@LocaleCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblUserExperience_SiteLabel]
	WHERE [LocaleCode] =  @LocaleCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUserExperience_DeleteOneAdminHelp
	  @SqlErrorNumber int = 0 OUTPUT
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @ActivityCode int
	, @LocaleCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes AdminHelp data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@ActivityCode IS NULL OR @LocaleCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [ActivityCode], [LocaleCode] FROM [dbo].[tblUserExperience_AdminHelp] WHERE [ActivityCode] =  @ActivityCode AND [LocaleCode] =  @LocaleCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [ActivityCode], [LocaleCode] FROM [dbo].[tblUserExperience_AdminHelp] WHERE [ActivityCode] =  @ActivityCode AND [LocaleCode] =  @LocaleCode AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblUserExperience_AdminHelp]
	WHERE [ActivityCode] =  @ActivityCode AND [LocaleCode] =  @LocaleCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUserExperience_DeleteOneSiteHelp
	  @SqlErrorNumber int = 0 OUTPUT
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @SiteHelpCode int
	, @LocaleCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes SiteHelp data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@SiteHelpCode IS NULL OR @LocaleCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [SiteHelpCode], [LocaleCode] FROM [dbo].[tblUserExperience_SiteHelp] WHERE [SiteHelpCode] =  @SiteHelpCode AND [LocaleCode] =  @LocaleCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [SiteHelpCode], [LocaleCode] FROM [dbo].[tblUserExperience_SiteHelp] WHERE [SiteHelpCode] =  @SiteHelpCode AND [LocaleCode] =  @LocaleCode AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblUserExperience_SiteHelp]
	WHERE [SiteHelpCode] =  @SiteHelpCode AND [LocaleCode] =  @LocaleCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUserExperience_DeleteOneSiteHelpGroup
	  @SqlErrorNumber int = 0 OUTPUT
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @SiteHelpGroupCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes SiteHelpGroup data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@SiteHelpGroupCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [SiteHelpGroupCode] FROM [dbo].[tlkpUserExperience_SiteHelpGroup] WHERE [SiteHelpGroupCode] =  @SiteHelpGroupCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [SiteHelpGroupCode] FROM [dbo].[tlkpUserExperience_SiteHelpGroup] WHERE [SiteHelpGroupCode] =  @SiteHelpGroupCode AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tlkpUserExperience_SiteHelpGroup]
	WHERE [SiteHelpGroupCode] =  @SiteHelpGroupCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUserExperience_DeleteOneSiteLabel
	  @SqlErrorNumber int = 0 OUTPUT
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @SiteLabelCode int
	, @LocaleCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes SiteLabel data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@SiteLabelCode IS NULL OR @LocaleCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [SiteLabelCode], [LocaleCode] FROM [dbo].[tblUserExperience_SiteLabel] WHERE [SiteLabelCode] =  @SiteLabelCode AND [LocaleCode] =  @LocaleCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [SiteLabelCode], [LocaleCode] FROM [dbo].[tblUserExperience_SiteLabel] WHERE [SiteLabelCode] =  @SiteLabelCode AND [LocaleCode] =  @LocaleCode AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblUserExperience_SiteLabel]
	WHERE [SiteLabelCode] =  @SiteLabelCode AND [LocaleCode] =  @LocaleCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUserExperience_GetAllAdminHelpData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'ActivityCode'
	, @SortDirection nvarchar(20) = 'Ascending'
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all AdminHelp data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='ActivityCode'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  AdminHelp1.[ActivityCode]
		, AdminHelp1.[LocaleCode]
		, AdminHelp1.[AdminHelpTitle]
		, AdminHelp1.[AdminHelpText]
		, AdminHelp1.[CreatedByUserID]
		, AdminHelp1.[CreatedDate]
		, AdminHelp1.[LastModifiedByUserID]
		, AdminHelp1.[LastModifiedDate]
		, AdminHelp1.[Timestamp]
		, Activity1.[ActivityName]
		, Locale1.[LocaleName]
	FROM
	      [dbo].[tblUserExperience_AdminHelp] AdminHelp1
	INNER JOIN [dbo].[tlkpUsers_Activity] Activity1 ON Activity1.[ActivityCode]=AdminHelp1.[ActivityCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=AdminHelp1.[LocaleCode]

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  AdminHelp1.[ActivityCode]
		, AdminHelp1.[LocaleCode]
		, AdminHelp1.[AdminHelpTitle]
		, AdminHelp1.[AdminHelpText]
		, AdminHelp1.[CreatedByUserID]
		, AdminHelp1.[CreatedDate]
		, AdminHelp1.[LastModifiedByUserID]
		, AdminHelp1.[LastModifiedDate]
		, AdminHelp1.[Timestamp]
		, Activity1.[ActivityName]
		, Locale1.[LocaleName]
	FROM
	      [dbo].[tblUserExperience_AdminHelp] AdminHelp1
	INNER JOIN [dbo].[tlkpUsers_Activity] Activity1 ON Activity1.[ActivityCode]=AdminHelp1.[ActivityCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=AdminHelp1.[LocaleCode]

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ActivityCode' THEN AdminHelp1.[ActivityCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ActivityCode' THEN AdminHelp1.[ActivityCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN AdminHelp1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN AdminHelp1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AdminHelpTitle' THEN AdminHelp1.[AdminHelpTitle] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AdminHelpTitle' THEN AdminHelp1.[AdminHelpTitle] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AdminHelpText' THEN AdminHelp1.[AdminHelpText] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AdminHelpText' THEN AdminHelp1.[AdminHelpText] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN AdminHelp1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN AdminHelp1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN AdminHelp1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN AdminHelp1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN AdminHelp1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN AdminHelp1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN AdminHelp1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN AdminHelp1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN AdminHelp1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN AdminHelp1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ActivityName' THEN Activity1.[ActivityName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ActivityName' THEN Activity1.[ActivityName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUserExperience_GetAllAdminHelpDataByActivityCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'ActivityCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @ActivityCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all AdminHelp data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='ActivityCode'

/*
** parameter validation
*/
IF (@ActivityCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  AdminHelp1.[ActivityCode]
		, AdminHelp1.[LocaleCode]
		, AdminHelp1.[AdminHelpTitle]
		, AdminHelp1.[AdminHelpText]
		, AdminHelp1.[CreatedByUserID]
		, AdminHelp1.[CreatedDate]
		, AdminHelp1.[LastModifiedByUserID]
		, AdminHelp1.[LastModifiedDate]
		, AdminHelp1.[Timestamp]
		, Activity1.[ActivityName]
		, Locale1.[LocaleName]
	FROM
	      [dbo].[tblUserExperience_AdminHelp] AdminHelp1
	INNER JOIN [dbo].[tlkpUsers_Activity] Activity1 ON Activity1.[ActivityCode]=AdminHelp1.[ActivityCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=AdminHelp1.[LocaleCode]
	WHERE 
		AdminHelp1.[ActivityCode] = @ActivityCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  AdminHelp1.[ActivityCode]
		, AdminHelp1.[LocaleCode]
		, AdminHelp1.[AdminHelpTitle]
		, AdminHelp1.[AdminHelpText]
		, AdminHelp1.[CreatedByUserID]
		, AdminHelp1.[CreatedDate]
		, AdminHelp1.[LastModifiedByUserID]
		, AdminHelp1.[LastModifiedDate]
		, AdminHelp1.[Timestamp]
		, Activity1.[ActivityName]
		, Locale1.[LocaleName]
	FROM
	      [dbo].[tblUserExperience_AdminHelp] AdminHelp1
	INNER JOIN [dbo].[tlkpUsers_Activity] Activity1 ON Activity1.[ActivityCode]=AdminHelp1.[ActivityCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=AdminHelp1.[LocaleCode]
	WHERE 
		AdminHelp1.[ActivityCode] = @ActivityCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ActivityCode' THEN AdminHelp1.[ActivityCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ActivityCode' THEN AdminHelp1.[ActivityCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN AdminHelp1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN AdminHelp1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AdminHelpTitle' THEN AdminHelp1.[AdminHelpTitle] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AdminHelpTitle' THEN AdminHelp1.[AdminHelpTitle] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AdminHelpText' THEN AdminHelp1.[AdminHelpText] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AdminHelpText' THEN AdminHelp1.[AdminHelpText] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN AdminHelp1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN AdminHelp1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN AdminHelp1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN AdminHelp1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN AdminHelp1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN AdminHelp1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN AdminHelp1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN AdminHelp1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN AdminHelp1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN AdminHelp1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ActivityName' THEN Activity1.[ActivityName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ActivityName' THEN Activity1.[ActivityName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUserExperience_GetAllAdminHelpDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'AdminHelpTitle'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @AdminHelpTitle nvarchar(255)
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all AdminHelp data by criteria.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='AdminHelpTitle'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  AdminHelp1.[ActivityCode]
		, AdminHelp1.[LocaleCode]
		, AdminHelp1.[AdminHelpTitle]
		, AdminHelp1.[AdminHelpText]
		, AdminHelp1.[CreatedByUserID]
		, AdminHelp1.[CreatedDate]
		, AdminHelp1.[LastModifiedByUserID]
		, AdminHelp1.[LastModifiedDate]
		, AdminHelp1.[Timestamp]
		, Activity1.[ActivityName]
		, Locale1.[LocaleName]
	FROM
	      [dbo].[tblUserExperience_AdminHelp] AdminHelp1
	INNER JOIN [dbo].[tlkpUsers_Activity] Activity1 ON Activity1.[ActivityCode]=AdminHelp1.[ActivityCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=AdminHelp1.[LocaleCode]
	WHERE 
		(@AdminHelpTitle IS NULL OR AdminHelp1.[AdminHelpTitle] like '%' + @AdminHelpTitle + '%')
		AND ((@LastModifiedDateStart  IS NULL) OR (AdminHelp1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (AdminHelp1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  AdminHelp1.[ActivityCode]
		, AdminHelp1.[LocaleCode]
		, AdminHelp1.[AdminHelpTitle]
		, AdminHelp1.[AdminHelpText]
		, AdminHelp1.[CreatedByUserID]
		, AdminHelp1.[CreatedDate]
		, AdminHelp1.[LastModifiedByUserID]
		, AdminHelp1.[LastModifiedDate]
		, AdminHelp1.[Timestamp]
		, Activity1.[ActivityName]
		, Locale1.[LocaleName]
	FROM
	      [dbo].[tblUserExperience_AdminHelp] AdminHelp1
	INNER JOIN [dbo].[tlkpUsers_Activity] Activity1 ON Activity1.[ActivityCode]=AdminHelp1.[ActivityCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=AdminHelp1.[LocaleCode]
	WHERE 
		(@AdminHelpTitle IS NULL OR AdminHelp1.[AdminHelpTitle] like '%' + @AdminHelpTitle + '%')
		AND ((@LastModifiedDateStart  IS NULL) OR (AdminHelp1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (AdminHelp1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ActivityCode' THEN AdminHelp1.[ActivityCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ActivityCode' THEN AdminHelp1.[ActivityCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN AdminHelp1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN AdminHelp1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AdminHelpTitle' THEN AdminHelp1.[AdminHelpTitle] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AdminHelpTitle' THEN AdminHelp1.[AdminHelpTitle] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AdminHelpText' THEN AdminHelp1.[AdminHelpText] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AdminHelpText' THEN AdminHelp1.[AdminHelpText] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN AdminHelp1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN AdminHelp1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN AdminHelp1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN AdminHelp1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN AdminHelp1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN AdminHelp1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN AdminHelp1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN AdminHelp1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN AdminHelp1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN AdminHelp1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ActivityName' THEN Activity1.[ActivityName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ActivityName' THEN Activity1.[ActivityName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUserExperience_GetAllAdminHelpDataByLocaleCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'LocaleCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @LocaleCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all AdminHelp data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='LocaleCode'

/*
** parameter validation
*/
IF (@LocaleCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  AdminHelp1.[ActivityCode]
		, AdminHelp1.[LocaleCode]
		, AdminHelp1.[AdminHelpTitle]
		, AdminHelp1.[AdminHelpText]
		, AdminHelp1.[CreatedByUserID]
		, AdminHelp1.[CreatedDate]
		, AdminHelp1.[LastModifiedByUserID]
		, AdminHelp1.[LastModifiedDate]
		, AdminHelp1.[Timestamp]
		, Activity1.[ActivityName]
		, Locale1.[LocaleName]
	FROM
	      [dbo].[tblUserExperience_AdminHelp] AdminHelp1
	INNER JOIN [dbo].[tlkpUsers_Activity] Activity1 ON Activity1.[ActivityCode]=AdminHelp1.[ActivityCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=AdminHelp1.[LocaleCode]
	WHERE 
		AdminHelp1.[LocaleCode] = @LocaleCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  AdminHelp1.[ActivityCode]
		, AdminHelp1.[LocaleCode]
		, AdminHelp1.[AdminHelpTitle]
		, AdminHelp1.[AdminHelpText]
		, AdminHelp1.[CreatedByUserID]
		, AdminHelp1.[CreatedDate]
		, AdminHelp1.[LastModifiedByUserID]
		, AdminHelp1.[LastModifiedDate]
		, AdminHelp1.[Timestamp]
		, Activity1.[ActivityName]
		, Locale1.[LocaleName]
	FROM
	      [dbo].[tblUserExperience_AdminHelp] AdminHelp1
	INNER JOIN [dbo].[tlkpUsers_Activity] Activity1 ON Activity1.[ActivityCode]=AdminHelp1.[ActivityCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=AdminHelp1.[LocaleCode]
	WHERE 
		AdminHelp1.[LocaleCode] = @LocaleCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ActivityCode' THEN AdminHelp1.[ActivityCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ActivityCode' THEN AdminHelp1.[ActivityCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN AdminHelp1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN AdminHelp1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AdminHelpTitle' THEN AdminHelp1.[AdminHelpTitle] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AdminHelpTitle' THEN AdminHelp1.[AdminHelpTitle] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AdminHelpText' THEN AdminHelp1.[AdminHelpText] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AdminHelpText' THEN AdminHelp1.[AdminHelpText] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN AdminHelp1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN AdminHelp1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN AdminHelp1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN AdminHelp1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN AdminHelp1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN AdminHelp1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN AdminHelp1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN AdminHelp1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN AdminHelp1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN AdminHelp1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ActivityName' THEN Activity1.[ActivityName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ActivityName' THEN Activity1.[ActivityName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUserExperience_GetAllSiteHelpData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'SiteHelpCode'
	, @SortDirection nvarchar(20) = 'Ascending'
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all SiteHelp data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='SiteHelpCode'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  SiteHelp1.[SiteHelpCode]
		, SiteHelp1.[LocaleCode]
		, SiteHelp1.[SiteHelpName]
		, SiteHelp1.[SiteHelpText]
		, SiteHelp1.[SiteHelpImageURL]
		, SiteHelp1.[SiteHelpGroupCode]
		, SiteHelp1.[CreatedByUserID]
		, SiteHelp1.[CreatedDate]
		, SiteHelp1.[LastModifiedByUserID]
		, SiteHelp1.[LastModifiedDate]
		, SiteHelp1.[Timestamp]
		, Locale1.[LocaleName]
		, SiteHelpGroup1.[SiteHelpGroupName]
	FROM
	      [dbo].[tblUserExperience_SiteHelp] SiteHelp1
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=SiteHelp1.[LocaleCode]
	INNER JOIN [dbo].[tlkpUserExperience_SiteHelpGroup] SiteHelpGroup1 ON SiteHelpGroup1.[SiteHelpGroupCode]=SiteHelp1.[SiteHelpGroupCode]

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  SiteHelp1.[SiteHelpCode]
		, SiteHelp1.[LocaleCode]
		, SiteHelp1.[SiteHelpName]
		, SiteHelp1.[SiteHelpText]
		, SiteHelp1.[SiteHelpImageURL]
		, SiteHelp1.[SiteHelpGroupCode]
		, SiteHelp1.[CreatedByUserID]
		, SiteHelp1.[CreatedDate]
		, SiteHelp1.[LastModifiedByUserID]
		, SiteHelp1.[LastModifiedDate]
		, SiteHelp1.[Timestamp]
		, Locale1.[LocaleName]
		, SiteHelpGroup1.[SiteHelpGroupName]
	FROM
	      [dbo].[tblUserExperience_SiteHelp] SiteHelp1
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=SiteHelp1.[LocaleCode]
	INNER JOIN [dbo].[tlkpUserExperience_SiteHelpGroup] SiteHelpGroup1 ON SiteHelpGroup1.[SiteHelpGroupCode]=SiteHelp1.[SiteHelpGroupCode]

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'SiteHelpCode' THEN SiteHelp1.[SiteHelpCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'SiteHelpCode' THEN SiteHelp1.[SiteHelpCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN SiteHelp1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN SiteHelp1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'SiteHelpName' THEN SiteHelp1.[SiteHelpName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'SiteHelpName' THEN SiteHelp1.[SiteHelpName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'SiteHelpText' THEN SiteHelp1.[SiteHelpText] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'SiteHelpText' THEN SiteHelp1.[SiteHelpText] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'SiteHelpImageURL' THEN SiteHelp1.[SiteHelpImageURL] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'SiteHelpImageURL' THEN SiteHelp1.[SiteHelpImageURL] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'SiteHelpGroupCode' THEN SiteHelp1.[SiteHelpGroupCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'SiteHelpGroupCode' THEN SiteHelp1.[SiteHelpGroupCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN SiteHelp1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN SiteHelp1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN SiteHelp1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN SiteHelp1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN SiteHelp1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN SiteHelp1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN SiteHelp1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN SiteHelp1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN SiteHelp1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN SiteHelp1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'SiteHelpGroupName' THEN SiteHelpGroup1.[SiteHelpGroupName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'SiteHelpGroupName' THEN SiteHelpGroup1.[SiteHelpGroupName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUserExperience_GetAllSiteHelpDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'SiteHelpName'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @SiteHelpName nvarchar(255)
	, @SiteHelpGroupCode int
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all SiteHelp data by criteria.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='SiteHelpName'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  SiteHelp1.[SiteHelpCode]
		, SiteHelp1.[LocaleCode]
		, SiteHelp1.[SiteHelpName]
		, SiteHelp1.[SiteHelpText]
		, SiteHelp1.[SiteHelpImageURL]
		, SiteHelp1.[SiteHelpGroupCode]
		, SiteHelp1.[CreatedByUserID]
		, SiteHelp1.[CreatedDate]
		, SiteHelp1.[LastModifiedByUserID]
		, SiteHelp1.[LastModifiedDate]
		, SiteHelp1.[Timestamp]
		, Locale1.[LocaleName]
		, SiteHelpGroup1.[SiteHelpGroupName]
	FROM
	      [dbo].[tblUserExperience_SiteHelp] SiteHelp1
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=SiteHelp1.[LocaleCode]
	INNER JOIN [dbo].[tlkpUserExperience_SiteHelpGroup] SiteHelpGroup1 ON SiteHelpGroup1.[SiteHelpGroupCode]=SiteHelp1.[SiteHelpGroupCode]
	WHERE 
		(@SiteHelpName IS NULL OR SiteHelp1.[SiteHelpName] like '%' + @SiteHelpName + '%')
		AND (@SiteHelpGroupCode IS NULL OR SiteHelp1.[SiteHelpGroupCode] = @SiteHelpGroupCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (SiteHelp1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (SiteHelp1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  SiteHelp1.[SiteHelpCode]
		, SiteHelp1.[LocaleCode]
		, SiteHelp1.[SiteHelpName]
		, SiteHelp1.[SiteHelpText]
		, SiteHelp1.[SiteHelpImageURL]
		, SiteHelp1.[SiteHelpGroupCode]
		, SiteHelp1.[CreatedByUserID]
		, SiteHelp1.[CreatedDate]
		, SiteHelp1.[LastModifiedByUserID]
		, SiteHelp1.[LastModifiedDate]
		, SiteHelp1.[Timestamp]
		, Locale1.[LocaleName]
		, SiteHelpGroup1.[SiteHelpGroupName]
	FROM
	      [dbo].[tblUserExperience_SiteHelp] SiteHelp1
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=SiteHelp1.[LocaleCode]
	INNER JOIN [dbo].[tlkpUserExperience_SiteHelpGroup] SiteHelpGroup1 ON SiteHelpGroup1.[SiteHelpGroupCode]=SiteHelp1.[SiteHelpGroupCode]
	WHERE 
		(@SiteHelpName IS NULL OR SiteHelp1.[SiteHelpName] like '%' + @SiteHelpName + '%')
		AND (@SiteHelpGroupCode IS NULL OR SiteHelp1.[SiteHelpGroupCode] = @SiteHelpGroupCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (SiteHelp1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (SiteHelp1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'SiteHelpCode' THEN SiteHelp1.[SiteHelpCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'SiteHelpCode' THEN SiteHelp1.[SiteHelpCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN SiteHelp1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN SiteHelp1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'SiteHelpName' THEN SiteHelp1.[SiteHelpName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'SiteHelpName' THEN SiteHelp1.[SiteHelpName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'SiteHelpText' THEN SiteHelp1.[SiteHelpText] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'SiteHelpText' THEN SiteHelp1.[SiteHelpText] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'SiteHelpImageURL' THEN SiteHelp1.[SiteHelpImageURL] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'SiteHelpImageURL' THEN SiteHelp1.[SiteHelpImageURL] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'SiteHelpGroupCode' THEN SiteHelp1.[SiteHelpGroupCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'SiteHelpGroupCode' THEN SiteHelp1.[SiteHelpGroupCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN SiteHelp1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN SiteHelp1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN SiteHelp1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN SiteHelp1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN SiteHelp1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN SiteHelp1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN SiteHelp1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN SiteHelp1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN SiteHelp1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN SiteHelp1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'SiteHelpGroupName' THEN SiteHelpGroup1.[SiteHelpGroupName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'SiteHelpGroupName' THEN SiteHelpGroup1.[SiteHelpGroupName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUserExperience_GetAllSiteHelpDataByLocaleCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'LocaleCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @LocaleCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all SiteHelp data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='LocaleCode'

/*
** parameter validation
*/
IF (@LocaleCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  SiteHelp1.[SiteHelpCode]
		, SiteHelp1.[LocaleCode]
		, SiteHelp1.[SiteHelpName]
		, SiteHelp1.[SiteHelpText]
		, SiteHelp1.[SiteHelpImageURL]
		, SiteHelp1.[SiteHelpGroupCode]
		, SiteHelp1.[CreatedByUserID]
		, SiteHelp1.[CreatedDate]
		, SiteHelp1.[LastModifiedByUserID]
		, SiteHelp1.[LastModifiedDate]
		, SiteHelp1.[Timestamp]
		, Locale1.[LocaleName]
		, SiteHelpGroup1.[SiteHelpGroupName]
	FROM
	      [dbo].[tblUserExperience_SiteHelp] SiteHelp1
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=SiteHelp1.[LocaleCode]
	INNER JOIN [dbo].[tlkpUserExperience_SiteHelpGroup] SiteHelpGroup1 ON SiteHelpGroup1.[SiteHelpGroupCode]=SiteHelp1.[SiteHelpGroupCode]
	WHERE 
		SiteHelp1.[LocaleCode] = @LocaleCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  SiteHelp1.[SiteHelpCode]
		, SiteHelp1.[LocaleCode]
		, SiteHelp1.[SiteHelpName]
		, SiteHelp1.[SiteHelpText]
		, SiteHelp1.[SiteHelpImageURL]
		, SiteHelp1.[SiteHelpGroupCode]
		, SiteHelp1.[CreatedByUserID]
		, SiteHelp1.[CreatedDate]
		, SiteHelp1.[LastModifiedByUserID]
		, SiteHelp1.[LastModifiedDate]
		, SiteHelp1.[Timestamp]
		, Locale1.[LocaleName]
		, SiteHelpGroup1.[SiteHelpGroupName]
	FROM
	      [dbo].[tblUserExperience_SiteHelp] SiteHelp1
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=SiteHelp1.[LocaleCode]
	INNER JOIN [dbo].[tlkpUserExperience_SiteHelpGroup] SiteHelpGroup1 ON SiteHelpGroup1.[SiteHelpGroupCode]=SiteHelp1.[SiteHelpGroupCode]
	WHERE 
		SiteHelp1.[LocaleCode] = @LocaleCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'SiteHelpCode' THEN SiteHelp1.[SiteHelpCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'SiteHelpCode' THEN SiteHelp1.[SiteHelpCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN SiteHelp1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN SiteHelp1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'SiteHelpName' THEN SiteHelp1.[SiteHelpName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'SiteHelpName' THEN SiteHelp1.[SiteHelpName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'SiteHelpText' THEN SiteHelp1.[SiteHelpText] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'SiteHelpText' THEN SiteHelp1.[SiteHelpText] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'SiteHelpImageURL' THEN SiteHelp1.[SiteHelpImageURL] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'SiteHelpImageURL' THEN SiteHelp1.[SiteHelpImageURL] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'SiteHelpGroupCode' THEN SiteHelp1.[SiteHelpGroupCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'SiteHelpGroupCode' THEN SiteHelp1.[SiteHelpGroupCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN SiteHelp1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN SiteHelp1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN SiteHelp1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN SiteHelp1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN SiteHelp1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN SiteHelp1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN SiteHelp1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN SiteHelp1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN SiteHelp1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN SiteHelp1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'SiteHelpGroupName' THEN SiteHelpGroup1.[SiteHelpGroupName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'SiteHelpGroupName' THEN SiteHelpGroup1.[SiteHelpGroupName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUserExperience_GetAllSiteHelpDataBySiteHelpGroupCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'SiteHelpGroupCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @SiteHelpGroupCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all SiteHelp data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='SiteHelpGroupCode'

/*
** parameter validation
*/
IF (@SiteHelpGroupCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  SiteHelp1.[SiteHelpCode]
		, SiteHelp1.[LocaleCode]
		, SiteHelp1.[SiteHelpName]
		, SiteHelp1.[SiteHelpText]
		, SiteHelp1.[SiteHelpImageURL]
		, SiteHelp1.[SiteHelpGroupCode]
		, SiteHelp1.[CreatedByUserID]
		, SiteHelp1.[CreatedDate]
		, SiteHelp1.[LastModifiedByUserID]
		, SiteHelp1.[LastModifiedDate]
		, SiteHelp1.[Timestamp]
		, Locale1.[LocaleName]
		, SiteHelpGroup1.[SiteHelpGroupName]
	FROM
	      [dbo].[tblUserExperience_SiteHelp] SiteHelp1
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=SiteHelp1.[LocaleCode]
	INNER JOIN [dbo].[tlkpUserExperience_SiteHelpGroup] SiteHelpGroup1 ON SiteHelpGroup1.[SiteHelpGroupCode]=SiteHelp1.[SiteHelpGroupCode]
	WHERE 
		SiteHelp1.[SiteHelpGroupCode] = @SiteHelpGroupCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  SiteHelp1.[SiteHelpCode]
		, SiteHelp1.[LocaleCode]
		, SiteHelp1.[SiteHelpName]
		, SiteHelp1.[SiteHelpText]
		, SiteHelp1.[SiteHelpImageURL]
		, SiteHelp1.[SiteHelpGroupCode]
		, SiteHelp1.[CreatedByUserID]
		, SiteHelp1.[CreatedDate]
		, SiteHelp1.[LastModifiedByUserID]
		, SiteHelp1.[LastModifiedDate]
		, SiteHelp1.[Timestamp]
		, Locale1.[LocaleName]
		, SiteHelpGroup1.[SiteHelpGroupName]
	FROM
	      [dbo].[tblUserExperience_SiteHelp] SiteHelp1
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=SiteHelp1.[LocaleCode]
	INNER JOIN [dbo].[tlkpUserExperience_SiteHelpGroup] SiteHelpGroup1 ON SiteHelpGroup1.[SiteHelpGroupCode]=SiteHelp1.[SiteHelpGroupCode]
	WHERE 
		SiteHelp1.[SiteHelpGroupCode] = @SiteHelpGroupCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'SiteHelpCode' THEN SiteHelp1.[SiteHelpCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'SiteHelpCode' THEN SiteHelp1.[SiteHelpCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN SiteHelp1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN SiteHelp1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'SiteHelpName' THEN SiteHelp1.[SiteHelpName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'SiteHelpName' THEN SiteHelp1.[SiteHelpName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'SiteHelpText' THEN SiteHelp1.[SiteHelpText] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'SiteHelpText' THEN SiteHelp1.[SiteHelpText] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'SiteHelpImageURL' THEN SiteHelp1.[SiteHelpImageURL] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'SiteHelpImageURL' THEN SiteHelp1.[SiteHelpImageURL] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'SiteHelpGroupCode' THEN SiteHelp1.[SiteHelpGroupCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'SiteHelpGroupCode' THEN SiteHelp1.[SiteHelpGroupCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN SiteHelp1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN SiteHelp1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN SiteHelp1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN SiteHelp1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN SiteHelp1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN SiteHelp1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN SiteHelp1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN SiteHelp1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN SiteHelp1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN SiteHelp1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'SiteHelpGroupName' THEN SiteHelpGroup1.[SiteHelpGroupName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'SiteHelpGroupName' THEN SiteHelpGroup1.[SiteHelpGroupName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUserExperience_GetAllSiteHelpGroupData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'SiteHelpGroupCode'
	, @SortDirection nvarchar(20) = 'Ascending'
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all SiteHelpGroup data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='SiteHelpGroupCode'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  SiteHelpGroup1.[SiteHelpGroupCode]
		, SiteHelpGroup1.[SiteHelpGroupName]
		, SiteHelpGroup1.[CreatedByUserID]
		, SiteHelpGroup1.[CreatedDate]
		, SiteHelpGroup1.[LastModifiedByUserID]
		, SiteHelpGroup1.[LastModifiedDate]
		, SiteHelpGroup1.[Timestamp]
	FROM
	      [dbo].[tlkpUserExperience_SiteHelpGroup] SiteHelpGroup1

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  SiteHelpGroup1.[SiteHelpGroupCode]
		, SiteHelpGroup1.[SiteHelpGroupName]
		, SiteHelpGroup1.[CreatedByUserID]
		, SiteHelpGroup1.[CreatedDate]
		, SiteHelpGroup1.[LastModifiedByUserID]
		, SiteHelpGroup1.[LastModifiedDate]
		, SiteHelpGroup1.[Timestamp]
	FROM
	      [dbo].[tlkpUserExperience_SiteHelpGroup] SiteHelpGroup1

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'SiteHelpGroupCode' THEN SiteHelpGroup1.[SiteHelpGroupCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'SiteHelpGroupCode' THEN SiteHelpGroup1.[SiteHelpGroupCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'SiteHelpGroupName' THEN SiteHelpGroup1.[SiteHelpGroupName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'SiteHelpGroupName' THEN SiteHelpGroup1.[SiteHelpGroupName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN SiteHelpGroup1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN SiteHelpGroup1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN SiteHelpGroup1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN SiteHelpGroup1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN SiteHelpGroup1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN SiteHelpGroup1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN SiteHelpGroup1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN SiteHelpGroup1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN SiteHelpGroup1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN SiteHelpGroup1.[Timestamp] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUserExperience_GetAllSiteLabelData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'SiteLabelCode'
	, @SortDirection nvarchar(20) = 'Ascending'
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all SiteLabel data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='SiteLabelCode'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  SiteLabel1.[SiteLabelCode]
		, SiteLabel1.[LocaleCode]
		, SiteLabel1.[Title]
		, SiteLabel1.[DisplayText]
		, SiteLabel1.[TargetLocation]
		, SiteLabel1.[FileURL]
		, SiteLabel1.[Description]
		, SiteLabel1.[CreatedByUserID]
		, SiteLabel1.[CreatedDate]
		, SiteLabel1.[LastModifiedByUserID]
		, SiteLabel1.[LastModifiedDate]
		, SiteLabel1.[Timestamp]
		, Locale1.[LocaleName]
	FROM
	      [dbo].[tblUserExperience_SiteLabel] SiteLabel1
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=SiteLabel1.[LocaleCode]

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  SiteLabel1.[SiteLabelCode]
		, SiteLabel1.[LocaleCode]
		, SiteLabel1.[Title]
		, SiteLabel1.[DisplayText]
		, SiteLabel1.[TargetLocation]
		, SiteLabel1.[FileURL]
		, SiteLabel1.[Description]
		, SiteLabel1.[CreatedByUserID]
		, SiteLabel1.[CreatedDate]
		, SiteLabel1.[LastModifiedByUserID]
		, SiteLabel1.[LastModifiedDate]
		, SiteLabel1.[Timestamp]
		, Locale1.[LocaleName]
	FROM
	      [dbo].[tblUserExperience_SiteLabel] SiteLabel1
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=SiteLabel1.[LocaleCode]

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'SiteLabelCode' THEN SiteLabel1.[SiteLabelCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'SiteLabelCode' THEN SiteLabel1.[SiteLabelCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN SiteLabel1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN SiteLabel1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Title' THEN SiteLabel1.[Title] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Title' THEN SiteLabel1.[Title] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DisplayText' THEN SiteLabel1.[DisplayText] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DisplayText' THEN SiteLabel1.[DisplayText] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TargetLocation' THEN SiteLabel1.[TargetLocation] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TargetLocation' THEN SiteLabel1.[TargetLocation] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FileURL' THEN SiteLabel1.[FileURL] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FileURL' THEN SiteLabel1.[FileURL] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN SiteLabel1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN SiteLabel1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN SiteLabel1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN SiteLabel1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN SiteLabel1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN SiteLabel1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN SiteLabel1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN SiteLabel1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN SiteLabel1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN SiteLabel1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN SiteLabel1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN SiteLabel1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUserExperience_GetAllSiteLabelDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'Title'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @Title nvarchar(255)
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all SiteLabel data by criteria.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='Title'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  SiteLabel1.[SiteLabelCode]
		, SiteLabel1.[LocaleCode]
		, SiteLabel1.[Title]
		, SiteLabel1.[DisplayText]
		, SiteLabel1.[TargetLocation]
		, SiteLabel1.[FileURL]
		, SiteLabel1.[Description]
		, SiteLabel1.[CreatedByUserID]
		, SiteLabel1.[CreatedDate]
		, SiteLabel1.[LastModifiedByUserID]
		, SiteLabel1.[LastModifiedDate]
		, SiteLabel1.[Timestamp]
		, Locale1.[LocaleName]
	FROM
	      [dbo].[tblUserExperience_SiteLabel] SiteLabel1
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=SiteLabel1.[LocaleCode]
	WHERE 
		(@Title IS NULL OR SiteLabel1.[Title] like '%' + @Title + '%')
		AND ((@LastModifiedDateStart  IS NULL) OR (SiteLabel1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (SiteLabel1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  SiteLabel1.[SiteLabelCode]
		, SiteLabel1.[LocaleCode]
		, SiteLabel1.[Title]
		, SiteLabel1.[DisplayText]
		, SiteLabel1.[TargetLocation]
		, SiteLabel1.[FileURL]
		, SiteLabel1.[Description]
		, SiteLabel1.[CreatedByUserID]
		, SiteLabel1.[CreatedDate]
		, SiteLabel1.[LastModifiedByUserID]
		, SiteLabel1.[LastModifiedDate]
		, SiteLabel1.[Timestamp]
		, Locale1.[LocaleName]
	FROM
	      [dbo].[tblUserExperience_SiteLabel] SiteLabel1
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=SiteLabel1.[LocaleCode]
	WHERE 
		(@Title IS NULL OR SiteLabel1.[Title] like '%' + @Title + '%')
		AND ((@LastModifiedDateStart  IS NULL) OR (SiteLabel1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (SiteLabel1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'SiteLabelCode' THEN SiteLabel1.[SiteLabelCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'SiteLabelCode' THEN SiteLabel1.[SiteLabelCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN SiteLabel1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN SiteLabel1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Title' THEN SiteLabel1.[Title] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Title' THEN SiteLabel1.[Title] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DisplayText' THEN SiteLabel1.[DisplayText] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DisplayText' THEN SiteLabel1.[DisplayText] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TargetLocation' THEN SiteLabel1.[TargetLocation] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TargetLocation' THEN SiteLabel1.[TargetLocation] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FileURL' THEN SiteLabel1.[FileURL] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FileURL' THEN SiteLabel1.[FileURL] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN SiteLabel1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN SiteLabel1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN SiteLabel1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN SiteLabel1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN SiteLabel1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN SiteLabel1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN SiteLabel1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN SiteLabel1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN SiteLabel1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN SiteLabel1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN SiteLabel1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN SiteLabel1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUserExperience_GetAllSiteLabelDataByLocaleCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'LocaleCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @LocaleCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all SiteLabel data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='LocaleCode'

/*
** parameter validation
*/
IF (@LocaleCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  SiteLabel1.[SiteLabelCode]
		, SiteLabel1.[LocaleCode]
		, SiteLabel1.[Title]
		, SiteLabel1.[DisplayText]
		, SiteLabel1.[TargetLocation]
		, SiteLabel1.[FileURL]
		, SiteLabel1.[Description]
		, SiteLabel1.[CreatedByUserID]
		, SiteLabel1.[CreatedDate]
		, SiteLabel1.[LastModifiedByUserID]
		, SiteLabel1.[LastModifiedDate]
		, SiteLabel1.[Timestamp]
		, Locale1.[LocaleName]
	FROM
	      [dbo].[tblUserExperience_SiteLabel] SiteLabel1
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=SiteLabel1.[LocaleCode]
	WHERE 
		SiteLabel1.[LocaleCode] = @LocaleCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  SiteLabel1.[SiteLabelCode]
		, SiteLabel1.[LocaleCode]
		, SiteLabel1.[Title]
		, SiteLabel1.[DisplayText]
		, SiteLabel1.[TargetLocation]
		, SiteLabel1.[FileURL]
		, SiteLabel1.[Description]
		, SiteLabel1.[CreatedByUserID]
		, SiteLabel1.[CreatedDate]
		, SiteLabel1.[LastModifiedByUserID]
		, SiteLabel1.[LastModifiedDate]
		, SiteLabel1.[Timestamp]
		, Locale1.[LocaleName]
	FROM
	      [dbo].[tblUserExperience_SiteLabel] SiteLabel1
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=SiteLabel1.[LocaleCode]
	WHERE 
		SiteLabel1.[LocaleCode] = @LocaleCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'SiteLabelCode' THEN SiteLabel1.[SiteLabelCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'SiteLabelCode' THEN SiteLabel1.[SiteLabelCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN SiteLabel1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN SiteLabel1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Title' THEN SiteLabel1.[Title] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Title' THEN SiteLabel1.[Title] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DisplayText' THEN SiteLabel1.[DisplayText] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DisplayText' THEN SiteLabel1.[DisplayText] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TargetLocation' THEN SiteLabel1.[TargetLocation] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TargetLocation' THEN SiteLabel1.[TargetLocation] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FileURL' THEN SiteLabel1.[FileURL] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FileURL' THEN SiteLabel1.[FileURL] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN SiteLabel1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN SiteLabel1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN SiteLabel1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN SiteLabel1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN SiteLabel1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN SiteLabel1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN SiteLabel1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN SiteLabel1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN SiteLabel1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN SiteLabel1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN SiteLabel1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN SiteLabel1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUserExperience_GetManyAdminHelpDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @StartIndex int = 1
	, @PageSize int = 50
	, @MaximumListSize int = 0
	, @MaximumListSizeExceeded bit = 0 OUTPUT
	, @TotalRecords int = 0 OUTPUT
	, @SortColumn sysname = 'AdminHelpTitle'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @AdminHelpTitle nvarchar(255)
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets many AdminHelp data by criteria.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

DECLARE @vEndIndex int
IF (@StartIndex < 1) SET @StartIndex=1
IF (@PageSize < 1) SET @PageSize=1
SET @vEndIndex = @StartIndex + @Pagesize
IF (@SortColumn = '') SET @SortColumn='AdminHelpTitle'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

DECLARE @OrderedRecords TABLE
(
     SearchOrderID int IDENTITY (1, 1) NOT NULL
    , ActivityCode int
    , LocaleCode int
)
IF (@SortDirection = 'Random')
BEGIN
	INSERT INTO @OrderedRecords (ActivityCode, LocaleCode)
	SELECT
		  AdminHelp1.[ActivityCode]
		, AdminHelp1.[LocaleCode]
	FROM
	      [dbo].[tblUserExperience_AdminHelp] AdminHelp1
	INNER JOIN [dbo].[tlkpUsers_Activity] Activity1 ON Activity1.[ActivityCode]=AdminHelp1.[ActivityCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=AdminHelp1.[LocaleCode]
	WHERE 
		(@AdminHelpTitle IS NULL OR AdminHelp1.[AdminHelpTitle] like '%' + @AdminHelpTitle + '%')
		AND ((@LastModifiedDateStart  IS NULL) OR (AdminHelp1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (AdminHelp1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY NewID()
END
ELSE
BEGIN
	INSERT INTO @OrderedRecords (ActivityCode, LocaleCode)
	SELECT
		  AdminHelp1.[ActivityCode]
		, AdminHelp1.[LocaleCode]
	FROM
	      [dbo].[tblUserExperience_AdminHelp] AdminHelp1
	INNER JOIN [dbo].[tlkpUsers_Activity] Activity1 ON Activity1.[ActivityCode]=AdminHelp1.[ActivityCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=AdminHelp1.[LocaleCode]
	WHERE 
		(@AdminHelpTitle IS NULL OR AdminHelp1.[AdminHelpTitle] like '%' + @AdminHelpTitle + '%')
		AND ((@LastModifiedDateStart  IS NULL) OR (AdminHelp1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (AdminHelp1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ActivityCode' THEN AdminHelp1.[ActivityCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ActivityCode' THEN AdminHelp1.[ActivityCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN AdminHelp1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN AdminHelp1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AdminHelpTitle' THEN AdminHelp1.[AdminHelpTitle] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AdminHelpTitle' THEN AdminHelp1.[AdminHelpTitle] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AdminHelpText' THEN AdminHelp1.[AdminHelpText] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AdminHelpText' THEN AdminHelp1.[AdminHelpText] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN AdminHelp1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN AdminHelp1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN AdminHelp1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN AdminHelp1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN AdminHelp1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN AdminHelp1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN AdminHelp1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN AdminHelp1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN AdminHelp1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN AdminHelp1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ActivityName' THEN Activity1.[ActivityName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ActivityName' THEN Activity1.[ActivityName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END

BEGIN
	SET @TotalRecords = (SELECT Count (*) FROM @OrderedRecords)
	IF @MaximumListSize > 0
	BEGIN
		IF @TotalRecords > @MaximumListSize
		BEGIN
			SET @MaximumListSizeExceeded = 1
			SET @TotalRecords = @MaximumListSize
		END
	END

	/* get search results */
	SELECT
		  AdminHelp1.[ActivityCode]
		, AdminHelp1.[LocaleCode]
		, AdminHelp1.[AdminHelpTitle]
		, AdminHelp1.[AdminHelpText]
		, AdminHelp1.[CreatedByUserID]
		, AdminHelp1.[CreatedDate]
		, AdminHelp1.[LastModifiedByUserID]
		, AdminHelp1.[LastModifiedDate]
		, AdminHelp1.[Timestamp]
		, Activity1.[ActivityName]
		, Locale1.[LocaleName]
	FROM
	      [dbo].[tblUserExperience_AdminHelp] AdminHelp1
	INNER JOIN [dbo].[tlkpUsers_Activity] Activity1 ON Activity1.[ActivityCode]=AdminHelp1.[ActivityCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=AdminHelp1.[LocaleCode]
	INNER JOIN @OrderedRecords search ON search.[ActivityCode] = AdminHelp1.[ActivityCode] AND search.[LocaleCode] = AdminHelp1.[LocaleCode]
	WHERE
		search.SearchOrderID  >= @StartIndex AND
		search.SearchOrderID  < @vEndIndex
	ORDER BY
		search.SearchOrderID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUserExperience_GetManySiteHelpDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @StartIndex int = 1
	, @PageSize int = 50
	, @MaximumListSize int = 0
	, @MaximumListSizeExceeded bit = 0 OUTPUT
	, @TotalRecords int = 0 OUTPUT
	, @SortColumn sysname = 'SiteHelpName'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @SiteHelpName nvarchar(255)
	, @SiteHelpGroupCode int
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets many SiteHelp data by criteria.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

DECLARE @vEndIndex int
IF (@StartIndex < 1) SET @StartIndex=1
IF (@PageSize < 1) SET @PageSize=1
SET @vEndIndex = @StartIndex + @Pagesize
IF (@SortColumn = '') SET @SortColumn='SiteHelpName'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

DECLARE @OrderedRecords TABLE
(
     SearchOrderID int IDENTITY (1, 1) NOT NULL
    , SiteHelpCode int
    , LocaleCode int
)
IF (@SortDirection = 'Random')
BEGIN
	INSERT INTO @OrderedRecords (SiteHelpCode, LocaleCode)
	SELECT
		  SiteHelp1.[SiteHelpCode]
		, SiteHelp1.[LocaleCode]
	FROM
	      [dbo].[tblUserExperience_SiteHelp] SiteHelp1
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=SiteHelp1.[LocaleCode]
	INNER JOIN [dbo].[tlkpUserExperience_SiteHelpGroup] SiteHelpGroup1 ON SiteHelpGroup1.[SiteHelpGroupCode]=SiteHelp1.[SiteHelpGroupCode]
	WHERE 
		(@SiteHelpName IS NULL OR SiteHelp1.[SiteHelpName] like '%' + @SiteHelpName + '%')
		AND (@SiteHelpGroupCode IS NULL OR SiteHelp1.[SiteHelpGroupCode] = @SiteHelpGroupCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (SiteHelp1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (SiteHelp1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY NewID()
END
ELSE
BEGIN
	INSERT INTO @OrderedRecords (SiteHelpCode, LocaleCode)
	SELECT
		  SiteHelp1.[SiteHelpCode]
		, SiteHelp1.[LocaleCode]
	FROM
	      [dbo].[tblUserExperience_SiteHelp] SiteHelp1
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=SiteHelp1.[LocaleCode]
	INNER JOIN [dbo].[tlkpUserExperience_SiteHelpGroup] SiteHelpGroup1 ON SiteHelpGroup1.[SiteHelpGroupCode]=SiteHelp1.[SiteHelpGroupCode]
	WHERE 
		(@SiteHelpName IS NULL OR SiteHelp1.[SiteHelpName] like '%' + @SiteHelpName + '%')
		AND (@SiteHelpGroupCode IS NULL OR SiteHelp1.[SiteHelpGroupCode] = @SiteHelpGroupCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (SiteHelp1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (SiteHelp1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'SiteHelpCode' THEN SiteHelp1.[SiteHelpCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'SiteHelpCode' THEN SiteHelp1.[SiteHelpCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN SiteHelp1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN SiteHelp1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'SiteHelpName' THEN SiteHelp1.[SiteHelpName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'SiteHelpName' THEN SiteHelp1.[SiteHelpName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'SiteHelpText' THEN SiteHelp1.[SiteHelpText] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'SiteHelpText' THEN SiteHelp1.[SiteHelpText] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'SiteHelpImageURL' THEN SiteHelp1.[SiteHelpImageURL] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'SiteHelpImageURL' THEN SiteHelp1.[SiteHelpImageURL] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'SiteHelpGroupCode' THEN SiteHelp1.[SiteHelpGroupCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'SiteHelpGroupCode' THEN SiteHelp1.[SiteHelpGroupCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN SiteHelp1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN SiteHelp1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN SiteHelp1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN SiteHelp1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN SiteHelp1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN SiteHelp1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN SiteHelp1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN SiteHelp1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN SiteHelp1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN SiteHelp1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'SiteHelpGroupName' THEN SiteHelpGroup1.[SiteHelpGroupName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'SiteHelpGroupName' THEN SiteHelpGroup1.[SiteHelpGroupName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END

BEGIN
	SET @TotalRecords = (SELECT Count (*) FROM @OrderedRecords)
	IF @MaximumListSize > 0
	BEGIN
		IF @TotalRecords > @MaximumListSize
		BEGIN
			SET @MaximumListSizeExceeded = 1
			SET @TotalRecords = @MaximumListSize
		END
	END

	/* get search results */
	SELECT
		  SiteHelp1.[SiteHelpCode]
		, SiteHelp1.[LocaleCode]
		, SiteHelp1.[SiteHelpName]
		, SiteHelp1.[SiteHelpText]
		, SiteHelp1.[SiteHelpImageURL]
		, SiteHelp1.[SiteHelpGroupCode]
		, SiteHelp1.[CreatedByUserID]
		, SiteHelp1.[CreatedDate]
		, SiteHelp1.[LastModifiedByUserID]
		, SiteHelp1.[LastModifiedDate]
		, SiteHelp1.[Timestamp]
		, Locale1.[LocaleName]
		, SiteHelpGroup1.[SiteHelpGroupName]
	FROM
	      [dbo].[tblUserExperience_SiteHelp] SiteHelp1
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=SiteHelp1.[LocaleCode]
	INNER JOIN [dbo].[tlkpUserExperience_SiteHelpGroup] SiteHelpGroup1 ON SiteHelpGroup1.[SiteHelpGroupCode]=SiteHelp1.[SiteHelpGroupCode]
	INNER JOIN @OrderedRecords search ON search.[SiteHelpCode] = SiteHelp1.[SiteHelpCode] AND search.[LocaleCode] = SiteHelp1.[LocaleCode]
	WHERE
		search.SearchOrderID  >= @StartIndex AND
		search.SearchOrderID  < @vEndIndex
	ORDER BY
		search.SearchOrderID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUserExperience_GetManySiteLabelDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @StartIndex int = 1
	, @PageSize int = 50
	, @MaximumListSize int = 0
	, @MaximumListSizeExceeded bit = 0 OUTPUT
	, @TotalRecords int = 0 OUTPUT
	, @SortColumn sysname = 'Title'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @Title nvarchar(255)
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets many SiteLabel data by criteria.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

DECLARE @vEndIndex int
IF (@StartIndex < 1) SET @StartIndex=1
IF (@PageSize < 1) SET @PageSize=1
SET @vEndIndex = @StartIndex + @Pagesize
IF (@SortColumn = '') SET @SortColumn='Title'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

DECLARE @OrderedRecords TABLE
(
     SearchOrderID int IDENTITY (1, 1) NOT NULL
    , SiteLabelCode int
    , LocaleCode int
)
IF (@SortDirection = 'Random')
BEGIN
	INSERT INTO @OrderedRecords (SiteLabelCode, LocaleCode)
	SELECT
		  SiteLabel1.[SiteLabelCode]
		, SiteLabel1.[LocaleCode]
	FROM
	      [dbo].[tblUserExperience_SiteLabel] SiteLabel1
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=SiteLabel1.[LocaleCode]
	WHERE 
		(@Title IS NULL OR SiteLabel1.[Title] like '%' + @Title + '%')
		AND ((@LastModifiedDateStart  IS NULL) OR (SiteLabel1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (SiteLabel1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY NewID()
END
ELSE
BEGIN
	INSERT INTO @OrderedRecords (SiteLabelCode, LocaleCode)
	SELECT
		  SiteLabel1.[SiteLabelCode]
		, SiteLabel1.[LocaleCode]
	FROM
	      [dbo].[tblUserExperience_SiteLabel] SiteLabel1
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=SiteLabel1.[LocaleCode]
	WHERE 
		(@Title IS NULL OR SiteLabel1.[Title] like '%' + @Title + '%')
		AND ((@LastModifiedDateStart  IS NULL) OR (SiteLabel1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (SiteLabel1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'SiteLabelCode' THEN SiteLabel1.[SiteLabelCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'SiteLabelCode' THEN SiteLabel1.[SiteLabelCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN SiteLabel1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN SiteLabel1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Title' THEN SiteLabel1.[Title] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Title' THEN SiteLabel1.[Title] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'DisplayText' THEN SiteLabel1.[DisplayText] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'DisplayText' THEN SiteLabel1.[DisplayText] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'TargetLocation' THEN SiteLabel1.[TargetLocation] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'TargetLocation' THEN SiteLabel1.[TargetLocation] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FileURL' THEN SiteLabel1.[FileURL] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FileURL' THEN SiteLabel1.[FileURL] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN SiteLabel1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN SiteLabel1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN SiteLabel1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN SiteLabel1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN SiteLabel1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN SiteLabel1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN SiteLabel1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN SiteLabel1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN SiteLabel1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN SiteLabel1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN SiteLabel1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN SiteLabel1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END

BEGIN
	SET @TotalRecords = (SELECT Count (*) FROM @OrderedRecords)
	IF @MaximumListSize > 0
	BEGIN
		IF @TotalRecords > @MaximumListSize
		BEGIN
			SET @MaximumListSizeExceeded = 1
			SET @TotalRecords = @MaximumListSize
		END
	END

	/* get search results */
	SELECT
		  SiteLabel1.[SiteLabelCode]
		, SiteLabel1.[LocaleCode]
		, SiteLabel1.[Title]
		, SiteLabel1.[DisplayText]
		, SiteLabel1.[TargetLocation]
		, SiteLabel1.[FileURL]
		, SiteLabel1.[Description]
		, SiteLabel1.[CreatedByUserID]
		, SiteLabel1.[CreatedDate]
		, SiteLabel1.[LastModifiedByUserID]
		, SiteLabel1.[LastModifiedDate]
		, SiteLabel1.[Timestamp]
		, Locale1.[LocaleName]
	FROM
	      [dbo].[tblUserExperience_SiteLabel] SiteLabel1
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=SiteLabel1.[LocaleCode]
	INNER JOIN @OrderedRecords search ON search.[SiteLabelCode] = SiteLabel1.[SiteLabelCode] AND search.[LocaleCode] = SiteLabel1.[LocaleCode]
	WHERE
		search.SearchOrderID  >= @StartIndex AND
		search.SearchOrderID  < @vEndIndex
	ORDER BY
		search.SearchOrderID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUserExperience_GetOneAdminHelp
	  @SqlErrorNumber int = 0 OUTPUT
	, @ActivityCode int
	, @LocaleCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single AdminHelp by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@ActivityCode IS NULL OR @LocaleCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  AdminHelp1.[ActivityCode]
		, AdminHelp1.[LocaleCode]
		, AdminHelp1.[AdminHelpTitle]
		, AdminHelp1.[AdminHelpText]
		, AdminHelp1.[CreatedByUserID]
		, AdminHelp1.[CreatedDate]
		, AdminHelp1.[LastModifiedByUserID]
		, AdminHelp1.[LastModifiedDate]
		, AdminHelp1.[Timestamp]
		, Activity1.[ActivityName]
		, Locale1.[LocaleName]
	FROM
	      [dbo].[tblUserExperience_AdminHelp] AdminHelp1
	INNER JOIN [dbo].[tlkpUsers_Activity] Activity1 ON Activity1.[ActivityCode]=AdminHelp1.[ActivityCode]
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=AdminHelp1.[LocaleCode]
	WHERE AdminHelp1.[ActivityCode] =  @ActivityCode AND AdminHelp1.[LocaleCode] =  @LocaleCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUserExperience_GetOneSiteHelp
	  @SqlErrorNumber int = 0 OUTPUT
	, @SiteHelpCode int
	, @LocaleCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single SiteHelp by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@SiteHelpCode IS NULL OR @LocaleCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  SiteHelp1.[SiteHelpCode]
		, SiteHelp1.[LocaleCode]
		, SiteHelp1.[SiteHelpName]
		, SiteHelp1.[SiteHelpText]
		, SiteHelp1.[SiteHelpImageURL]
		, SiteHelp1.[SiteHelpGroupCode]
		, SiteHelp1.[CreatedByUserID]
		, SiteHelp1.[CreatedDate]
		, SiteHelp1.[LastModifiedByUserID]
		, SiteHelp1.[LastModifiedDate]
		, SiteHelp1.[Timestamp]
		, Locale1.[LocaleName]
		, SiteHelpGroup1.[SiteHelpGroupName]
	FROM
	      [dbo].[tblUserExperience_SiteHelp] SiteHelp1
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=SiteHelp1.[LocaleCode]
	INNER JOIN [dbo].[tlkpUserExperience_SiteHelpGroup] SiteHelpGroup1 ON SiteHelpGroup1.[SiteHelpGroupCode]=SiteHelp1.[SiteHelpGroupCode]
	WHERE SiteHelp1.[SiteHelpCode] =  @SiteHelpCode AND SiteHelp1.[LocaleCode] =  @LocaleCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUserExperience_GetOneSiteHelpGroup
	  @SqlErrorNumber int = 0 OUTPUT
	, @SiteHelpGroupCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single SiteHelpGroup by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@SiteHelpGroupCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  SiteHelpGroup1.[SiteHelpGroupCode]
		, SiteHelpGroup1.[SiteHelpGroupName]
		, SiteHelpGroup1.[CreatedByUserID]
		, SiteHelpGroup1.[CreatedDate]
		, SiteHelpGroup1.[LastModifiedByUserID]
		, SiteHelpGroup1.[LastModifiedDate]
		, SiteHelpGroup1.[Timestamp]
	FROM
	      [dbo].[tlkpUserExperience_SiteHelpGroup] SiteHelpGroup1
	WHERE SiteHelpGroup1.[SiteHelpGroupCode] =  @SiteHelpGroupCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUserExperience_GetOneSiteLabel
	  @SqlErrorNumber int = 0 OUTPUT
	, @SiteLabelCode int
	, @LocaleCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single SiteLabel by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@SiteLabelCode IS NULL OR @LocaleCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  SiteLabel1.[SiteLabelCode]
		, SiteLabel1.[LocaleCode]
		, SiteLabel1.[Title]
		, SiteLabel1.[DisplayText]
		, SiteLabel1.[TargetLocation]
		, SiteLabel1.[FileURL]
		, SiteLabel1.[Description]
		, SiteLabel1.[CreatedByUserID]
		, SiteLabel1.[CreatedDate]
		, SiteLabel1.[LastModifiedByUserID]
		, SiteLabel1.[LastModifiedDate]
		, SiteLabel1.[Timestamp]
		, Locale1.[LocaleName]
	FROM
	      [dbo].[tblUserExperience_SiteLabel] SiteLabel1
	INNER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=SiteLabel1.[LocaleCode]
	WHERE SiteLabel1.[SiteLabelCode] =  @SiteLabelCode AND SiteLabel1.[LocaleCode] =  @LocaleCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUserExperience_UpdateOneAdminHelp
	  @SqlErrorNumber int = 0 OUTPUT
	, @LastModifiedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @ActivityCode int
	, @LocaleCode int
	, @AdminHelpTitle nvarchar(255)
	, @AdminHelpText nvarchar(2000) = NULL
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure updates AdminHelp data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@ActivityCode IS NULL OR @LocaleCode IS NULL OR @AdminHelpTitle IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [ActivityCode], [LocaleCode] FROM [dbo].[tblUserExperience_AdminHelp] WHERE [ActivityCode] =  @ActivityCode AND [LocaleCode] =  @LocaleCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [ActivityCode], [LocaleCode] FROM [dbo].[tblUserExperience_AdminHelp] WHERE [ActivityCode] =  @ActivityCode AND [LocaleCode] =  @LocaleCode AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	UPDATE
	      [dbo].[tblUserExperience_AdminHelp]
	SET
	     [LastModifiedByUserID] = @LastModifiedByUserID
	   , [LastModifiedDate] = getdate()
	   , [ActivityCode] = @ActivityCode
	   , [LocaleCode] = @LocaleCode
	   , [AdminHelpTitle] = @AdminHelpTitle
	   , [AdminHelpText] = @AdminHelpText
	WHERE [ActivityCode] =  @ActivityCode AND [LocaleCode] =  @LocaleCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

	SET  @Timestamp = @@DBTS

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUserExperience_UpdateOneSiteHelp
	  @SqlErrorNumber int = 0 OUTPUT
	, @LastModifiedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @SiteHelpCode int
	, @LocaleCode int
	, @SiteHelpName nvarchar(255)
	, @SiteHelpText nvarchar(2000) = NULL
	, @SiteHelpImageURL nvarchar(255) = NULL
	, @SiteHelpGroupCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure updates SiteHelp data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@SiteHelpCode IS NULL OR @LocaleCode IS NULL OR @SiteHelpName IS NULL OR @SiteHelpGroupCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [SiteHelpCode], [LocaleCode] FROM [dbo].[tblUserExperience_SiteHelp] WHERE [SiteHelpCode] =  @SiteHelpCode AND [LocaleCode] =  @LocaleCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [SiteHelpCode], [LocaleCode] FROM [dbo].[tblUserExperience_SiteHelp] WHERE [SiteHelpCode] =  @SiteHelpCode AND [LocaleCode] =  @LocaleCode AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	UPDATE
	      [dbo].[tblUserExperience_SiteHelp]
	SET
	     [LastModifiedByUserID] = @LastModifiedByUserID
	   , [LastModifiedDate] = getdate()
	   , [SiteHelpCode] = @SiteHelpCode
	   , [LocaleCode] = @LocaleCode
	   , [SiteHelpName] = @SiteHelpName
	   , [SiteHelpText] = @SiteHelpText
	   , [SiteHelpImageURL] = @SiteHelpImageURL
	   , [SiteHelpGroupCode] = @SiteHelpGroupCode
	WHERE [SiteHelpCode] =  @SiteHelpCode AND [LocaleCode] =  @LocaleCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

	SET  @Timestamp = @@DBTS

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUserExperience_UpdateOneSiteHelpGroup
	  @SqlErrorNumber int = 0 OUTPUT
	, @LastModifiedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @SiteHelpGroupCode int
	, @SiteHelpGroupName nvarchar(255) = NULL
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure updates SiteHelpGroup data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@SiteHelpGroupCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [SiteHelpGroupCode] FROM [dbo].[tlkpUserExperience_SiteHelpGroup] WHERE [SiteHelpGroupCode] =  @SiteHelpGroupCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [SiteHelpGroupCode] FROM [dbo].[tlkpUserExperience_SiteHelpGroup] WHERE [SiteHelpGroupCode] =  @SiteHelpGroupCode AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	UPDATE
	      [dbo].[tlkpUserExperience_SiteHelpGroup]
	SET
	     [LastModifiedByUserID] = @LastModifiedByUserID
	   , [LastModifiedDate] = getdate()
	   , [SiteHelpGroupCode] = @SiteHelpGroupCode
	   , [SiteHelpGroupName] = @SiteHelpGroupName
	WHERE [SiteHelpGroupCode] =  @SiteHelpGroupCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

	SET  @Timestamp = @@DBTS

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUserExperience_UpdateOneSiteLabel
	  @SqlErrorNumber int = 0 OUTPUT
	, @LastModifiedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @SiteLabelCode int
	, @LocaleCode int
	, @Title nvarchar(255)
	, @DisplayText nvarchar(2000) = NULL
	, @TargetLocation nvarchar(255) = NULL
	, @FileURL nvarchar(255)
	, @Description nvarchar(1000) = NULL
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure updates SiteLabel data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@SiteLabelCode IS NULL OR @LocaleCode IS NULL OR @Title IS NULL OR @FileURL IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [SiteLabelCode], [LocaleCode] FROM [dbo].[tblUserExperience_SiteLabel] WHERE [SiteLabelCode] =  @SiteLabelCode AND [LocaleCode] =  @LocaleCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [SiteLabelCode], [LocaleCode] FROM [dbo].[tblUserExperience_SiteLabel] WHERE [SiteLabelCode] =  @SiteLabelCode AND [LocaleCode] =  @LocaleCode AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	UPDATE
	      [dbo].[tblUserExperience_SiteLabel]
	SET
	     [LastModifiedByUserID] = @LastModifiedByUserID
	   , [LastModifiedDate] = getdate()
	   , [SiteLabelCode] = @SiteLabelCode
	   , [LocaleCode] = @LocaleCode
	   , [Title] = @Title
	   , [DisplayText] = @DisplayText
	   , [TargetLocation] = @TargetLocation
	   , [FileURL] = @FileURL
	   , [Description] = @Description
	WHERE [SiteLabelCode] =  @SiteLabelCode AND [LocaleCode] =  @LocaleCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

	SET  @Timestamp = @@DBTS

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUsers_AddOneAccessMode
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @AccessModeCode int
	, @AccessModeName nvarchar(255)
	, @Description nvarchar(2000) = NULL
	, @IsActive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure inserts AccessMode data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccessModeCode IS NULL OR @AccessModeName IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF EXISTS (SELECT [AccessModeCode] FROM [dbo].[tlkpUsers_AccessMode] WHERE [AccessModeCode] =  @AccessModeCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	INSERT
	      [dbo].[tlkpUsers_AccessMode]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [AccessModeCode]
	   , [AccessModeName]
	   , [Description]
	   , [IsActive]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @AccessModeCode
	   , @AccessModeName
	   , @Description
	   , @IsActive
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUsers_AddOneActivity
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @ActivityCode int
	, @ActivityName nvarchar(255)
	, @Description nvarchar(2000) = NULL
	, @IsActive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure inserts Activity data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@ActivityCode IS NULL OR @ActivityName IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF EXISTS (SELECT [ActivityCode] FROM [dbo].[tlkpUsers_Activity] WHERE [ActivityCode] =  @ActivityCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	INSERT
	      [dbo].[tlkpUsers_Activity]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [ActivityCode]
	   , [ActivityName]
	   , [Description]
	   , [IsActive]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @ActivityCode
	   , @ActivityName
	   , @Description
	   , @IsActive
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUsers_AddOneUserRole
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @UserRoleCode int
	, @UserRoleName nvarchar(255)
	, @Description nvarchar(2000) = NULL
	, @IsActive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure inserts UserRole data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@UserRoleCode IS NULL OR @UserRoleName IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF EXISTS (SELECT [UserRoleCode] FROM [dbo].[tlkpUsers_UserRole] WHERE [UserRoleCode] =  @UserRoleCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	INSERT
	      [dbo].[tlkpUsers_UserRole]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [UserRoleCode]
	   , [UserRoleName]
	   , [Description]
	   , [IsActive]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @UserRoleCode
	   , @UserRoleName
	   , @Description
	   , @IsActive
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUsers_AddOneUserRoleActivity
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @UserRoleCode int
	, @ActivityCode int
	, @AccessModeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure inserts UserRoleActivity data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@UserRoleCode IS NULL OR @ActivityCode IS NULL OR @AccessModeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF EXISTS (SELECT [UserRoleCode], [ActivityCode], [AccessModeCode] FROM [dbo].[trelUsers_UserRoleActivity] WHERE [UserRoleCode] =  @UserRoleCode AND [ActivityCode] =  @ActivityCode AND [AccessModeCode] =  @AccessModeCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	INSERT
	      [dbo].[trelUsers_UserRoleActivity]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [UserRoleCode]
	   , [ActivityCode]
	   , [AccessModeCode]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @UserRoleCode
	   , @ActivityCode
	   , @AccessModeCode
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUsers_AddOneUserRoleUser
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @UserRoleCode int
	, @UserID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure inserts UserRoleUser data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@UserRoleCode IS NULL OR @UserID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF EXISTS (SELECT [UserRoleCode], [UserID] FROM [dbo].[trelUsers_UserRoleUser] WHERE [UserRoleCode] =  @UserRoleCode AND [UserID] =  @UserID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	INSERT
	      [dbo].[trelUsers_UserRoleUser]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [UserRoleCode]
	   , [UserID]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @UserRoleCode
	   , @UserID
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUsers_DeleteAllUserDataByLocaleCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @LocaleCode int = NULL
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all User data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@LocaleCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblUsers_User]
	WHERE [LocaleCode] =  @LocaleCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUsers_DeleteAllUserRoleActivityDataByAccessModeCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @AccessModeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all UserRoleActivity data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccessModeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[trelUsers_UserRoleActivity]
	WHERE [AccessModeCode] =  @AccessModeCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUsers_DeleteAllUserRoleActivityDataByActivityCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @ActivityCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all UserRoleActivity data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@ActivityCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[trelUsers_UserRoleActivity]
	WHERE [ActivityCode] =  @ActivityCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUsers_DeleteAllUserRoleActivityDataByUserRoleCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @UserRoleCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all UserRoleActivity data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@UserRoleCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[trelUsers_UserRoleActivity]
	WHERE [UserRoleCode] =  @UserRoleCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUsers_DeleteAllUserRoleUserDataByUserID
	  @SqlErrorNumber int = 0 OUTPUT
	, @UserID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all UserRoleUser data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@UserID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[trelUsers_UserRoleUser]
	WHERE [UserID] =  @UserID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUsers_DeleteAllUserRoleUserDataByUserRoleCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @UserRoleCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes all UserRoleUser data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@UserRoleCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[trelUsers_UserRoleUser]
	WHERE [UserRoleCode] =  @UserRoleCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUsers_DeleteOneAccessMode
	  @SqlErrorNumber int = 0 OUTPUT
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @AccessModeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes AccessMode data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccessModeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [AccessModeCode] FROM [dbo].[tlkpUsers_AccessMode] WHERE [AccessModeCode] =  @AccessModeCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [AccessModeCode] FROM [dbo].[tlkpUsers_AccessMode] WHERE [AccessModeCode] =  @AccessModeCode AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tlkpUsers_AccessMode]
	WHERE [AccessModeCode] =  @AccessModeCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUsers_DeleteOneActivity
	  @SqlErrorNumber int = 0 OUTPUT
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @ActivityCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes Activity data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@ActivityCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [ActivityCode] FROM [dbo].[tlkpUsers_Activity] WHERE [ActivityCode] =  @ActivityCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [ActivityCode] FROM [dbo].[tlkpUsers_Activity] WHERE [ActivityCode] =  @ActivityCode AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tlkpUsers_Activity]
	WHERE [ActivityCode] =  @ActivityCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUsers_DeleteOneUser
	  @SqlErrorNumber int = 0 OUTPUT
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @UserID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes User data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@UserID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [UserID] FROM [dbo].[tblUsers_User] WHERE [UserID] =  @UserID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [UserID] FROM [dbo].[tblUsers_User] WHERE [UserID] =  @UserID AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tblUsers_User]
	WHERE [UserID] =  @UserID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUsers_DeleteOneUserRole
	  @SqlErrorNumber int = 0 OUTPUT
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @UserRoleCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes UserRole data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@UserRoleCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [UserRoleCode] FROM [dbo].[tlkpUsers_UserRole] WHERE [UserRoleCode] =  @UserRoleCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [UserRoleCode] FROM [dbo].[tlkpUsers_UserRole] WHERE [UserRoleCode] =  @UserRoleCode AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[tlkpUsers_UserRole]
	WHERE [UserRoleCode] =  @UserRoleCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUsers_DeleteOneUserRoleActivity
	  @SqlErrorNumber int = 0 OUTPUT
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @UserRoleCode int
	, @ActivityCode int
	, @AccessModeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes UserRoleActivity data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@UserRoleCode IS NULL OR @ActivityCode IS NULL OR @AccessModeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [UserRoleCode], [ActivityCode], [AccessModeCode] FROM [dbo].[trelUsers_UserRoleActivity] WHERE [UserRoleCode] =  @UserRoleCode AND [ActivityCode] =  @ActivityCode AND [AccessModeCode] =  @AccessModeCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [UserRoleCode], [ActivityCode], [AccessModeCode] FROM [dbo].[trelUsers_UserRoleActivity] WHERE [UserRoleCode] =  @UserRoleCode AND [ActivityCode] =  @ActivityCode AND [AccessModeCode] =  @AccessModeCode AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[trelUsers_UserRoleActivity]
	WHERE [UserRoleCode] =  @UserRoleCode AND [ActivityCode] =  @ActivityCode AND [AccessModeCode] =  @AccessModeCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUsers_DeleteOneUserRoleUser
	  @SqlErrorNumber int = 0 OUTPUT
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @UserRoleCode int
	, @UserID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure deletes UserRoleUser data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@UserRoleCode IS NULL OR @UserID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [UserRoleCode], [UserID] FROM [dbo].[trelUsers_UserRoleUser] WHERE [UserRoleCode] =  @UserRoleCode AND [UserID] =  @UserID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [UserRoleCode], [UserID] FROM [dbo].[trelUsers_UserRoleUser] WHERE [UserRoleCode] =  @UserRoleCode AND [UserID] =  @UserID AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	DELETE FROM
	      [dbo].[trelUsers_UserRoleUser]
	WHERE [UserRoleCode] =  @UserRoleCode AND [UserID] =  @UserID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUsers_GetAllAccessModeData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'AccessModeCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all AccessMode data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='AccessModeCode'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  AccessMode1.[AccessModeCode]
		, AccessMode1.[AccessModeName]
		, AccessMode1.[Description]
		, AccessMode1.[IsActive]
		, AccessMode1.[CreatedByUserID]
		, AccessMode1.[CreatedDate]
		, AccessMode1.[LastModifiedByUserID]
		, AccessMode1.[LastModifiedDate]
		, AccessMode1.[Timestamp]
	FROM
	      [dbo].[tlkpUsers_AccessMode] AccessMode1
	WHERE 
		AccessMode1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN AccessMode1.[IsActive] ELSE 1 END

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  AccessMode1.[AccessModeCode]
		, AccessMode1.[AccessModeName]
		, AccessMode1.[Description]
		, AccessMode1.[IsActive]
		, AccessMode1.[CreatedByUserID]
		, AccessMode1.[CreatedDate]
		, AccessMode1.[LastModifiedByUserID]
		, AccessMode1.[LastModifiedDate]
		, AccessMode1.[Timestamp]
	FROM
	      [dbo].[tlkpUsers_AccessMode] AccessMode1
	WHERE 
		AccessMode1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN AccessMode1.[IsActive] ELSE 1 END

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccessModeCode' THEN AccessMode1.[AccessModeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccessModeCode' THEN AccessMode1.[AccessModeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccessModeName' THEN AccessMode1.[AccessModeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccessModeName' THEN AccessMode1.[AccessModeName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN AccessMode1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN AccessMode1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN AccessMode1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN AccessMode1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN AccessMode1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN AccessMode1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN AccessMode1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN AccessMode1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN AccessMode1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN AccessMode1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN AccessMode1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN AccessMode1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN AccessMode1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN AccessMode1.[Timestamp] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUsers_GetAllActivityData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'ActivityCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all Activity data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='ActivityCode'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  Activity1.[ActivityCode]
		, Activity1.[ActivityName]
		, Activity1.[Description]
		, Activity1.[IsActive]
		, Activity1.[CreatedByUserID]
		, Activity1.[CreatedDate]
		, Activity1.[LastModifiedByUserID]
		, Activity1.[LastModifiedDate]
		, Activity1.[Timestamp]
	FROM
	      [dbo].[tlkpUsers_Activity] Activity1
	WHERE 
		Activity1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Activity1.[IsActive] ELSE 1 END

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  Activity1.[ActivityCode]
		, Activity1.[ActivityName]
		, Activity1.[Description]
		, Activity1.[IsActive]
		, Activity1.[CreatedByUserID]
		, Activity1.[CreatedDate]
		, Activity1.[LastModifiedByUserID]
		, Activity1.[LastModifiedDate]
		, Activity1.[Timestamp]
	FROM
	      [dbo].[tlkpUsers_Activity] Activity1
	WHERE 
		Activity1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN Activity1.[IsActive] ELSE 1 END

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ActivityCode' THEN Activity1.[ActivityCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ActivityCode' THEN Activity1.[ActivityCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ActivityName' THEN Activity1.[ActivityName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ActivityName' THEN Activity1.[ActivityName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN Activity1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN Activity1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN Activity1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN Activity1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN Activity1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN Activity1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN Activity1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN Activity1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN Activity1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN Activity1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN Activity1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN Activity1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN Activity1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN Activity1.[Timestamp] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUsers_GetAllUserData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'UserID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all User data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='UserID'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  User1.[UserID]
		, User1.[UserName]
		, User1.[FirstName]
		, User1.[LastName]
		, User1.[Password]
		, User1.[LocaleCode]
		, User1.[IsActive]
		, User1.[CreatedByUserID]
		, User1.[CreatedDate]
		, User1.[LastModifiedByUserID]
		, User1.[LastModifiedDate]
		, User1.[Timestamp]
		, Locale1.[LocaleName]
	FROM
	      [dbo].[tblUsers_User] User1
	LEFT OUTER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=User1.[LocaleCode]
	WHERE 
		User1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN User1.[IsActive] ELSE 1 END

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  User1.[UserID]
		, User1.[UserName]
		, User1.[FirstName]
		, User1.[LastName]
		, User1.[Password]
		, User1.[LocaleCode]
		, User1.[IsActive]
		, User1.[CreatedByUserID]
		, User1.[CreatedDate]
		, User1.[LastModifiedByUserID]
		, User1.[LastModifiedDate]
		, User1.[Timestamp]
		, Locale1.[LocaleName]
	FROM
	      [dbo].[tblUsers_User] User1
	LEFT OUTER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=User1.[LocaleCode]
	WHERE 
		User1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN User1.[IsActive] ELSE 1 END

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'UserID' THEN User1.[UserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'UserID' THEN User1.[UserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'UserName' THEN User1.[UserName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'UserName' THEN User1.[UserName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FirstName' THEN User1.[FirstName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FirstName' THEN User1.[FirstName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastName' THEN User1.[LastName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastName' THEN User1.[LastName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Password' THEN User1.[Password] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Password' THEN User1.[Password] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN User1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN User1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN User1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN User1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN User1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN User1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN User1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN User1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN User1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN User1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN User1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN User1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN User1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN User1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUsers_GetAllUserDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'UserName'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @UserName nvarchar(50) = NULL
	, @FirstName nvarchar(100) = NULL
	, @LastName nvarchar(100) = NULL
	, @LocaleCode int = NULL
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all User data by criteria.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='UserName'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  User1.[UserID]
		, User1.[UserName]
		, User1.[FirstName]
		, User1.[LastName]
		, User1.[Password]
		, User1.[LocaleCode]
		, User1.[IsActive]
		, User1.[CreatedByUserID]
		, User1.[CreatedDate]
		, User1.[LastModifiedByUserID]
		, User1.[LastModifiedDate]
		, User1.[Timestamp]
		, Locale1.[LocaleName]
	FROM
	      [dbo].[tblUsers_User] User1
	LEFT OUTER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=User1.[LocaleCode]
	WHERE 
		User1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN User1.[IsActive] ELSE 1 END
		AND (@UserName IS NULL OR User1.[UserName] like '%' + @UserName + '%')
		AND (@FirstName IS NULL OR User1.[FirstName] like '%' + @FirstName + '%')
		AND (@LastName IS NULL OR User1.[LastName] like '%' + @LastName + '%')
		AND (@LocaleCode IS NULL OR User1.[LocaleCode] = @LocaleCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (User1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (User1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  User1.[UserID]
		, User1.[UserName]
		, User1.[FirstName]
		, User1.[LastName]
		, User1.[Password]
		, User1.[LocaleCode]
		, User1.[IsActive]
		, User1.[CreatedByUserID]
		, User1.[CreatedDate]
		, User1.[LastModifiedByUserID]
		, User1.[LastModifiedDate]
		, User1.[Timestamp]
		, Locale1.[LocaleName]
	FROM
	      [dbo].[tblUsers_User] User1
	LEFT OUTER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=User1.[LocaleCode]
	WHERE 
		User1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN User1.[IsActive] ELSE 1 END
		AND (@UserName IS NULL OR User1.[UserName] like '%' + @UserName + '%')
		AND (@FirstName IS NULL OR User1.[FirstName] like '%' + @FirstName + '%')
		AND (@LastName IS NULL OR User1.[LastName] like '%' + @LastName + '%')
		AND (@LocaleCode IS NULL OR User1.[LocaleCode] = @LocaleCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (User1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (User1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'UserID' THEN User1.[UserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'UserID' THEN User1.[UserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'UserName' THEN User1.[UserName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'UserName' THEN User1.[UserName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FirstName' THEN User1.[FirstName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FirstName' THEN User1.[FirstName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastName' THEN User1.[LastName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastName' THEN User1.[LastName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Password' THEN User1.[Password] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Password' THEN User1.[Password] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN User1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN User1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN User1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN User1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN User1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN User1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN User1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN User1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN User1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN User1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN User1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN User1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN User1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN User1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUsers_GetAllUserDataByLocaleCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'LocaleCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @LocaleCode int = NULL
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all User data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='LocaleCode'

/*
** parameter validation
*/
IF (@LocaleCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  User1.[UserID]
		, User1.[UserName]
		, User1.[FirstName]
		, User1.[LastName]
		, User1.[Password]
		, User1.[LocaleCode]
		, User1.[IsActive]
		, User1.[CreatedByUserID]
		, User1.[CreatedDate]
		, User1.[LastModifiedByUserID]
		, User1.[LastModifiedDate]
		, User1.[Timestamp]
		, Locale1.[LocaleName]
	FROM
	      [dbo].[tblUsers_User] User1
	LEFT OUTER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=User1.[LocaleCode]
	WHERE 
		User1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN User1.[IsActive] ELSE 1 END
		AND User1.[LocaleCode] = @LocaleCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  User1.[UserID]
		, User1.[UserName]
		, User1.[FirstName]
		, User1.[LastName]
		, User1.[Password]
		, User1.[LocaleCode]
		, User1.[IsActive]
		, User1.[CreatedByUserID]
		, User1.[CreatedDate]
		, User1.[LastModifiedByUserID]
		, User1.[LastModifiedDate]
		, User1.[Timestamp]
		, Locale1.[LocaleName]
	FROM
	      [dbo].[tblUsers_User] User1
	LEFT OUTER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=User1.[LocaleCode]
	WHERE 
		User1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN User1.[IsActive] ELSE 1 END
		AND User1.[LocaleCode] = @LocaleCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'UserID' THEN User1.[UserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'UserID' THEN User1.[UserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'UserName' THEN User1.[UserName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'UserName' THEN User1.[UserName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FirstName' THEN User1.[FirstName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FirstName' THEN User1.[FirstName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastName' THEN User1.[LastName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastName' THEN User1.[LastName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Password' THEN User1.[Password] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Password' THEN User1.[Password] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN User1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN User1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN User1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN User1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN User1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN User1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN User1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN User1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN User1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN User1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN User1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN User1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN User1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN User1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUsers_GetAllUserRoleActivityData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'UserRoleCode'
	, @SortDirection nvarchar(20) = 'Ascending'
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all UserRoleActivity data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='UserRoleCode'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  UserRoleActivity1.[UserRoleCode]
		, UserRoleActivity1.[ActivityCode]
		, UserRoleActivity1.[AccessModeCode]
		, UserRoleActivity1.[CreatedByUserID]
		, UserRoleActivity1.[CreatedDate]
		, UserRoleActivity1.[LastModifiedByUserID]
		, UserRoleActivity1.[LastModifiedDate]
		, UserRoleActivity1.[Timestamp]
		, UserRole1.[UserRoleName]
		, Activity1.[ActivityName]
		, AccessMode1.[AccessModeName]
	FROM
	      [dbo].[trelUsers_UserRoleActivity] UserRoleActivity1
	INNER JOIN [dbo].[tlkpUsers_UserRole] UserRole1 ON UserRole1.[UserRoleCode]=UserRoleActivity1.[UserRoleCode]
	INNER JOIN [dbo].[tlkpUsers_Activity] Activity1 ON Activity1.[ActivityCode]=UserRoleActivity1.[ActivityCode]
	INNER JOIN [dbo].[tlkpUsers_AccessMode] AccessMode1 ON AccessMode1.[AccessModeCode]=UserRoleActivity1.[AccessModeCode]

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  UserRoleActivity1.[UserRoleCode]
		, UserRoleActivity1.[ActivityCode]
		, UserRoleActivity1.[AccessModeCode]
		, UserRoleActivity1.[CreatedByUserID]
		, UserRoleActivity1.[CreatedDate]
		, UserRoleActivity1.[LastModifiedByUserID]
		, UserRoleActivity1.[LastModifiedDate]
		, UserRoleActivity1.[Timestamp]
		, UserRole1.[UserRoleName]
		, Activity1.[ActivityName]
		, AccessMode1.[AccessModeName]
	FROM
	      [dbo].[trelUsers_UserRoleActivity] UserRoleActivity1
	INNER JOIN [dbo].[tlkpUsers_UserRole] UserRole1 ON UserRole1.[UserRoleCode]=UserRoleActivity1.[UserRoleCode]
	INNER JOIN [dbo].[tlkpUsers_Activity] Activity1 ON Activity1.[ActivityCode]=UserRoleActivity1.[ActivityCode]
	INNER JOIN [dbo].[tlkpUsers_AccessMode] AccessMode1 ON AccessMode1.[AccessModeCode]=UserRoleActivity1.[AccessModeCode]

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'UserRoleCode' THEN UserRoleActivity1.[UserRoleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'UserRoleCode' THEN UserRoleActivity1.[UserRoleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ActivityCode' THEN UserRoleActivity1.[ActivityCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ActivityCode' THEN UserRoleActivity1.[ActivityCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccessModeCode' THEN UserRoleActivity1.[AccessModeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccessModeCode' THEN UserRoleActivity1.[AccessModeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN UserRoleActivity1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN UserRoleActivity1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN UserRoleActivity1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN UserRoleActivity1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN UserRoleActivity1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN UserRoleActivity1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN UserRoleActivity1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN UserRoleActivity1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN UserRoleActivity1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN UserRoleActivity1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'UserRoleName' THEN UserRole1.[UserRoleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'UserRoleName' THEN UserRole1.[UserRoleName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ActivityName' THEN Activity1.[ActivityName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ActivityName' THEN Activity1.[ActivityName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccessModeName' THEN AccessMode1.[AccessModeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccessModeName' THEN AccessMode1.[AccessModeName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUsers_GetAllUserRoleActivityDataByAccessModeCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'AccessModeCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @AccessModeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all UserRoleActivity data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='AccessModeCode'

/*
** parameter validation
*/
IF (@AccessModeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  UserRoleActivity1.[UserRoleCode]
		, UserRoleActivity1.[ActivityCode]
		, UserRoleActivity1.[AccessModeCode]
		, UserRoleActivity1.[CreatedByUserID]
		, UserRoleActivity1.[CreatedDate]
		, UserRoleActivity1.[LastModifiedByUserID]
		, UserRoleActivity1.[LastModifiedDate]
		, UserRoleActivity1.[Timestamp]
		, UserRole1.[UserRoleName]
		, Activity1.[ActivityName]
		, AccessMode1.[AccessModeName]
	FROM
	      [dbo].[trelUsers_UserRoleActivity] UserRoleActivity1
	INNER JOIN [dbo].[tlkpUsers_UserRole] UserRole1 ON UserRole1.[UserRoleCode]=UserRoleActivity1.[UserRoleCode]
	INNER JOIN [dbo].[tlkpUsers_Activity] Activity1 ON Activity1.[ActivityCode]=UserRoleActivity1.[ActivityCode]
	INNER JOIN [dbo].[tlkpUsers_AccessMode] AccessMode1 ON AccessMode1.[AccessModeCode]=UserRoleActivity1.[AccessModeCode]
	WHERE 
		UserRoleActivity1.[AccessModeCode] = @AccessModeCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  UserRoleActivity1.[UserRoleCode]
		, UserRoleActivity1.[ActivityCode]
		, UserRoleActivity1.[AccessModeCode]
		, UserRoleActivity1.[CreatedByUserID]
		, UserRoleActivity1.[CreatedDate]
		, UserRoleActivity1.[LastModifiedByUserID]
		, UserRoleActivity1.[LastModifiedDate]
		, UserRoleActivity1.[Timestamp]
		, UserRole1.[UserRoleName]
		, Activity1.[ActivityName]
		, AccessMode1.[AccessModeName]
	FROM
	      [dbo].[trelUsers_UserRoleActivity] UserRoleActivity1
	INNER JOIN [dbo].[tlkpUsers_UserRole] UserRole1 ON UserRole1.[UserRoleCode]=UserRoleActivity1.[UserRoleCode]
	INNER JOIN [dbo].[tlkpUsers_Activity] Activity1 ON Activity1.[ActivityCode]=UserRoleActivity1.[ActivityCode]
	INNER JOIN [dbo].[tlkpUsers_AccessMode] AccessMode1 ON AccessMode1.[AccessModeCode]=UserRoleActivity1.[AccessModeCode]
	WHERE 
		UserRoleActivity1.[AccessModeCode] = @AccessModeCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'UserRoleCode' THEN UserRoleActivity1.[UserRoleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'UserRoleCode' THEN UserRoleActivity1.[UserRoleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ActivityCode' THEN UserRoleActivity1.[ActivityCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ActivityCode' THEN UserRoleActivity1.[ActivityCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccessModeCode' THEN UserRoleActivity1.[AccessModeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccessModeCode' THEN UserRoleActivity1.[AccessModeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN UserRoleActivity1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN UserRoleActivity1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN UserRoleActivity1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN UserRoleActivity1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN UserRoleActivity1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN UserRoleActivity1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN UserRoleActivity1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN UserRoleActivity1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN UserRoleActivity1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN UserRoleActivity1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'UserRoleName' THEN UserRole1.[UserRoleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'UserRoleName' THEN UserRole1.[UserRoleName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ActivityName' THEN Activity1.[ActivityName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ActivityName' THEN Activity1.[ActivityName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccessModeName' THEN AccessMode1.[AccessModeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccessModeName' THEN AccessMode1.[AccessModeName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUsers_GetAllUserRoleActivityDataByActivityCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'ActivityCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @ActivityCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all UserRoleActivity data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='ActivityCode'

/*
** parameter validation
*/
IF (@ActivityCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  UserRoleActivity1.[UserRoleCode]
		, UserRoleActivity1.[ActivityCode]
		, UserRoleActivity1.[AccessModeCode]
		, UserRoleActivity1.[CreatedByUserID]
		, UserRoleActivity1.[CreatedDate]
		, UserRoleActivity1.[LastModifiedByUserID]
		, UserRoleActivity1.[LastModifiedDate]
		, UserRoleActivity1.[Timestamp]
		, UserRole1.[UserRoleName]
		, Activity1.[ActivityName]
		, AccessMode1.[AccessModeName]
	FROM
	      [dbo].[trelUsers_UserRoleActivity] UserRoleActivity1
	INNER JOIN [dbo].[tlkpUsers_UserRole] UserRole1 ON UserRole1.[UserRoleCode]=UserRoleActivity1.[UserRoleCode]
	INNER JOIN [dbo].[tlkpUsers_Activity] Activity1 ON Activity1.[ActivityCode]=UserRoleActivity1.[ActivityCode]
	INNER JOIN [dbo].[tlkpUsers_AccessMode] AccessMode1 ON AccessMode1.[AccessModeCode]=UserRoleActivity1.[AccessModeCode]
	WHERE 
		UserRoleActivity1.[ActivityCode] = @ActivityCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  UserRoleActivity1.[UserRoleCode]
		, UserRoleActivity1.[ActivityCode]
		, UserRoleActivity1.[AccessModeCode]
		, UserRoleActivity1.[CreatedByUserID]
		, UserRoleActivity1.[CreatedDate]
		, UserRoleActivity1.[LastModifiedByUserID]
		, UserRoleActivity1.[LastModifiedDate]
		, UserRoleActivity1.[Timestamp]
		, UserRole1.[UserRoleName]
		, Activity1.[ActivityName]
		, AccessMode1.[AccessModeName]
	FROM
	      [dbo].[trelUsers_UserRoleActivity] UserRoleActivity1
	INNER JOIN [dbo].[tlkpUsers_UserRole] UserRole1 ON UserRole1.[UserRoleCode]=UserRoleActivity1.[UserRoleCode]
	INNER JOIN [dbo].[tlkpUsers_Activity] Activity1 ON Activity1.[ActivityCode]=UserRoleActivity1.[ActivityCode]
	INNER JOIN [dbo].[tlkpUsers_AccessMode] AccessMode1 ON AccessMode1.[AccessModeCode]=UserRoleActivity1.[AccessModeCode]
	WHERE 
		UserRoleActivity1.[ActivityCode] = @ActivityCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'UserRoleCode' THEN UserRoleActivity1.[UserRoleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'UserRoleCode' THEN UserRoleActivity1.[UserRoleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ActivityCode' THEN UserRoleActivity1.[ActivityCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ActivityCode' THEN UserRoleActivity1.[ActivityCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccessModeCode' THEN UserRoleActivity1.[AccessModeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccessModeCode' THEN UserRoleActivity1.[AccessModeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN UserRoleActivity1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN UserRoleActivity1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN UserRoleActivity1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN UserRoleActivity1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN UserRoleActivity1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN UserRoleActivity1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN UserRoleActivity1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN UserRoleActivity1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN UserRoleActivity1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN UserRoleActivity1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'UserRoleName' THEN UserRole1.[UserRoleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'UserRoleName' THEN UserRole1.[UserRoleName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ActivityName' THEN Activity1.[ActivityName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ActivityName' THEN Activity1.[ActivityName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccessModeName' THEN AccessMode1.[AccessModeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccessModeName' THEN AccessMode1.[AccessModeName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUsers_GetAllUserRoleActivityDataByUserRoleCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'UserRoleCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @UserRoleCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all UserRoleActivity data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='UserRoleCode'

/*
** parameter validation
*/
IF (@UserRoleCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  UserRoleActivity1.[UserRoleCode]
		, UserRoleActivity1.[ActivityCode]
		, UserRoleActivity1.[AccessModeCode]
		, UserRoleActivity1.[CreatedByUserID]
		, UserRoleActivity1.[CreatedDate]
		, UserRoleActivity1.[LastModifiedByUserID]
		, UserRoleActivity1.[LastModifiedDate]
		, UserRoleActivity1.[Timestamp]
		, UserRole1.[UserRoleName]
		, Activity1.[ActivityName]
		, AccessMode1.[AccessModeName]
	FROM
	      [dbo].[trelUsers_UserRoleActivity] UserRoleActivity1
	INNER JOIN [dbo].[tlkpUsers_UserRole] UserRole1 ON UserRole1.[UserRoleCode]=UserRoleActivity1.[UserRoleCode]
	INNER JOIN [dbo].[tlkpUsers_Activity] Activity1 ON Activity1.[ActivityCode]=UserRoleActivity1.[ActivityCode]
	INNER JOIN [dbo].[tlkpUsers_AccessMode] AccessMode1 ON AccessMode1.[AccessModeCode]=UserRoleActivity1.[AccessModeCode]
	WHERE 
		UserRoleActivity1.[UserRoleCode] = @UserRoleCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  UserRoleActivity1.[UserRoleCode]
		, UserRoleActivity1.[ActivityCode]
		, UserRoleActivity1.[AccessModeCode]
		, UserRoleActivity1.[CreatedByUserID]
		, UserRoleActivity1.[CreatedDate]
		, UserRoleActivity1.[LastModifiedByUserID]
		, UserRoleActivity1.[LastModifiedDate]
		, UserRoleActivity1.[Timestamp]
		, UserRole1.[UserRoleName]
		, Activity1.[ActivityName]
		, AccessMode1.[AccessModeName]
	FROM
	      [dbo].[trelUsers_UserRoleActivity] UserRoleActivity1
	INNER JOIN [dbo].[tlkpUsers_UserRole] UserRole1 ON UserRole1.[UserRoleCode]=UserRoleActivity1.[UserRoleCode]
	INNER JOIN [dbo].[tlkpUsers_Activity] Activity1 ON Activity1.[ActivityCode]=UserRoleActivity1.[ActivityCode]
	INNER JOIN [dbo].[tlkpUsers_AccessMode] AccessMode1 ON AccessMode1.[AccessModeCode]=UserRoleActivity1.[AccessModeCode]
	WHERE 
		UserRoleActivity1.[UserRoleCode] = @UserRoleCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'UserRoleCode' THEN UserRoleActivity1.[UserRoleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'UserRoleCode' THEN UserRoleActivity1.[UserRoleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ActivityCode' THEN UserRoleActivity1.[ActivityCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ActivityCode' THEN UserRoleActivity1.[ActivityCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccessModeCode' THEN UserRoleActivity1.[AccessModeCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccessModeCode' THEN UserRoleActivity1.[AccessModeCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN UserRoleActivity1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN UserRoleActivity1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN UserRoleActivity1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN UserRoleActivity1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN UserRoleActivity1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN UserRoleActivity1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN UserRoleActivity1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN UserRoleActivity1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN UserRoleActivity1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN UserRoleActivity1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'UserRoleName' THEN UserRole1.[UserRoleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'UserRoleName' THEN UserRole1.[UserRoleName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'ActivityName' THEN Activity1.[ActivityName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'ActivityName' THEN Activity1.[ActivityName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'AccessModeName' THEN AccessMode1.[AccessModeName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'AccessModeName' THEN AccessMode1.[AccessModeName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUsers_GetAllUserRoleData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'UserRoleCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all UserRole data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='UserRoleCode'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  UserRole1.[UserRoleCode]
		, UserRole1.[UserRoleName]
		, UserRole1.[Description]
		, UserRole1.[IsActive]
		, UserRole1.[CreatedByUserID]
		, UserRole1.[CreatedDate]
		, UserRole1.[LastModifiedByUserID]
		, UserRole1.[LastModifiedDate]
		, UserRole1.[Timestamp]
	FROM
	      [dbo].[tlkpUsers_UserRole] UserRole1
	WHERE 
		UserRole1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN UserRole1.[IsActive] ELSE 1 END

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  UserRole1.[UserRoleCode]
		, UserRole1.[UserRoleName]
		, UserRole1.[Description]
		, UserRole1.[IsActive]
		, UserRole1.[CreatedByUserID]
		, UserRole1.[CreatedDate]
		, UserRole1.[LastModifiedByUserID]
		, UserRole1.[LastModifiedDate]
		, UserRole1.[Timestamp]
	FROM
	      [dbo].[tlkpUsers_UserRole] UserRole1
	WHERE 
		UserRole1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN UserRole1.[IsActive] ELSE 1 END

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'UserRoleCode' THEN UserRole1.[UserRoleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'UserRoleCode' THEN UserRole1.[UserRoleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'UserRoleName' THEN UserRole1.[UserRoleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'UserRoleName' THEN UserRole1.[UserRoleName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Description' THEN UserRole1.[Description] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Description' THEN UserRole1.[Description] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN UserRole1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN UserRole1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN UserRole1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN UserRole1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN UserRole1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN UserRole1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN UserRole1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN UserRole1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN UserRole1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN UserRole1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN UserRole1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN UserRole1.[Timestamp] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUsers_GetAllUserRoleUserData
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'UserRoleCode'
	, @SortDirection nvarchar(20) = 'Ascending'
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all UserRoleUser data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='UserRoleCode'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  UserRoleUser1.[UserRoleCode]
		, UserRoleUser1.[UserID]
		, UserRoleUser1.[CreatedByUserID]
		, UserRoleUser1.[CreatedDate]
		, UserRoleUser1.[LastModifiedByUserID]
		, UserRoleUser1.[LastModifiedDate]
		, UserRoleUser1.[Timestamp]
		, UserRole1.[UserRoleName]
		, User1.[UserName]
		, User1.[FirstName]
		, User1.[LastName]
	FROM
	      [dbo].[trelUsers_UserRoleUser] UserRoleUser1
	INNER JOIN [dbo].[tlkpUsers_UserRole] UserRole1 ON UserRole1.[UserRoleCode]=UserRoleUser1.[UserRoleCode]
	INNER JOIN [dbo].[tblUsers_User] User1 ON User1.[UserID]=UserRoleUser1.[UserID]

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  UserRoleUser1.[UserRoleCode]
		, UserRoleUser1.[UserID]
		, UserRoleUser1.[CreatedByUserID]
		, UserRoleUser1.[CreatedDate]
		, UserRoleUser1.[LastModifiedByUserID]
		, UserRoleUser1.[LastModifiedDate]
		, UserRoleUser1.[Timestamp]
		, UserRole1.[UserRoleName]
		, User1.[UserName]
		, User1.[FirstName]
		, User1.[LastName]
	FROM
	      [dbo].[trelUsers_UserRoleUser] UserRoleUser1
	INNER JOIN [dbo].[tlkpUsers_UserRole] UserRole1 ON UserRole1.[UserRoleCode]=UserRoleUser1.[UserRoleCode]
	INNER JOIN [dbo].[tblUsers_User] User1 ON User1.[UserID]=UserRoleUser1.[UserID]

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'UserRoleCode' THEN UserRoleUser1.[UserRoleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'UserRoleCode' THEN UserRoleUser1.[UserRoleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'UserID' THEN UserRoleUser1.[UserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'UserID' THEN UserRoleUser1.[UserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN UserRoleUser1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN UserRoleUser1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN UserRoleUser1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN UserRoleUser1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN UserRoleUser1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN UserRoleUser1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN UserRoleUser1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN UserRoleUser1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN UserRoleUser1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN UserRoleUser1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'UserRoleName' THEN UserRole1.[UserRoleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'UserRoleName' THEN UserRole1.[UserRoleName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'UserName' THEN User1.[UserName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'UserName' THEN User1.[UserName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FirstName' THEN User1.[FirstName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FirstName' THEN User1.[FirstName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastName' THEN User1.[LastName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastName' THEN User1.[LastName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUsers_GetAllUserRoleUserDataByUserID
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'UserID'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @UserID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all UserRoleUser data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='UserID'

/*
** parameter validation
*/
IF (@UserID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  UserRoleUser1.[UserRoleCode]
		, UserRoleUser1.[UserID]
		, UserRoleUser1.[CreatedByUserID]
		, UserRoleUser1.[CreatedDate]
		, UserRoleUser1.[LastModifiedByUserID]
		, UserRoleUser1.[LastModifiedDate]
		, UserRoleUser1.[Timestamp]
		, UserRole1.[UserRoleName]
		, User1.[UserName]
		, User1.[FirstName]
		, User1.[LastName]
	FROM
	      [dbo].[trelUsers_UserRoleUser] UserRoleUser1
	INNER JOIN [dbo].[tlkpUsers_UserRole] UserRole1 ON UserRole1.[UserRoleCode]=UserRoleUser1.[UserRoleCode]
	INNER JOIN [dbo].[tblUsers_User] User1 ON User1.[UserID]=UserRoleUser1.[UserID]
	WHERE 
		UserRoleUser1.[UserID] = @UserID

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  UserRoleUser1.[UserRoleCode]
		, UserRoleUser1.[UserID]
		, UserRoleUser1.[CreatedByUserID]
		, UserRoleUser1.[CreatedDate]
		, UserRoleUser1.[LastModifiedByUserID]
		, UserRoleUser1.[LastModifiedDate]
		, UserRoleUser1.[Timestamp]
		, UserRole1.[UserRoleName]
		, User1.[UserName]
		, User1.[FirstName]
		, User1.[LastName]
	FROM
	      [dbo].[trelUsers_UserRoleUser] UserRoleUser1
	INNER JOIN [dbo].[tlkpUsers_UserRole] UserRole1 ON UserRole1.[UserRoleCode]=UserRoleUser1.[UserRoleCode]
	INNER JOIN [dbo].[tblUsers_User] User1 ON User1.[UserID]=UserRoleUser1.[UserID]
	WHERE 
		UserRoleUser1.[UserID] = @UserID

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'UserRoleCode' THEN UserRoleUser1.[UserRoleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'UserRoleCode' THEN UserRoleUser1.[UserRoleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'UserID' THEN UserRoleUser1.[UserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'UserID' THEN UserRoleUser1.[UserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN UserRoleUser1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN UserRoleUser1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN UserRoleUser1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN UserRoleUser1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN UserRoleUser1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN UserRoleUser1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN UserRoleUser1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN UserRoleUser1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN UserRoleUser1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN UserRoleUser1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'UserRoleName' THEN UserRole1.[UserRoleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'UserRoleName' THEN UserRole1.[UserRoleName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'UserName' THEN User1.[UserName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'UserName' THEN User1.[UserName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FirstName' THEN User1.[FirstName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FirstName' THEN User1.[FirstName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastName' THEN User1.[LastName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastName' THEN User1.[LastName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUsers_GetAllUserRoleUserDataByUserRoleCode
	  @SqlErrorNumber int = 0 OUTPUT
	, @SortColumn sysname = 'UserRoleCode'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @UserRoleCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets all UserRoleUser data by a key.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
IF (@SortColumn = '') SET @SortColumn='UserRoleCode'

/*
** parameter validation
*/
IF (@UserRoleCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

IF (@SortDirection = 'Random')
BEGIN
	SELECT
		  UserRoleUser1.[UserRoleCode]
		, UserRoleUser1.[UserID]
		, UserRoleUser1.[CreatedByUserID]
		, UserRoleUser1.[CreatedDate]
		, UserRoleUser1.[LastModifiedByUserID]
		, UserRoleUser1.[LastModifiedDate]
		, UserRoleUser1.[Timestamp]
		, UserRole1.[UserRoleName]
		, User1.[UserName]
		, User1.[FirstName]
		, User1.[LastName]
	FROM
	      [dbo].[trelUsers_UserRoleUser] UserRoleUser1
	INNER JOIN [dbo].[tlkpUsers_UserRole] UserRole1 ON UserRole1.[UserRoleCode]=UserRoleUser1.[UserRoleCode]
	INNER JOIN [dbo].[tblUsers_User] User1 ON User1.[UserID]=UserRoleUser1.[UserID]
	WHERE 
		UserRoleUser1.[UserRoleCode] = @UserRoleCode

	ORDER BY NewID()
END
ELSE
BEGIN
	SELECT
		  UserRoleUser1.[UserRoleCode]
		, UserRoleUser1.[UserID]
		, UserRoleUser1.[CreatedByUserID]
		, UserRoleUser1.[CreatedDate]
		, UserRoleUser1.[LastModifiedByUserID]
		, UserRoleUser1.[LastModifiedDate]
		, UserRoleUser1.[Timestamp]
		, UserRole1.[UserRoleName]
		, User1.[UserName]
		, User1.[FirstName]
		, User1.[LastName]
	FROM
	      [dbo].[trelUsers_UserRoleUser] UserRoleUser1
	INNER JOIN [dbo].[tlkpUsers_UserRole] UserRole1 ON UserRole1.[UserRoleCode]=UserRoleUser1.[UserRoleCode]
	INNER JOIN [dbo].[tblUsers_User] User1 ON User1.[UserID]=UserRoleUser1.[UserID]
	WHERE 
		UserRoleUser1.[UserRoleCode] = @UserRoleCode

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'UserRoleCode' THEN UserRoleUser1.[UserRoleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'UserRoleCode' THEN UserRoleUser1.[UserRoleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'UserID' THEN UserRoleUser1.[UserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'UserID' THEN UserRoleUser1.[UserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN UserRoleUser1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN UserRoleUser1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN UserRoleUser1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN UserRoleUser1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN UserRoleUser1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN UserRoleUser1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN UserRoleUser1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN UserRoleUser1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN UserRoleUser1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN UserRoleUser1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'UserRoleName' THEN UserRole1.[UserRoleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'UserRoleName' THEN UserRole1.[UserRoleName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'UserName' THEN User1.[UserName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'UserName' THEN User1.[UserName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FirstName' THEN User1.[FirstName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FirstName' THEN User1.[FirstName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastName' THEN User1.[LastName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastName' THEN User1.[LastName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END


RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUsers_GetManyUserDataByCriteria
	  @SqlErrorNumber int = 0 OUTPUT
	, @StartIndex int = 1
	, @PageSize int = 50
	, @MaximumListSize int = 0
	, @MaximumListSizeExceeded bit = 0 OUTPUT
	, @TotalRecords int = 0 OUTPUT
	, @SortColumn sysname = 'UserName'
	, @SortDirection nvarchar(20) = 'Ascending'
	, @IncludeInactive bit = 0
	, @UserName nvarchar(50) = NULL
	, @FirstName nvarchar(100) = NULL
	, @LastName nvarchar(100) = NULL
	, @LocaleCode int = NULL
	, @LastModifiedDateStart datetime = getdate
	, @LastModifiedDateEnd datetime = getdate
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets many User data by criteria.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

DECLARE @vEndIndex int
IF (@StartIndex < 1) SET @StartIndex=1
IF (@PageSize < 1) SET @PageSize=1
SET @vEndIndex = @StartIndex + @Pagesize
IF (@SortColumn = '') SET @SortColumn='UserName'

/*
** perform main procedure tasks
*/
DECLARE @SearchCondition varchar(2048)

DECLARE @OrderedRecords TABLE
(
     SearchOrderID int IDENTITY (1, 1) NOT NULL
    , UserID uniqueidentifier
)
IF (@SortDirection = 'Random')
BEGIN
	INSERT INTO @OrderedRecords (UserID)
	SELECT
		  User1.[UserID]
	FROM
	      [dbo].[tblUsers_User] User1
	LEFT OUTER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=User1.[LocaleCode]
	WHERE 
		User1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN User1.[IsActive] ELSE 1 END
		AND (@UserName IS NULL OR User1.[UserName] like '%' + @UserName + '%')
		AND (@FirstName IS NULL OR User1.[FirstName] like '%' + @FirstName + '%')
		AND (@LastName IS NULL OR User1.[LastName] like '%' + @LastName + '%')
		AND (@LocaleCode IS NULL OR User1.[LocaleCode] = @LocaleCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (User1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (User1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY NewID()
END
ELSE
BEGIN
	INSERT INTO @OrderedRecords (UserID)
	SELECT
		  User1.[UserID]
	FROM
	      [dbo].[tblUsers_User] User1
	LEFT OUTER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=User1.[LocaleCode]
	WHERE 
		User1.[IsActive] = CASE WHEN @IncludeInactive=1 THEN User1.[IsActive] ELSE 1 END
		AND (@UserName IS NULL OR User1.[UserName] like '%' + @UserName + '%')
		AND (@FirstName IS NULL OR User1.[FirstName] like '%' + @FirstName + '%')
		AND (@LastName IS NULL OR User1.[LastName] like '%' + @LastName + '%')
		AND (@LocaleCode IS NULL OR User1.[LocaleCode] = @LocaleCode)
		AND ((@LastModifiedDateStart  IS NULL) OR (User1.[LastModifiedDate] >=  @LastModifiedDateStart))
		AND ((@LastModifiedDateEnd  IS NULL) OR (User1.[LastModifiedDate] <=  @LastModifiedDateEnd))

	ORDER BY
		 CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'UserID' THEN User1.[UserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'UserID' THEN User1.[UserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'UserName' THEN User1.[UserName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'UserName' THEN User1.[UserName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'FirstName' THEN User1.[FirstName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'FirstName' THEN User1.[FirstName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastName' THEN User1.[LastName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastName' THEN User1.[LastName] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Password' THEN User1.[Password] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Password' THEN User1.[Password] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleCode' THEN User1.[LocaleCode] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleCode' THEN User1.[LocaleCode] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'IsActive' THEN User1.[IsActive] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'IsActive' THEN User1.[IsActive] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedByUserID' THEN User1.[CreatedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedByUserID' THEN User1.[CreatedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'CreatedDate' THEN User1.[CreatedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'CreatedDate' THEN User1.[CreatedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedByUserID' THEN User1.[LastModifiedByUserID] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedByUserID' THEN User1.[LastModifiedByUserID] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LastModifiedDate' THEN User1.[LastModifiedDate] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LastModifiedDate' THEN User1.[LastModifiedDate] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'Timestamp' THEN User1.[Timestamp] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'Timestamp' THEN User1.[Timestamp] END DESC
		,CASE WHEN @SortDirection = 'Ascending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END
		,CASE WHEN @SortDirection = 'Descending' AND @SortColumn = 'LocaleName' THEN Locale1.[LocaleName] END DESC
END

SET @SqlErrorNumber = @@ERROR
IF (@SqlErrorNumber <> 0)
BEGIN
    GOTO EXIT_ERROR
END

BEGIN
	SET @TotalRecords = (SELECT Count (*) FROM @OrderedRecords)
	IF @MaximumListSize > 0
	BEGIN
		IF @TotalRecords > @MaximumListSize
		BEGIN
			SET @MaximumListSizeExceeded = 1
			SET @TotalRecords = @MaximumListSize
		END
	END

	/* get search results */
	SELECT
		  User1.[UserID]
		, User1.[UserName]
		, User1.[FirstName]
		, User1.[LastName]
		, User1.[Password]
		, User1.[LocaleCode]
		, User1.[IsActive]
		, User1.[CreatedByUserID]
		, User1.[CreatedDate]
		, User1.[LastModifiedByUserID]
		, User1.[LastModifiedDate]
		, User1.[Timestamp]
		, Locale1.[LocaleName]
	FROM
	      [dbo].[tblUsers_User] User1
	LEFT OUTER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=User1.[LocaleCode]
	INNER JOIN @OrderedRecords search ON search.[UserID] = User1.[UserID]
	WHERE
		search.SearchOrderID  >= @StartIndex AND
		search.SearchOrderID  < @vEndIndex
	ORDER BY
		search.SearchOrderID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUsers_GetOneAccessMode
	  @SqlErrorNumber int = 0 OUTPUT
	, @AccessModeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single AccessMode by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccessModeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  AccessMode1.[AccessModeCode]
		, AccessMode1.[AccessModeName]
		, AccessMode1.[Description]
		, AccessMode1.[IsActive]
		, AccessMode1.[CreatedByUserID]
		, AccessMode1.[CreatedDate]
		, AccessMode1.[LastModifiedByUserID]
		, AccessMode1.[LastModifiedDate]
		, AccessMode1.[Timestamp]
	FROM
	      [dbo].[tlkpUsers_AccessMode] AccessMode1
	WHERE AccessMode1.[AccessModeCode] =  @AccessModeCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUsers_GetOneActivity
	  @SqlErrorNumber int = 0 OUTPUT
	, @ActivityCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single Activity by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@ActivityCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  Activity1.[ActivityCode]
		, Activity1.[ActivityName]
		, Activity1.[Description]
		, Activity1.[IsActive]
		, Activity1.[CreatedByUserID]
		, Activity1.[CreatedDate]
		, Activity1.[LastModifiedByUserID]
		, Activity1.[LastModifiedDate]
		, Activity1.[Timestamp]
	FROM
	      [dbo].[tlkpUsers_Activity] Activity1
	WHERE Activity1.[ActivityCode] =  @ActivityCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUsers_GetOneActivityByActivityName
	  @SqlErrorNumber int = 0 OUTPUT
	, @ActivityName nvarchar(255)
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single Activity by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@ActivityName IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  Activity1.[ActivityCode]
		, Activity1.[ActivityName]
		, Activity1.[Description]
		, Activity1.[IsActive]
		, Activity1.[CreatedByUserID]
		, Activity1.[CreatedDate]
		, Activity1.[LastModifiedByUserID]
		, Activity1.[LastModifiedDate]
		, Activity1.[Timestamp]
	FROM
	      [dbo].[tlkpUsers_Activity] Activity1
	WHERE Activity1.[ActivityName] =  @ActivityName

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUsers_GetOneUser
	  @SqlErrorNumber int = 0 OUTPUT
	, @UserID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single User by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@UserID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  User1.[UserID]
		, User1.[UserName]
		, User1.[FirstName]
		, User1.[LastName]
		, User1.[Password]
		, User1.[LocaleCode]
		, User1.[IsActive]
		, User1.[CreatedByUserID]
		, User1.[CreatedDate]
		, User1.[LastModifiedByUserID]
		, User1.[LastModifiedDate]
		, User1.[Timestamp]
		, Locale1.[LocaleName]
	FROM
	      [dbo].[tblUsers_User] User1
	LEFT OUTER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=User1.[LocaleCode]
	WHERE User1.[UserID] =  @UserID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUsers_GetOneUserByFirstNameAndLastNameAndPassword
	  @SqlErrorNumber int = 0 OUTPUT
	, @FirstName nvarchar(100) = NULL
	, @LastName nvarchar(100) = NULL
	, @Password nvarchar(100) = NULL
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single User by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@FirstName IS NULL OR @LastName IS NULL OR @Password IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  User1.[UserID]
		, User1.[UserName]
		, User1.[FirstName]
		, User1.[LastName]
		, User1.[Password]
		, User1.[LocaleCode]
		, User1.[IsActive]
		, User1.[CreatedByUserID]
		, User1.[CreatedDate]
		, User1.[LastModifiedByUserID]
		, User1.[LastModifiedDate]
		, User1.[Timestamp]
		, Locale1.[LocaleName]
	FROM
	      [dbo].[tblUsers_User] User1
	LEFT OUTER JOIN [dbo].[tlkpEnvironments_Locale] Locale1 ON Locale1.[LocaleCode]=User1.[LocaleCode]
	WHERE User1.[FirstName] =  @FirstName AND User1.[LastName] =  @LastName AND User1.[Password] =  @Password

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUsers_GetOneUserRole
	  @SqlErrorNumber int = 0 OUTPUT
	, @UserRoleCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single UserRole by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@UserRoleCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  UserRole1.[UserRoleCode]
		, UserRole1.[UserRoleName]
		, UserRole1.[Description]
		, UserRole1.[IsActive]
		, UserRole1.[CreatedByUserID]
		, UserRole1.[CreatedDate]
		, UserRole1.[LastModifiedByUserID]
		, UserRole1.[LastModifiedDate]
		, UserRole1.[Timestamp]
	FROM
	      [dbo].[tlkpUsers_UserRole] UserRole1
	WHERE UserRole1.[UserRoleCode] =  @UserRoleCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUsers_GetOneUserRoleActivity
	  @SqlErrorNumber int = 0 OUTPUT
	, @UserRoleCode int
	, @ActivityCode int
	, @AccessModeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single UserRoleActivity by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@UserRoleCode IS NULL OR @ActivityCode IS NULL OR @AccessModeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  UserRoleActivity1.[UserRoleCode]
		, UserRoleActivity1.[ActivityCode]
		, UserRoleActivity1.[AccessModeCode]
		, UserRoleActivity1.[CreatedByUserID]
		, UserRoleActivity1.[CreatedDate]
		, UserRoleActivity1.[LastModifiedByUserID]
		, UserRoleActivity1.[LastModifiedDate]
		, UserRoleActivity1.[Timestamp]
		, UserRole1.[UserRoleName]
		, Activity1.[ActivityName]
		, AccessMode1.[AccessModeName]
	FROM
	      [dbo].[trelUsers_UserRoleActivity] UserRoleActivity1
	INNER JOIN [dbo].[tlkpUsers_UserRole] UserRole1 ON UserRole1.[UserRoleCode]=UserRoleActivity1.[UserRoleCode]
	INNER JOIN [dbo].[tlkpUsers_Activity] Activity1 ON Activity1.[ActivityCode]=UserRoleActivity1.[ActivityCode]
	INNER JOIN [dbo].[tlkpUsers_AccessMode] AccessMode1 ON AccessMode1.[AccessModeCode]=UserRoleActivity1.[AccessModeCode]
	WHERE UserRoleActivity1.[UserRoleCode] =  @UserRoleCode AND UserRoleActivity1.[ActivityCode] =  @ActivityCode AND UserRoleActivity1.[AccessModeCode] =  @AccessModeCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUsers_GetOneUserRoleUser
	  @SqlErrorNumber int = 0 OUTPUT
	, @UserRoleCode int
	, @UserID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure gets a single UserRoleUser by an index.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@UserRoleCode IS NULL OR @UserID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END

/*
** perform main procedure tasks
*/
BEGIN
	SELECT
		  UserRoleUser1.[UserRoleCode]
		, UserRoleUser1.[UserID]
		, UserRoleUser1.[CreatedByUserID]
		, UserRoleUser1.[CreatedDate]
		, UserRoleUser1.[LastModifiedByUserID]
		, UserRoleUser1.[LastModifiedDate]
		, UserRoleUser1.[Timestamp]
		, UserRole1.[UserRoleName]
		, User1.[UserName]
		, User1.[FirstName]
		, User1.[LastName]
	FROM
	      [dbo].[trelUsers_UserRoleUser] UserRoleUser1
	INNER JOIN [dbo].[tlkpUsers_UserRole] UserRole1 ON UserRole1.[UserRoleCode]=UserRoleUser1.[UserRoleCode]
	INNER JOIN [dbo].[tblUsers_User] User1 ON User1.[UserID]=UserRoleUser1.[UserID]
	WHERE UserRoleUser1.[UserRoleCode] =  @UserRoleCode AND UserRoleUser1.[UserID] =  @UserID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUsers_UpdateOneAccessMode
	  @SqlErrorNumber int = 0 OUTPUT
	, @LastModifiedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @AccessModeCode int
	, @AccessModeName nvarchar(255)
	, @Description nvarchar(2000) = NULL
	, @IsActive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure updates AccessMode data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@AccessModeCode IS NULL OR @AccessModeName IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [AccessModeCode] FROM [dbo].[tlkpUsers_AccessMode] WHERE [AccessModeCode] =  @AccessModeCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [AccessModeCode] FROM [dbo].[tlkpUsers_AccessMode] WHERE [AccessModeCode] =  @AccessModeCode AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	UPDATE
	      [dbo].[tlkpUsers_AccessMode]
	SET
	     [LastModifiedByUserID] = @LastModifiedByUserID
	   , [LastModifiedDate] = getdate()
	   , [AccessModeCode] = @AccessModeCode
	   , [AccessModeName] = @AccessModeName
	   , [Description] = @Description
	   , [IsActive] = @IsActive
	WHERE [AccessModeCode] =  @AccessModeCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

	SET  @Timestamp = @@DBTS

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUsers_UpdateOneActivity
	  @SqlErrorNumber int = 0 OUTPUT
	, @LastModifiedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @ActivityCode int
	, @ActivityName nvarchar(255)
	, @Description nvarchar(2000) = NULL
	, @IsActive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure updates Activity data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@ActivityCode IS NULL OR @ActivityName IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [ActivityCode] FROM [dbo].[tlkpUsers_Activity] WHERE [ActivityCode] =  @ActivityCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [ActivityCode] FROM [dbo].[tlkpUsers_Activity] WHERE [ActivityCode] =  @ActivityCode AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	UPDATE
	      [dbo].[tlkpUsers_Activity]
	SET
	     [LastModifiedByUserID] = @LastModifiedByUserID
	   , [LastModifiedDate] = getdate()
	   , [ActivityCode] = @ActivityCode
	   , [ActivityName] = @ActivityName
	   , [Description] = @Description
	   , [IsActive] = @IsActive
	WHERE [ActivityCode] =  @ActivityCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

	SET  @Timestamp = @@DBTS

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUsers_UpdateOneUserRole
	  @SqlErrorNumber int = 0 OUTPUT
	, @LastModifiedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @UserRoleCode int
	, @UserRoleName nvarchar(255)
	, @Description nvarchar(2000) = NULL
	, @IsActive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure updates UserRole data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@UserRoleCode IS NULL OR @UserRoleName IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [UserRoleCode] FROM [dbo].[tlkpUsers_UserRole] WHERE [UserRoleCode] =  @UserRoleCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [UserRoleCode] FROM [dbo].[tlkpUsers_UserRole] WHERE [UserRoleCode] =  @UserRoleCode AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	UPDATE
	      [dbo].[tlkpUsers_UserRole]
	SET
	     [LastModifiedByUserID] = @LastModifiedByUserID
	   , [LastModifiedDate] = getdate()
	   , [UserRoleCode] = @UserRoleCode
	   , [UserRoleName] = @UserRoleName
	   , [Description] = @Description
	   , [IsActive] = @IsActive
	WHERE [UserRoleCode] =  @UserRoleCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

	SET  @Timestamp = @@DBTS

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUsers_UpdateOneUserRoleActivity
	  @SqlErrorNumber int = 0 OUTPUT
	, @LastModifiedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @UserRoleCode int
	, @ActivityCode int
	, @AccessModeCode int
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure updates UserRoleActivity data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@UserRoleCode IS NULL OR @ActivityCode IS NULL OR @AccessModeCode IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [UserRoleCode], [ActivityCode], [AccessModeCode] FROM [dbo].[trelUsers_UserRoleActivity] WHERE [UserRoleCode] =  @UserRoleCode AND [ActivityCode] =  @ActivityCode AND [AccessModeCode] =  @AccessModeCode)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [UserRoleCode], [ActivityCode], [AccessModeCode] FROM [dbo].[trelUsers_UserRoleActivity] WHERE [UserRoleCode] =  @UserRoleCode AND [ActivityCode] =  @ActivityCode AND [AccessModeCode] =  @AccessModeCode AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	UPDATE
	      [dbo].[trelUsers_UserRoleActivity]
	SET
	     [LastModifiedByUserID] = @LastModifiedByUserID
	   , [LastModifiedDate] = getdate()
	   , [UserRoleCode] = @UserRoleCode
	   , [ActivityCode] = @ActivityCode
	   , [AccessModeCode] = @AccessModeCode
	WHERE [UserRoleCode] =  @UserRoleCode AND [ActivityCode] =  @ActivityCode AND [AccessModeCode] =  @AccessModeCode

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

	SET  @Timestamp = @@DBTS

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUsers_UpdateOneUserRoleUser
	  @SqlErrorNumber int = 0 OUTPUT
	, @LastModifiedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @UserRoleCode int
	, @UserID uniqueidentifier
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure updates UserRoleUser data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0

/*
** parameter validation
*/
IF (@UserRoleCode IS NULL OR @UserID IS NULL)
BEGIN
    SET @SqlErrorNumber = -1001
    GOTO EXIT_ERROR
END
/*
** record validation
*/
IF NOT EXISTS (SELECT [UserRoleCode], [UserID] FROM [dbo].[trelUsers_UserRoleUser] WHERE [UserRoleCode] =  @UserRoleCode AND [UserID] =  @UserID)
BEGIN
	SET @SqlErrorNumber = -1003
	GOTO EXIT_ERROR
END
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [UserRoleCode], [UserID] FROM [dbo].[trelUsers_UserRoleUser] WHERE [UserRoleCode] =  @UserRoleCode AND [UserID] =  @UserID AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
BEGIN
	UPDATE
	      [dbo].[trelUsers_UserRoleUser]
	SET
	     [LastModifiedByUserID] = @LastModifiedByUserID
	   , [LastModifiedDate] = getdate()
	   , [UserRoleCode] = @UserRoleCode
	   , [UserID] = @UserID
	WHERE [UserRoleCode] =  @UserRoleCode AND [UserID] =  @UserID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

	SET  @Timestamp = @@DBTS

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


CREATE PROCEDURE dbo.spUsers_UpsertOneUser
	  @SqlErrorNumber int = 0 OUTPUT
	, @CreatedByUserID uniqueidentifier = NULL
	, @LastModifiedByUserID uniqueidentifier = NULL
	, @Timestamp timestamp = NULL OUTPUT
	, @CheckTimestamp bit = 0
	, @UserID uniqueidentifier = NULL OUTPUT
	, @UserName nvarchar(50) = NULL
	, @FirstName nvarchar(100) = NULL
	, @LastName nvarchar(100) = NULL
	, @Password nvarchar(100) = NULL
	, @LocaleCode int = NULL
	, @IsActive bit = 0
AS
/*<copyright>
	MOD Systems, Inc (c) 2006 All Rights Reserved.
	720 3rd Ave #1100, Seattle WA 98104 - (206) 973-1036
	All Rights Reserved, (c) 2006, covered by Trademark Laws, contents are considered Restricted Secrets by MOD Systems.  The contents also may only be viewed by MOD Systems Engineers (employees) and selected Starbucks employees as outlined in the Licensing Agreement between MOD Systems and Starbucks Corporation on June 3rd, 2005.
	No copying, printing, distribution, or transmission of any contents allowed.  No 3rd Party may open, read, or have access to any part or whole of software source code, configuration files, log files or performance information, including process naming conventions or benchmarks.
	No rights to reproduce this software, configuration files, of log files are granted.  Unauthorized use or disclosure of this information could impact MOD System's competitive advantage.
	Information in this document is considered trade secret.  No license, expressed or implied, by estoppel or otherwise, to any intellectual property rights is granted in this source code, configuration file, or log file.
</copyright>*/

/* ------------------------------------------------------------------------------
** Stored Procedure Description: 
** This procedure inserts or updates User data.
**
** Stored Procedure History:
**	9/7/2006 <created> (Roger Hill)
**	9/7/2006 <notmodified> (Roger Hill)
**	(delete "not" from the "notmodified" tag to prevent this procedure from being regenerated)
** ------------------------------------------------------------------------------
*/
 SET NOCOUNT ON
/*
** declarations
*/
SET @SqlErrorNumber = 0
/*
** timestamp validation
*/
IF (@CheckTimestamp = 1)
BEGIN
	IF EXISTS (SELECT [UserID] FROM [dbo].[tblUsers_User] WHERE [UserID] =  @UserID AND [Timestamp] <> @Timestamp)
	BEGIN
		SET @SqlErrorNumber = -1002
		GOTO EXIT_ERROR
	END
END

/*
** perform main procedure tasks
*/
IF NOT EXISTS (SELECT [UserID] FROM [dbo].[tblUsers_User] WHERE [UserID] =  @UserID)
BEGIN
	IF @UserID  IS NULL
	BEGIN
		SET @UserID  = NEWID ()
	END
	INSERT
	      [dbo].[tblUsers_User]
	      (
 	     [CreatedByUserID]
 	   , [LastModifiedByUserID]
	   , [UserID]
	   , [UserName]
	   , [FirstName]
	   , [LastName]
	   , [Password]
	   , [LocaleCode]
	   , [IsActive]
	      )

	VALUES 
	      (
 	     @CreatedByUserID
 	   , @CreatedByUserID
	   , @UserID
	   , @UserName
	   , @FirstName
	   , @LastName
	   , @Password
	   , @LocaleCode
	   , @IsActive
	      )

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END


	SET  @Timestamp = @@DBTS
	END
ELSE
BEGIN
	UPDATE
	      [dbo].[tblUsers_User]
	SET
	     [LastModifiedByUserID] = @LastModifiedByUserID
	   , [LastModifiedDate] = getdate()
	   , [UserID] = @UserID
	   , [UserName] = @UserName
	   , [FirstName] = @FirstName
	   , [LastName] = @LastName
	   , [Password] = @Password
	   , [LocaleCode] = @LocaleCode
	   , [IsActive] = @IsActive
	WHERE [UserID] =  @UserID

	SET @SqlErrorNumber = @@ERROR
	IF (@SqlErrorNumber <> 0)
	BEGIN
	    GOTO EXIT_ERROR
	END

	SET  @Timestamp = @@DBTS

END

RETURN 0

EXIT_ERROR:

RETURN -1


GO
SET QUOTED_IDENTIFIER OFF 
GO
SET ANSI_NULLS ON 
GO

